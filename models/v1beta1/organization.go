// Package organization provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package organization

import (
	"github.com/gofrs/uuid"
	externalRef1 "github.com/meshery/schemas/models/core"
)

// AvailableOrganization defines model for availableOrganization.
type AvailableOrganization struct {
	ID        externalRef1.GeneralId `db:"id" json:"id"`
	Country   externalRef1.Text      `json:"country,omitempty"`
	CreatedAt externalRef1.Time      `json:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt   externalRef1.NullTime `json:"deleted_at,omitempty"`
	Description externalRef1.Text     `json:"description,omitempty"`
	Metadata    *OrganizationMetadata `json:"metadata,omitempty"`
	Name        externalRef1.Text     `json:"name,omitempty"`
	Owner       externalRef1.Text     `json:"owner,omitempty"`
	Region      externalRef1.Text     `json:"region,omitempty"`
	UpdatedAt   externalRef1.Time     `json:"updated_at,omitempty"`
}

// Organization defines model for organization.
type Organization struct {
	ID        externalRef1.GeneralId `db:"id" json:"id"`
	Country   externalRef1.Text      `json:"country,omitempty"`
	CreatedAt externalRef1.Time      `json:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt externalRef1.NullTime `json:"deleted_at,omitempty"`
	Metadata  *OrganizationMetadata `json:"metadata,omitempty"`
	Name      externalRef1.Text     `json:"name"`
	Owner     uuid.UUID             `db:"owner" json:"owner"`
	Region    externalRef1.Text     `json:"region,omitempty"`
	UpdatedAt externalRef1.Time     `json:"updated_at,omitempty"`
}

// OrganizationMetadata defines model for organizationMetadata.
type OrganizationMetadata struct {
	Preferences *OrganizationPreferences `json:"preferences,omitempty"`
}

// OrganizationPayload defines model for organizationPayload.
type OrganizationPayload struct {
	Country         externalRef1.Text        `json:"country,omitempty"`
	Description     externalRef1.Text        `json:"description,omitempty"`
	Name            externalRef1.Text        `json:"name,omitempty"`
	NotifyOrgUpdate *bool                    `json:"notify_org_update,omitempty"`
	Preferences     *OrganizationPreferences `json:"preferences,omitempty"`
	Region          externalRef1.Text        `json:"region,omitempty"`
}

// OrganizationPreferences defines model for organizationPreferences.
type OrganizationPreferences struct {
	Dashboard *struct {
		Layout *map[string]map[string]interface{} `json:"layout,omitempty"`
	} `json:"dashboard,omitempty"`
	Theme *struct {
		Logo *struct {
			// DesktopView Contains the location of the custom desktop view SVG.
			DesktopView *string `json:"desktop_view,omitempty"`

			// MobileView Contains the location of the custom mobile view SVG.
			MobileView *string `json:"mobile_view,omitempty"`
		} `json:"logo,omitempty"`

		// ThemeId ID for the theme to load for the currently selected organization
		ThemeId *string `json:"theme_id,omitempty"`
	} `json:"theme,omitempty"`
}

// OrganizationWithRoles defines model for organizationWithRoles.
type OrganizationWithRoles struct {
	ID        externalRef1.GeneralId `db:"id" json:"id"`
	Country   externalRef1.Text      `json:"country,omitempty"`
	CreatedAt externalRef1.Time      `json:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt   externalRef1.NullTime  `json:"deleted_at,omitempty"`
	Description externalRef1.Text      `json:"description,omitempty"`
	Metadata    *OrganizationMetadata  `json:"metadata,omitempty"`
	Name        externalRef1.Text      `json:"name,omitempty"`
	Owner       uuid.UUID              `db:"owner" json:"owner"`
	Region      externalRef1.Text      `json:"region,omitempty"`
	RoleNames   externalRef1.RoleNames `json:"role_names,omitempty"`
	UpdatedAt   externalRef1.Time      `json:"updated_at,omitempty"`
}

// OrganizationsPage defines model for organizationsPage.
type OrganizationsPage struct {
	Organizations *[]AvailableOrganization `json:"organizations,omitempty"`
	Page          externalRef1.Number      `json:"page,omitempty"`
	PageSize      externalRef1.Number      `json:"page_size,omitempty"`
	TotalCount    externalRef1.Number      `json:"total_count,omitempty"`
}

// TeamsOrganizationsMapping defines model for teamsOrganizationsMapping.
type TeamsOrganizationsMapping struct {
	ID        externalRef1.GeneralId `db:"id" json:"id"`
	CreatedAt externalRef1.Time      `json:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt externalRef1.NullTime `json:"deleted_at,omitempty"`
	OrgId     uuid.UUID             `db:"org_id" json:"org_id"`
	TeamId    uuid.UUID             `db:"team_id" json:"team_id"`
	UpdatedAt externalRef1.Time     `json:"updated_at,omitempty"`
}

// TeamsOrganizationsMappingPage defines model for teamsOrganizationsMappingPage.
type TeamsOrganizationsMappingPage struct {
	Page                      externalRef1.Number          `json:"page,omitempty"`
	PageSize                  externalRef1.Number          `json:"page_size,omitempty"`
	TeamsOrganizationsMapping *[]TeamsOrganizationsMapping `json:"teams_organizations_mapping,omitempty"`
	TotalCount                externalRef1.Number          `json:"total_count,omitempty"`
}

// UsersOrganizationsMapping defines model for usersOrganizationsMapping.
type UsersOrganizationsMapping struct {
	ID        externalRef1.GeneralId `db:"id" json:"id"`
	CreatedAt externalRef1.Time      `json:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt      externalRef1.NullTime `json:"deleted_at,omitempty"`
	OrganizationId uuid.UUID             `db:"organization_id" json:"organization_id"`
	RoleId         *uuid.UUID            `db:"role_id" json:"role_id"`
	UpdatedAt      externalRef1.Time     `json:"updated_at,omitempty"`
	UserId         uuid.UUID             `db:"user_id" json:"user_id"`
}
