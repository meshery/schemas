// Package invitation provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package invitation

import (
	"time"

	"github.com/gofrs/uuid"
	"github.com/lib/pq"
	"github.com/meshery/schemas/models/core"
)

// Defines values for InvitationStatus.
const (
	Disabled InvitationStatus = "disabled"
	Enabled  InvitationStatus = "enabled"
)

// Invitation defines model for Invitation.
type Invitation struct {
	// AcceptedBy List of user ids that have already accepted the invitation, null or empty string means the invitation has not been used yet
	AcceptedBy pq.StringArray `db:"accepted_by" json:"accepted_by" yaml:"accepted_by"`

	// CreatedAt Timestamp when the invitation was created
	CreatedAt time.Time `db:"created_at" json:"created_at" yaml:"created_at"`

	// DeletedAt Timestamp when the invitation was deleted, if applicable
	DeletedAt core.NullTime `db:"deleted_at" json:"deleted_at" yaml:"deleted_at"`

	// Description Description of the invitation, which can be used to provide additional information about the invitation, null or empty string means the invitation does not have a description
	Description string         `json:"description" yaml:"description"`
	Emails      pq.StringArray `json:"emails" yaml:"emails"`

	// ExpiresAt Timestamp when the invitation expires, if applicable , null or empty string means the invitation does not expire
	ExpiresAt *time.Time `db:"expires_at" json:"expires_at" yaml:"expires_at"`

	// ID Unique identifier for the invitation , is also used as the invitation code
	ID uuid.UUID `json:"id" yaml:"id"`

	// IsDefault Indicates whether the invitation is a default invitation (open invite), which can be used to assign users when signing up from fqdn or custom domain, a organization can only have one default invitation
	IsDefault *bool `db:"is_default" json:"is_default" yaml:"is_default"`

	// Name Name of the invitation, which can be used to identify the invitation, required and cant be empty string,
	Name string `json:"name" yaml:"name"`

	// OrgId ID of the organization to which the user is invited
	OrgId string `db:"org_id" json:"org_id" yaml:"org_id"`

	// OwnerId ID of the user who created the invitation, this is used to track who created the invitation and can be used for auditing purposes
	OwnerId uuid.UUID `db:"owner_id" json:"owner_id" yaml:"owner_id"`

	// Quota Quota for the invitation, which can be used to limit the number of users that can accept the invitation, null or empty string means the invitation does not have a quota
	Quota *int           `json:"quota,omitempty" yaml:"quota,omitempty"`
	Roles pq.StringArray `json:"roles" yaml:"roles"`

	// Status Status of the invitation, where enabled means the invitation is active and can be used, disabled means the invitation is no longer valid and is temporarily inactive, disabled invitations can be re-enabled later.
	Status InvitationStatus `json:"status" yaml:"status"`
	Teams  pq.StringArray   `json:"teams" yaml:"teams"`

	// UpdatedAt Timestamp when the invitation was last updated
	UpdatedAt time.Time `db:"updated_at" json:"updated_at" yaml:"updated_at"`
}

// InvitationStatus Status of the invitation, where enabled means the invitation is active and can be used, disabled means the invitation is no longer valid and is temporarily inactive, disabled invitations can be re-enabled later.
type InvitationStatus string

// InvitationsPage defines model for InvitationsPage.
type InvitationsPage struct {
	// Data List of invitations
	Data []Invitation `json:"data" yaml:"data"`

	// Total Total number of invitations available
	Total int `json:"total" yaml:"total"`
}

// Uuid A Universally Unique Identifier used to uniquely identify entities in Meshery. The UUID core definition is used across different schemas.
type Uuid = uuid.UUID

// InvitationId defines model for invitation_id.
type InvitationId = string

// OrganizationId defines model for organization_id.
type OrganizationId = string
