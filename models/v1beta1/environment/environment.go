// Package environment provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package environment

import (
	"database/sql"
	"time"

	"github.com/gofrs/uuid"
)

// Environment defines model for environment.
type Environment struct {
	ID        uuid.UUID `db:"id" json:"id" yaml:"id"`
	CreatedAt time.Time `json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt      sql.NullTime `json:"deleted_at,omitempty" yaml:"deleted_at,omitempty"`
	Description    string       `json:"description,omitempty" yaml:"description,omitempty"`
	Name           string       `json:"name,omitempty" yaml:"name,omitempty"`
	OrganizationId uuid.UUID    `db:"org_id" json:"org_id" yaml:"org_id"`
	Owner          string       `json:"owner,omitempty" yaml:"owner,omitempty"`
	UpdatedAt      time.Time    `json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
}

// EnvironmentConnectionMapping defines model for environmentConnectionMapping.
type EnvironmentConnectionMapping struct {
	ID           uuid.UUID `db:"id" json:"id" yaml:"id"`
	ConnectionId uuid.UUID `db:"connection_id" json:"connection_id" yaml:"connection_id"`
	CreatedAt    time.Time `json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt     sql.NullTime `json:"deleted_at,omitempty" yaml:"deleted_at,omitempty"`
	EnvironmentId uuid.UUID    `db:"environment_id" json:"environment_id" yaml:"environment_id"`
	UpdatedAt     time.Time    `json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
}

// EnvironmentPage defines model for environmentPage.
type EnvironmentPage struct {
	Environments []Environment `json:"environments,omitempty" yaml:"environments,omitempty"`
	Page         int           `json:"page,omitempty" yaml:"page,omitempty"`
	PageSize     int           `json:"page_size,omitempty" yaml:"page_size,omitempty"`
	TotalCount   int           `json:"total_count,omitempty" yaml:"total_count,omitempty"`
}

// EnvironmentPayload defines model for environmentPayload.
type EnvironmentPayload struct {
	// OrgId Select an organization in which you want to create this new environment. Keep in mind that the organization cannot be changed after creation.
	OrgId string `json:"organization_id" yaml:"organization_id"`

	// Description An environment is a collection of resources, such as connections & credentail. Provide a detailed description to clarify the purpose of this environment and the types of resources it encompasses. You can modify the description at any Time. Learn more about environments [here](https://docs.meshery.io/concepts/logical/environments).
	Description string `json:"description,omitempty" yaml:"description,omitempty"`

	// Name An environment is a collection of resources. Provide a name that meaningfully represents these resources. You can change the name of the environment even after its creation.
	Name string `json:"name" yaml:"name"`
}

// EnvironmentId defines model for environmentId.
type EnvironmentId = uuid.UUID

// Order defines model for order.
type Order = string

// OrgIDQuery defines model for orgIDQuery.
type OrgIDQuery = string

// Page defines model for page.
type Page = string

// Pagesize defines model for pagesize.
type Pagesize = string

// Search defines model for search.
type Search = string
