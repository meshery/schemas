// Package feature provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package feature

import (
	"time"

	"github.com/gofrs/uuid"
	"github.com/meshery/schemas/models/v1beta1/plan"
)

// Defines values for FeatureName.
const (
	ComponentsInDesign       FeatureName = "ComponentsInDesign"
	DesignsInWorkspace       FeatureName = "DesignsInWorkspace"
	ImageSizeInDesign        FeatureName = "ImageSizeInDesign"
	RelationshipsInDesign    FeatureName = "RelationshipsInDesign"
	SizePerDesign            FeatureName = "SizePerDesign"
	WorkspacesInOrganization FeatureName = "WorkspacesInOrganization"
)

// Feature defines model for Feature.
type Feature struct {
	CreatedAt time.Time `db:"created_at" json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// Id A Universally Unique Identifier used to uniquely identify entities in Meshery. The UUID core definition is used across different schemas.
	Id uuid.UUID `db:"id" json:"id" yaml:"id"`

	// Name Enumeration of possible feature types
	Name *FeatureName `db:"name" json:"name,omitempty" yaml:"name,omitempty"`
	Plan *plan.Plan   `belongs_to:"plans" fk_id:"PlanId" json:"plan,omitempty" yaml:"plan,omitempty"`

	// PlanId A Universally Unique Identifier used to uniquely identify entities in Meshery. The UUID core definition is used across different schemas.
	PlanId uuid.UUID `db:"plan_id" json:"plan_id" yaml:"plan_id"`

	// Quantity Quantity of the feature allowed, use 9999999999 for unlimited
	Quantity  float32   `db:"quantity" json:"quantity" yaml:"quantity"`
	UpdatedAt time.Time `db:"updated_at" json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
}

// FeatureName Enumeration of possible feature types
type FeatureName string

// FeaturesPage defines model for FeaturesPage.
type FeaturesPage = []Feature

// OrganizationId defines model for organization_id.
type OrganizationId = uuid.UUID
