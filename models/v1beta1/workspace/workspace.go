// Package workspace provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package workspace

import (
	"database/sql"
	"time"

	"github.com/gofrs/uuid"
)

// Workspace defines model for workspace.
type Workspace struct {
	ID        uuid.UUID `db:"id" json:"id" yaml:"id"`
	CreatedAt time.Time `json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt      sql.NullTime `json:"deleted_at,omitempty" yaml:"deleted_at,omitempty"`
	Description    string       `json:"description,omitempty" yaml:"description,omitempty"`
	Name           string       `json:"name,omitempty" yaml:"name,omitempty"`
	OrganizationId uuid.UUID    `db:"org_id" json:"org_id" yaml:"org_id"`
	Owner          string       `json:"owner,omitempty" yaml:"owner,omitempty"`
	UpdatedAt      time.Time    `json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
}

// WorkspacePage defines model for workspacePage.
type WorkspacePage struct {
	Page       int         `json:"page,omitempty" yaml:"page,omitempty"`
	PageSize   int         `json:"page_size,omitempty" yaml:"page_size,omitempty"`
	TotalCount int         `json:"total_count,omitempty" yaml:"total_count,omitempty"`
	Workspaces []Workspace `json:"workspaces,omitempty" yaml:"workspaces,omitempty"`
}

// WorkspacePayload defines model for workspacePayload.
type WorkspacePayload struct {
	// Description Workspaces serve as a virtual space for your team-based work, allows you to control access and more, Provide a detailed description to clarify the purpose of this workspace. Remember you can changes description of workspace after it's creations too. Learn more about workspaces [here](https://docs.meshery.io/concepts/logical/workspaces)
	Description string `json:"description,omitempty" yaml:"description,omitempty"`

	// Name Provide a name that meaningfully represents this workspace. You can change the name of the workspace even after its creation.
	Name string `json:"name" yaml:"name"`

	// OrganizationID Select an organization in which you want to create this new workspace. Keep in mind that the organization cannot be changed after creation.
	OrganizationID string `json:"organization_id" yaml:"organization_id"`
}

// WorkspaceUpdatePayload defines model for workspaceUpdatePayload.
type WorkspaceUpdatePayload struct {
	// Description Environment description
	Description string `json:"description,omitempty" yaml:"description,omitempty"`

	// Name Name of workspace
	Name string `json:"name,omitempty" yaml:"name,omitempty"`

	// OrganizationID Organization ID
	OrganizationID string `json:"organization_id" yaml:"organization_id"`
}

// WorkspacesDesignsMapping defines model for workspacesDesignsMapping.
type WorkspacesDesignsMapping struct {
	ID        uuid.UUID `db:"id" json:"id" yaml:"id"`
	CreatedAt time.Time `json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt   sql.NullTime `json:"deleted_at,omitempty" yaml:"deleted_at,omitempty"`
	DesignId    uuid.UUID    `db:"design_id" json:"design_id" yaml:"design_id"`
	UpdatedAt   time.Time    `json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
	WorkspaceId uuid.UUID    `db:"workspace_id" json:"workspace_id" yaml:"workspace_id"`
}

// WorkspacesEnvironmentsMapping defines model for workspacesEnvironmentsMapping.
type WorkspacesEnvironmentsMapping struct {
	ID        uuid.UUID `db:"id" json:"id" yaml:"id"`
	CreatedAt time.Time `json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt     sql.NullTime `json:"deleted_at,omitempty" yaml:"deleted_at,omitempty"`
	EnvironmentId uuid.UUID    `db:"environment_id" json:"environment_id" yaml:"environment_id"`
	UpdatedAt     time.Time    `json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
	WorkspaceId   uuid.UUID    `db:"workspace_id" json:"workspace_id" yaml:"workspace_id"`
}

// WorkspacesTeamsMapping defines model for workspacesTeamsMapping.
type WorkspacesTeamsMapping struct {
	ID        uuid.UUID `db:"id" json:"id" yaml:"id"`
	CreatedAt time.Time `json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt   sql.NullTime `json:"deleted_at,omitempty" yaml:"deleted_at,omitempty"`
	TeamId      uuid.UUID    `db:"team_id" json:"team_id" yaml:"team_id"`
	UpdatedAt   time.Time    `json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
	WorkspaceId uuid.UUID    `db:"workspace_id" json:"workspace_id" yaml:"workspace_id"`
}

// WorkspacesViewsMapping defines model for workspacesViewsMapping.
type WorkspacesViewsMapping struct {
	ID        uuid.UUID `db:"id" json:"id" yaml:"id"`
	CreatedAt time.Time `json:"created_at,omitempty" yaml:"created_at,omitempty"`

	// DeletedAt SQL null Timestamp to handle null values of time.
	DeletedAt   sql.NullTime `json:"deleted_at,omitempty" yaml:"deleted_at,omitempty"`
	UpdatedAt   time.Time    `json:"updated_at,omitempty" yaml:"updated_at,omitempty"`
	ViewId      uuid.UUID    `db:"view_id" json:"view_id" yaml:"view_id"`
	WorkspaceId uuid.UUID    `db:"workspace_id" json:"workspace_id" yaml:"workspace_id"`
}
