/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * Specific stipulations to consider and known behaviors to be aware of when using this design.
 */
export type CaveatsAndConsiderations = string;
/**
 * Purpose of the design along with its intended and unintended uses.
 */
export type Description = string;
/**
 * Categorization of the type of design or operational flow depicted in this design.
 */
export type Type =
  | "Deployment"
  | "Observability"
  | "Resiliency"
  | "Scaling"
  | "Security"
  | "Traffic-management"
  | "Troubleshooting"
  | "Workloads";

export interface CatalogData {
  /**
   * Tracks the specific content version that has been made available in the Catalog.
   */
  publishedVersion?: string;
  contentType?:
    | {
        /**
         * One or more models associated with this catalog item. For designs, a list of one or more models implicated by components within the design. For models, this is self-referential.
         *
         * @minItems 1
         */
        model?: [HttpsSchemasMesheryIoModelJson, ...HttpsSchemasMesheryIoModelJson[]];
        [k: string]: unknown;
      }
    | HttpsSchemasMesheryIoModelJson1;
  pattern_caveats: CaveatsAndConsiderations;
  pattern_info: Description;
  type: Type;
  /**
   * Contains reference to the dark and light mode snapshots of the design.
   */
  snapshotURL?: string[];
  /**
   * Custom tags to categorise catalog items
   */
  tags?: string;
  category?: string;
  subCategory?: string;
  [k: string]: unknown;
}
/**
 * Meshery Models serve as a portable unit of packaging to define managed entities, their relationships, and capabilities.
 */
export interface HttpsSchemasMesheryIoModelJson {
  /**
   * Uniquely identifies the entity (i.e. component) as defined in a declaration (i.e. design).
   */
  id?: string;
  /**
   * Specifies the version of the schema used for the definition.
   */
  schemaVersion?: string;
  /**
   * Version of the model definition.
   */
  version: string;
  /**
   * The unique name for the model within the scope of a registrant.
   */
  name: string;
  /**
   * Human-readable name for the model.
   */
  displayName?: string;
  /**
   * Description of the model.
   */
  description?: string;
  /**
   * Status of model, including:
   * - duplicate: this component is a duplicate of another. The component that is to be the canonical reference and that is duplicated by other components should not be assigned the 'duplicate' status.
   * - maintenance: model is unavailable for a period of time.
   * - enabled: model is available for use for all users of this Meshery Server.
   * - ignored: model is unavailable for use for all users of this Meshery Server.
   */
  status?: "ignored" | "enabled" | "duplicate";
  registrant: HttpsSchemasMesheryIoComponentJson;
  /**
   * Category of the model.
   */
  category: {
    /**
     * A Universally Unique Identifier used to uniquely identify entites in Meshery. The UUID core defintion is used across different schemas.
     */
    id?: string;
    name?: string;
    metadata?: {
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  /**
   * Sub-category of the model.
   */
  subCategory?: string;
  /**
   * Metadata containing additional information associated with the model.
   */
  metadata?: {
    /**
     * Capabilities associated with the model
     */
    capabilities?: HttpsSchemasMesheryIoCapabilityJson[];
    /**
     * Indicates whether the model and its entities should be treated as deployable entities or as logical representations.
     */
    isAnnotation?: boolean;
    /**
     * Primary color associated with the model.
     */
    primaryColor?: string;
    /**
     * Secondary color associated with the model.
     */
    secondaryColor?: string;
    /**
     * SVG representation of the model in white color.
     */
    svgWhite?: string;
    /**
     * SVG representation of the model in colored format.
     */
    svgColor?: string;
    /**
     * SVG representation of the complete model.
     */
    svgComplete?: string;
    [k: string]: unknown;
  };
  /**
   * Registrant-defined data associated with the model. Properties pertain to the software being managed (e.g. Kubernetes v1.31)
   */
  model?: {
    /**
     * Version of the model as defined by the registrant.
     */
    version: string;
    [k: string]: unknown;
  };
}
/**
 * Meshery Connections are managed and unmanaged resources that either through discovery or manual entry are tracked by Meshery. Learn more at https://docs.meshery.io/concepts/logical/connections
 */
export interface HttpsSchemasMesheryIoComponentJson {
  /**
   * ID
   */
  id?: string;
  /**
   * Connection Name
   */
  name?: string;
  /**
   * Credential ID
   */
  credential_id?: string;
  /**
   * Connection Type
   */
  type: string;
  /**
   * Connection Subtype
   */
  sub_type?: string;
  /**
   * Connection Kind
   */
  kind: string;
  metadata?: {
    [k: string]: unknown;
  };
  /**
   * Connection Status
   */
  status:
    | "discovered"
    | "registered"
    | "connected"
    | "ignored"
    | "maintenance"
    | "disconnected"
    | "deleted"
    | "not found";
  /**
   * A Universally Unique Identifier used to uniquely identify entites in Meshery. The UUID core defintion is used across different schemas.
   */
  user_id?: string;
  created_at?: string;
  updated_at?: string;
  deleted_at?: string;
}
/**
 * Meshery manages entities in accordance with their specific capabilities. This field explicitly identifies those capabilities largely by what actions a given component supports; e.g. metric-scrape, sub-interface, and so on. This field is extensible. Entities may define a broad array of capabilities, which are in-turn dynamically interpretted by Meshery for full lifecycle management.
 */
export interface HttpsSchemasMesheryIoCapabilityJson {
  /**
   * Specifies the version of the schema to which the capability definition conforms.
   */
  schemaVersion: string;
  /**
   * Version of the capability definition.
   */
  version: string;
  /**
   * Name of the capability in human-readible format.
   */
  displayName: string;
  /**
   * A written representation of the purpose and characteristics of the capability.
   */
  description?: string;
  /**
   * Top-level categorization of the capability
   */
  kind: ("action" | "mutate" | "view" | "interaction") & string;
  /**
   * Classification of capabilities. Used to group capabilities similar in nature.
   */
  type: string;
  /**
   * Most granular unit of capability classification. The combination of Kind, Type and SubType together uniquely identify a Capability.
   */
  subType?: string;
  /**
   * Key that backs the capability.
   */
  key?: string;
  /**
   * State of the entity in which the capability is applicable.
   */
  entityState: ("declaration" | "instance")[];
  /**
   * Status of the capability
   */
  status: "enabled" | "disabled";
  /**
   * Metadata contains additional information associated with the capability. Extension point.
   */
  metadata?: {
    [k: string]: unknown;
  };
}
/**
 * Meshery Models serve as a portable unit of packaging to define managed entities, their relationships, and capabilities.
 */
export interface HttpsSchemasMesheryIoModelJson1 {
  /**
   * Uniquely identifies the entity (i.e. component) as defined in a declaration (i.e. design).
   */
  id?: string;
  /**
   * Specifies the version of the schema used for the definition.
   */
  schemaVersion?: string;
  /**
   * Version of the model definition.
   */
  version: string;
  /**
   * The unique name for the model within the scope of a registrant.
   */
  name: string;
  /**
   * Human-readable name for the model.
   */
  displayName?: string;
  /**
   * Description of the model.
   */
  description?: string;
  /**
   * Status of model, including:
   * - duplicate: this component is a duplicate of another. The component that is to be the canonical reference and that is duplicated by other components should not be assigned the 'duplicate' status.
   * - maintenance: model is unavailable for a period of time.
   * - enabled: model is available for use for all users of this Meshery Server.
   * - ignored: model is unavailable for use for all users of this Meshery Server.
   */
  status?: "ignored" | "enabled" | "duplicate";
  registrant: HttpsSchemasMesheryIoComponentJson;
  /**
   * Category of the model.
   */
  category: {
    /**
     * A Universally Unique Identifier used to uniquely identify entites in Meshery. The UUID core defintion is used across different schemas.
     */
    id?: string;
    name?: string;
    metadata?: {
      [k: string]: unknown;
    };
    [k: string]: unknown;
  };
  /**
   * Sub-category of the model.
   */
  subCategory?: string;
  /**
   * Metadata containing additional information associated with the model.
   */
  metadata?: {
    /**
     * Capabilities associated with the model
     */
    capabilities?: HttpsSchemasMesheryIoCapabilityJson[];
    /**
     * Indicates whether the model and its entities should be treated as deployable entities or as logical representations.
     */
    isAnnotation?: boolean;
    /**
     * Primary color associated with the model.
     */
    primaryColor?: string;
    /**
     * Secondary color associated with the model.
     */
    secondaryColor?: string;
    /**
     * SVG representation of the model in white color.
     */
    svgWhite?: string;
    /**
     * SVG representation of the model in colored format.
     */
    svgColor?: string;
    /**
     * SVG representation of the complete model.
     */
    svgComplete?: string;
    [k: string]: unknown;
  };
  /**
   * Registrant-defined data associated with the model. Properties pertain to the software being managed (e.g. Kubernetes v1.31)
   */
  model?: {
    /**
     * Version of the model as defined by the registrant.
     */
    version: string;
    [k: string]: unknown;
  };
}
