openapi: 3.0.0
info:
  title: Meshery Cloud
  description: Documentation for meshery Cloud REST APIs
  contact:
    email: support@layer5.io
  version: v0.6.394
servers:
  - url: https://cloud.layer5.io
    description: Meshery Cloud production server URL
  - url: https://staging-cloud.layer5.io
    description: Meshery Cloud staging server URL
  - url: http://localhost:9876
    description: Meshery Cloud development server URL (controlled via PORT environment variable)
tags:
  - name: filters
    description: APIs for filters
security:
  - jwt: []
components:
  securitySchemes:
    jwt:
      type: http
      scheme: Bearer
      bearerFormat: JWT
  schemas:
    mesheryFilter:
      properties:
        id:
          $ref: ./common/core.yml#/components/schemas/id
          description: Connection id
        user_id:
          $ref: ./common/core.yml#/components/schemas/id
        filter_file:
          type: string
          format: byte
          description: Filter file
        name:
          $ref: ./common/core.yml#/components/schemas/text
          description: Filter Name
        location:
          $ref: ./common/core.yml#/components/schemas/map_object
        visibility:
          $ref: ./common/core.yml#/components/schemas/text
        catalog_data:
          $ref: ./common/core.yml#/components/schemas/map_object
        created_at:
          $ref: ./common/core.yml#/components/schemas/time
        updated_at:
          $ref: ./common/core.yml#/components/schemas/time
    mesheryFilterPage:
      allOf:
        - $ref: ./common/core.yml#/components/schemas/resultsPage
        - type: object
          properties:
            filters:
              type: array
              items:
                $ref: "#/components/schemas/mesheryFilter"

  requestBodies:
    mesheryFilterRequestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              url:
                $ref: ./common/core.yml#/components/schemas/endpoint
              path:
                $ref: ./common/core.yml#/components/schemas/text
              save:
                type: boolean
              filter_data:
                $ref: "#/components/schemas/mesheryFilter"

paths:
  #filters
  /api/content/filters:
    post:
      tags:
        - filters
      operationId: UpsertFilter
      summary: Upsert Filter
      description: It will insert the filter if not present else it will update the matching entry
      requestBody:
        $ref: "#/components/requestBodies/mesheryFilterRequestBody"
      responses:
        "200":
          description: Upserted filter
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/mesheryFilter"
        "400":
          $ref: ./common/responses.yml#/400
        "401":
          $ref: ./common/responses.yml#/401
        "500":
          $ref: ./common/responses.yml#/500
    get:
      tags:
        - filters
      operationId: GetFilters
      summary: Get Filters
      description: Get paginated filters
      parameters:
        - $ref: ./common/parameters.yml#/components/parameters/page
        - $ref: ./common/parameters.yml#/components/parameters/page_size
        - $ref: ./common/parameters.yml#/components/parameters/search
        - $ref: ./common/parameters.yml#/components/parameters/order
      responses:
        "200":
          description: Filters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mesheryFilterPage"
        "401":
          $ref: ./common/responses.yml#/401
        "500":
          $ref: ./common/responses.yml#/500
  /api/content/filters/file/{id}:
    get:
      tags:
        - filters
      operationId: GetFilterFile
      summary: Filter file
      description: Get the filter associated with the given filter id without any metadata
      parameters:
        - $ref: ./common/parameters.yml#/components/parameters/id
      responses:
        "200":
          description: Filter file
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mesheryFilter/properties/filter_file"
        "400":
          $ref: ./common/responses.yml#/400
        "404":
          $ref: ./common/responses.yml#/404
        "401":
          $ref: ./common/responses.yml#/401
        "500":
          $ref: ./common/responses.yml#/500
  /api/content/filters/{id}:
    get:
      tags:
        - filters
      operationId: GetFilter
      summary: Get filter by ID
      description: Get filter by ID
      parameters:
        - $ref: ./common/parameters.yml#/components/parameters/id
      responses:
        "200":
          description: Filter associated with ID
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mesheryFilter"
        "400":
          $ref: ./common/responses.yml#/400
        "404":
          $ref: ./common/responses.yml#/404
        "401":
          $ref: ./common/responses.yml#/401
        "500":
          $ref: ./common/responses.yml#/500
    delete:
      tags:
        - filters
      operationId: DeleteFilter
      summary: Delete filter by ID
      description: Delete filter associated with ID
      parameters:
        - $ref: ./common/parameters.yml#/components/parameters/id
      responses:
        "200":
          description: Deleted filter
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/mesheryFilter"
        "400":
          $ref: ./common/responses.yml#/400
        "404":
          $ref: ./common/responses.yml#/404
        "401":
          $ref: ./common/responses.yml#/401
        "500":
          $ref: ./common/responses.yml#/500
  /api/content/filters/clone/{id}:
    post:
      tags:
        - filters
      operationId: CloneFilter
      summary: Clone filter
      description: Clone filter associated with ID
      parameters:
        - $ref: ./common/parameters.yml#/components/parameters/id
      requestBody:
        description: Body for cloning design
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        "400":
          $ref: ./common/responses.yml#/400
        "404":
          $ref: ./common/responses.yml#/404
        "401":
          $ref: ./common/responses.yml#/401
        "500":
          $ref: ./common/responses.yml#/500

