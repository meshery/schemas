openapi: 3.0.0
info:
  title: Academy API
  version: 1.0.0

paths:

  /api/academy/cirricula/registered:
    get:
      x-internal: ["cloud"]
      tags:
        - Academy
      operationId: getMyAcademyCirricula
      summary: Get academy content
      description: Returns a list of academy content registered by the user with optional filtering.
      parameters:
        - name: contentType
          in: query
          description: Filter content by content types
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: orgId
          in: query
          description: Filter content by organization IDs
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true

    responses:
      '200':
        description: A list of content with total count
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademyCirriculaListResponse'
      '400':
        description: Invalid request parameters
      '500':
        description: Server error

  /api/academy/cirricula:
    get:
      x-internal: ["cloud"]
      tags:
        - Academy
      operationId: getAcademyCirricula
      summary: Get academy content
      description: Returns a list of academy content with optional filtering.
      parameters:
        - name: contentType
          in: query
          description: Filter content by content types
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: visibility
          in: query
          description: Filter content by visibility (public/private)
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true

        - name: level
          in: query
          description: Filter content by difficulty level
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true

        - name: orgId
          in: query
          description: Filter content by organization IDs
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true

        - name: category
          in: query
          description: Filter content by categories
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true


        - name: status
          in: query
          description: Filter by registration status
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true

        - name: search
          in: query
          description: Search content by title
          required: false
          schema:
            type: string

    responses:
      '200':
        description: A list of content with total count
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcademyCurriculaWithMetricsListResponse'
      '400':
        description: Invalid request parameters
      '500':
        description: Server error

  /api/academy/{type}/{orgId}/{slug}:
    get:
      x-internal:
        - cloud
      summary: Get a single learning path
      description: Returns a learning path identified by type, orgId, and slug.
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single academy content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademyCirricula'
        '400':
          description: Invalid request parameters
        '500':
          description: Server error


  /api/academy/register:
    post:
      x-internal: ["cloud"]
      tags:
        - Academy
      summary: Register a user to academy content
      operationId: registerToAcademyContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterToAcademyContentRequest'

      responses:
        '200':
          description: registered content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademyRegistration'
        '400':
          description: Invalid request parameters
        '500':
          description: Server error



  /api/academy/registrations/{contentId}:
    get:

      tags:
        - Academy

      x-internal: ["cloud"]
      summary: Get registration information for academy content
      description: Returns registration data for a specific content item, optionally filtered by status.
      parameters:
        - name: contentId
          in: path
          required: true
          description: The ID of the content to retrieve registration data for
          schema:
            type: string

        - name: status
          in: query
          required: false
          description: Filter registrations by status (e.g., registered, completed)
          schema:
            type: string

      responses:
        '200':
          description: Registration data for the specified content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademyRegistration'
        '400':
          description: Invalid request parameters
        '404':
          description: Content not found
        '500':
          description: Server error

  /api/academy/registrations/{registrationId}/progress-tracker/update-current-item:
    post:
      tags:
        - Academy
      x-internal: ["cloud"]
      operationId: updateCurrentItemInProgressTracker
      summary: Update the current item in the progress tracker
      parameters:
        - name: registrationId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCurrentItemRequest'
      responses:
        '200':
          description: Successfully updated the progress tracker
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  progress_tracker:
                    $ref: '#/components/schemas/CirriculaProgressTracker'
                  registration_id:
                    type: string
                  content_type:
                    $ref: '#/components/schemas/ContentType'
                  item_data:
                    $ref: '#/components/schemas/CirriculaCurrentItemData'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /api/academy/quiz/submit:
    post:
      tags:
        - Academy
      x-internal: ["cloud"]
      operationId: submitQuiz
      summary: Submit a quiz for evaluation

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuizSubmission'
      responses:
        '200':
          description: Successfully updated the progress tracker
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/QuizEvaluationResult"
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/academy/admin/summary:
     get:
      tags:
        - Academy
      x-internal: ["cloud"]
      operationId: getAcademyAdminSummary
      summary: Get academy content summary
      description: Returns a summary of all academy content with  metrics.
      responses:
        '200':
          description: A list of content with total count and registration metrics
          content:
            application/json:
              schema:
                type: object

        '400':
          description: Invalid request parameters
        '500':
          description: Server error

  /api/academy/admin/registrations:
    get:
      x-internal: ["cloud"]
      tags:
        - Academy
      operationId: getAcademyAdminRegistrations
      summary: Get academy registrations
      description: Returns a list of academy registrations with user, curricula, and pagination details.
      parameters:
        - name: pagesize
          in: query
          required: false
          description: Number of results per page
          schema:
            type: integer
        - name: page
          in: query
          required: false
          description: Page number
          schema:
            type: integer
        - name: content_type
          in: query
          required: false
          description: Filter by content types
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: status
          in: query
          required: false
          description: Filter by registration status
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
      responses:
        '200':
          description: List of registrations with pagination info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurriculaRegistrationsResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Server error

  /api/academy/certificates/{certificateId}:
    get:
      x-internal: ["cloud"]
      tags:
        - Academy
      operationId: getCertificateById
      summary: Get a certificate by ID
      description: Returns a certificate identified by its ID.
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate to retrieve
          schema:
            type: string

      responses:
        '200':
          description: A single certificate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Certificate'
        '400':
          description: Invalid request parameters
        '404':
          description: Certificate not found
        '500':
          description: Server error


components:
  schemas:

    RegisterToAcademyContentRequest:
      type: object
      required:
        - content_id
        - user_id
      properties:
        content_id:
          type: string
          description: ID of the academy content to register for
        content_type:
          $ref: "#/components/schemas/ContentType"

    ContentType:
      type: string
      enum:
        - learning-path
        - challenge
        - certification

    Visibility:
      type: string
      enum:
        - public
        - private
    Level :
      type: string
      enum:
        - beginner
        - intermediate
        - advanced

    Status:
      type: string
      enum:
        - ready
        - archived
        - not_ready

    AcademyCirricula:
      type: object
      properties:
        id :
          type: string
          description: Id of the cirricula
          example: 923458-3490394-934893
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            db: "id"
            json: "id"
            yaml: "id"

        type :
           $ref: "#/components/schemas/ContentType"
           x-go-type: "ContentType"
           x-oapi-codegen-extra-tags:
             db: "type"
        orgId:
          type: string
          description: Organization ID that owns this learning path
          example: layer5
          x-oapi-codegen-extra-tags:
            db: "org_id"
            json: "org_id"
            yaml: "org_id"
        visibility:
          $ref: "#/components/schemas/Visibility"
          description: Visibility of the cirricula
          x-go-type: "Visibility"
          x-oapi-codegen-extra-tags:
            db: "visibility"
            json: "visibility"
            yaml: "visibility"
        status:
          $ref: "#/components/schemas/Status"
          example: ready
          description: Status of the cirricula
          x-go-type: "Status"
          x-oapi-codegen-extra-tags:
            db: "status"
            json: "status"
            yaml: "status"

        slug :
          type: string
          description: slug of the cirricula
          example: intro-kubernetes-course

        level:
          $ref: "#/components/schemas/Level"
          description: Level of the cirricula
          x-go-type: "Level"
          x-oapi-codegen-extra-tags:
            db: "level"
            json: "level"
            yaml: "level"



        createdAt:
          description: When the cirricula item was created
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
          x-oapi-codegen-extra-tags:
            db: "created_at"
            json: "created_at"
            yaml: "created_at"


        updatedAt:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
          description: When the cirricula was last updated
          x-go-type: "core.Time"
          x-oapi-codegen-extra-tags:
            db: "updated_at"
            json: "updated_at"
            yaml: "updated_at"
        deletedAt:
          x-go-type : "core.NullTime"
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/deleted_at"
          x-oapi-codegen-extra-tags:
            db: "deleted_at"
            json: "deleted_at"
            yaml: "deleted_at"
        metadata:
          type: object
          description: Additional metadata about the cirricula
          additionalProperties: true
          x-go-type: "core.Map"
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            db: "metadata"
            json: "metadata"
            yaml: "metadata"
          oneOf:
            - $ref: "#/components/schemas/CurriculaMetadata"
              x-go-type: "CurriculaMetadata"


      required:
        - id
        - type
        - orgId
        - visibility
        - status
        - slug
        - createdAt
        - updatedAt
        - deletedAt
        - metadata
        - level

    AcademyCurriculaWithMetrics:
      allOf:
        - $ref: "#/components/schemas/AcademyCirricula"
        - type: object
          required:
            - RegistrationCount
          properties:
            RegistrationCount:
              type: number
              x-oapi-codegen-extra-tags:
                db: "registration_count,omitempty"
                json: "registration_count,omitempty"
                yaml: "registration_count,omitempty"

    AcademyCirriculaListResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of cirricula
          example: 7
        data:
          type: array
          items:
            x-go-type: "AcademyCirricula"
            $ref: '#/components/schemas/AcademyCirricula'
      required:
        - total
        - data

    AcademyCurriculaWithMetricsListResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of cirricula
          example: 7
        data:
          type: array
          items:
            $ref: '#/components/schemas/AcademyCurriculaWithMetrics'
            x-go-type: "AcademyCurriculaWithMetrics"
            x-go-type-skip-optional-pointer: true

      required:
        - total
        - data

    ChallengeMetadata:
      $ref: "#/components/schemas/CurriculaMetadata"
      x-go-type: "CurriculaMetadata"

    LearningPathMetadata:
      $ref: "#/components/schemas/CurriculaMetadata"
      x-go-type: "CurriculaMetadata"

    Badge:
      type: object
      required:
        - label
        - title
        - description
        - png
        - svg
      properties:
        label:
          type: string
          description: unique identifier for the badge ( auto generated )
          example: Kubernetes-Expert

        title:
          type: string
          description: Title of the badge
          example: Kubernetes Expert

        description:
          type: string
          description: Description of the badge
          example: Awarded for mastering Kubernetes concepts and practices
        png:
          type: string
          format: uri
          description: URL to the badge image
          example: http://localhost:9876/badges/kubernetes-expert.png
        svg:
          type: string
          format: uri
          description: URL to the badge SVG image
          example: http://localhost:9876/badges/kubernetes-expert.svg

    CertificateIssuingAuthority:
      type: object
      required:
        - name
        - url
      properties:
        name:
          type: string
          description: Name of the issuing authority
          example: Cloud Native Foundation
        role:
          type: string
          description: Role of the issuing authority
          example: COO
        signature_url:
          type: string
          format: uri
          description: URL to the signature image of the issuing authority should be a publicly accessible URL and transparent PNG or SVG format
          example: http://localhost:9876/signatures/cloud-native-foundation.png


    Certificate:
      type: object
      required:
        - id
        - org_id
        - title
        - description
        - issuing_authorities
        - issued_date
        - recipient_id
        - recipient_name

      properties:

        id:
          type: string
          description: Unique identifier for the certificate
          example: 1234567890abcdef
          x-go-name: ID

        org_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/uuid"
          description: UUID of the organization that issued the certificate

        recipient_id:
          type: string
          description: ID of the recipient (user) who received the certificate
          example: 1234567890abcdef

        recipient_name:
          type: string
          description: Name of the recipient (user) who received the certificate
          example: John Doe

        title:
          type: string
          description: Title of the certificate
          example: Kubernetes Expert Certification

        description:
          type: string
          description: Description of the certificate
          example: Awarded for successfully completing the Kubernetes Expert course

        issuing_authorities:
          type: array
          items:
            $ref: "#/components/schemas/CertificateIssuingAuthority"
            x-go-type: "CertificateIssuingAuthority"
          description: List of issuing authorities for the certificate

        issued_date:
          type: string
          format: date-time
          description: Date when the certificate was issued
          example: 2023-10-01T12:00:00Z

        expiration_date:
          type: string
          format: date-time
          description: Date when the certificate expires (optional)
          example: 2025-10-01T12:00:00Z


    CurriculaMetadata:
      type: object
      properties:
        title:
          type: string
          description: Title of the learning path
          example: Mastering Kubernetes for Engineers
        description:
          type: string
          description: Description of the learning path
          example: Learn how to configure your Kubernetes clusters and manage the lifecycle of your workloads
        banner:
          type: string
          format: uri
          nullable: true
          description: Filename of the banner image, which should be placed in the same directory as the _index.md file
          example: kubernetes-icon.svg
        permalink:
          type: string
          format: uri
          description: Canonical URL for the learning path
          example: http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/

        badge:
          $ref: "#/components/schemas/Badge"
          x-go-type: "Badge"

        certificate:
          $ref: "#/components/schemas/Certificate"
          x-go-type: "Certificate"

        children:
          type: array
          description: List of children items in the top-level curricula
          items:
            x-go-type: "ChildNode"
            $ref: '#/components/schemas/ChildNode'


      required:
        - title
        - description
        - permalink

    AcademyRegistrationStatus:
          type: string
          enum:
            - registered
            - completed
            - failed
            - withdrawn
          description: Status of the user's course registration
          x-oapi-codegen-extra-tags:
            db: "status"

    AcademyRegistration:
      type: object
      required:
        - id
        - org_id
        - user_id
        - status
        - created_at
        - updated_at
        - content_id
        - certificate
        - metadata
      properties:
        id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/uuid"
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            db: "id"
            json: "id"
            yaml: "id"

        org_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/uuid"
          description: ID of the organization

          x-oapi-codegen-extra-tags:
            db: "org_id"

        content_id:
          type: string
          description: ID of the course content

          x-oapi-codegen-extra-tags:
            db: "content_id"

        user_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/uuid"
          description: ID of the user (foreign key to User)

          x-oapi-codegen-extra-tags:
            db: "user_id"

        status:
          $ref: "#/components/schemas/AcademyRegistrationStatus"
          x-go-type: AcademyRegistrationStatus
          description: Status of the user's course registration
          x-oapi-codegen-extra-tags:
            db: "status"

        updated_at:
          description: When the registration was updated
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
          x-oapi-codegen-extra-tags:
            db: "updated_at"


        created_at:
          description: When the registration was created
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
          x-oapi-codegen-extra-tags:
            db: "created_at"

        deleted_at:
          x-go-type : "core.NullTime"
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/deleted_at"
          x-oapi-codegen-extra-tags:
            db: "deleted_at"

        certificate:
          $ref: "#/components/schemas/Certificate"
          x-go-type: "core.Map"
          description: Issued certificate for completing the curricula under registration
          x-oapi-codegen-extra-tags:
            db: "certificate"

        metadata:
          type: object
          description: Additional metadata about the registration
          additionalProperties: true
          x-go-type: "core.Map"
          x-go-type-skip-optional-pointer: true

          x-oapi-codegen-extra-tags:
            db: "metadata"


    ChildNode:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the course
          example: 1234567890abcdef
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            db: "id"
            json: "id"
            yaml: "id"
        title:
          type: string
          description: Title of the course
          example: Kubernetes Basics
        permalink:
          type: string
          format: uri
          description: URL to the course content
          example: http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
        description:
          type: string
          description: Course description
          example: Learn the basics of Kubernetes
        weight:
          type: number
          description: A numeric value to determine the display order. A smaller number appears first. If not specified, items will be sorted alphabetically by title.
          example: eg 1 , 2
        banner:
          type: string
          format: uri
          nullable: true
          description: Filename of the banner image, which should be placed in the same directory as the _index.md file
          example: kubernetes-icon.svg
        type:
          $ref: '#/components/schemas/ContentType'
          x-go-type: "ContentType"
          description: Type of the content (e.g., learning-path, challenge, certification)
        children:
          type: array
          description: List of child nodes (sub-courses or modules)
          items:
            type: object
            x-go-type: "ChildNode"

      required:
        - title
        - description
        - id
        - permalink


    AcademyRegistrationsListResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of learning paths
          example: 7
        data:
          type: array
          items:
            x-go-type: "AcademyRegistration"
            $ref: '#/components/schemas/AcademyRegistration'
      required:
        - total
        - data


    CirriculaCurrentItemData:
      type: object
      required:
        - id
        - last_opened
        - content_type
      properties:
        id:
          type: string
        last_opened:
          type: string
          format: date-time
        content_type:
          $ref: '#/components/schemas/ContentType'
          x-go-type: "ContentType"

    CirriculaProgressTracker:
      type: object
      required:
        - current_item
        - grades
        - time_spent
        - completed
        - completed_items
      properties:
        current_item:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/CirriculaCurrentItemData'
            x-go-type: "CirriculaCurrentItemData"
        grades:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/QuizEvaluationResult'
            x-go-type: "QuizEvaluationResult"
        time_spent:
          type: integer
          description: Total time spent in seconds

        completed_items :
          type: object
          description: Items that have been completed (map of item IDs to item data)
          additionalProperties:
            $ref: '#/components/schemas/ProgressItemCompleted'
            x-go-type: "ProgressItemCompleted"

        completed:
          type: string
          format: date-time
          x-go-type: "core.NullTime"

    ProgressItemCompleted:
      type: object
      required:
        - completed_at
        - item_data
      properties:
        completed_at:
          type: string
          format: date-time
          description: Timestamp when the item was completed
        item_data:
          $ref: '#/components/schemas/Parent'
          x-go-type: "Parent"

    UpdateCurrentItemRequest:
      type: object
      properties:
        content_type:
          $ref: '#/components/schemas/ContentType'
          x-go-type: "ContentType"
        item_data:
          $ref: '#/components/schemas/CirriculaCurrentItemData'
          x-go-type: "CirriculaCurrentItemData"
      required:
        - content_type
        - item_data

    ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: string

    Quiz:
      type: object
      required:
        - id
        - title
        - orgId
        - description
        - slug
        - relPermalink
        - permalink
        - type
        - section
        - layout
        - date
        - final
        - lastmod
        - draft
        - file_path
        - pass_percentage
        - time_limit
        - questions
        - total_questions
        - total_marks
        - prerequisites

      properties:
        id:
          type: string
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            json: "id"
        orgId:
          type: string
          description: Organization ID that owns this quiz
          example: layer5
          x-oapi-codegen-extra-tags:
            db: "org_id"
            json: "org_id"
            yaml: "org_id"
        final:
          type: boolean
          description: Indicates if the quiz is final . i.e this quiz will used to evaluate the completion of parent section eg course , module , learning path
          example: true
        title:
          type: string
        description:
          type: string
        slug:
          type: string
        relPermalink:
          type: string
        permalink:
          type: string
        type:
          type: string
        section:
          type: string
        layout:
          type: string
        date:
          type: string
          format: date
        lastmod:
          type: string
          format: date
        draft:
          type: boolean
        file_path:
          type: string
        pass_percentage:
          type: number
          format: float
        time_limit:
          type: string
        questions:
          type: array
          items:
            $ref: "#/components/schemas/Question"
            x-go-type: Question
        total_questions:
          type: integer
        total_marks:
          type: integer

        prerequisites:
          type: array
          items:
            $ref: "#/components/schemas/Parent"
            x-go-type: Parent

        parent:
          $ref: "#/components/schemas/Parent"
          x-go-type: Parent

    Parent:
      type: object
      required:
        - id
        - title
        - relPermalink
        - type
      properties:
        id:
          type: string
        title:
          type: string
        relPermalink:
          type: string
        type:
          type: string

    QuestionType:
      type: string
      x-enum-varnames:
        - QuestionTypeMultipleAnswers
        - QuestionTypeSingleAnswer
        - QuestionTypeShortAnswer
        - QuestionTypeEssay
      enum:
        - multiple-answers
        - single-answer
        - short-answer
        - essay

    Question:
      type: object
      required:
        - id
        - text
        - type
        - marks
        - options
        - correct_answer

      properties:
        id:
          type: string
        text:
          type: string
        type:
          $ref: "#/components/schemas/QuestionType"
          x-go-type: QuestionType
        marks:
          type: integer
        multiple_answers:
          type: boolean
        options:
          type: array
          items:
            $ref: "#/components/schemas/QuestionOption"
            x-go-type: QuestionOption
        correct_answer:
          type: string

    QuestionOption:
      type: object
      required:
        - id
        - text
        - is_correct
      properties:
        id:
          type: string
        text:
          type: string
        is_correct:
          type: boolean

    QuizSubmission:
      type: object
      required:
        - quiz_abs_path
        - registration_id
        - user_id
        - answers
      properties:
        quiz_abs_path:
          type: string
        registration_id:
          type: string
        user_id:
          type: string
        answers:
          type: array
          items:
            $ref: "#/components/schemas/SubmittedAnswer"
            x-go-type: SubmittedAnswer

    SubmittedAnswer:
      type: object
      required:
        - question_id
        - selected_option_id
        - answer_text
      properties:
        question_id:
          type: string
        selected_option_id:
          type: object
          additionalProperties:
            type: boolean
        answer_text:
          type: string

    QuizEvaluationResult:
      type: object
      required:
        - score
        - passed
        - total_marks
        - pass_percentage
        - quiz
        - attempted_at
        - attempts
        - percentage_scored
        - correct_submissions

      properties:
        score:
          type: integer
        passed:
          type: boolean
        percentage_scored:
          type: number
          format: float
        total_marks:
          type: integer
        pass_percentage:
          type: number
          format: float
        correct_submissions:
          type: object
          additionalProperties:
            type: boolean
        quiz:
          $ref: "#/components/schemas/Quiz"
          x-go-type: Quiz

        attempted_at:
          type: string
          format: date-time
        attempts:
          type: integer

    UserRegistration:
      type: object
      required:
        - curricula_title
        - curricula_type
        - curricula_permalink
        - registration_id
        - status
        - user_id
        - user_email
        - user_last_name
        - user_first_name
        - user_avatar_url
        - total_count

      properties:
        curricula_title:
          type: string
          description: Title of the curricula
          x-oapi-codegen-extra-tags:
            db: "curricula_title"
        curricula_type:
          $ref: "#/components/schemas/ContentType"
          description: Type of the curricula
          x-go-type: "ContentType"
          x-oapi-codegen-extra-tags:
            db: "curricula_type"
        curricula_permalink:
          type: string
          description: Permalink of the curricula
          x-oapi-codegen-extra-tags:
            db: "curricula_permalink"

        registration_id:
          type: string
          format: uuid
          description: Unique ID of the registration
          x-oapi-codegen-extra-tags:
            db: "registration_id"
        status:
          $ref: "#/components/schemas/AcademyRegistrationStatus"
          description: Registration status
          x-go-type: "AcademyRegistrationStatus"
          x-oapi-codegen-extra-tags:
            db: "status"
        created_at:
          type: string
          format: date-time
          description: When the registration was created
          x-oapi-codegen-extra-tags:
            db: "created_at"

        user_id:
          type: string
          format: uuid
          description: ID of the user
          x-oapi-codegen-extra-tags:
            db: "user_id"
        user_first_name:
          type: string
          description: First name of the user
          x-oapi-codegen-extra-tags:
            db: "user_first_name"
        user_last_name:
          type: string
          description: Last name of the user
          x-oapi-codegen-extra-tags:
            db: "user_last_name"
        user_email:
          type: string
          format: email
          description: Email of the user
          x-oapi-codegen-extra-tags:
            db: "user_email"
        user_avatar_url:
          type: string
          format: uri
          description: Avatar URL of the user
          x-oapi-codegen-extra-tags:
            db: "user_avatar_url"

        total_count:
          type: integer
          format: int64
          description: Total count for pagination
          x-oapi-codegen-extra-tags:
            db: "total_count"

    CurriculaRegistrationsFilter:
      type: object
      required:
        - pagesize
        - page
        - content_type
        - status
      properties:
        pagesize:
          type: integer
        page:
          type: integer
        content_type:
          type: array
          items:
            type: string
        status:
          type: array
          items:
            type: string

    CurriculaRegistrationsResponse:
      type: object
      description: "This report provides a detailed view of every content registration across your academy. Use it to track individual progress, analyze enrollment patterns, and manage your learner base. You can filter and customize the view using the icons on the top-right."

      required:
        - data
        - total_count
        - page_size
        - page
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserRegistration'
            x-go-type: UserRegistration
        total_count:
          type: integer
          format: int64
        page_size:
          type: integer
        page:
          type: integer

    AcademyAdminSummary:
      type: object
      description: "Core statistics data for displaying on the academy management dashboard."
      properties:
        total_learners:
          type: integer
          description: "This is the cumulative count of all unique learners who have ever enrolled in any of your academy content. A steady growth in this number indicates an expanding reach for your academy."
        active_learners:
          type: integer
          description: "This metric counts all course registrations currently in the 'Registered' (in-progress) status. It's a key indicator of current student engagement and is used for billing purposes on Enterprise plans."
        total_tests_taken:
          type: integer
          description: "This is the total number of all test attempts, including retakes by the same user. High numbers may suggest challenging content, while low numbers could indicate less engagement with assessments."
        content_details:
          type: object
          description: "Overall statistics for academy content."
          properties:
            content_version:
              type: string
              description: "This version reflects your latest live academy content. Updates from your Git repository become visible here only after both a GitHub Release is created and the subsequent Layer5 Cloud deployment is complete."
            learning_paths_count:
              type: integer
              description: "Total number of available learning paths."
            certifications_count:
              type: integer
              description: "Total number of available certifications."
            challenges_count:
              type: integer
              description: "Total number of available challenges."
        learner_registration:
          type: object
          description: "This data shows the distribution of learners by their current status. A high ratio of non-completed statuses (i.e., Registered, Failed, and Withdrawn) relative to the 'Completed' status may indicate that your content is challenging or has engagement issues."
          properties:
            registered:
              type: integer
              description: "Learners who are 'in-progress' and have not yet finished the content."
            completed:
              type: integer
              description: "Learners who have successfully finished the content."
            withdrawn:
              type: integer
              description: "Learners who have unenrolled from the content."
            failed:
              type: integer
              description: "Learners who have attempted to complete the content but did not meet the passing criteria."
        content_metrics:
          type: array
          description: "A ranking of your curricula by the total number of registrations. Use this data to quickly identify your most engaging content."
          items:
            type: object
        test_stats:
          type: object
          description: "Identity the most difficult, easiest, and most attempted tests in this  high-level summary of test performance."
          properties:
            pass_fail_summary:
              type: object
              description: "This data shows a comparison of the total number of passed vs. failed attempts across all tests. This counts all attempts, including retakes by the same user."
              properties:
                passed_count:
                  type: integer
                failed_count:
                  type: integer
            most_difficult_test:
              type: object
              description: "This is the test with the lowest pass-to-fail ratio, helping you quickly identify the most challenging content for your learners."
            easiest_test:
              type: object
              description: "This is the test with the highest pass-to-fail ratio, showing which content your learners are mastering most easily."
            most_attempted_test:
              type: object
              description: "This is the test that learners have attempted the most times, regardless of the outcome. High attempts could indicate either popularity or significant difficulty."
        test_metrics:
          type: array
          description: "This list provides a detailed performance breakdown for each individual test. Each test title is a clickable link that navigates directly to that assessment."
          items:
            type: object
