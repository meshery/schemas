openapi: 3.0.0
info:
  title: Academy API
  version: 1.0.0

paths:
  /api/academy/learning-paths:
    get:
      x-internal: ["cloud"]
      summary: Get all learning paths
      description: Returns a list of learning paths with optional filtering.
      parameters:
        - name: org_id
          in: query
          description: Filter learning paths by organization ID
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search learning paths by title
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of learning paths with total count
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPathListResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Server error


  /api/academy/{type}/{orgId}/{slug}:
    get:
      x-internal:
        - cloud
      summary: Get a single learning path
      description: Returns a learning path identified by type, orgId, and slug.
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single academy content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPath'
        '400':
          description: Invalid request parameters
        '500':
          description: Server error
  /api/academy/challenges:
    get:
      x-internal: ["cloud"]
      summary: Get all challenges
      description: Returns a list of challenges with optional filtering.
      parameters:
        - name: org_id
          in: query
          description: Filter learning paths by organization ID
          required: false
          schema:
            type: string
        - name: search
          in: query
          description: Search learning paths by title
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A list of learning paths with total count
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearningPathListResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Server error

  /api/academy/registrations/hello:
    get:
      x-internal: ["cloud"]
      summary: Get all registered content
      description: Returns a list of registered content

      operationId: getAcademyRegistrations
      parameters:
        - name: status
          in: query
          description: filter by status
          required: true
          schema:
            type: string

      responses:
        '200':
          description: A list of registrations with total count
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademyRegistrationsListResponse'
        '400':
          description: Invalid request parameters
        '500':
          description: Server error

  /api/academy/register:
    post:
      summary: Register a user to academy content
      operationId: registerToAcademyContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterToAcademyContentRequest'

      responses:
        '200':
          description: registered content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcademyRegistration'
        '400':
          description: Invalid request parameters
        '500':
          description: Server error

      tags:
        - Academy

components:
  schemas:


    RegisterToAcademyContentRequest:
      type: object
      required:
        - content_id
        - user_id
      properties:
        content_id:
          type: string
          description: ID of the academy content to register for
        content_type:
          $ref: "#/components/schemas/ContentType"

    ContentType:
      type: string
      enum:
        - learning-path
        - challenge
        
    Level:
      type: string
      enum:
        - introductory
        - intermediate
        - advanced

    LearningPath:
      type: object
      properties:
        id :
          type: string
          description: Id of the learning path
          example: 923458-3490394-934893

        slug :
          type: string
          description: slug of the learning path
          example: 923458-3490394-934893

        title:
          type: string
          description: Title of the learning path
          example: Mastering Kubernetes for Engineers
          
        level:
           $ref: "#/components/schemas/Level"
           "x-go-type-name":"Level"
          example: "introductory"
          
        description:
          type: string
          description: Description of the learning path
          example: Learn how to configure your Kubernetes clusters and manage the lifecycle of your workloads
        banner:
          type: string
          format: uri
          nullable: true
          description: Optional banner image
          example: null
        permalink:
          type: string
          format: uri
          description: Canonical URL for the learning path
          example: http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
        orgId:
          type: string
          description: Organization ID that owns this learning path
          example: layer5
        courses:
          type: array
          description: List of courses in this learning path
          items:
            x-go-type: "Course"
            $ref: '#/components/schemas/Course'

        # registration_info":
        #   $ref: "#/components/schemas/AcademyRegistration"

      required:
        - title
        - description
        - permalink
        - orgId
        - id
        - slug

    AcademyRegistration:
      type: object
      required:
        - ID
        - org_id
        - user_id
        - status
        - created_at
        - updated_at
        - content_id
        - metadata
      properties:
        ID:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/uuid"
          x-oapi-codegen-extra-tags:
            db: "id"
            json: "id"
            yaml: "id"

        org_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/uuid"
          description: ID of the organization

          x-oapi-codegen-extra-tags:
            db: "org_id"

        content_id:
          type: string
          description: ID of the course content

          x-oapi-codegen-extra-tags:
            db: "content_id"

        user_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/uuid"
          description: ID of the user (foreign key to User)

          x-oapi-codegen-extra-tags:
            db: "user_id"

        status:
          type: string
          enum:
            - registered
            - in_progress
            - completed
            - failed
            - withdrawn
          description: Status of the user's course registration
          x-oapi-codegen-extra-tags:
            db: "status"

        updated_at:
          description: When the registration was updated
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
          x-oapi-codegen-extra-tags:
            db: "updated_at"


        created_at:
          description: When the registration was created
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
          x-oapi-codegen-extra-tags:
            db: "created_at"

        deleted_at:
          x-go-type : "core.NullTime"
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/deleted_at"
          x-oapi-codegen-extra-tags:
            db: "deleted_at"

          
        metadata:
          type: object
          description: Additional metadata about the registration
          additionalProperties: true
          x-go-type: "core.Map"
          x-go-type-skip-optional-pointer: true
         
          x-oapi-codegen-extra-tags:
            db: "metadata"


    Course:
      type: object
      properties:
        title:
          type: string
          description: Title of the course
          example: Kubernetes Basics
          
        level:
           $ref: "#/components/schemas/Level"
           "x-go-type-name":"Level"
          example: "introductory"
          
        permalink:
          type: string
          format: uri
          description: URL to the course content
          example: http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
        description:
          type: string
          description: Course description
          example: Learn the basics of Kubernetes  
        weight:
          type: number
          description: Order of the course in the list
          example: eg 1 , 2
        banner:
          type: string
          format: uri
          nullable: true
          description: Optional banner image
          example: null
      required:
        - title
        - permalink

    LearningPathListResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of learning paths
          example: 7
        data:
          type: array
          items:
            x-go-type: "LearningPath"
            $ref: '#/components/schemas/LearningPath'
      required:
        - total
        - data

    
    AcademyRegistrationsListResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of learning paths
          example: 7
        data:
          type: array
          items:
            x-go-type: "AcademyRegistration"
            $ref: '#/components/schemas/AcademyRegistration'
      required:
        - total
        - data
