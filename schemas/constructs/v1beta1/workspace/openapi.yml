openapi: 3.0.0
info:
  title: Meshery Cloud
  description: Documentation for meshery Cloud REST APIs
  contact:
    email: support@layer5.io
  version: v0.6.394
servers:
  - url: https://cloud.layer5.io
    description: Meshery Cloud production server URL
  - url: https://staging-cloud.layer5.io
    description: Meshery Cloud staging server URL
  - url: http://localhost:9876
    description: Meshery Cloud development server URL (controlled via PORT environment variable)
security:
  - jwt: []
tags:
  - name: workspaces
    description: Workspaces serve as a virtual space for your team-based work, allows you to control access and more, Provide a detailed description to clarify the purpose of this workspace. Remember you can changes description of workspace after it's creations too. Learn more about workspaces [here](https://docs.meshery.io/concepts/logical/workspaces).
paths:
  /api/workspaces:
    get:
      summary: Get all workspaces
      tags:
        - workspaces
      responses:
        "200":
          description: List of workspaces
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workspacePage"
    post:
      summary: Create a workspace
      tags:
        - workspaces
      requestBody:
        $ref: "#/components/requestBodies/workspacePayload"
      responses:
        "201":
          description: Workspace created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workspace"
  /api/workspaces/{id}:
    get:
      summary: Get workspace by ID
      tags:
        - workspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Workspace details
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workspace"
    put:
      summary: Update workspace
      tags:
        - workspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/workspaceUpdatePayload"
      responses:
        "200":
          description: Workspace updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/workspace"
    delete:
      summary: Delete workspace
      tags:
        - workspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Workspace deleted successfully
components:
  securitySchemes:
    jwt:
      type: http
      scheme: Bearer
      bearerFormat: JWT
  schemas:
    workspace:
      properties:
        ID:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/general_id"
        name:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Text"
        description:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Text"
        organization_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/organization_id"
        owner:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Text"
        created_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        updated_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        deleted_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/nullTime"
    workspacesTeamsMapping:
      properties:
        ID:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/general_id"
        team_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/team_id"
        workspace_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/workspace_id"
        created_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        updated_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        deleted_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/nullTime"
    workspacesEnvironmentsMapping:
      properties:
        ID:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/general_id"
        environment_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/environment_id"
        workspace_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/workspace_id"
        created_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        updated_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        deleted_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/nullTime"
    workspacesViewsMapping:
      properties:
        ID:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/general_id"
        view_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/view_id"
        workspace_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/workspace_id"
        created_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        updated_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        deleted_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/nullTime"
    workspacesDesignsMapping:
      properties:
        ID:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/general_id"
        design_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/design_id"
        workspace_id:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/workspace_id"
        created_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        updated_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"
        deleted_at:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/nullTime"
    workspaceUpdatePayload:
      properties:
        name:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Text"
          description: Name of workspace
        description:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Text"
          description: Environment description
        organization_id:
          type: string
          description: Organization ID
          x-go-type-skip-optional-pointer: true
          x-go-name: OrganizationID
          x-oapi-codegen-extra-tags:
            json: organization_id
      required:
        - organization_id
    workspacePayload:
      properties:
        name:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Text"
          description: Provide a name that meaningfully represents this workspace. You can change the name of the workspace even after its creation.
        description:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Text"
          description: Workspaces serve as a virtual space for your team-based work, allows you to control access and more, Provide a detailed description to clarify the purpose of this workspace. Remember you can changes description of workspace after it's creations too. Learn more about workspaces [here](https://docs.meshery.io/concepts/logical/workspaces)
        organization_id:
          type: string
          description: Select an organization in which you want to create this new workspace. Keep in mind that the organization cannot be changed after creation.
          x-go-type-skip-optional-pointer: true
          x-go-name: OrganizationID
          x-oapi-codegen-extra-tags:
            json: organization_id
      required:
        - name
        - organization_id
    workspacePage:
      properties:
        page:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/number"
        page_size:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/number"
        total_count:
          $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/number"
        workspaces:
          type: array
          x-go-type-skip-optional-pointer: true
          items:
            x-go-type: Workspace
            $ref: "#/components/schemas/workspace"
  requestBodies:
    workspacePayload:
      description: Body for creating workspace
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/workspacePayload"
    workspaceUpdatePayload:
      description: Body for updating workspace
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/workspaceUpdatePayload"
# paths:
#   #designs
# /api/workspaces:
#   post:
#     tags:
#       - workspaces
#     operationId: CreateWorkspace
#     summary: Create an workspace
#     description: Creates a new workspace
#     parameters:
#       - $ref: '#/components/parameters/orgID'
#     requestBody:
#       $ref: '#/components/requestBodies/workspacePayload'
#     responses:
#       '201':
#         description: Created workspace
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspace'
#       '400':
#         $ref: '#/components/responses/400'
#       '500':
#         $ref: '#/components/responses/500'
#   get:
#     tags:
#       - workspaces
#     operationId: GetWorkspaces
#     summary: Get all workspaces
#     description: Gets all workspaces
#     parameters:
#       - $ref: '#/components/parameters/search'
#       - $ref: '#/components/parameters/order'
#       - $ref: '#/components/parameters/page'
#       - $ref: '#/components/parameters/pagesize'
#       - $ref: '#/components/parameters/filter'
#       - $ref: '#/components/parameters/orgIDQuery'
#     responses:
#       '200':
#         description: Workspaces
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacePage'
#       '401':
#         $ref: '#/components/responses/401'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}:
#   get:
#     tags:
#       - workspaces
#     operationId: GetWorkspaceByID
#     summary: Get an workspace by ID
#     description: Gets an workspace by its ID
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/orgIDQuery'
#     responses:
#       '200':
#         description: Workspace
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspace'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
#   delete:
#     tags:
#       - workspaces
#     operationId: DeleteWorkspace
#     summary: Delete an workspace
#     description: Deletes an workspace by its ID
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#     responses:
#       '204':
#         description: Workspace deleted successfully
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
#   put:
#     tags:
#       - workspaces
#     operationId: UpdateWorkspace
#     summary: Update an workspace
#     description: Updates the workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#     requestBody:
#       $ref: '#/components/requestBodies/workspaceUpdatePayload'
#     responses:
#       '200':
#         $ref: '#/components/responses/200'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/teams:
#   get:
#     tags:
#       - workspaces
#     operationId: GetTeamsOfWorkspace
#     summary: Get all teams assigned to a workspace (by default returns assigned)
#     description: Gets an Teams of a given workspace by its ID
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/search'
#       - $ref: '#/components/parameters/order'
#       - $ref: '#/components/parameters/page'
#       - $ref: '#/components/parameters/pagesize'
#       - $ref: '#/components/parameters/workspaceFilter'
#     responses:
#       '200':
#         description: Teams
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/teamsPage'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/teams/{teamId}:
#   delete:
#     tags:
#       - workspaces
#     operationId: UnassignTeamFromWorkspace
#     summary: Unassign a team from a workspace
#     description: Unassigns a team from a workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/teamId'
#     responses:
#       '200':
#         description: Workspaces teams mappings
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacesTeamsMapping'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
#   post:
#     tags:
#       - workspaces
#     operationId: AssignTeamToWorkspace
#     summary: Assign a team to a workspace
#     description: Assigns a team to a workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/teamId'
#     responses:
#       '200':
#         description: Workspaces teams mappings
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacesTeamsMapping'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/environments:
#   get:
#     tags:
#       - workspaces
#     operationId: GetEnvironmentsOfWorkspace
#     summary: Get all environments assigned to a workspace (by default returns assigned)
#     description: Gets an environments of a given workspace by its ID
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/search'
#       - $ref: '#/components/parameters/order'
#       - $ref: '#/components/parameters/page'
#       - $ref: '#/components/parameters/pagesize'
#       - $ref: '#/components/parameters/workspaceFilter'
#     responses:
#       '200':
#         description: Environment
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/environmentPage'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/environments/{environmentId}:
#   delete:
#     tags:
#       - workspaces
#     operationId: UnassignEnvironmentFromWorkspace
#     summary: Unassign a environment from a workspace
#     description: Unassigns a environment from a workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/environmentId'
#     responses:
#       '200':
#         description: Workspaces environments mappings
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacesEnvironmentsMapping'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
#   post:
#     tags:
#       - workspaces
#     operationId: AssignEnvironmentToWorkspace
#     summary: Assign a environment to a workspace
#     description: Assigns a environment to a workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/environmentId'
#     responses:
#       '200':
#         description: Workspaces environments mappings
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacesEnvironmentsMapping'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/designs/{designId}:
#   delete:
#     tags:
#       - workspaces
#     operationId: UnassignDesignFromWorkspace
#     summary: Unassign a design from a workspace
#     description: Unassign a design from a workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/designId'
#     responses:
#       '200':
#         description: Workspaces designs mappings
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacesDesignsMapping'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
#   post:
#     tags:
#       - workspaces
#     operationId: AssignDesignToWorkspace
#     summary: Assign a design to a workspace
#     description: Assigns a design to a workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/designId'
#     responses:
#       '200':
#         description: Workspaces designs mappings
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacesDesignsMapping'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/designs:
#   get:
#     tags:
#       - workspaces
#     operationId: GetDesignsOfWorkspace
#     summary: Get all designs assigned to a workspace (by default returns assigned)
#     description: Gets an designs of a given workspace by its ID
#     parameters:
#       - $ref: '#/components/parameters/search'
#       - $ref: '#/components/parameters/order'
#       - $ref: '#/components/parameters/page'
#       - $ref: '#/components/parameters/pagesize'
#       - $ref: '#/components/parameters/workspaceFilter'
#       - $ref: '#/components/parameters/workspaceId'
#     responses:
#       '200':
#         description: Design
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/mesheryDesignPage'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/views/{viewId}:
#   delete:
#     tags:
#       - workspaces
#     operationId: UnassignViewFromWorkspace
#     summary: Unassign a view from a workspace
#     description: Unassign a view from a workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/viewId'
#     responses:
#       '200':
#         description: Workspaces views mappings
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacesViewsMapping'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
#   post:
#     tags:
#       - workspaces
#     operationId: AssignViewToWorkspace
#     summary: Assign a view to a workspace
#     description: Assigns a view to a workspace
#     parameters:
#       - $ref: '#/components/parameters/workspaceId'
#       - $ref: '#/components/parameters/viewId'
#     responses:
#       '200':
#         description: Workspaces views mappings
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/workspacesViewsMapping'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/views:
#   get:
#     tags:
#       - workspaces
#     operationId: GetViewsOfWorkspace
#     summary: Get all views assigned to a workspace (by default returns assigned)
#     description: Gets views of a given workspace by its ID
#     parameters:
#       - $ref: '#/components/parameters/search'
#       - $ref: '#/components/parameters/order'
#       - $ref: '#/components/parameters/page'
#       - $ref: '#/components/parameters/pagesize'
#       - $ref: '#/components/parameters/workspaceFilter'
#       - $ref: '#/components/parameters/workspaceId'
#     responses:
#       '200':
#         description: View
#         content:
#           application/json:
#             schema:
#               $ref: '#/components/schemas/mesheryViewPage'
#       '400':
#         $ref: '#/components/responses/400'
#       '401':
#         $ref: '#/components/responses/401'
#       '404':
#         $ref: '#/components/responses/404'
#       '500':
#         $ref: '#/components/responses/500'
# /api/workspaces/{workspaceId}/events:


