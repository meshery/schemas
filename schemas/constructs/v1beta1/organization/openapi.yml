openapi: 3.0.0
info:
  title: Organization
  version: 1.0.0

paths:
  /api/identity/orgs/by-domain:
    get:
      summary: Get organization by domain
      operationId: getOrgByDomain
      parameters:
        - name: domain
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"

        '404':
          description: Organization not found

        '500':
          description: Internal server error





components:
  schemas:
    UUID:
      $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/uuid"

    NullableTime:
      $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/SqlNullTime"

    Time:
      $ref: "../../v1alpha1/core/openapi.yml#/components/schemas/Time"

    Location:
      type: object
      required:
        - svg
        - location
      properties:
        svg:
          type: string
        location:
          type: string

    Logo:
      type: object
      required:
        - desktop_view
        - mobile_view
        - dark_desktop_view
        - dark_mobile_view
      properties:
        desktop_view:
          x-go-type: "Location"
          $ref: "#/components/schemas/Location"
        mobile_view:
          x-go-type: "Location"
          $ref: "#/components/schemas/Location"
        dark_desktop_view:
          x-go-type: "Location"
          $ref: "#/components/schemas/Location"
        dark_mobile_view:
          x-go-type: "Location"
          $ref: "#/components/schemas/Location"

    Theme:
      type: object
      required:
        - id
        - logo
      properties:
        id:
          type: string
        logo:
          x-go-type: "Logo"
          $ref: "#/components/schemas/Logo"
        vars:
          type: object
          additionalProperties: true

    DashboardPrefs:
      type: object
      description: Preferences specific to dashboard behavior
      additionalProperties: true

    Preferences:
      type: object
      required:
        - theme
        - dashboard
      properties:
        theme:
          x-go-type: "Theme"
          $ref: "#/components/schemas/Theme"
        dashboard:
          x-go-type: "DashboardPrefs"
          $ref: "#/components/schemas/DashboardPrefs"

    OrgMetadata:
      type: object
      required:
        - preferences
      properties:
        preferences:
          x-go-type: "Preferences"
          $ref: "#/components/schemas/Preferences"

    Organization:
      type: object
      required:
        - id
        - name
        - country
        - region
        - description
        - owner
        - metadata
        - created_at
        - updated_at
      properties:
        id:
          $ref: "#/components/schemas/UUID"
          x-oapi-codegen-extra-tags:
            db: "id"
        name:
          type: string
          x-oapi-codegen-extra-tags:
            db: "name"
        country:
          type: string
          x-oapi-codegen-extra-tags:
            db: "country"
        region:
          type: string
          x-oapi-codegen-extra-tags:
            db: "region"
        description:
          type: string
          x-oapi-codegen-extra-tags:
            db: "description"
        owner:
          $ref: "#/components/schemas/UUID"
          x-oapi-codegen-extra-tags:
            db: "owner"
        metadata:
          x-go-type: "OrgMetadata"
          $ref: "#/components/schemas/OrgMetadata"
          x-oapi-codegen-extra-tags:
            db: "metadata"
        created_at:
          $ref: "#/components/schemas/Time"
          x-oapi-codegen-extra-tags:
            db: "created_at"
        updated_at:
          $ref: "#/components/schemas/Time"
          x-oapi-codegen-extra-tags:
            db: "updated_at"
        deleted_at:
          $ref: "#/components/schemas/NullableTime"
          x-oapi-codegen-extra-tags:
            db: "deleted_at"
        domain:
          type: string
          nullable: true
          x-oapi-codegen-extra-tags:
            db: "domain"