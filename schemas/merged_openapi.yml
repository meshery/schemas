openapi: 3.0.0
info:
  title: Meshery Cloud
  description: Documentation for Meshery Cloud REST APIs
  contact:
    email: maintainers@meshery.io
  version: v0.6.394
tags:
  - name: design_other
    x-displayName: other
  - name: model_other
    x-displayName: other
  - name: subscription_Subscriptions
    description: Operations related to subscriptions
    x-displayName: Subscriptions
  - name: subscription_Plans
    description: Operations related to plans
    x-displayName: Plans
  - name: subscription_Payment Processors
    description: Operations related to payment processors
    x-displayName: Payment Processors
  - name: subscription_subscription
    x-displayName: subscription
  - name: subscription_other
    x-displayName: other
  - name: plan_Plans
    description: Operations related to plans
    x-displayName: Plans
  - name: feature_Features
    description: Operations related to features and entitlements
    x-displayName: Features
  - name: workspace_workspaces
    description: >-
      Workspaces serve as a virtual space for your team-based work, allows you
      to control access and more, Provide a detailed description to clarify the
      purpose of this workspace. Remember you can changes description of
      workspace after it's creations too. Learn more about workspaces
      [here](https://docs.meshery.io/concepts/logical/workspaces).
    x-displayName: workspaces
  - name: environment_environments
    description: APIs for environments
    x-displayName: environments
  - name: evaluation_other
    x-displayName: other
  - name: Academy_API_Academy
    x-displayName: Academy
  - name: Academy_API_other
    x-displayName: other
  - name: invitation_Invitation
    description: Operations related to invitation
    x-displayName: Invitation
paths:
  /api/pattern/import:
    servers: []
    post:
      summary: Import Design
      operationId: ImportDesign
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              description: >-
                Choose the method you prefer to upload your  design file. Select
                'File Upload' if you have the file on your local system, or 'URL
                Import' if you have the file hosted online.
              enum:
                - file
                - url
              properties:
                file:
                  type: string
                  format: file
                  description: >-
                    Supported formats: Kubernetes Manifests, Helm Charts, Docker
                    Compose, and Meshery Designs. See [Import Designs
                    Documentation](https://docs.meshery.io/guides/configuration-management/importing-designs#import-designs-using-meshery-ui)
                    for details
                file_name:
                  type: string
                  description: The name of the pattern file being imported.
                name:
                  type: string
                  default: Untitled Design
                  description: >-
                    Provide a name for your design file. This name will help you
                    identify the file more easily. You can also change the name
                    of your design after importing it.
                url:
                  type: string
                  format: uri
                  description: >-
                    Provide the URL of the file you want to import. This should
                    be a direct URL to a single file, for example:
                    https://raw.github.com/your-design-file.yaml. Also, ensure
                    that design is in a supported format: Kubernetes Manifest,
                    Helm Chart, Docker Compose, or Meshery Design. See [Import
                    Designs
                    Documentation](https://docs.meshery.io/guides/configuration-management/importing-designs#import-designs-using-meshery-ui)
                    for details
      responses:
        '200':
          description: Successful Import
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request format
        '500':
          description: Internal server error
      tags:
        - design_other
  /api/meshmodels/register:
    servers: []
    post:
      summary: Register mesh models
      operationId: RegisterMeshmodels
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - importBody
                - uploadType
                - register
              properties:
                importBody:
                  oneOf:
                    - title: File Import
                      type: object
                      required:
                        - fileName
                        - modelFile
                      properties:
                        fileName:
                          type: string
                          description: Name of the file being uploaded.
                        modelFile:
                          type: string
                          format: file
                          description: >-
                            Supported model file formats are: .tar, .tar.gz, and
                            .tgz. See [Import Models
                            Documentation](https://docs.meshery.io/guides/configuration-management/importing-models#import-models-using-meshery-ui)
                            for details
                    - title: URL Import
                      type: object
                      required:
                        - url
                      properties:
                        url:
                          type: string
                          format: uri
                          description: >-
                            A direct URL to a single model file, for example:
                            https://raw.github.com/your-model-file.tar.
                            Supported model file formats are: .tar, .tar.gz, and
                            .tgz. \n\nFor bulk import of your model use the
                            GitHub connection or CSV files. See [Import Models
                            Documentation](https://docs.meshery.io/guides/configuration-management/importing-models#import-models-using-meshery-ui)
                            for details
                    - title: CSV Import
                      type: object
                      required:
                        - modelCsv
                        - componentCsv
                        - relationshipCsv
                      properties:
                        modelCsv:
                          type: string
                          format: binary
                          description: Upload a CSV file containing model definitions
                        componentCsv:
                          type: string
                          format: binary
                          description: Upload a CSV file containing component definitions
                        relationshipCsv:
                          type: string
                          format: binary
                          description: >-
                            Upload a CSV file containing relationship
                            definitions
                    - title: Model Create
                      type: object
                      required:
                        - model
                        - url
                      properties:
                        url:
                          type: string
                          description: URI to the source code or package of the model.
                          format: uri
                          oneOf:
                            - title: GitHub
                              type: string
                              pattern: >-
                                ^git://github\.com/[\w.-]+/[\w.-]+(/[\w.-]+/[\w/-]+)?$
                              description: >-
                                Git protocol URL for GitHub repository or
                                specific resource path
                              example: >-
                                git://github.com/cert-manager/cert-manager/master/deploy/crds
                              x-metadata:
                                uiType: url
                                validationHint: >-
                                  Enter a git protocol URL (e.g.,
                                  git://github.com/owner/repo)
                            - title: Artifact Hub
                              type: string
                              pattern: >-
                                ^https:\/\/artifacthub\.io\/packages\/(search\?ts_query_web=[\w.-]+|[\w.-]+\/[\w.-]+\/[\w.-]+)$
                              description: >-
                                Artifact Hub package URL or search query URL
                                with model name parameter
                              example: >-
                                https://artifacthub.io/packages/search?ts_query_web={model-name}
                              x-metadata:
                                uiType: url
                                validationHint: >-
                                  Enter an Artifact Hub URL (e.g.,
                                  https://artifacthub.io/packages/search?ts_query_web={meshery-operator})
                uploadType:
                  type: string
                  title: Upload method
                  enum:
                    - file
                    - urlImport
                    - csv
                    - url
                  enumDescriptions:
                    - >-
                      Upload a model file (.tar, .tar.gz, .tgz) from your local
                      system
                    - Import a model file using a direct URL to the source
                    - >-
                      Upload separate CSV files for model definitions,
                      components, and their relationships
                  description: >-
                    Choose the method you prefer to upload your model file.
                    Select 'File Import' or 'CSV Import' if you have the file on
                    your local system or 'URL Import' if you have the file
                    hosted online.
                register:
                  type: boolean
                  nullable: false
      responses:
        '200':
          description: Successful registration
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Invalid request format
        '500':
          description: Internal server error
      tags:
        - model_other
  /api/entitlement/subscriptions:
    servers:
      - url: http://localhost:8080
        description: Local development server
    get:
      x-internal:
        - cloud
      tags:
        - subscription_subscription
      description: Returns all subscriptions for the organization
      operationId: getSubscriptions
      summary: Read subscriptions
      parameters:
        - name: page
          in: query
          description: Get responses by page
          schema:
            type: string
        - name: pagesize
          in: query
          description: Get responses by pagesize
          schema:
            type: string
        - name: order
          in: query
          description: Get ordered responses
          schema:
            type: string
        - name: status
          in: query
          description: Filter subscriptions by status
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - page
                  - page_size
                  - total_count
                  - subscriptions
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total_count:
                    type: integer
                  subscriptions:
                    type: array
                    items:
                      x-go-type: Subscription
                      type: object
                      properties:
                        ID:
                          x-oapi-codegen-extra-tags:
                            db: id
                          type: string
                          format: uuid
                          description: >-
                            A Universally Unique Identifier used to uniquely
                            identify entities in Meshery. The UUID core
                            definition is used across different schemas.
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        org_id:
                          x-oapi-codegen-extra-tags:
                            db: org_id
                          type: string
                          format: uuid
                          description: >-
                            A Universally Unique Identifier used to uniquely
                            identify entities in Meshery. The UUID core
                            definition is used across different schemas.
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        plan_id:
                          x-oapi-codegen-extra-tags:
                            db: plan_id
                          type: string
                          format: uuid
                          description: >-
                            A Universally Unique Identifier used to uniquely
                            identify entities in Meshery. The UUID core
                            definition is used across different schemas.
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        plan:
                          x-go-type: plan.Plan
                          x-go-type-import:
                            path: github.com/meshery/schemas/models/v1beta1/plan
                          x-oapi-codegen-extra-tags:
                            belongs_to: plans
                            fk_id: PlanId
                            yaml: plan,omitempty
                            json: plan,omitempty
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: >-
                                A Universally Unique Identifier used to uniquely
                                identify entities in Meshery. The UUID core
                                definition is used across different schemas.
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                            name:
                              type: string
                              x-go-type: PlanName
                              description: Name of the plan
                              enum:
                                - Free
                                - Team Designer
                                - Team Operator
                                - Enterprise
                            cadence:
                              x-go-type: PlanCadence
                              type: string
                              enum:
                                - monthly
                                - yearly
                            unit:
                              x-go-type: PlanUnit
                              type: string
                              enum:
                                - user
                                - free
                            price_per_unit:
                              type: number
                              description: Price per unit of the plan
                              x-oapi-codegen-extra-tags:
                                db: price_per_unit
                            currency:
                              x-go-type: Currency
                              type: string
                              enum:
                                - usd
                          required:
                            - id
                            - name
                            - cadence
                            - unit
                            - price_per_unit
                            - price_id
                            - currency
                        quantity:
                          decscription: number of units subscribed (eg number of users)
                          type: integer
                          x-oapi-codegen-extra-tags:
                            db: quantity
                        start_date:
                          x-oapi-codegen-extra-tags:
                            db: start_date
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        end_date:
                          x-oapi-codegen-extra-tags:
                            db: end_date
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        status:
                          x-go-type: SubscriptionStatus
                          x-oapi-codegen-extra-tags:
                            db: status
                          type: string
                          description: Possible statuses of a Stripe subscription.
                          enum:
                            - incomplete
                            - incomplete_expired
                            - trialing
                            - active
                            - past_due
                            - canceled
                            - unpaid
                          x-enumDescriptions:
                            incomplete: >-
                              The subscription has been created, but the initial
                              payment is pending. It may transition to 'active'
                              or 'incomplete_expired'.
                            incomplete_expired: >-
                              The subscription was created but never activated
                              due to failed initial payment. It is now expired.
                            trialing: >-
                              The subscription is currently in a trial period
                              before the first payment is due.
                            active: >-
                              The subscription is active, and billing is
                              functioning normally.
                            past_due: >-
                              The latest payment attempt failed, but the
                              subscription remains active. Stripe may retry the
                              charge.
                            canceled: >-
                              The subscription has been canceled and will no
                              longer generate invoices.
                            unpaid: >-
                              The subscription is still technically active but
                              has unpaid invoices and is no longer generating
                              new invoices.
                        created_at:
                          x-oapi-codegen-extra-tags:
                            db: created_at
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        updated_at:
                          x-oapi-codegen-extra-tags:
                            db: updated_at
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        deleted_at:
                          x-oapi-codegen-extra-tags:
                            db: deleted_at
                          type: string
                          format: date-time
                          x-go-type: sql.NullTime
                          x-go-type-import:
                            path: database/sql
                          x-go-type-skip-optional-pointer: true
                        billing_id:
                          type: string
                          description: >-
                            Billing ID of the subscription. This is the ID of
                            the subscription in the billing system. eg Stripe
                          x-oapi-codegen-extra-tags:
                            db: billing_id
                      required:
                        - ID
                        - org_id
                        - plan_id
                        - billing_id
                        - status
                        - quantity
          description: Get subscription response
        '400':
          description: Invalid request body or request param
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Expired JWT token used or insufficient privilege
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /api/entitlement/subscriptions/{subscriptionId}/cancel:
    servers:
      - url: http://localhost:8080
        description: Local development server
    post:
      x-internal:
        - cloud
      summary: Cancel an existing subscription
      parameters:
        - name: subscriptionId
          in: path
          required: true
          description: Subscription ID
          schema:
            type: string
      responses:
        '200':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                type: object
                required:
                  - page
                  - page_size
                  - total_count
                  - subscriptions
                properties:
                  page:
                    type: integer
                  page_size:
                    type: integer
                  total_count:
                    type: integer
                  subscriptions:
                    type: array
                    items:
                      x-go-type: Subscription
                      type: object
                      properties:
                        ID:
                          x-oapi-codegen-extra-tags:
                            db: id
                          type: string
                          format: uuid
                          description: >-
                            A Universally Unique Identifier used to uniquely
                            identify entities in Meshery. The UUID core
                            definition is used across different schemas.
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        org_id:
                          x-oapi-codegen-extra-tags:
                            db: org_id
                          type: string
                          format: uuid
                          description: >-
                            A Universally Unique Identifier used to uniquely
                            identify entities in Meshery. The UUID core
                            definition is used across different schemas.
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        plan_id:
                          x-oapi-codegen-extra-tags:
                            db: plan_id
                          type: string
                          format: uuid
                          description: >-
                            A Universally Unique Identifier used to uniquely
                            identify entities in Meshery. The UUID core
                            definition is used across different schemas.
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        plan:
                          x-go-type: plan.Plan
                          x-go-type-import:
                            path: github.com/meshery/schemas/models/v1beta1/plan
                          x-oapi-codegen-extra-tags:
                            belongs_to: plans
                            fk_id: PlanId
                            yaml: plan,omitempty
                            json: plan,omitempty
                          type: object
                          properties:
                            id:
                              type: string
                              format: uuid
                              description: >-
                                A Universally Unique Identifier used to uniquely
                                identify entities in Meshery. The UUID core
                                definition is used across different schemas.
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                            name:
                              type: string
                              x-go-type: PlanName
                              description: Name of the plan
                              enum:
                                - Free
                                - Team Designer
                                - Team Operator
                                - Enterprise
                            cadence:
                              x-go-type: PlanCadence
                              type: string
                              enum:
                                - monthly
                                - yearly
                            unit:
                              x-go-type: PlanUnit
                              type: string
                              enum:
                                - user
                                - free
                            price_per_unit:
                              type: number
                              description: Price per unit of the plan
                              x-oapi-codegen-extra-tags:
                                db: price_per_unit
                            currency:
                              x-go-type: Currency
                              type: string
                              enum:
                                - usd
                          required:
                            - id
                            - name
                            - cadence
                            - unit
                            - price_per_unit
                            - price_id
                            - currency
                        quantity:
                          decscription: number of units subscribed (eg number of users)
                          type: integer
                          x-oapi-codegen-extra-tags:
                            db: quantity
                        start_date:
                          x-oapi-codegen-extra-tags:
                            db: start_date
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        end_date:
                          x-oapi-codegen-extra-tags:
                            db: end_date
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        status:
                          x-go-type: SubscriptionStatus
                          x-oapi-codegen-extra-tags:
                            db: status
                          type: string
                          description: Possible statuses of a Stripe subscription.
                          enum:
                            - incomplete
                            - incomplete_expired
                            - trialing
                            - active
                            - past_due
                            - canceled
                            - unpaid
                          x-enumDescriptions:
                            incomplete: >-
                              The subscription has been created, but the initial
                              payment is pending. It may transition to 'active'
                              or 'incomplete_expired'.
                            incomplete_expired: >-
                              The subscription was created but never activated
                              due to failed initial payment. It is now expired.
                            trialing: >-
                              The subscription is currently in a trial period
                              before the first payment is due.
                            active: >-
                              The subscription is active, and billing is
                              functioning normally.
                            past_due: >-
                              The latest payment attempt failed, but the
                              subscription remains active. Stripe may retry the
                              charge.
                            canceled: >-
                              The subscription has been canceled and will no
                              longer generate invoices.
                            unpaid: >-
                              The subscription is still technically active but
                              has unpaid invoices and is no longer generating
                              new invoices.
                        created_at:
                          x-oapi-codegen-extra-tags:
                            db: created_at
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        updated_at:
                          x-oapi-codegen-extra-tags:
                            db: updated_at
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        deleted_at:
                          x-oapi-codegen-extra-tags:
                            db: deleted_at
                          type: string
                          format: date-time
                          x-go-type: sql.NullTime
                          x-go-type-import:
                            path: database/sql
                          x-go-type-skip-optional-pointer: true
                        billing_id:
                          type: string
                          description: >-
                            Billing ID of the subscription. This is the ID of
                            the subscription in the billing system. eg Stripe
                          x-oapi-codegen-extra-tags:
                            db: billing_id
                      required:
                        - ID
                        - org_id
                        - plan_id
                        - billing_id
                        - status
                        - quantity
        '400':
          description: Invalid request
        '500':
          description: Internal server error
      tags:
        - subscription_other
  /api/entitlement/subscriptions/create:
    servers:
      - url: http://localhost:8080
        description: Local development server
    post:
      x-internal:
        - cloud
      summary: Create a new subscription for an organization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                org_id:
                  type: string
                  description: Organization ID
                plan_id:
                  type: string
                  description: Price ID from the payment processor
                user_count:
                  type: integer
                  description: Number of users in the organization
                email:
                  type: string
                  format: email
                  description: Email of the customer
                payment_processor:
                  type: string
                  enum:
                    - stripe
                    - paypal
                    - braintree
                  description: Supported payment processors
      responses:
        '200':
          description: Subscription created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  subscription_id:
                    type: string
                  clientSecret:
                    type: string
        '400':
          description: Invalid request
        '500':
          description: Internal server error
      tags:
        - subscription_other
  /api/entitlement/subscriptions/webhooks:
    servers:
      - url: http://localhost:8080
        description: Local development server
    post:
      x-internal:
        - cloud
      summary: Handle webhook events from payment processors
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: Payload for webhook events from payment processors
      responses:
        '200':
          description: Webhook processed successfully
        '400':
          description: Invalid webhook event
      tags:
        - subscription_other
  /api/entitlement/plans:
    servers: []
    get:
      x-internal:
        - cloud
      operationId: getPlans
      tags:
        - plan_Plans
      summary: Get all plans supported by the system
      responses:
        '200':
          description: Plans fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      format: uuid
                      description: >-
                        A Universally Unique Identifier used to uniquely
                        identify entities in Meshery. The UUID core definition
                        is used across different schemas.
                      x-go-type: uuid.UUID
                      x-go-type-import:
                        path: github.com/gofrs/uuid
                    name:
                      type: string
                      x-go-type: PlanName
                      description: Name of the plan
                      enum:
                        - Free
                        - Team Designer
                        - Team Operator
                        - Enterprise
                    cadence:
                      x-go-type: PlanCadence
                      type: string
                      enum:
                        - monthly
                        - yearly
                    unit:
                      x-go-type: PlanUnit
                      type: string
                      enum:
                        - user
                        - free
                    price_per_unit:
                      type: number
                      description: Price per unit of the plan
                      x-oapi-codegen-extra-tags:
                        db: price_per_unit
                    currency:
                      x-go-type: Currency
                      type: string
                      enum:
                        - usd
                  required:
                    - id
                    - name
                    - cadence
                    - unit
                    - price_per_unit
                    - price_id
                    - currency
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /api/entitlement/features:
    servers: []
    get:
      x-internal:
        - cloud
      operationId: getFeatures
      tags:
        - feature_Features
      summary: Get all features associated with plans
      responses:
        '200':
          description: Features fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  x-go-type: Feature
                  type: object
                  required:
                    - id
                    - plan_id
                    - quantity
                    - feature
                  properties:
                    id:
                      x-oapi-codegen-extra-tags:
                        db: id
                      type: string
                      format: uuid
                      description: >-
                        A Universally Unique Identifier used to uniquely
                        identify entities in Meshery. The UUID core definition
                        is used across different schemas.
                      x-go-type: uuid.UUID
                      x-go-type-import:
                        path: github.com/gofrs/uuid
                    plan_id:
                      x-oapi-codegen-extra-tags:
                        db: plan_id
                      type: string
                      format: uuid
                      description: >-
                        A Universally Unique Identifier used to uniquely
                        identify entities in Meshery. The UUID core definition
                        is used across different schemas.
                      x-go-type: uuid.UUID
                      x-go-type-import:
                        path: github.com/gofrs/uuid
                    plan:
                      x-go-type: plan.Plan
                      x-go-type-import:
                        path: github.com/meshery/schemas/models/v1beta1/plan
                      x-oapi-codegen-extra-tags:
                        belongs_to: plans
                        fk_id: PlanId
                        yaml: plan,omitempty
                        json: plan,omitempty
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: >-
                            A Universally Unique Identifier used to uniquely
                            identify entities in Meshery. The UUID core
                            definition is used across different schemas.
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        name:
                          type: string
                          x-go-type: PlanName
                          description: Name of the plan
                          enum:
                            - Free
                            - Team Designer
                            - Team Operator
                            - Enterprise
                        cadence:
                          x-go-type: PlanCadence
                          type: string
                          enum:
                            - monthly
                            - yearly
                        unit:
                          x-go-type: PlanUnit
                          type: string
                          enum:
                            - user
                            - free
                        price_per_unit:
                          type: number
                          description: Price per unit of the plan
                          x-oapi-codegen-extra-tags:
                            db: price_per_unit
                        currency:
                          x-go-type: Currency
                          type: string
                          enum:
                            - usd
                      required:
                        - id
                        - name
                        - cadence
                        - unit
                        - price_per_unit
                        - price_id
                        - currency
                    name:
                      x-go-type: FeatureName
                      x-oapi-codegen-extra-tags:
                        db: name
                      type: string
                      enum:
                        - ComponentsInDesign
                        - RelationshipsInDesign
                        - DesignsInWorkspace
                        - WorkspacesInOrganization
                        - ImageSizeInDesign
                        - SizePerDesign
                      description: Enumeration of possible feature types
                    quantity:
                      type: number
                      description: >-
                        Quantity of the feature allowed, use 9999999999 for
                        unlimited
                      x-oapi-codegen-extra-tags:
                        db: quantity
                    created_at:
                      x-oapi-codegen-extra-tags:
                        db: created_at
                      type: string
                      format: date-time
                      x-go-type-skip-optional-pointer: true
                    updated_at:
                      x-oapi-codegen-extra-tags:
                        db: updated_at
                      type: string
                      format: date-time
                      x-go-type-skip-optional-pointer: true
                  additionalProperties: false
        '400':
          description: Invalid request body or request param
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Expired JWT token used or insufficient privilege
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /api/entitlement/subscriptions/organizations/{organizationId}/features:
    servers: []
    get:
      x-internal:
        - cloud
      operationId: getFeaturesByOrganization
      tags:
        - feature_Features
      summary: Get all features associated with plans
      parameters:
        - name: organizationId
          in: path
          description: The ID of the organization
          required: true
          schema:
            type: string
            format: uuid
            x-go-type: uuid.UUID
            x-go-type-import:
              path: github.com/gofrs/uuid
      responses:
        '200':
          description: Features fetched successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  x-go-type: Feature
                  type: object
                  required:
                    - id
                    - plan_id
                    - quantity
                    - feature
                  properties:
                    id:
                      x-oapi-codegen-extra-tags:
                        db: id
                      type: string
                      format: uuid
                      description: >-
                        A Universally Unique Identifier used to uniquely
                        identify entities in Meshery. The UUID core definition
                        is used across different schemas.
                      x-go-type: uuid.UUID
                      x-go-type-import:
                        path: github.com/gofrs/uuid
                    plan_id:
                      x-oapi-codegen-extra-tags:
                        db: plan_id
                      type: string
                      format: uuid
                      description: >-
                        A Universally Unique Identifier used to uniquely
                        identify entities in Meshery. The UUID core definition
                        is used across different schemas.
                      x-go-type: uuid.UUID
                      x-go-type-import:
                        path: github.com/gofrs/uuid
                    plan:
                      x-go-type: plan.Plan
                      x-go-type-import:
                        path: github.com/meshery/schemas/models/v1beta1/plan
                      x-oapi-codegen-extra-tags:
                        belongs_to: plans
                        fk_id: PlanId
                        yaml: plan,omitempty
                        json: plan,omitempty
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          description: >-
                            A Universally Unique Identifier used to uniquely
                            identify entities in Meshery. The UUID core
                            definition is used across different schemas.
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        name:
                          type: string
                          x-go-type: PlanName
                          description: Name of the plan
                          enum:
                            - Free
                            - Team Designer
                            - Team Operator
                            - Enterprise
                        cadence:
                          x-go-type: PlanCadence
                          type: string
                          enum:
                            - monthly
                            - yearly
                        unit:
                          x-go-type: PlanUnit
                          type: string
                          enum:
                            - user
                            - free
                        price_per_unit:
                          type: number
                          description: Price per unit of the plan
                          x-oapi-codegen-extra-tags:
                            db: price_per_unit
                        currency:
                          x-go-type: Currency
                          type: string
                          enum:
                            - usd
                      required:
                        - id
                        - name
                        - cadence
                        - unit
                        - price_per_unit
                        - price_id
                        - currency
                    name:
                      x-go-type: FeatureName
                      x-oapi-codegen-extra-tags:
                        db: name
                      type: string
                      enum:
                        - ComponentsInDesign
                        - RelationshipsInDesign
                        - DesignsInWorkspace
                        - WorkspacesInOrganization
                        - ImageSizeInDesign
                        - SizePerDesign
                      description: Enumeration of possible feature types
                    quantity:
                      type: number
                      description: >-
                        Quantity of the feature allowed, use 9999999999 for
                        unlimited
                      x-oapi-codegen-extra-tags:
                        db: quantity
                    created_at:
                      x-oapi-codegen-extra-tags:
                        db: created_at
                      type: string
                      format: date-time
                      x-go-type-skip-optional-pointer: true
                    updated_at:
                      x-oapi-codegen-extra-tags:
                        db: updated_at
                      type: string
                      format: date-time
                      x-go-type-skip-optional-pointer: true
                  additionalProperties: false
        '400':
          description: Invalid request body or request param
          content:
            text/plain:
              schema:
                type: string
        '401':
          description: Expired JWT token used or insufficient privilege
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
  /api/workspaces:
    servers:
      - url: https://cloud.meshery.io
        description: Meshery Cloud production server URL
      - url: https://staging-cloud.meshery.io
        description: Meshery Cloud staging server URL
      - url: http://localhost:9876
        description: >-
          Meshery Cloud development server URL (controlled via PORT environment
          variable)
    get:
      summary: Get all workspaces
      tags:
        - workspace_workspaces
      responses:
        '200':
          description: List of workspaces
          content:
            application/json:
              schema:
                properties:
                  page:
                    type: integer
                    x-go-type-skip-optional-pointer: true
                  page_size:
                    type: integer
                    x-go-type-skip-optional-pointer: true
                  total_count:
                    type: integer
                    x-go-type-skip-optional-pointer: true
                  workspaces:
                    type: array
                    x-go-type-skip-optional-pointer: true
                    items:
                      x-go-type: Workspace
                      properties:
                        ID:
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                          x-oapi-codegen-extra-tags:
                            db: id
                            json: id
                          x-go-type-name: GeneralId
                          x-go-type-skip-optional-pointer: true
                        name:
                          type: string
                          x-go-type-skip-optional-pointer: true
                        description:
                          type: string
                          x-go-type-skip-optional-pointer: true
                        organization_id:
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                          x-oapi-codegen-extra-tags:
                            db: org_id
                            json: org_id
                          x-go-type-name: OrganizationId
                          x-go-type-skip-optional-pointer: true
                        owner:
                          type: string
                          x-go-type-skip-optional-pointer: true
                        created_at:
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        updated_at:
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        deleted_at:
                          description: SQL null Timestamp to handle null values of time.
                          x-go-type: sql.NullTime
                          type: string
                          x-go-type-skip-optional-pointer: true
      security:
        - workspace_jwt: []
    post:
      summary: Create a workspace
      tags:
        - workspace_workspaces
      requestBody:
        description: Body for creating workspace
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  x-go-type-skip-optional-pointer: true
                  description: >-
                    Provide a name that meaningfully represents this workspace.
                    You can change the name of the workspace even after its
                    creation.
                description:
                  type: string
                  x-go-type-skip-optional-pointer: true
                  description: >-
                    Workspaces serve as a virtual space for your team-based
                    work, allows you to control access and more, Provide a
                    detailed description to clarify the purpose of this
                    workspace. Remember you can changes description of workspace
                    after it's creations too. Learn more about workspaces
                    [here](https://docs.meshery.io/concepts/logical/workspaces)
                organization_id:
                  type: string
                  description: >-
                    Select an organization in which you want to create this new
                    workspace. Keep in mind that the organization cannot be
                    changed after creation.
                  x-go-type-skip-optional-pointer: true
                  x-go-name: OrganizationID
                  x-oapi-codegen-extra-tags:
                    json: organization_id
              required:
                - name
                - organization_id
      responses:
        '201':
          description: Workspace created successfully
          content:
            application/json:
              schema:
                properties:
                  ID:
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      db: id
                      json: id
                    x-go-type-name: GeneralId
                    x-go-type-skip-optional-pointer: true
                  name:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  description:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  organization_id:
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      db: org_id
                      json: org_id
                    x-go-type-name: OrganizationId
                    x-go-type-skip-optional-pointer: true
                  owner:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  created_at:
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  updated_at:
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deleted_at:
                    description: SQL null Timestamp to handle null values of time.
                    x-go-type: sql.NullTime
                    type: string
                    x-go-type-skip-optional-pointer: true
      security:
        - workspace_jwt: []
  /api/workspaces/{id}:
    servers:
      - url: https://cloud.meshery.io
        description: Meshery Cloud production server URL
      - url: https://staging-cloud.meshery.io
        description: Meshery Cloud staging server URL
      - url: http://localhost:9876
        description: >-
          Meshery Cloud development server URL (controlled via PORT environment
          variable)
    get:
      summary: Get workspace by ID
      tags:
        - workspace_workspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workspace details
          content:
            application/json:
              schema:
                properties:
                  ID:
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      db: id
                      json: id
                    x-go-type-name: GeneralId
                    x-go-type-skip-optional-pointer: true
                  name:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  description:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  organization_id:
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      db: org_id
                      json: org_id
                    x-go-type-name: OrganizationId
                    x-go-type-skip-optional-pointer: true
                  owner:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  created_at:
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  updated_at:
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deleted_at:
                    description: SQL null Timestamp to handle null values of time.
                    x-go-type: sql.NullTime
                    type: string
                    x-go-type-skip-optional-pointer: true
      security:
        - workspace_jwt: []
    put:
      summary: Update workspace
      tags:
        - workspace_workspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Body for updating workspace
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  x-go-type-skip-optional-pointer: true
                  description: Name of workspace
                description:
                  type: string
                  x-go-type-skip-optional-pointer: true
                  description: Environment description
                organization_id:
                  type: string
                  description: Organization ID
                  x-go-type-skip-optional-pointer: true
                  x-go-name: OrganizationID
                  x-oapi-codegen-extra-tags:
                    json: organization_id
              required:
                - organization_id
      responses:
        '200':
          description: Workspace updated successfully
          content:
            application/json:
              schema:
                properties:
                  ID:
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      db: id
                      json: id
                    x-go-type-name: GeneralId
                    x-go-type-skip-optional-pointer: true
                  name:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  description:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  organization_id:
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      db: org_id
                      json: org_id
                    x-go-type-name: OrganizationId
                    x-go-type-skip-optional-pointer: true
                  owner:
                    type: string
                    x-go-type-skip-optional-pointer: true
                  created_at:
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  updated_at:
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deleted_at:
                    description: SQL null Timestamp to handle null values of time.
                    x-go-type: sql.NullTime
                    type: string
                    x-go-type-skip-optional-pointer: true
      security:
        - workspace_jwt: []
    delete:
      summary: Delete workspace
      tags:
        - workspace_workspaces
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Workspace deleted successfully
      security:
        - workspace_jwt: []
  /api/environments:
    servers:
      - url: https://cloud.meshery.io
        description: Meshery Cloud production server URL
      - url: https://staging-cloud.meshery.io
        description: Meshery Cloud staging server URL
      - url: http://localhost:9876
        description: >-
          Meshery Cloud development server URL (controlled via PORT environment
          variable)
    post:
      tags:
        - environment_environments
      operationId: CreateEnvironment
      summary: Create an environment
      description: Creates a new environment
      requestBody:
        description: Body for creating environment
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  description: >-
                    An environment is a collection of resources. Provide a name
                    that meaningfully represents these resources. You can change
                    the name of the environment even after its creation.
                  type: string
                  x-go-type-skip-optional-pointer: true
                description:
                  description: >-
                    An environment is a collection of resources, such as
                    connections & credentail. Provide a detailed description to
                    clarify the purpose of this environment and the types of
                    resources it encompasses. You can modify the description at
                    any Time. Learn more about environments
                    [here](https://docs.meshery.io/concepts/logical/environments).
                  type: string
                  x-go-type-skip-optional-pointer: true
                OrganizationID:
                  type: string
                  description: >-
                    Select an organization in which you want to create this new
                    environment. Keep in mind that the organization cannot be
                    changed after creation.
                  x-go-type-skip-optional-pointer: true
                  x-go-name: OrgId
                  x-oapi-codegen-extra-tags:
                    json: organization_id
              required:
                - name
                - organizationID
      responses:
        '201':
          description: Created environment
          content:
            application/json:
              schema:
                $id: https://schemas.meshery.io/environment.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Meshery Environments allow you to logically group related
                  Connections and their associated Credentials.. Learn more at
                  https://docs.meshery.io/concepts/logical/environments
                additionalProperties: false
                type: object
                required:
                  - id
                  - name
                  - description
                  - organization_id
                properties:
                  id:
                    description: ID
                    x-order: 1
                    x-go-name: ID
                    x-oapi-codegen-extra-tags:
                      db: id
                      yaml: id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  name:
                    x-oapi-codegen-extra-tags:
                      db: name
                      yaml: name
                    x-order: 2
                    type: string
                    description: Environment name
                  description:
                    x-oapi-codegen-extra-tags:
                      db: description
                      yaml: description
                    x-order: 3
                    type: string
                    description: Environment description
                  organization_id:
                    x-go-name: OrganizationID
                    x-oapi-codegen-extra-tags:
                      db: organization_id
                      yaml: organization_id
                    x-order: 4
                    description: Environment organization ID
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  owner:
                    x-oapi-codegen-extra-tags:
                      db: owner
                      yaml: owner
                    x-order: 5
                    description: Environment owner
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  created_at:
                    x-oapi-codegen-extra-tags:
                      db: created_at
                      yaml: created_at
                    x-order: 6
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  metadata:
                    x-oapi-codegen-extra-tags:
                      db: metadata
                      yaml: metadata
                    x-order: 7
                    x-go-type: core.Map
                    x-go-type-skip-optional-pointer: true
                    type: object
                  updated_at:
                    x-oapi-codegen-extra-tags:
                      db: updated_at
                      yaml: updated_at
                    x-order: 8
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deleted_at:
                    x-oapi-codegen-extra-tags:
                      db: deleted_at
                      yaml: deleted_at
                    x-go-type: core.NullTime
                    x-go-import: database/sql
                    x-order: 9
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
        '400':
          description: Invalid request body or request param
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
      security:
        - environment_jwt: []
    get:
      tags:
        - environment_environments
      operationId: GetEnvironments
      summary: Get all environments
      description: Gets all environments
      parameters:
        - name: search
          in: query
          description: Get responses that match search param value
          schema:
            type: string
        - name: order
          in: query
          description: Get ordered responses
          schema:
            type: string
        - name: page
          in: query
          description: Get responses by page
          schema:
            type: string
        - name: pagesize
          in: query
          description: Get responses by pagesize
          schema:
            type: string
        - name: orgID
          in: query
          description: User's organization ID
          schema:
            type: string
          required: true
      responses:
        '200':
          description: Environments
          content:
            application/json:
              schema:
                properties:
                  page:
                    type: integer
                    x-go-type-skip-optional-pointer: true
                  page_size:
                    type: integer
                    x-go-type-skip-optional-pointer: true
                  total_count:
                    type: integer
                    x-go-type-skip-optional-pointer: true
                  environments:
                    type: array
                    x-go-type-skip-optional-pointer: true
                    items:
                      x-go-type: Environment
                      $id: https://schemas.meshery.io/environment.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Meshery Environments allow you to logically group
                        related Connections and their associated Credentials..
                        Learn more at
                        https://docs.meshery.io/concepts/logical/environments
                      additionalProperties: false
                      type: object
                      required:
                        - id
                        - name
                        - description
                        - organization_id
                      properties:
                        id:
                          description: ID
                          x-order: 1
                          x-go-name: ID
                          x-oapi-codegen-extra-tags:
                            db: id
                            yaml: id
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                          default: 00000000-0000-0000-0000-000000000000
                        name:
                          x-oapi-codegen-extra-tags:
                            db: name
                            yaml: name
                          x-order: 2
                          type: string
                          description: Environment name
                        description:
                          x-oapi-codegen-extra-tags:
                            db: description
                            yaml: description
                          x-order: 3
                          type: string
                          description: Environment description
                        organization_id:
                          x-go-name: OrganizationID
                          x-oapi-codegen-extra-tags:
                            db: organization_id
                            yaml: organization_id
                          x-order: 4
                          description: Environment organization ID
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                          default: 00000000-0000-0000-0000-000000000000
                        owner:
                          x-oapi-codegen-extra-tags:
                            db: owner
                            yaml: owner
                          x-order: 5
                          description: Environment owner
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                          default: 00000000-0000-0000-0000-000000000000
                        created_at:
                          x-oapi-codegen-extra-tags:
                            db: created_at
                            yaml: created_at
                          x-order: 6
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        metadata:
                          x-oapi-codegen-extra-tags:
                            db: metadata
                            yaml: metadata
                          x-order: 7
                          x-go-type: core.Map
                          x-go-type-skip-optional-pointer: true
                          type: object
                        updated_at:
                          x-oapi-codegen-extra-tags:
                            db: updated_at
                            yaml: updated_at
                          x-order: 8
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
                        deleted_at:
                          x-oapi-codegen-extra-tags:
                            db: deleted_at
                            yaml: deleted_at
                          x-go-type: core.NullTime
                          x-go-import: database/sql
                          x-order: 9
                          type: string
                          format: date-time
                          x-go-type-skip-optional-pointer: true
        '401':
          description: Expired JWT token used or insufficient privilege
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
      security:
        - environment_jwt: []
  /evaluate:
    servers: []
    post:
      x-internal:
        - meshery
      summary: Evaluate relationships in a design
      description: >-
        Performs relationship evaluation on a given design, applying policies
        and updating components and relationships as needed.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - design
              properties:
                design:
                  x-go-type: pattern.PatternFile
                  x-go-type-import:
                    path: github.com/meshery/schemas/models/v1beta1/pattern
                  $schema: http://json-schema.org/draft-07/schema#
                  title: Design Schema
                  description: >-
                    Designs are your primary tool for collaborative authorship
                    of your infrastructure, workflow, and processes.
                  type: object
                  properties:
                    id:
                      x-order: 1
                      type: string
                      format: uuid
                      description: >-
                        A Universally Unique Identifier used to uniquely
                        identify entites in Meshery. The UUID core defintion is
                        used across different schemas.
                      x-go-type: uuid.UUID
                      x-go-type-import:
                        path: github.com/gofrs/uuid
                      default: 00000000-0000-0000-0000-000000000000
                    name:
                      type: string
                      description: >-
                        Name of the design; a descriptive, but concise title for
                        the design document.
                      x-order: 2
                    schemaVersion:
                      description: >-
                        Specifies the version of the schema to which the design
                        conforms.
                      x-order: 3
                      type: string
                      minLength: 2
                      maxLength: 100
                      pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                      example:
                        - v1
                        - v1alpha1
                        - v2beta3
                        - v1.custom-suffix
                    version:
                      default: v0.0.1
                      x-order: 4
                      description: >-
                        Revision of the design as expressed by an
                        auto-incremented, SemVer-compliant version number. May
                        be manually set by a user or third-party system, but
                        will always be required to be of version number higher
                        than the previously defined version number.
                      minLength: 1
                      maxLength: 50
                      type: string
                      pattern: >-
                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    metadata:
                      type: object
                      x-order: 5
                      additionalProperties: true
                      properties:
                        resolvedAliases:
                          description: Map of resolved aliases present in the design
                          type: object
                          x-go-type: map[string]core.ResolvedAlias
                          x-go-type-import:
                            path: github.com/meshery/schemas/models/v1alpha1/core
                          additionalProperties:
                            description: >-
                              An resolved alias is an component that acts as an
                              ref/pointer to a field in another component,
                              resolvedAlias are aware of there immediate parents
                              and completely resolved parents also
                            allOf:
                              - description: >-
                                  An alias is an component that acts as an
                                  ref/pointer to a field in another component,
                                  nonResolvedAlias are not aware of there
                                  immediate parents
                                type: object
                                properties:
                                  relationship_id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entities in Meshery. The
                                      UUID core definition is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                  alias_component_id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entities in Meshery. The
                                      UUID core definition is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                  immediate_parent_id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entities in Meshery. The
                                      UUID core definition is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                  immediate_ref_field_path:
                                    type: array
                                    items:
                                      type: string
                                required:
                                  - relationship_id
                                  - alias_component_id
                                  - immediate_parent_id
                                  - immediate_ref_field_path
                              - type: object
                                properties:
                                  resolved_parent_id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entities in Meshery. The
                                      UUID core definition is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                  resolved_ref_field_path:
                                    type: array
                                    items:
                                      type: string
                                required:
                                  - resolved_parent_id
                                  - resolved_ref_field_path
                    components:
                      description: A list of one or more component declarations.
                      minItems: 0
                      x-order: 6
                      type: array
                      items:
                        x-go-type: '*component.ComponentDefinition'
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1beta1/component
                        $id: https://schemas.meshery.io/component.json
                        $schema: http://json-schema.org/draft-07/schema#
                        description: >-
                          Components are reusable building blocks for depicting
                          capabilities defined within models. Learn more at
                          https://docs.meshery.io/concepts/components
                        additionalProperties: false
                        type: object
                        properties:
                          id:
                            description: >-
                              Uniquely identifies the entity (i.e. component) as
                              defined in a declaration (i.e. design).
                            x-order: 1
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          schemaVersion:
                            x-order: 2
                            description: >-
                              Specifies the version of the schema to which the
                              component definition conforms.
                            x-oapi-codegen-extra-tags:
                              yaml: schemaVersion
                              json: schemaVersion
                            default: components.meshery.io/v1beta1
                            type: string
                            minLength: 2
                            maxLength: 100
                            pattern: >-
                              ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                            example:
                              - v1
                              - v1alpha1
                              - v2beta3
                              - v1.custom-suffix
                          version:
                            x-order: 3
                            description: Version of the component definition.
                            minLength: 1
                            maxLength: 50
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            type: string
                            pattern: >-
                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                            default: v0.0.1
                          displayName:
                            x-order: 4
                            description: Name of the component in human-readible format.
                            x-oapi-codegen-extra-tags:
                              yaml: displayName
                              json: displayName
                            type: string
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          description:
                            x-order: 5
                            type: string
                            description: >-
                              A written representation of the purpose and
                              characteristics of the component.
                            x-oapi-codegen-extra-tags:
                              yaml: description
                              json: description
                          format:
                            x-order: 6
                            type: string
                            enum:
                              - JSON
                              - CUE
                            default: JSON
                            description: >-
                              Format specifies the format used in the
                              `component.schema` field. JSON is the default.
                            x-oapi-codegen-extra-tags:
                              yaml: format
                              json: format
                          model:
                            x-go-type: model.ModelDefinition
                            x-go-type-import:
                              path: github.com/meshery/schemas/models/v1beta1/model
                            x-order: 7
                            description: >-
                              Reference to the specific registered model to
                              which the component belongs and from which model
                              version, category, and other properties may be
                              referenced. Learn more at
                              https://docs.meshery.io/concepts/models
                            x-oapi-codegen-extra-tags:
                              gorm: foreignKey:ModelId;references:Id
                            $id: https://schemas.meshery.io/model.json
                            $schema: http://json-schema.org/draft-07/schema#
                            additionalProperties: false
                            type: object
                            properties:
                              id:
                                description: >-
                                  Uniquely identifies the entity (i.e.
                                  component) as defined in a declaration (i.e.
                                  design).
                                x-order: 1
                                x-oapi-codegen-extra-tags:
                                  yaml: id
                                  json: id
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                default: 00000000-0000-0000-0000-000000000000
                              schemaVersion:
                                description: >-
                                  Specifies the version of the schema used for
                                  the definition.
                                x-order: 2
                                x-oapi-codegen-extra-tags:
                                  yaml: schemaVersion
                                  json: schemaVersion
                                default: models.meshery.io/v1beta1
                                type: string
                                minLength: 2
                                maxLength: 100
                                pattern: >-
                                  ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                example:
                                  - v1
                                  - v1alpha1
                                  - v2beta3
                                  - v1.custom-suffix
                              version:
                                description: Version of the model definition.
                                type: string
                                x-order: 3
                                x-oapi-codegen-extra-tags:
                                  yaml: version
                                  json: version
                                minLength: 5
                                maxLength: 100
                                pattern: >-
                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                default: v0.0.1
                              name:
                                type: string
                                description: >-
                                  The unique name for the model within the scope
                                  of a registrant.
                                helperText: >-
                                  Model name should be in lowercase with
                                  hyphens, not whitespaces.
                                pattern: ^[a-z0-9-]+$
                                examples:
                                  - cert-manager
                                x-order: 4
                                x-oapi-codegen-extra-tags:
                                  yaml: name
                                  json: name
                                default: untitled-model
                              displayName:
                                description: Human-readable name for the model.
                                helperText: >-
                                  Model display name may include letters,
                                  numbers, and spaces. Special characters are
                                  not allowed.
                                minLength: 1
                                maxLength: 100
                                type: string
                                pattern: ^[a-zA-Z0-9 ]+$
                                examples:
                                  - Cert Manager
                                x-order: 5
                                x-oapi-codegen-extra-tags:
                                  yaml: displayName
                                  json: displayName
                                default: Untitled Model
                              description:
                                type: string
                                default: A new Meshery model.
                                description: Description of the model.
                                minLength: 1
                                maxLength: 1000
                                x-order: 6
                                x-oapi-codegen-extra-tags:
                                  yaml: description,omitempty
                                  json: description,omitempty
                              status:
                                type: string
                                description: >-
                                  Status of model, including:

                                  - duplicate: this component is a duplicate of
                                  another. The component that is to be the
                                  canonical reference and that is duplicated by
                                  other components should not be assigned the
                                  'duplicate' status.

                                  - maintenance: model is unavailable for a
                                  period of time.

                                  - enabled: model is available for use for all
                                  users of this Meshery Server.

                                  - ignored: model is unavailable for use for
                                  all users of this Meshery Server.
                                enum:
                                  - ignored
                                  - enabled
                                  - duplicate
                                x-order: 7
                                x-oapi-codegen-extra-tags:
                                  yaml: status
                                  json: status
                                default: enabled
                              registrant:
                                x-oapi-codegen-extra-tags:
                                  yaml: registrant
                                  json: registrant
                                  gorm: foreignKey:RegistrantId;references:ID
                                x-order: 8
                                x-go-type: connection.Connection
                                x-go-type-import:
                                  path: >-
                                    github.com/meshery/schemas/models/v1beta1/connection
                                $id: https://schemas.meshery.io/component.json
                                $schema: http://json-schema.org/draft-07/schema#
                                description: >-
                                  Meshery Connections are managed and unmanaged
                                  resources that either through discovery or
                                  manual entry are tracked by Meshery. Learn
                                  more at
                                  https://docs.meshery.io/concepts/logical/connections
                                additionalProperties: false
                                type: object
                                required:
                                  - id
                                  - schemaVersion
                                  - name
                                  - type
                                  - sub_type
                                  - kind
                                  - status
                                properties:
                                  id:
                                    description: ID
                                    x-order: 1
                                    x-go-name: ID
                                    x-oapi-codegen-extra-tags:
                                      db: id
                                      yaml: id
                                    type: string
                                    format: uuid
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    default: 00000000-0000-0000-0000-000000000000
                                  name:
                                    x-oapi-codegen-extra-tags:
                                      db: name
                                      yaml: name
                                    x-order: 2
                                    type: string
                                    description: Connection Name
                                  credential_id:
                                    x-go-name: CredentialID
                                    x-oapi-codegen-extra-tags:
                                      db: credential_id
                                      yaml: credential_id
                                    x-order: 3
                                    description: Credential ID
                                    type: string
                                    format: uuid
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    default: 00000000-0000-0000-0000-000000000000
                                  type:
                                    x-oapi-codegen-extra-tags:
                                      db: type
                                      yaml: type
                                    x-order: 4
                                    type: string
                                    description: Connection Type
                                  sub_type:
                                    x-oapi-codegen-extra-tags:
                                      db: sub_type
                                      yaml: sub_type
                                    x-order: 5
                                    type: string
                                    description: Connection Subtype
                                  kind:
                                    x-oapi-codegen-extra-tags:
                                      db: kind
                                      yaml: kind
                                    x-order: 6
                                    type: string
                                    description: Connection Kind
                                  metadata:
                                    x-oapi-codegen-extra-tags:
                                      db: metadata
                                      yaml: metadata
                                    x-order: 7
                                    x-go-type: core.Map
                                    x-go-type-skip-optional-pointer: true
                                    type: object
                                  status:
                                    x-oapi-codegen-extra-tags:
                                      db: status
                                      yaml: status
                                    x-order: 8
                                    description: Connection Status
                                    type: string
                                    enum:
                                      - discovered
                                      - registered
                                      - connected
                                      - ignored
                                      - maintenance
                                      - disconnected
                                      - deleted
                                      - not found
                                  user_id:
                                    x-go-name: UserID
                                    x-oapi-codegen-extra-tags:
                                      db: user_id
                                      yaml: user_id
                                    x-order: 9
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    default: 00000000-0000-0000-0000-000000000000
                                  created_at:
                                    x-oapi-codegen-extra-tags:
                                      db: created_at
                                      yaml: created_at
                                    x-order: 10
                                    type: string
                                    format: date-time
                                    x-go-type-skip-optional-pointer: true
                                  updated_at:
                                    x-oapi-codegen-extra-tags:
                                      db: updated_at
                                      yaml: updated_at
                                    x-order: 11
                                    type: string
                                    format: date-time
                                    x-go-type-skip-optional-pointer: true
                                  deleted_at:
                                    x-oapi-codegen-extra-tags:
                                      db: deleted_at
                                      yaml: deleted_at
                                    x-go-type: core.NullTime
                                    x-order: 12
                                    type: string
                                    format: date-time
                                    x-go-type-skip-optional-pointer: true
                                  environments:
                                    type: array
                                    items:
                                      x-go-type: '*environment.Environment'
                                      $id: >-
                                        https://schemas.meshery.io/environment.json
                                      $schema: http://json-schema.org/draft-07/schema#
                                      description: >-
                                        Meshery Environments allow you to
                                        logically group related Connections and
                                        their associated Credentials.. Learn
                                        more at
                                        https://docs.meshery.io/concepts/logical/environments
                                      additionalProperties: false
                                      type: object
                                      required:
                                        - id
                                        - name
                                        - description
                                        - organization_id
                                      properties:
                                        id:
                                          description: ID
                                          x-order: 1
                                          x-go-name: ID
                                          x-oapi-codegen-extra-tags:
                                            db: id
                                            yaml: id
                                          type: string
                                          format: uuid
                                          x-go-type: uuid.UUID
                                          x-go-type-import:
                                            path: github.com/gofrs/uuid
                                          default: 00000000-0000-0000-0000-000000000000
                                        name:
                                          x-oapi-codegen-extra-tags:
                                            db: name
                                            yaml: name
                                          x-order: 2
                                          type: string
                                          description: Environment name
                                        description:
                                          x-oapi-codegen-extra-tags:
                                            db: description
                                            yaml: description
                                          x-order: 3
                                          type: string
                                          description: Environment description
                                        organization_id:
                                          x-go-name: OrganizationID
                                          x-oapi-codegen-extra-tags:
                                            db: organization_id
                                            yaml: organization_id
                                          x-order: 4
                                          description: Environment organization ID
                                          type: string
                                          format: uuid
                                          x-go-type: uuid.UUID
                                          x-go-type-import:
                                            path: github.com/gofrs/uuid
                                          default: 00000000-0000-0000-0000-000000000000
                                        owner:
                                          x-oapi-codegen-extra-tags:
                                            db: owner
                                            yaml: owner
                                          x-order: 5
                                          description: Environment owner
                                          type: string
                                          format: uuid
                                          x-go-type: uuid.UUID
                                          x-go-type-import:
                                            path: github.com/gofrs/uuid
                                          default: 00000000-0000-0000-0000-000000000000
                                        created_at:
                                          x-oapi-codegen-extra-tags:
                                            db: created_at
                                            yaml: created_at
                                          x-order: 6
                                          type: string
                                          format: date-time
                                          x-go-type-skip-optional-pointer: true
                                        metadata:
                                          x-oapi-codegen-extra-tags:
                                            db: metadata
                                            yaml: metadata
                                          x-order: 7
                                          x-go-type: core.Map
                                          x-go-type-skip-optional-pointer: true
                                          type: object
                                        updated_at:
                                          x-oapi-codegen-extra-tags:
                                            db: updated_at
                                            yaml: updated_at
                                          x-order: 8
                                          type: string
                                          format: date-time
                                          x-go-type-skip-optional-pointer: true
                                        deleted_at:
                                          x-oapi-codegen-extra-tags:
                                            db: deleted_at
                                            yaml: deleted_at
                                          x-go-type: core.NullTime
                                          x-go-import: database/sql
                                          x-order: 9
                                          type: string
                                          format: date-time
                                          x-go-type-skip-optional-pointer: true
                                    x-oapi-codegen-extra-tags:
                                      db: '-'
                                      yaml: environments
                                      gorm: '-'
                                    x-go-type-skip-optional-pointer: true
                                    x-order: 13
                                  schemaVersion:
                                    description: >-
                                      Specifies the version of the schema used
                                      for the definition.
                                    x-order: 14
                                    x-oapi-codegen-extra-tags:
                                      yaml: schemaVersion
                                      db: '-'
                                      gorm: '-'
                                    default: connections.meshery.io/v1beta1
                                    type: string
                                    minLength: 2
                                    maxLength: 100
                                    pattern: >-
                                      ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                    example:
                                      - v1
                                      - v1alpha1
                                      - v2beta3
                                      - v1.custom-suffix
                              registrantId:
                                description: ID of the registrant.
                                x-oapi-codegen-extra-tags:
                                  yaml: connection_id
                                  json: connection_id
                                  gorm: column:connection_id
                                x-order: 8
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                default: 00000000-0000-0000-0000-000000000000
                              categoryId:
                                description: ID of the category.
                                x-oapi-codegen-extra-tags:
                                  yaml: '-'
                                  json: '-'
                                  gorm: categoryID
                                x-order: 8
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                default: 00000000-0000-0000-0000-000000000000
                              category:
                                x-order: 9
                                x-oapi-codegen-extra-tags:
                                  yaml: category
                                  json: category
                                  gorm: foreignKey:CategoryId;references:Id
                                x-go-type: category.CategoryDefinition
                                x-go-type-import:
                                  path: >-
                                    github.com/meshery/schemas/models/v1beta1/category
                                $id: https://schemas.meshery.io/category.json
                                $schema: http://json-schema.org/draft-07/schema#
                                type: object
                                description: Category of the model.
                                required:
                                  - id
                                  - name
                                  - metadata
                                properties:
                                  id:
                                    x-order: 1
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    default: 00000000-0000-0000-0000-000000000000
                                  name:
                                    type: string
                                    minLength: 1
                                    maxLength: 100
                                    x-oapi-codegen-extra-tags:
                                      yaml: name
                                      json: name
                                      gorm: name
                                    default: Uncategorized
                                    description: >-
                                      The category of the model that determines
                                      the main grouping.
                                    enum:
                                      - Analytics
                                      - App Definition and Development
                                      - Cloud Native Network
                                      - Cloud Native Storage
                                      - Database
                                      - Machine Learning
                                      - Observability and Analysis
                                      - Orchestration & Management
                                      - Platform
                                      - Provisioning
                                      - Runtime
                                      - Security & Compliance
                                      - Serverless
                                      - Tools
                                      - Uncategorized
                                    x-order: 2
                                  metadata:
                                    type: object
                                    x-oapi-codegen-extra-tags:
                                      yaml: metadata,omitempty
                                      json: metadata,omitempty
                                      gorm: type:bytes;serializer:json
                                    x-order: 3
                              subCategory:
                                x-order: 10
                                x-go-type: subcategory.SubCategoryDefinition
                                x-go-type-import:
                                  path: >-
                                    github.com/meshery/schemas/models/v1beta1/subcategory
                                $id: https://schemas.meshery.io/category.json
                                $schema: http://json-schema.org/draft-07/schema#
                                type: string
                                title: SubCategory
                                description: >-
                                  Sub category of the model determines the
                                  secondary grouping.
                                default: Uncategorized
                                enum:
                                  - API Gateway
                                  - API Integration
                                  - Application Definition & Image Build
                                  - Automation & Configuration
                                  - Certified Kubernetes - Distribution
                                  - Chaos Engineering
                                  - Cloud Native Storage
                                  - Cloud Provider
                                  - CNI
                                  - Compute
                                  - Container Registry
                                  - Container Runtime
                                  - Container Security
                                  - Container
                                  - Content Delivery Network
                                  - Continuous Integration & Delivery
                                  - Coordination & Service Discovery
                                  - Database
                                  - Flowchart
                                  - Framework
                                  - Installable Platform
                                  - Key Management
                                  - Key Management Service
                                  - Kubernetes
                                  - Logging
                                  - Machine Learning
                                  - Management Governance
                                  - Metrics
                                  - Monitoring
                                  - Networking Content Delivery
                                  - Operating System
                                  - Query
                                  - Remote Procedure Call
                                  - Scheduling & Orchestration
                                  - Secrets Management
                                  - Security Identity & Compliance
                                  - Service Mesh
                                  - Service Proxy
                                  - Source Version Control
                                  - Storage
                                  - Specifications
                                  - Streaming & Messaging
                                  - Tools
                                  - Tracing
                                  - Uncategorized
                                  - Video Conferencing
                                minLength: 1
                                maxLength: 100
                                x-oapi-codegen-extra-tags:
                                  yaml: subCategory
                                  json: subCategory
                              metadata:
                                type: object
                                description: >-
                                  Metadata containing additional information
                                  associated with the model.
                                required:
                                  - svgWhite
                                  - svgColor
                                properties:
                                  capabilities:
                                    type: array
                                    description: Capabilities associated with the model
                                    items:
                                      x-go-type: capability.Capability
                                      x-go-type-import:
                                        path: >-
                                          github.com/meshery/schemas/models/v1alpha1/capability
                                      $id: >-
                                        https://schemas.meshery.io/capability.json
                                      $schema: http://json-schema.org/draft-07/schema#
                                      description: >-
                                        Meshery manages entities in accordance
                                        with their specific capabilities. This
                                        field explicitly identifies those
                                        capabilities largely by what actions a
                                        given component supports; e.g.
                                        metric-scrape, sub-interface, and so on.
                                        This field is extensible. Entities may
                                        define a broad array of capabilities,
                                        which are in-turn dynamically
                                        interpretted by Meshery for full
                                        lifecycle management.
                                      additionalProperties: false
                                      type: object
                                      required:
                                        - description
                                        - schemaVersion
                                        - version
                                        - displayName
                                        - kind
                                        - type
                                        - subType
                                        - entityState
                                        - key
                                        - status
                                      x-oapi-codegen-extra-tags:
                                        gorm: type:bytes;serializer:json
                                      properties:
                                        schemaVersion:
                                          description: >-
                                            Specifies the version of the schema to
                                            which the capability definition
                                            conforms.
                                          type: string
                                          minLength: 2
                                          maxLength: 100
                                          pattern: >-
                                            ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                          example:
                                            - v1
                                            - v1alpha1
                                            - v2beta3
                                            - v1.custom-suffix
                                        version:
                                          description: Version of the capability definition.
                                          type: string
                                          minLength: 5
                                          maxLength: 100
                                          pattern: >-
                                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                          default: v0.0.1
                                        displayName:
                                          description: >-
                                            Name of the capability in human-readible
                                            format.
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        description:
                                          type: string
                                          description: >-
                                            A written representation of the purpose
                                            and characteristics of the capability.
                                        kind:
                                          description: >-
                                            Top-level categorization of the
                                            capability
                                          additionalProperties: false
                                          anyOf:
                                            - const: action
                                              description: >-
                                                For capabilities related to executing
                                                actions on entities. Example: initiate
                                                log streaming on a Pod. Example:
                                                initiate deployment of a component.
                                            - const: mutate
                                              description: >-
                                                For capabilities related to mutating an
                                                entity. Example: the ability to change
                                                the configuration of a component.
                                            - const: view
                                              description: >-
                                                For capabilities related to viewing an
                                                entity. Example: the ability to view a
                                                components configuration.
                                            - const: interaction
                                              description: >-
                                                Catch all for capabilities related to
                                                interaction with entities. Example: the
                                                ability for a component to be dragged
                                                and dropped. Example: supports event
                                                bubbling to parent components. 
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        type:
                                          description: >-
                                            Classification of capabilities. Used to
                                            group capabilities similar in nature.
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        subType:
                                          description: >-
                                            Most granular unit of capability
                                            classification. The combination of Kind,
                                            Type and SubType together uniquely
                                            identify a Capability.
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        key:
                                          description: Key that backs the capability.
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        entityState:
                                          description: >-
                                            State of the entity in which the
                                            capability is applicable.
                                          type: array
                                          items:
                                            type: string
                                            enum:
                                              - declaration
                                              - instance
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            description: >-
                                              A string starting with an alphanumeric
                                              character. Spaces and hyphens allowed.
                                        status:
                                          type: string
                                          description: Status of the capability
                                          default: enabled
                                          enum:
                                            - enabled
                                            - disabled
                                        metadata:
                                          type: object
                                          description: >-
                                            Metadata contains additional information
                                            associated with the capability.
                                            Extension point.
                                          additionalProperties: true
                                      default:
                                        - description: >-
                                            Configure the visual styles for the
                                            component
                                          displayName: Styling
                                          entityState:
                                            - declaration
                                          key: ''
                                          kind: mutate
                                          schemaVersion: capability.meshery.io/v1alpha1
                                          status: enabled
                                          subType: ''
                                          type: style
                                          version: 0.7.0
                                        - description: Change the shape of the component
                                          displayName: Change Shape
                                          entityState:
                                            - declaration
                                          key: ''
                                          kind: mutate
                                          schemaVersion: capability.meshery.io/v1alpha1
                                          status: enabled
                                          subType: shape
                                          type: style
                                          version: 0.7.0
                                        - description: >-
                                            Drag and Drop a component into a parent
                                            component in graph view
                                          displayName: Compound Drag And Drop
                                          entityState:
                                            - declaration
                                          key: ''
                                          kind: interaction
                                          schemaVersion: capability.meshery.io/v1alpha1
                                          status: enabled
                                          subType: compoundDnd
                                          type: graph
                                          version: 0.7.0
                                        - description: Add text to nodes body
                                          displayName: Body Text
                                          entityState:
                                            - declaration
                                          key: ''
                                          kind: mutate
                                          schemaVersion: capability.meshery.io/v1alpha1
                                          status: enabled
                                          subType: body-text
                                          type: style
                                          version: 0.7.0
                                    x-order: 1
                                  isAnnotation:
                                    type: boolean
                                    description: >-
                                      Indicates whether the model and its
                                      entities should be treated as deployable
                                      entities or as logical representations.
                                    x-oapi-codegen-extra-tags:
                                      yaml: isAnnotation
                                      json: isAnnotation
                                    x-order: 2
                                    default: false
                                  primaryColor:
                                    type: string
                                    description: Primary color associated with the model.
                                    minLength: 1
                                    maxLength: 50
                                    default: '#00b39f'
                                    x-oapi-codegen-extra-tags:
                                      yaml: primaryColor
                                      json: primaryColor
                                    x-order: 3
                                  secondaryColor:
                                    type: string
                                    description: Secondary color associated with the model.
                                    minLength: 1
                                    maxLength: 50
                                    default: '#00D3A9'
                                    x-oapi-codegen-extra-tags:
                                      yaml: secondaryColor
                                      json: secondaryColor
                                    x-order: 4
                                  svgWhite:
                                    type: string
                                    description: >-
                                      SVG representation of the model in white
                                      color.
                                    minLength: 1
                                    x-oapi-codegen-extra-tags:
                                      yaml: svgWhite
                                      json: svgWhite
                                    x-order: 5
                                    default: >-
                                      <svg width="32" height="32" viewBox="0 0
                                      32 32" fill="none"
                                      xmlns="http://www.w3.org/2000/svg"><path
                                      d="M16.405
                                      8.732v6.57l5.694-3.297-5.694-3.273Zm0
                                      7.942v6.602l5.747-3.285-5.747-3.317Z"
                                      fill="#fff"/><path d="M15.586
                                      15.256v-6.47l-5.622 3.225 5.622
                                      3.245ZM4.307 23.252a13.809 13.809 0 0 0
                                      4.362 4.39v-6.914l-4.362
                                      2.524Zm11.279-.008v-6.52L9.95 19.985l5.636
                                      3.258Z" fill="#fff"
                                      fill-opacity=".8"/><path d="m9.49 27.23
                                      5.707-3.263-5.707-3.3v6.563Z"
                                      fill="#fff"/><path d="M22.54
                                      27.265v-6.553l-5.699 3.259 5.7
                                      3.294Zm5.58-4.773a13.697 13.697 0 0 0
                                      1.612-5.895l-5.934 3.397 4.323 2.498Z"
                                      fill="#fff" fill-opacity=".8"/><path
                                      d="m23.362 19.298
                                      5.728-3.276-5.728-3.291v6.567Z"
                                      fill="#fff"/><path d="M22.541
                                      11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                                      7.955v-6.574l-5.685 3.292 5.685 3.281Z"
                                      fill="#fff" fill-opacity=".8"/><path
                                      d="M9.49
                                      12.684v6.622l5.728-3.316-5.728-3.306Z"
                                      fill="#fff"/><path d="M15.586 2.25a13.69
                                      13.69 0 0 0-6.037 1.595l6.037 3.463V2.25Z"
                                      fill="#fff" fill-opacity=".8"/><path
                                      d="M9.49 4.756v6.583l5.732-3.288L9.49
                                      4.756Z" fill="#fff"/><path d="M8.669
                                      4.356a13.83 13.83 0 0 0-4.362 4.39l4.362
                                      2.518V4.356Z" fill="#fff"
                                      fill-opacity=".8"/><path d="M22.504
                                      3.88a13.695 13.695 0 0
                                      0-6.099-1.63v5.123l6.1-3.493ZM2.25
                                      16.483c.071 2.12.634 4.196 1.644
                                      6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68
                                      13.68 0 0 0-1.644
                                      6.036l6.068-3.482-4.424-2.554Z"
                                      fill="#fff"/><path d="M9.539 28.147a13.673
                                      13.673 0 0 0 6.047 1.603v-5.062L9.54
                                      28.147Z" fill="#fff"
                                      fill-opacity=".8"/><path d="M27.697
                                      8.768a13.83 13.83 0 0
                                      0-4.335-4.383v6.889l4.335-2.506ZM23.362
                                      27.62a13.851 13.851 0 0 0
                                      4.351-4.417l-4.351-2.514v6.93Z"
                                      fill="#fff"/><path d="M29.75 15.452a13.659
                                      13.659 0 0 0-1.63-5.979l-4.381 2.53 6.011
                                      3.45Z" fill="#fff"
                                      fill-opacity=".8"/><path d="M16.405
                                      29.75a13.673 13.673 0 0 0
                                      6.036-1.595l-6.036-3.498v5.093Z"
                                      fill="#fff"/><path d="M8.669
                                      19.247v-6.494L3.03 15.986l5.639 3.261Z"
                                      fill="#fff" fill-opacity=".8"/></svg>
                                  svgColor:
                                    type: string
                                    description: >-
                                      SVG representation of the model in colored
                                      format.
                                    minLength: 1
                                    x-oapi-codegen-extra-tags:
                                      yaml: svgColor
                                      json: svgColor
                                    x-order: 6
                                    default: >-
                                      <svg xmlns="http://www.w3.org/2000/svg"
                                      id="Layer_1" data-name="Layer 1"
                                      viewBox="0 0 134.95
                                      135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                                      points="69.49 31.82 69.49 64.07 97.44
                                      47.89 69.49 31.82" class="cls-1"/><polygon
                                      points="69.49 70.81 69.49 103.22 97.7
                                      87.09 69.49 70.81" class="cls-1"/><polygon
                                      points="65.47 63.85 65.47 32.09 37.87
                                      47.92 65.47 63.85" class="cls-2"/><path
                                      d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                                      class="cls-2"/><polygon points="65.47
                                      103.06 65.47 71.05 37.8 87.07 65.47
                                      103.06" class="cls-2"/><polygon
                                      points="35.54 122.63 63.56 106.61 35.54
                                      90.41 35.54 122.63"
                                      class="cls-1"/><polygon points="99.61
                                      122.8 99.61 90.63 71.63 106.63 99.61
                                      122.8" class="cls-2"/><path
                                      d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                                      class="cls-2"/><polygon points="103.64
                                      83.69 131.76 67.61 103.64 51.45 103.64
                                      83.69" class="cls-1"/><polygon
                                      points="99.61 44.5 99.61 12.52 71.76 28.49
                                      99.61 44.5" class="cls-2"/><polygon
                                      points="99.61 83.55 99.61 51.28 71.7 67.44
                                      99.61 83.55" class="cls-2"/><polygon
                                      points="67.48 135.02 67.49 135.02 67.48
                                      135.02 67.48 135.02"
                                      class="cls-2"/><polygon points="35.54
                                      51.22 35.54 83.73 63.66 67.45 35.54 51.22"
                                      class="cls-1"/><path
                                      d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                                      class="cls-2"/><polygon points="35.54 12.3
                                      35.54 44.62 63.68 28.48 35.54 12.3"
                                      class="cls-1"/><path
                                      d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                                      class="cls-2"/><path
                                      d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                                      class="cls-1"/><path
                                      d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                                      class="cls-1"/><path
                                      d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                                      class="cls-1"/><path
                                      d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                                      class="cls-2"/><path
                                      d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                                      class="cls-1"/><path
                                      d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                                      class="cls-1"/><path
                                      d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                                      class="cls-2"/><path
                                      d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                                      class="cls-1"/><polygon points="31.51
                                      83.44 31.51 51.56 3.83 67.43 31.51 83.44"
                                      class="cls-2"/></svg>
                                  svgComplete:
                                    type: string
                                    description: SVG representation of the complete model.
                                    minLength: 1
                                    x-oapi-codegen-extra-tags:
                                      yaml: svgComplete
                                      json: svgComplete
                                    x-order: 7
                                  shape:
                                    x-order: 8
                                    type: string
                                    description: >-
                                      The shape of the node’s body. Note that
                                      each shape fits within the specified width
                                      and height, and so you may have to adjust
                                      width and height if you desire an
                                      equilateral shape (i.e. width !== height
                                      for several equilateral shapes)
                                    default: circle
                                    enum:
                                      - circle
                                      - ellipse
                                      - triangle
                                      - round-triangle
                                      - rectangle
                                      - round-rectangle
                                      - bottom-round-rectangle
                                      - cut-rectangle
                                      - barrel
                                      - rhomboid
                                      - diamond
                                      - round-diamond
                                      - pentagon
                                      - round-pentagon
                                      - hexagon
                                      - round-hexagon
                                      - concave-hexagon
                                      - heptagon
                                      - round-heptagon
                                      - octagon
                                      - round-octagon
                                      - star
                                      - tag
                                      - round-tag
                                      - vee
                                      - polygon
                                x-oapi-codegen-extra-tags:
                                  gorm: type:bytes;serializer:json
                                  json: metadata
                                  yaml: metadata
                                x-order: 11
                                additionalProperties: true
                              model:
                                x-oapi-codegen-extra-tags:
                                  gorm: type:bytes;serializer:json
                                x-order: 12
                                type: object
                                description: >-
                                  Registrant-defined data associated with the
                                  model. Properties pertain to the software
                                  being managed (e.g. Kubernetes v1.31).
                                required:
                                  - version
                                properties:
                                  version:
                                    description: >-
                                      Version of the model as defined by the
                                      registrant.
                                    allOf:
                                      - type: string
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        description: >-
                                          A valid semantic version string between
                                          5 and 256 characters. The pattern allows
                                          for a major.minor.patch version followed
                                          by an optional pre-release tag like
                                          '-alpha' or '-beta.2' and an optional
                                          build metadata tag like '+build.1.
                                        default: v0.0.1
                                    x-oapi-codegen-extra-tags:
                                      yaml: version
                                      json: version
                                    x-order: 1
                              relationships:
                                type: array
                                x-go-type: interface{}
                                x-oapi-codegen-extra-tags:
                                  gorm: '-'
                                  json: relationships
                                  yaml: relationships
                              components:
                                type: array
                                x-go-type: interface{}
                                x-oapi-codegen-extra-tags:
                                  gorm: '-'
                                  json: components
                                  yaml: components
                              componentsCount:
                                type: integer
                                description: >-
                                  Number of components associated with the
                                  model.
                                x-order: 13
                                x-oapi-codegen-extra-tags:
                                  json: components_count
                                  yaml: components_count
                                  gorm: '-'
                                default: 0
                              relationshipsCount:
                                type: integer
                                description: >-
                                  Number of relationships associated with the
                                  model.
                                x-order: 13
                                x-oapi-codegen-extra-tags:
                                  gorm: '-'
                                  json: relationships_count
                                  yaml: relationships_count
                                default: 0
                            required:
                              - id
                              - schemaVersion
                              - displayName
                              - status
                              - subCategory
                              - model
                              - name
                              - description
                              - version
                              - registrant
                              - category
                              - categoryId
                              - registrantId
                              - relationshipsCount
                              - componentsCount
                              - components
                              - relationships
                          modelId:
                            description: >-
                              ModelId is the foreign key to the model to which
                              the component belongs.
                            x-oapi-codegen-extra-tags:
                              gorm: >-
                                index:idx_component_definition_dbs_model_id,column:model_id
                              yaml: '-'
                              json: '-'
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          styles:
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                              yaml: styles
                              json: styles
                            x-go-type: core.ComponentStyles
                            x-go-type-import:
                              path: github.com/meshery/schemas/models/v1alpha1/core
                            x-order: 8
                            type: object
                            description: Visualization styles for a component
                            required:
                              - shape
                              - primaryColor
                              - svgColor
                              - svgWhite
                              - svgComplete
                            allOf:
                              - type: object
                                description: Common styles for all entities
                                additionalProperties: true
                                required:
                                  - primaryColor
                                  - svgColor
                                  - svgWhite
                                  - svgComplete
                                properties:
                                  primaryColor:
                                    type: string
                                    description: >-
                                      Primary color of the component used for UI
                                      representation.
                                  secondaryColor:
                                    type: string
                                    description: >-
                                      Secondary color of the entity used for UI
                                      representation.
                                  svgWhite:
                                    type: string
                                    description: >-
                                      White SVG of the entity used for UI
                                      representation on dark background.
                                  svgColor:
                                    type: string
                                    description: >-
                                      Colored SVG of the entity used for UI
                                      representation on light background.
                                  svgComplete:
                                    type: string
                                    description: >-
                                      Complete SVG of the entity used for UI
                                      representation, often inclusive of
                                      background.
                                  color:
                                    type: string
                                    description: >-
                                      The color of the element's label. Colours
                                      may be specified by name (e.g. red), hex
                                      (e.g.
                                  text-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the label text, including
                                      its outline.
                                    minimum: 0
                                    maximum: 1
                                  font-family:
                                    type: string
                                    description: >-
                                      A comma-separated list of font names to
                                      use on the label text.
                                  font-size:
                                    type: string
                                    description: The size of the label text.
                                  font-style:
                                    type: string
                                    description: >-
                                      A CSS font style to be applied to the
                                      label text.
                                  font-weight:
                                    type: string
                                    description: >-
                                      A CSS font weight to be applied to the
                                      label text.
                                  text-transform:
                                    type: string
                                    description: >-
                                      A transformation to apply to the label
                                      text
                                    enum:
                                      - none
                                      - uppercase
                                      - lowercase
                                  opacity:
                                    type: number
                                    description: >-
                                      The opacity of the element, ranging from 0
                                      to 1. Note that the opacity of a compound
                                      node parent affects the effective opacity
                                      of its children.
                                    minimum: 0
                                    maximum: 1
                                  z-index:
                                    type: integer
                                    description: >-
                                      An integer value that affects the relative
                                      draw order of elements. In general, an
                                      element with a higher z-index will be
                                      drawn on top of an element with a lower
                                      z-index. Note that edges are under nodes
                                      despite z-index.
                                  label:
                                    type: string
                                    description: >-
                                      The text to display for an element's
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                                  animation:
                                    type: object
                                    description: >-
                                      The animation to apply to the element.
                                      example ripple,bounce,etc
                              - type: object
                                properties:
                                  shape:
                                    type: string
                                    description: >-
                                      The shape of the node's body. Note that
                                      each shape fits within the specified width
                                      and height, and so you may have to adjust
                                      width and height if you desire an
                                      equilateral shape (i.e. width !== height
                                      for several equilateral shapes)
                                    enum:
                                      - ellipse
                                      - triangle
                                      - round-triangle
                                      - rectangle
                                      - round-rectangle
                                      - bottom-round-rectangle
                                      - cut-rectangle
                                      - barrel
                                      - rhomboid
                                      - diamond
                                      - round-diamond
                                      - pentagon
                                      - round-pentagon
                                      - hexagon
                                      - round-hexagon
                                      - concave-hexagon
                                      - heptagon
                                      - round-heptagon
                                      - octagon
                                      - round-octagon
                                      - star
                                      - tag
                                      - round-tag
                                      - vee
                                      - polygon
                                  position:
                                    type: object
                                    additionalProperties: false
                                    required:
                                      - x
                                      - 'y'
                                    description: >-
                                      The position of the node. If the position
                                      is set, the node is drawn at that position
                                      in the given dimensions. If the position
                                      is not set, the node is drawn at a random
                                      position.
                                    properties:
                                      x:
                                        type: number
                                        description: The x-coordinate of the node.
                                        x-go-type: float64
                                      'y':
                                        type: number
                                        description: The y-coordinate of the node.
                                        x-go-type: float64
                                  body-text:
                                    type: string
                                    description: >-
                                      The text to display for an element's body.
                                      Can give a path, e.g. data(id) will label
                                      with the elements id
                                  body-text-wrap:
                                    type: string
                                    description: >-
                                      How to wrap the text in the node. Can be
                                      'none', 'wrap', or 'ellipsis'.
                                  body-text-max-width:
                                    type: string
                                    description: >-
                                      The maximum width for wrapping text in the
                                      node.
                                  body-text-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the node's body text,
                                      including its outline.
                                    minimum: 0
                                    maximum: 1
                                  body-text-background-color:
                                    type: string
                                    description: >-
                                      The colour of the node's body text
                                      background. Colours may be specified by
                                      name (e.g. red), hex (e.g.
                                  body-text-font-size:
                                    type: number
                                    description: The size of the node's body text.
                                  body-text-color:
                                    type: string
                                    description: >-
                                      The colour of the node's body text.
                                      Colours may be specified by name (e.g.
                                      red), hex (e.g.
                                  body-text-font-weight:
                                    type: string
                                    description: >-
                                      A CSS font weight to be applied to the
                                      node's body text.
                                  body-text-horizontal-align:
                                    type: string
                                    description: >-
                                      A CSS horizontal alignment to be applied
                                      to the node's body text.
                                  body-text-decoration:
                                    type: string
                                    description: >-
                                      A CSS text decoration to be applied to the
                                      node's body text.
                                  body-text-vertical-align:
                                    type: string
                                    description: >-
                                      A CSS vertical alignment to be applied to
                                      the node's body text.
                                  width:
                                    type: number
                                    description: >-
                                      The width of the node's body or the width
                                      of an edge's line.
                                  height:
                                    type: number
                                    description: The height of the node's body
                                  background-image:
                                    type: string
                                    description: >-
                                      The URL that points to the image to show
                                      in the node.
                                  background-color:
                                    type: string
                                    description: >-
                                      The colour of the node's body. Colours may
                                      be specified by name (e.g. red), hex (e.g.
                                  background-blacken:
                                    type: number
                                    description: >-
                                      Blackens the node's body for values from 0
                                      to 1; whitens the node's body for values
                                      from 0 to -1.
                                    maximum: 1
                                    minimum: -1
                                  background-opacity:
                                    type: number
                                    description: >-
                                      The opacity level of the node's background
                                      colour
                                    maximum: 1
                                    minimum: 0
                                  background-position-x:
                                    type: string
                                    description: >-
                                      The x position of the background image,
                                      measured in percent (e.g. 50%) or pixels
                                      (e.g. 10px)
                                  background-position-y:
                                    type: string
                                    description: >-
                                      The y position of the background image,
                                      measured in percent (e.g. 50%) or pixels
                                      (e.g. 10px)
                                  background-offset-x:
                                    type: string
                                    description: >-
                                      The x offset of the background image,
                                      measured in percent (e.g. 50%) or pixels
                                      (e.g. 10px)
                                  background-offset-y:
                                    type: string
                                    description: >-
                                      The y offset of the background image,
                                      measured in percent (e.g. 50%) or pixels
                                      (e.g. 10px)
                                  background-fit:
                                    type: string
                                    description: >-
                                      How the background image is fit to the
                                      node. Can be 'none', 'contain', or
                                      'cover'.
                                  background-clip:
                                    type: string
                                    description: >-
                                      How the background image is clipped to the
                                      node. Can be 'none', 'node', or
                                      'node-border'.
                                  background-width-relative-to:
                                    type: string
                                    description: >-
                                      How the background image's width is
                                      determined. Can be 'none', 'inner', or
                                      'outer'.
                                  background-height-relative-to:
                                    type: string
                                    description: >-
                                      How the background image's height is
                                      determined. Can be 'none', 'inner', or
                                      'outer'.
                                  border-width:
                                    type: number
                                    description: The size of the node's border.
                                    minimum: 0
                                  border-style:
                                    type: string
                                    description: The style of the node's border
                                    enum:
                                      - solid
                                      - dotted
                                      - dashed
                                      - double
                                  border-color:
                                    type: string
                                    description: >-
                                      The colour of the node's border. Colours
                                      may be specified by name (e.g. red), hex
                                      (e.g.
                                  border-opacity:
                                    type: number
                                    description: The opacity of the node's border
                                    minimum: 0
                                    maximum: 1
                                  padding:
                                    type: number
                                    description: >-
                                      The amount of padding around all sides of
                                      the node.
                                    minimum: 0
                                  text-halign:
                                    type: string
                                    description: The horizontal alignment of a node's label
                                    enum:
                                      - left
                                      - center
                                      - right
                                  text-valign:
                                    type: string
                                    description: The vertical alignment of a node's label
                                    enum:
                                      - top
                                      - center
                                      - bottom
                                  ghost:
                                    type: string
                                    description: >-
                                      Whether to use the ghost effect, a
                                      semitransparent duplicate of the element
                                      drawn at an offset.
                                    default: 'no'
                                    enum:
                                      - 'yes'
                                      - 'no'
                                  active-bg-color:
                                    type: string
                                    description: >-
                                      The colour of the indicator shown when the
                                      background is grabbed by the user.
                                      Selector needs to be *core*. Colours may
                                      be specified by name (e.g. red), hex (e.g.
                                  active-bg-opacity:
                                    type: string
                                    description: >-
                                      The opacity of the active background
                                      indicator. Selector needs to be *core*.
                                  active-bg-size:
                                    type: string
                                    description: >-
                                      The opacity of the active background
                                      indicator. Selector needs to be *core*.
                                  selection-box-color:
                                    type: string
                                    description: >-
                                      The background colour of the selection box
                                      used for drag selection. Selector needs to
                                      be *core*. Colours may be specified by
                                      name (e.g. red), hex (e.g.
                                  selection-box-border-width:
                                    type: number
                                    description: >-
                                      The size of the border on the selection
                                      box. Selector needs to be *core*
                                  selection-box-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the selection box. Selector
                                      needs to be *core*
                                    minimum: 0
                                    maximum: 1
                                  outside-texture-bg-color:
                                    type: string
                                    description: >-
                                      The colour of the area outside the
                                      viewport texture when
                                      initOptions.textureOnViewport === true.
                                      Selector needs to be *core*. Colours may
                                      be specified by name (e.g. red), hex (e.g.
                                  outside-texture-bg-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the area outside the
                                      viewport texture. Selector needs to be
                                      *core*
                                    minimum: 0
                                    maximum: 1
                                  shape-polygon-points:
                                    type: string
                                    description: >-
                                      An array (or a space-separated string) of
                                      numbers ranging on [-1, 1], representing
                                      alternating x and y values (i.e. x1 y1 x2
                                      y2, x3 y3 ...). This represents the points
                                      in the polygon for the node's shape. The
                                      bounding box of the node is given by (-1,
                                      -1), (1, -1), (1, 1), (-1, 1). The node's
                                      position is the origin (0, 0 )
                                  menu-background-color:
                                    type: string
                                    description: >-
                                      The colour of the background of the
                                      component menu. Colours may be specified
                                      by name (e.g. red), hex (e.g.
                                  menu-background-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the background of the
                                      component menu.
                                    minimum: 0
                                    maximum: 1
                                  menu-forground-color:
                                    type: string
                                    description: >-
                                      The colour of the text or icons in the
                                      component menu. Colours may be specified
                                      by name (e.g. red), hex (e.g.
                          capabilities:
                            x-order: 9
                            type: array
                            description: >-
                              Meshery manages components in accordance with
                              their specific capabilities. This field explicitly
                              identifies those capabilities largely by what
                              actions a given component supports; e.g.
                              metric-scrape, sub-interface, and so on. This
                              field is extensible. ComponentDefinitions may
                              define a broad array of capabilities, which are
                              in-turn dynamically interpretted by Meshery for
                              full lifecycle management.
                            items:
                              x-go-type: capability.Capability
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1alpha1/capability
                              $id: https://schemas.meshery.io/capability.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery manages entities in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. Entities may define a broad
                                array of capabilities, which are in-turn
                                dynamically interpretted by Meshery for full
                                lifecycle management.
                              additionalProperties: false
                              type: object
                              required:
                                - description
                                - schemaVersion
                                - version
                                - displayName
                                - kind
                                - type
                                - subType
                                - entityState
                                - key
                                - status
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              properties:
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema to which
                                    the capability definition conforms.
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                version:
                                  description: Version of the capability definition.
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  default: v0.0.1
                                displayName:
                                  description: >-
                                    Name of the capability in human-readible
                                    format.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                description:
                                  type: string
                                  description: >-
                                    A written representation of the purpose and
                                    characteristics of the capability.
                                kind:
                                  description: Top-level categorization of the capability
                                  additionalProperties: false
                                  anyOf:
                                    - const: action
                                      description: >-
                                        For capabilities related to executing
                                        actions on entities. Example: initiate
                                        log streaming on a Pod. Example:
                                        initiate deployment of a component.
                                    - const: mutate
                                      description: >-
                                        For capabilities related to mutating an
                                        entity. Example: the ability to change
                                        the configuration of a component.
                                    - const: view
                                      description: >-
                                        For capabilities related to viewing an
                                        entity. Example: the ability to view a
                                        components configuration.
                                    - const: interaction
                                      description: >-
                                        Catch all for capabilities related to
                                        interaction with entities. Example: the
                                        ability for a component to be dragged
                                        and dropped. Example: supports event
                                        bubbling to parent components. 
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                type:
                                  description: >-
                                    Classification of capabilities. Used to
                                    group capabilities similar in nature.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                subType:
                                  description: >-
                                    Most granular unit of capability
                                    classification. The combination of Kind,
                                    Type and SubType together uniquely identify
                                    a Capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                key:
                                  description: Key that backs the capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                entityState:
                                  description: >-
                                    State of the entity in which the capability
                                    is applicable.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - declaration
                                      - instance
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description: >-
                                      A string starting with an alphanumeric
                                      character. Spaces and hyphens allowed.
                                status:
                                  type: string
                                  description: Status of the capability
                                  default: enabled
                                  enum:
                                    - enabled
                                    - disabled
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata contains additional information
                                    associated with the capability. Extension
                                    point.
                                  additionalProperties: true
                              default:
                                - description: >-
                                    Configure the visual styles for the
                                    component
                                  displayName: Styling
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: ''
                                  type: style
                                  version: 0.7.0
                                - description: Change the shape of the component
                                  displayName: Change Shape
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: shape
                                  type: style
                                  version: 0.7.0
                                - description: >-
                                    Drag and Drop a component into a parent
                                    component in graph view
                                  displayName: Compound Drag And Drop
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: interaction
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: compoundDnd
                                  type: graph
                                  version: 0.7.0
                                - description: Add text to nodes body
                                  displayName: Body Text
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: body-text
                                  type: style
                                  version: 0.7.0
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                              yaml: capabilities
                              json: capabilities
                            default:
                              - schemaVersion: capability.meshery.io/v1alpha1
                                version: 0.7.0
                                displayName: Performance Test
                                description: >-
                                  Initiate a performance test. Meshery will
                                  execute the load generation, collect metrics,
                                  and present the results.
                                kind: action
                                type: operator
                                subType: perf-test
                                key: ''
                                entityState:
                                  - instance
                                status: enabled
                                metadata: null
                              - schemaVersion: capability.meshery.io/v1alpha1
                                version: 0.7.0
                                displayName: Workload Configuration
                                description: >-
                                  Configure the workload specific setting of a
                                  component
                                kind: mutate
                                type: configuration
                                subType: config
                                key: ''
                                entityState:
                                  - declaration
                                status: enabled
                                metadata: null
                              - schemaVersion: capability.meshery.io/v1alpha1
                                version: 0.7.0
                                displayName: Labels and Annotations Configuration
                                description: >-
                                  Configure Labels And Annotations for  the
                                  component 
                                kind: mutate
                                type: configuration
                                subType: labels-and-annotations
                                key: ''
                                entityState:
                                  - declaration
                                status: enabled
                                metadata: null
                              - schemaVersion: capability.meshery.io/v1alpha1
                                version: 0.7.0
                                displayName: Relationships
                                description: View relationships for the component
                                kind: view
                                type: configuration
                                subType: relationship
                                key: ''
                                entityState:
                                  - declaration
                                  - instance
                                status: enabled
                                metadata: null
                              - schemaVersion: capability.meshery.io/v1alpha1
                                version: 0.7.0
                                displayName: Json Schema
                                description: 'View Component Definition '
                                kind: view
                                type: configuration
                                subType: definition
                                key: ''
                                entityState:
                                  - declaration
                                  - instance
                                status: enabled
                                metadata: null
                              - schemaVersion: capability.meshery.io/v1alpha1
                                version: 0.7.0
                                displayName: Styling
                                description: Configure the visual styles for the component
                                kind: mutate
                                type: style
                                subType: ''
                                key: ''
                                entityState:
                                  - declaration
                                status: enabled
                                metadata: null
                              - schemaVersion: capability.meshery.io/v1alpha1
                                version: 0.7.0
                                displayName: Change Shape
                                description: Change the shape of the component
                                kind: mutate
                                type: style
                                subType: shape
                                key: ''
                                entityState:
                                  - declaration
                                status: enabled
                                metadata: null
                              - schemaVersion: capability.meshery.io/v1alpha1
                                version: 0.7.0
                                displayName: Compound Drag And Drop
                                description: >-
                                  Drag and Drop a component into a parent
                                  component in graph view
                                kind: interaction
                                type: graph
                                subType: compoundDnd
                                key: ''
                                entityState:
                                  - declaration
                                status: enabled
                                metadata: null
                          status:
                            x-order: 10
                            type: string
                            description: >-
                              Status of component, including:

                              - duplicate: this component is a duplicate of
                              another. The component that is to be the canonical
                              reference and that is duplicated by other
                              components should not be assigned the 'duplicate'
                              status.

                              - maintenance: model is unavailable for a period
                              of time.

                              - enabled: model is available for use for all
                              users of this Meshery Server.

                              - ignored: model is unavailable for use for all
                              users of this Meshery Server.
                            default: enabled
                            enum:
                              - ignored
                              - enabled
                              - duplicate
                              - resolved
                              - open
                            x-oapi-codegen-extra-tags:
                              yaml: status
                              json: status
                          metadata:
                            x-order: 11
                            type: object
                            description: >-
                              Metadata contains additional information
                              associated with the component.
                            required:
                              - genealogy
                              - isAnnotation
                              - isNamespaced
                              - published
                              - instanceDetails
                              - configurationUISchema
                            properties:
                              genealogy:
                                x-order: 1
                                type: string
                                description: >-
                                  Genealogy represents the various
                                  representational states of the component.
                              isAnnotation:
                                x-order: 2
                                type: boolean
                                description: >-
                                  Identifies whether the component is
                                  semantically meaningful or not; identifies
                                  whether the component should be treated as
                                  deployable entity or is for purposes of
                                  logical representation.
                                default: false
                              isNamespaced:
                                x-order: 3
                                type: boolean
                                description: >-
                                  Identifies whether the component is scoped to
                                  namespace or clsuter wide.
                              published:
                                x-order: 4
                                type: boolean
                                description: >-
                                  'published' controls whether the component
                                  should be registered in Meshery Registry. When
                                  the same 'published' property in Models, is
                                  set to 'false', the Model property takes
                                  precedence with all Entities in the Model not
                                  being registered.
                              instanceDetails:
                                x-order: 5
                                type: object
                                description: >-
                                  InstanceDetails contains information about the
                                  instance of the component.
                              configurationUISchema:
                                x-order: 6
                                type: string
                                description: >-
                                  Defines the UI schema for rendering the
                                  component's configuration. For more details,
                                  visit:
                                  https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                                  .
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                            additionalProperties: true
                          configuration:
                            x-order: 12
                            description: >-
                              The configuration of the component. The
                              configuration is based on the schema defined
                              within the component definition(component.schema).
                            type: object
                            $comment: >-
                              The configuration of the component. The
                              configuration is based on the schema defined
                              within the component definition(component.schema).
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                          component:
                            x-order: 13
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                            x-go-type: Component
                            description: >-
                              data related to the third party capability that
                              Component Defintion wraps , this is herematicaly
                              sealed an
                            type: object
                            properties:
                              version:
                                type: string
                                description: >-
                                  Version of the component produced by the
                                  registrant. Example: APIVersion of a
                                  Kubernetes Pod.
                                x-order: 1
                              kind:
                                type: string
                                description: >-
                                  The unique identifier (name) assigned by the
                                  registrant to this component. Example: A
                                  Kubernetes Pod is of kind 'Pod'.
                                x-order: 2
                              schema:
                                type: string
                                description: >-
                                  JSON schema of the object as defined by the
                                  registrant.
                                x-order: 3
                            required:
                              - version
                              - kind
                              - schema
                        required:
                          - id
                          - displayName
                          - description
                          - schemaVersion
                          - format
                          - version
                          - configuration
                          - metadata
                          - modelId
                          - model
                          - component
                    preferences:
                      type: object
                      description: Design-level preferences
                      x-order: 7
                      properties:
                        layers:
                          type: object
                          description: List of available layers
                      required:
                        - layers
                    relationships:
                      description: List of relationships between components
                      type: array
                      x-order: 8
                      items:
                        x-go-type: '*relationship.RelationshipDefinition'
                        x-go-type-import:
                          path: >-
                            github.com/meshery/schemas/models/v1alpha3/relationship
                        $id: https://schemas.meshery.io/relationship.json
                        $schema: http://json-schema.org/draft-07/schema#
                        description: >-
                          Relationships define the nature of interaction between
                          interconnected components in Meshery. The combination
                          of relationship properties kind, type, and subtype
                          characterize various genealogical relations among and
                          between components. Relationships have selectors,
                          selector sets, metadata, and optional parameters.
                          Learn more at
                          https://docs.meshery.io/concepts/logical/relationships.
                        required:
                          - schemaVersion
                          - version
                          - model
                          - kind
                          - type
                          - subType
                        additionalProperties: false
                        type: object
                        properties:
                          id:
                            description: >-
                              Uniquely identifies the entity (i.e. component) as
                              defined in a declaration (i.e. design).
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                          schemaVersion:
                            description: >-
                              Specifies the version of the schema used for the
                              relationship definition.
                            type: string
                            minLength: 2
                            maxLength: 100
                            pattern: >-
                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                            example:
                              - v1
                              - v1alpha1
                              - v2beta3
                              - v1.custom-suffix
                            x-oapi-codegen-extra-tags:
                              yaml: schemaVersion
                              json: schemaVersion
                            default: relationships.meshery.io/v1alpha3
                          version:
                            type: string
                            minLength: 5
                            maxLength: 100
                            pattern: >-
                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                            description: >-
                              A valid semantic version string between 5 and 256
                              characters. The pattern allows for a
                              major.minor.patch version followed by an optional
                              pre-release tag like '-alpha' or '-beta.2' and an
                              optional build metadata tag like '+build.1.
                            default: v0.0.1
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                          model:
                            description: >-
                              Name of the model in which this relationship is
                              packaged.
                            $id: https://schemas.meshery.io/model.json
                            $schema: http://json-schema.org/draft-07/schema#
                            additionalProperties: false
                            type: object
                            properties:
                              id:
                                description: >-
                                  Uniquely identifies the entity (i.e.
                                  component) as defined in a declaration (i.e.
                                  design).
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                x-oapi-codegen-extra-tags:
                                  yaml: id
                                  json: id
                              schemaVersion:
                                description: >-
                                  Specifies the version of the schema used for
                                  the definition.
                                x-oapi-codegen-extra-tags:
                                  yaml: schemaVersion
                                  json: schemaVersion
                                type: string
                                minLength: 2
                                maxLength: 100
                                pattern: >-
                                  ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                example:
                                  - v1
                                  - v1alpha1
                                  - v2beta3
                                  - v1.custom-suffix
                              version:
                                description: Version of the model definition.
                                type: string
                                x-oapi-codegen-extra-tags:
                                  yaml: version
                                  json: version
                                minLength: 5
                                maxLength: 100
                                pattern: >-
                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              name:
                                description: >-
                                  The unique name for the model within the scope
                                  of a registrant.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                x-oapi-codegen-extra-tags:
                                  yaml: name
                                  json: name
                              displayName:
                                description: Human-readable name for the model.
                                minLength: 1
                                maxLength: 100
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                x-oapi-codegen-extra-tags:
                                  yaml: displayName
                                  json: displayName
                              description:
                                type: string
                                description: Description of the model.
                                minLength: 1
                                maxLength: 1000
                                x-oapi-codegen-extra-tags:
                                  yaml: description
                                  json: description
                              status:
                                type: string
                                description: >-
                                  Status of model, including:

                                  - duplicate: this component is a duplicate of
                                  another. The component that is to be the
                                  canonical reference and that is duplicated by
                                  other components should not be assigned the
                                  'duplicate' status.

                                  - maintenance: model is unavailable for a
                                  period of time.

                                  - enabled: model is available for use for all
                                  users of this Meshery Server.

                                  - ignored: model is unavailable for use for
                                  all users of this Meshery Server.
                                enum:
                                  - ignored
                                  - enabled
                                  - duplicate
                                x-oapi-codegen-extra-tags:
                                  yaml: status
                                  json: status
                              registrant:
                                x-oapi-codegen-extra-tags:
                                  yaml: registrant
                                  json: registrant
                                  gorm: foreignKey:RegistrantId;references:Id
                                $id: https://schemas.meshery.io/component.json
                                $schema: http://json-schema.org/draft-07/schema#
                                description: >-
                                  Meshery Connections are managed and unmanaged
                                  resources that either through discovery or
                                  manual entry are tracked by Meshery. Learn
                                  more at
                                  https://docs.meshery.io/concepts/logical/connections
                                additionalProperties: false
                                type: object
                                required:
                                  - kind
                                  - type
                                  - status
                                properties:
                                  id:
                                    description: ID
                                    type: string
                                    format: uuid
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  name:
                                    x-oapi-codegen-extra-tags:
                                      db: name
                                      yaml: name
                                      json: name
                                    type: string
                                    description: Connection Name
                                  credential_id:
                                    x-go-name: CredentialId
                                    x-oapi-codegen-extra-tags:
                                      db: credential_id
                                      yaml: credential_id
                                      json: credential_id
                                    description: Credential ID
                                    type: string
                                    format: uuid
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                  type:
                                    x-oapi-codegen-extra-tags:
                                      db: type
                                      yaml: type
                                      json: type
                                    type: string
                                    description: Connection Type
                                  sub_type:
                                    x-oapi-codegen-extra-tags:
                                      db: sub_type
                                      yaml: sub_type
                                      json: sub_type
                                    type: string
                                    description: Connection Subtype
                                  kind:
                                    x-oapi-codegen-extra-tags:
                                      db: kind
                                      yaml: kind
                                      json: kind
                                    type: string
                                    description: Connection Kind
                                  metadata:
                                    x-oapi-codegen-extra-tags:
                                      db: metadata
                                      yaml: metadata
                                      json: metadata
                                    type: object
                                  status:
                                    x-oapi-codegen-extra-tags:
                                      db: status
                                      yaml: status
                                      json: status
                                    description: Connection Status
                                    type: string
                                    enum:
                                      - discovered
                                      - registered
                                      - connected
                                      - ignored
                                      - maintenance
                                      - disconnected
                                      - deleted
                                      - not found
                                  user_id:
                                    x-go-name: UserID
                                    x-oapi-codegen-extra-tags:
                                      yaml: user_id
                                      json: user_id
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                  created_at:
                                    x-oapi-codegen-extra-tags:
                                      yaml: created_at
                                      json: created_at
                                    type: string
                                    format: date-time
                                    x-go-type-skip-optional-pointer: true
                                  updated_at:
                                    x-oapi-codegen-extra-tags:
                                      yaml: updated_at
                                      json: updated_at
                                    type: string
                                    format: date-time
                                    x-go-type-skip-optional-pointer: true
                                  deleted_at:
                                    x-oapi-codegen-extra-tags:
                                      yaml: deleted_at
                                      json: deleted_at
                                    type: string
                                    format: date-time
                                    x-go-type-skip-optional-pointer: true
                              category:
                                type: object
                                description: Category of the model.
                                properties:
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  name:
                                    type: string
                                    minLength: 1
                                    maxLength: 100
                                    x-oapi-codegen-extra-tags:
                                      yaml: name
                                      json: name
                                  metadata:
                                    type: object
                                    x-oapi-codegen-extra-tags:
                                      yaml: metadata
                                      json: metadata
                                x-oapi-codegen-extra-tags:
                                  yaml: category
                                  json: category
                                  gorm: foreignKey:CategoryId;references:Id
                              subCategory:
                                type: string
                                description: Sub-category of the model.
                                minLength: 1
                                maxLength: 100
                                x-oapi-codegen-extra-tags:
                                  yaml: subCategory
                                  json: subCategory
                              metadata:
                                type: object
                                description: >-
                                  Metadata containing additional information
                                  associated with the model.
                                properties:
                                  capabilities:
                                    type: array
                                    description: Capabilities associated with the model
                                    items:
                                      $id: >-
                                        https://schemas.meshery.io/capability.json
                                      $schema: http://json-schema.org/draft-07/schema#
                                      description: >-
                                        Meshery manages entities in accordance
                                        with their specific capabilities. This
                                        field explicitly identifies those
                                        capabilities largely by what actions a
                                        given component supports; e.g.
                                        metric-scrape, sub-interface, and so on.
                                        This field is extensible. Entities may
                                        define a broad array of capabilities,
                                        which are in-turn dynamically
                                        interpretted by Meshery for full
                                        lifecycle management.
                                      additionalProperties: false
                                      type: object
                                      required:
                                        - schemaVersion
                                        - version
                                        - displayName
                                        - kind
                                        - type
                                        - entityState
                                        - status
                                      x-oapi-codegen-extra-tags:
                                        gorm: type:bytes;serializer:json
                                      properties:
                                        schemaVersion:
                                          description: >-
                                            Specifies the version of the schema to
                                            which the capability definition
                                            conforms.
                                          type: string
                                          minLength: 2
                                          maxLength: 100
                                          pattern: >-
                                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                          example:
                                            - v1
                                            - v1alpha1
                                            - v2beta3
                                            - v1.custom-suffix
                                          x-oapi-codegen-extra-tags:
                                            yaml: schemaVersion
                                            json: schemaVersion
                                        version:
                                          description: Version of the capability definition.
                                          type: string
                                          minLength: 5
                                          maxLength: 100
                                          pattern: >-
                                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                          x-oapi-codegen-extra-tags:
                                            yaml: version
                                            json: version
                                        displayName:
                                          description: >-
                                            Name of the capability in human-readible
                                            format.
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          x-oapi-codegen-extra-tags:
                                            yaml: displayName
                                            json: displayName
                                        description:
                                          type: string
                                          description: >-
                                            A written representation of the purpose
                                            and characteristics of the capability.
                                          x-oapi-codegen-extra-tags:
                                            yaml: description
                                            json: description
                                        kind:
                                          description: >-
                                            Top-level categorization of the
                                            capability
                                          additionalProperties: false
                                          anyOf:
                                            - const: action
                                              description: >-
                                                For capabilities related to executing
                                                actions on entities. Example: initiate
                                                log streaming on a Pod. Example:
                                                initiate deployment of a component.
                                            - const: mutate
                                              description: >-
                                                For capabilities related to mutating an
                                                entity. Example: the ability to change
                                                the configuration of a component.
                                            - const: view
                                              description: >-
                                                For capabilities related to viewing an
                                                entity. Example: the ability to view a
                                                components configuration.
                                            - const: interaction
                                              description: >-
                                                Catch all for capabilities related to
                                                interaction with entities. Example: the
                                                ability for a component to be dragged
                                                and dropped. Example: supports event
                                                bubbling to parent components. 
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          x-oapi-codegen-extra-tags:
                                            yaml: kind
                                            json: kind
                                        type:
                                          description: >-
                                            Classification of capabilities. Used to
                                            group capabilities similar in nature.
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          x-oapi-codegen-extra-tags:
                                            yaml: type
                                            json: type
                                        subType:
                                          description: >-
                                            Most granular unit of capability
                                            classification. The combination of Kind,
                                            Type and SubType together uniquely
                                            identify a Relaationship.
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          oneOf:
                                            - const: inventory
                                              description: >-
                                                A hierarchical inventory relationship in
                                                which the configuration of (parent)
                                                component is patched with the
                                                configuration of other (child)
                                                component. Eg: The configuration of the
                                                EnvoyFilter (parent) component is
                                                patched with the configuration as
                                                received from WASMFilter (child)
                                                component.
                                            - const: matchLabels
                                              description: >-
                                                Match label relationships offer a
                                                dynamic association between one or more
                                                components and are a flexible way to
                                                group and manage related components in
                                                Meshery.
                                            - const: permission
                                              description: >-
                                                A relationship that represents a set of
                                                security-centric bindings between
                                                components.
                                            - const: network
                                              description: >-
                                                A relationship that represents a line of
                                                communication between two or more
                                                components.
                                            - const: firewall
                                              description: >-
                                                A relationship that act as a
                                                network-based security boundary for
                                                ingress and egress traffic.
                                            - const: mount
                                              description: >-
                                                A relationship that represents volume
                                                mounts between components.
                                            - const: alias
                                              description: >-
                                                An alias for a field path in another
                                                component.
                                            - const: annotation
                                              description: >-
                                                A relationship that provide valuable
                                                context for users, controllers, and
                                                third-party tools within the Meshery
                                                ecosystem.
                                            - const: reference
                                              description: >-
                                                A reference relationship  is a
                                                declarative linkage where one resource
                                                identifies or depends on another
                                                resource by referencing its name, kind,
                                                API version, or some other property
                                          x-oapi-codegen-extra-tags:
                                            yaml: subType
                                            json: subType
                                        key:
                                          description: Key that backs the capability.
                                          type: string
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          x-oapi-codegen-extra-tags:
                                            yaml: key
                                            json: key
                                        entityState:
                                          description: >-
                                            State of the entity in which the
                                            capability is applicable.
                                          type: array
                                          items:
                                            type: string
                                            enum:
                                              - declaration
                                              - instance
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            description: >-
                                              A string starting with an alphanumeric
                                              character. Spaces and hyphens allowed.
                                            x-oapi-codegen-extra-tags:
                                              yaml: entityState
                                              json: entityState
                                        status:
                                          type: string
                                          description: Status of the capability
                                          default: enabled
                                          enum:
                                            - enabled
                                            - disabled
                                          x-oapi-codegen-extra-tags:
                                            yaml: status
                                            json: status
                                        metadata:
                                          type: object
                                          description: >-
                                            Metadata contains additional information
                                            associated with the capability.
                                            Extension point.
                                          additionalProperties: true
                                          x-oapi-codegen-extra-tags:
                                            yaml: metadata
                                            json: metadata
                                  isAnnotation:
                                    type: boolean
                                    description: >-
                                      Indicates whether the model and its
                                      entities should be treated as deployable
                                      entities or as logical representations.
                                    x-oapi-codegen-extra-tags:
                                      yaml: isAnnotation
                                      json: isAnnotation
                                  primaryColor:
                                    type: string
                                    description: Primary color associated with the model.
                                    minLength: 1
                                    maxLength: 50
                                    x-oapi-codegen-extra-tags:
                                      yaml: primaryColor
                                      json: primaryColor
                                  secondaryColor:
                                    type: string
                                    description: Secondary color associated with the model.
                                    minLength: 1
                                    maxLength: 50
                                    x-oapi-codegen-extra-tags:
                                      yaml: secondaryColor
                                      json: secondaryColor
                                  svgWhite:
                                    type: string
                                    description: >-
                                      SVG representation of the model in white
                                      color.
                                    minLength: 1
                                    x-oapi-codegen-extra-tags:
                                      yaml: svgWhite
                                      json: svgWhite
                                  svgColor:
                                    type: string
                                    description: >-
                                      SVG representation of the model in colored
                                      format.
                                    minLength: 1
                                    x-oapi-codegen-extra-tags:
                                      yaml: svgColor
                                      json: svgColor
                                  svgComplete:
                                    type: string
                                    description: SVG representation of the complete model.
                                    minLength: 1
                                    x-oapi-codegen-extra-tags:
                                      yaml: svgComplete
                                      json: svgComplete
                                x-oapi-codegen-extra-tags:
                                  gorm: type:bytes;serializer:json
                                additionalProperties: true
                              model:
                                type: object
                                description: >-
                                  Registrant-defined data associated with the
                                  model. Properties pertain to the software
                                  being managed (e.g. Kubernetes v1.31)
                                required:
                                  - version
                                properties:
                                  version:
                                    description: >-
                                      Version of the model as defined by the
                                      registrant.
                                    x-oapi-codegen-extra-tags:
                                      yaml: version
                                      json: version
                                    type: string
                                    minLength: 5
                                    maxLength: 100
                                    pattern: >-
                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                x-oapi-codegen-extra-tags:
                                  gorm: type:bytes;serializer:json
                            required:
                              - name
                              - version
                              - registrant
                              - category
                          kind:
                            description: >-
                              Kind of the Relationship. Learn more about
                              relationships -
                              https://docs.meshery.io/concepts/logical/relationships.
                            enum:
                              - hierarchical
                              - edge
                              - sibling
                            type: string
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            x-oapi-codegen-extra-tags:
                              yaml: kind
                              json: kind
                          type:
                            description: >-
                              Classification of relationships. Used to group
                              relationships similar in nature.
                            x-go-name: RelationshipType
                            gorm: column:type
                            type: string
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            x-oapi-codegen-extra-tags:
                              yaml: type
                              json: type
                          subType:
                            description: >-
                              Most granular unit of relationship classification.
                              The combination of Kind, Type and SubType together
                              uniquely identify a Relationship.
                            type: string
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            x-oapi-codegen-extra-tags:
                              yaml: subType
                              json: subType
                          status:
                            type: string
                            description: Status of the relationship.
                            default: enabled
                            enum:
                              - pending
                              - approved
                              - ignored
                              - enabled
                              - deleted
                            x-oapi-codegen-extra-tags:
                              yaml: status
                              json: status
                          evaluationQuery:
                            description: >-
                              Optional. Assigns the policy to be used for the
                              evaluation of the relationship. Deprecation
                              Notice: In the future, this property is either to
                              be removed or to it is to be an array of optional
                              policy $refs.
                            type: string
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            x-oapi-codegen-extra-tags:
                              yaml: evaluationQuery
                              json: evaluationQuery
                          capabilities:
                            type: array
                            description: Capabilities associated with the relationship.
                            items:
                              $id: https://schemas.meshery.io/capability.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery manages entities in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. Entities may define a broad
                                array of capabilities, which are in-turn
                                dynamically interpretted by Meshery for full
                                lifecycle management.
                              additionalProperties: false
                              type: object
                              required:
                                - schemaVersion
                                - version
                                - displayName
                                - kind
                                - type
                                - entityState
                                - status
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              properties:
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema to which
                                    the capability definition conforms.
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                  x-oapi-codegen-extra-tags:
                                    yaml: schemaVersion
                                    json: schemaVersion
                                version:
                                  description: Version of the capability definition.
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  x-oapi-codegen-extra-tags:
                                    yaml: version
                                    json: version
                                displayName:
                                  description: >-
                                    Name of the capability in human-readible
                                    format.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: displayName
                                    json: displayName
                                description:
                                  type: string
                                  description: >-
                                    A written representation of the purpose and
                                    characteristics of the capability.
                                  x-oapi-codegen-extra-tags:
                                    yaml: description
                                    json: description
                                kind:
                                  description: Top-level categorization of the capability
                                  additionalProperties: false
                                  anyOf:
                                    - const: action
                                      description: >-
                                        For capabilities related to executing
                                        actions on entities. Example: initiate
                                        log streaming on a Pod. Example:
                                        initiate deployment of a component.
                                    - const: mutate
                                      description: >-
                                        For capabilities related to mutating an
                                        entity. Example: the ability to change
                                        the configuration of a component.
                                    - const: view
                                      description: >-
                                        For capabilities related to viewing an
                                        entity. Example: the ability to view a
                                        components configuration.
                                    - const: interaction
                                      description: >-
                                        Catch all for capabilities related to
                                        interaction with entities. Example: the
                                        ability for a component to be dragged
                                        and dropped. Example: supports event
                                        bubbling to parent components. 
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: kind
                                    json: kind
                                type:
                                  description: >-
                                    Classification of capabilities. Used to
                                    group capabilities similar in nature.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: type
                                    json: type
                                subType:
                                  description: >-
                                    Most granular unit of capability
                                    classification. The combination of Kind,
                                    Type and SubType together uniquely identify
                                    a Capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: subType
                                    json: subType
                                key:
                                  description: Key that backs the capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: key
                                    json: key
                                entityState:
                                  description: >-
                                    State of the entity in which the capability
                                    is applicable.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - declaration
                                      - instance
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description: >-
                                      A string starting with an alphanumeric
                                      character. Spaces and hyphens allowed.
                                    x-oapi-codegen-extra-tags:
                                      yaml: entityState
                                      json: entityState
                                status:
                                  type: string
                                  description: Status of the capability
                                  default: enabled
                                  enum:
                                    - enabled
                                    - disabled
                                  x-oapi-codegen-extra-tags:
                                    yaml: status
                                    json: status
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata contains additional information
                                    associated with the capability. Extension
                                    point.
                                  additionalProperties: true
                                  x-oapi-codegen-extra-tags:
                                    yaml: metadata
                                    json: metadata
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                          metadata:
                            type: object
                            description: >-
                              Metadata contains additional information
                              associated with the Relationship.
                            additionalProperties: true
                            x-oapi-codegen-extra-tags:
                              gorm: foreignKey:ModelId;references:Id
                            properties:
                              description:
                                description: >-
                                  Characterization of the meaning of the
                                  relationship and its relevance to both Meshery
                                  and entities under management.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                x-oapi-codegen-extra-tags:
                                  yaml: description
                                  json: description
                              isAnnotation:
                                type: boolean
                                description: >-
                                  Indicates whether the relationship should be
                                  treated as a logical representation only
                                x-oapi-codegen-extra-tags:
                                  yaml: isAnnotation
                                  json: isAnnotation
                                default: false
                              styles:
                                anyOf:
                                  - type: object
                                    description: Visualization styles for a relationship
                                    allOf:
                                      - type: object
                                        description: Common styles for all entities
                                        additionalProperties: false
                                        required:
                                          - primaryColor
                                          - svgColor
                                          - svgWhite
                                        properties:
                                          primaryColor:
                                            type: string
                                            description: >-
                                              Primary color of the component used for
                                              UI representation.
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color of the entity used for
                                              UI representation.
                                          svgWhite:
                                            type: string
                                            description: >-
                                              White SVG of the entity used for UI
                                              representation on dark background.
                                          svgColor:
                                            type: string
                                            description: >-
                                              Colored SVG of the entity used for UI
                                              representation on light background.
                                          svgComplete:
                                            type: string
                                            description: >-
                                              Complete SVG of the entity used for UI
                                              representation, often inclusive of
                                              background.
                                          color:
                                            type: string
                                            description: >-
                                              The color of the element's label.
                                              Colours may be specified by name (e.g.
                                              red), hex (e.g. #ff0000 or #f00), RGB
                                              (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                              hsl(0, 100%, 50%)).
                                          text-opacity:
                                            type: number
                                            description: >-
                                              The opacity of the label text, including
                                              its outline.
                                            minimum: 0
                                            maximum: 1
                                          font-family:
                                            type: string
                                            description: >-
                                              A comma-separated list of font names to
                                              use on the label text.
                                          font-size:
                                            type: string
                                            description: The size of the label text.
                                          font-style:
                                            type: string
                                            description: >-
                                              A CSS font style to be applied to the
                                              label text.
                                          font-weight:
                                            type: string
                                            description: >-
                                              A CSS font weight to be applied to the
                                              label text.
                                          text-transform:
                                            type: string
                                            description: >-
                                              A transformation to apply to the label
                                              text
                                            enum:
                                              - none
                                              - uppercase
                                              - lowercase
                                          opacity:
                                            type: number
                                            description: >-
                                              The opacity of the element, ranging from
                                              0 to 1. Note that the opacity of a
                                              compound node parent affects the
                                              effective opacity of its children.See
                                              https://js.cytoscape.org/#style/visibility
                                            minimum: 0
                                            maximum: 1
                                          z-index:
                                            type: integer
                                            description: >-
                                              An integer value that affects the
                                              relative draw order of elements. In
                                              general, an element with a higher
                                              z-index will be drawn on top of an
                                              element with a lower z-index. Note that
                                              edges are under nodes despite z-index.
                                          label:
                                            type: string
                                            description: >-
                                              The text to display for an element’s
                                              label. Can give a path, e.g. data(id)
                                              will label with the elements id
                                      - properties:
                                          edge-animation:
                                            type: string
                                            description: >-
                                              The animation to use for the edge. Can
                                              be like 'marching-ants' , 'blink' ,
                                              'moving-gradient',etc .
                                          curve-style:
                                            type: string
                                            description: >-
                                              The curving method used to separate two
                                              or more edges between two nodes; may be
                                              haystack (very fast, bundled straight
                                              edges for which loops and compounds are
                                              unsupported), straight (straight edges
                                              with all arrows supported), bezier
                                              (bundled curved edges), unbundled-bezier
                                              (curved edges for use with manual
                                              control points), segments (a series of
                                              straight lines), taxi (right-angled
                                              lines, hierarchically bundled). Note
                                              that haystack edges work best with
                                              ellipse, rectangle, or similar nodes.
                                              Smaller node shapes, like triangle, will
                                              not be as aesthetically pleasing. Also
                                              note that edge endpoint arrows are
                                              unsupported for haystack edges.
                                            default: straight
                                            enum:
                                              - straight
                                              - haystack
                                              - bezier
                                              - unbundled-bezier
                                              - segments
                                              - taxi
                                          line-color:
                                            type: string
                                            description: >-
                                              The colour of the edge’s line. Colours
                                              may be specified by name (e.g. red), hex
                                              (e.g. #ff0000 or #f00), RGB (e.g.
                                              rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                              100%, 50%)).
                                          line-style:
                                            type: string
                                            description: The style of the edge’s line.
                                            enum:
                                              - solid
                                              - dotted
                                              - dashed
                                          line-cap:
                                            type: string
                                            description: >-
                                              The cap style of the edge’s line; may be
                                              butt (default), round, or square. The
                                              cap may or may not be visible, depending
                                              on the shape of the node and the
                                              relative size of the node and edge. Caps
                                              other than butt extend beyond the
                                              specified endpoint of the edge.
                                            enum:
                                              - butt
                                              - round
                                              - square
                                            default: butt
                                          line-opacity:
                                            type: number
                                            minimum: 0
                                            maximum: 1
                                            default: 1
                                            description: >-
                                              The opacity of the edge’s line and
                                              arrow. Useful if you wish to have a
                                              separate opacity for the edge label
                                              versus the edge line. Note that the
                                              opacity value of the edge element
                                              affects the effective opacity of its
                                              line and label subcomponents.
                                          target-arrow-color:
                                            type: string
                                            description: >-
                                              The colour of the edge’s source arrow.
                                              Colours may be specified by name (e.g.
                                              red), hex (e.g. #ff0000 or #f00), RGB
                                              (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                              hsl(0, 100%, 50%)).
                                          target-arrow-shape:
                                            type: string
                                            description: The shape of the edge’s source arrow
                                            enum:
                                              - triangle
                                              - triangle-tee
                                              - circle-triangle
                                              - triangle-cross
                                              - triangle-backcurve
                                              - vee
                                              - tee
                                              - square
                                              - circle
                                              - diamond
                                              - chevron
                                              - none
                                          target-arrow-fill:
                                            type: string
                                            description: >-
                                              The fill state of the edge’s source
                                              arrow
                                            enum:
                                              - filled
                                              - hollow
                                          mid-target-arrow-color:
                                            type: string
                                            description: >-
                                              The colour of the edge’s source arrow.
                                              Colours may be specified by name (e.g.
                                              red), hex (e.g. #ff0000 or #f00), RGB
                                              (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                              hsl(0, 100%, 50%)).
                                          mid-target-arrow-shape:
                                            type: string
                                            description: The shape of the edge’s source arrow
                                            enum:
                                              - triangle
                                              - triangle-tee
                                              - circle-triangle
                                              - triangle-cross
                                              - triangle-backcurve
                                              - vee
                                              - tee
                                              - square
                                              - circle
                                              - diamond
                                              - chevron
                                              - none
                                          mid-target-arrow-fill:
                                            type: string
                                            description: >-
                                              The fill state of the edge’s source
                                              arrow
                                            enum:
                                              - filled
                                              - hollow
                                          arrow-scale:
                                            type: number
                                            description: Scaling for the arrow size.
                                            minimum: 0
                                          source-label:
                                            type: string
                                            description: >-
                                              The text to display for an edge’s source
                                              label. Can give a path, e.g. data(id)
                                              will label with the elements id
                                          target-label:
                                            type: string
                                            description: >-
                                              The text to display for an edge’s target
                                              label. Can give a path, e.g. data(id)
                                              will label with the elements id
                                  - type: object
                                    description: Common styles for all entities
                                    additionalProperties: false
                                    required:
                                      - primaryColor
                                      - svgColor
                                      - svgWhite
                                    properties:
                                      primaryColor:
                                        type: string
                                        description: >-
                                          Primary color of the component used for
                                          UI representation.
                                      secondaryColor:
                                        type: string
                                        description: >-
                                          Secondary color of the entity used for
                                          UI representation.
                                      svgWhite:
                                        type: string
                                        description: >-
                                          White SVG of the entity used for UI
                                          representation on dark background.
                                      svgColor:
                                        type: string
                                        description: >-
                                          Colored SVG of the entity used for UI
                                          representation on light background.
                                      svgComplete:
                                        type: string
                                        description: >-
                                          Complete SVG of the entity used for UI
                                          representation, often inclusive of
                                          background.
                                      color:
                                        type: string
                                        description: >-
                                          The color of the element's label.
                                          Colours may be specified by name (e.g.
                                          red), hex (e.g. #ff0000 or #f00), RGB
                                          (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                          hsl(0, 100%, 50%)).
                                      text-opacity:
                                        type: number
                                        description: >-
                                          The opacity of the label text, including
                                          its outline.
                                        minimum: 0
                                        maximum: 1
                                      font-family:
                                        type: string
                                        description: >-
                                          A comma-separated list of font names to
                                          use on the label text.
                                      font-size:
                                        type: string
                                        description: The size of the label text.
                                      font-style:
                                        type: string
                                        description: >-
                                          A CSS font style to be applied to the
                                          label text.
                                      font-weight:
                                        type: string
                                        description: >-
                                          A CSS font weight to be applied to the
                                          label text.
                                      text-transform:
                                        type: string
                                        description: >-
                                          A transformation to apply to the label
                                          text
                                        enum:
                                          - none
                                          - uppercase
                                          - lowercase
                                      opacity:
                                        type: number
                                        description: >-
                                          The opacity of the element, ranging from
                                          0 to 1. Note that the opacity of a
                                          compound node parent affects the
                                          effective opacity of its children.See
                                          https://js.cytoscape.org/#style/visibility
                                        minimum: 0
                                        maximum: 1
                                      z-index:
                                        type: integer
                                        description: >-
                                          An integer value that affects the
                                          relative draw order of elements. In
                                          general, an element with a higher
                                          z-index will be drawn on top of an
                                          element with a lower z-index. Note that
                                          edges are under nodes despite z-index.
                                      label:
                                        type: string
                                        description: >-
                                          The text to display for an element’s
                                          label. Can give a path, e.g. data(id)
                                          will label with the elements id
                                    $comment: Extension point for additional styles
                                x-oapi-codegen-extra-tags:
                                  yaml: styles
                                  json: styles
                          selectors:
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                            type: array
                            description: >-
                              Selectors are organized as an array, with each
                              item containing a distinct set of selectors that
                              share a common functionality. This structure
                              allows for flexibility in defining relationships,
                              even when different components are involved.
                            $comment: >-
                              Sets of selectors are interpreted as a logical
                              UNION. Properties within a selector `allow` and
                              `deny` are interpreted as logical AND, while
                              'from' and 'to' represents a UNION of set of
                              combinatorial pairs.
                            items:
                              type: object
                              description: >-
                                Optional selectors used to match Components.
                                Absence of a selector means that it is applied
                                to all Components.
                              additionalProperties: false
                              required:
                                - allow
                              properties:
                                deny:
                                  description: >-
                                    Optional selectors used to define
                                    relationships which should not be created /
                                    is restricted.
                                  type: object
                                  required:
                                    - to
                                    - from
                                  properties:
                                    from:
                                      description: >-
                                        Describes the component(s) which are
                                        involved in the relationship along with
                                        a set of actions to perform upon
                                        selection match.
                                      type: array
                                      items:
                                        type: object
                                        additionalProperties: false
                                        properties:
                                          kind:
                                            type: string
                                            x-oapi-codegen-extra-tags:
                                              yaml: kind
                                              json: kind
                                          model:
                                            description: >-
                                              Name of the model implicated by this
                                              selector. Learn more at
                                              https://docs.meshery.io/concepts/models
                                            $id: https://schemas.meshery.io/model.json
                                            $schema: http://json-schema.org/draft-07/schema#
                                            additionalProperties: false
                                            type: object
                                            properties:
                                              id:
                                                description: >-
                                                  Uniquely identifies the entity (i.e.
                                                  component) as defined in a declaration
                                                  (i.e. design).
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              schemaVersion:
                                                description: >-
                                                  Specifies the version of the schema used
                                                  for the definition.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: schemaVersion
                                                  json: schemaVersion
                                                type: string
                                                minLength: 2
                                                maxLength: 100
                                                pattern: >-
                                                  ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                example:
                                                  - v1
                                                  - v1alpha1
                                                  - v2beta3
                                                  - v1.custom-suffix
                                              version:
                                                description: Version of the model definition.
                                                type: string
                                                x-oapi-codegen-extra-tags:
                                                  yaml: version
                                                  json: version
                                                minLength: 5
                                                maxLength: 100
                                                pattern: >-
                                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              name:
                                                description: >-
                                                  The unique name for the model within the
                                                  scope of a registrant.
                                                type: string
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                x-oapi-codegen-extra-tags:
                                                  yaml: name
                                                  json: name
                                              displayName:
                                                description: Human-readable name for the model.
                                                minLength: 1
                                                maxLength: 100
                                                type: string
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                                x-oapi-codegen-extra-tags:
                                                  yaml: displayName
                                                  json: displayName
                                              description:
                                                type: string
                                                description: Description of the model.
                                                minLength: 1
                                                maxLength: 1000
                                                x-oapi-codegen-extra-tags:
                                                  yaml: description
                                                  json: description
                                              status:
                                                type: string
                                                description: >-
                                                  Status of model, including:

                                                  - duplicate: this component is a
                                                  duplicate of another. The component that
                                                  is to be the canonical reference and
                                                  that is duplicated by other components
                                                  should not be assigned the 'duplicate'
                                                  status.

                                                  - maintenance: model is unavailable for
                                                  a period of time.

                                                  - enabled: model is available for use
                                                  for all users of this Meshery Server.

                                                  - ignored: model is unavailable for use
                                                  for all users of this Meshery Server.
                                                enum:
                                                  - ignored
                                                  - enabled
                                                  - duplicate
                                                x-oapi-codegen-extra-tags:
                                                  yaml: status
                                                  json: status
                                              registrant:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: registrant
                                                  json: registrant
                                                  gorm: foreignKey:RegistrantId;references:Id
                                                $id: >-
                                                  https://schemas.meshery.io/component.json
                                                $schema: http://json-schema.org/draft-07/schema#
                                                description: >-
                                                  Meshery Connections are managed and
                                                  unmanaged resources that either through
                                                  discovery or manual entry are tracked by
                                                  Meshery. Learn more at
                                                  https://docs.meshery.io/concepts/logical/connections
                                                additionalProperties: false
                                                type: object
                                                required:
                                                  - kind
                                                  - type
                                                  - status
                                                properties:
                                                  id:
                                                    description: ID
                                                    type: string
                                                    format: uuid
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: id
                                                      json: id
                                                  name:
                                                    x-oapi-codegen-extra-tags:
                                                      db: name
                                                      yaml: name
                                                      json: name
                                                    type: string
                                                    description: Connection Name
                                                  credential_id:
                                                    x-go-name: CredentialId
                                                    x-oapi-codegen-extra-tags:
                                                      db: credential_id
                                                      yaml: credential_id
                                                      json: credential_id
                                                    description: Credential ID
                                                    type: string
                                                    format: uuid
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                  type:
                                                    x-oapi-codegen-extra-tags:
                                                      db: type
                                                      yaml: type
                                                      json: type
                                                    type: string
                                                    description: Connection Type
                                                  sub_type:
                                                    x-oapi-codegen-extra-tags:
                                                      db: sub_type
                                                      yaml: sub_type
                                                      json: sub_type
                                                    type: string
                                                    description: Connection Subtype
                                                  kind:
                                                    x-oapi-codegen-extra-tags:
                                                      db: kind
                                                      yaml: kind
                                                      json: kind
                                                    type: string
                                                    description: Connection Kind
                                                  metadata:
                                                    x-oapi-codegen-extra-tags:
                                                      db: metadata
                                                      yaml: metadata
                                                      json: metadata
                                                    type: object
                                                  status:
                                                    x-oapi-codegen-extra-tags:
                                                      db: status
                                                      yaml: status
                                                      json: status
                                                    description: Connection Status
                                                    type: string
                                                    enum:
                                                      - discovered
                                                      - registered
                                                      - connected
                                                      - ignored
                                                      - maintenance
                                                      - disconnected
                                                      - deleted
                                                      - not found
                                                  user_id:
                                                    x-go-name: UserID
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: user_id
                                                      json: user_id
                                                    type: string
                                                    format: uuid
                                                    description: >-
                                                      A Universally Unique Identifier used to
                                                      uniquely identify entites in Meshery.
                                                      The UUID core defintion is used across
                                                      different schemas.
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                  created_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: created_at
                                                      json: created_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                                  updated_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: updated_at
                                                      json: updated_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                                  deleted_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: deleted_at
                                                      json: deleted_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                              category:
                                                type: object
                                                description: Category of the model.
                                                properties:
                                                  id:
                                                    type: string
                                                    format: uuid
                                                    description: >-
                                                      A Universally Unique Identifier used to
                                                      uniquely identify entites in Meshery.
                                                      The UUID core defintion is used across
                                                      different schemas.
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: id
                                                      json: id
                                                  name:
                                                    type: string
                                                    minLength: 1
                                                    maxLength: 100
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: name
                                                      json: name
                                                  metadata:
                                                    type: object
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: metadata
                                                      json: metadata
                                                x-oapi-codegen-extra-tags:
                                                  yaml: category
                                                  json: category
                                                  gorm: foreignKey:CategoryId;references:Id
                                              subCategory:
                                                type: string
                                                description: Sub-category of the model.
                                                minLength: 1
                                                maxLength: 100
                                                x-oapi-codegen-extra-tags:
                                                  yaml: subCategory
                                                  json: subCategory
                                              metadata:
                                                type: object
                                                description: >-
                                                  Metadata containing additional
                                                  information associated with the model.
                                                properties:
                                                  capabilities:
                                                    type: array
                                                    description: Capabilities associated with the model
                                                    items:
                                                      $id: >-
                                                        https://schemas.meshery.io/capability.json
                                                      $schema: http://json-schema.org/draft-07/schema#
                                                      description: >-
                                                        Meshery manages entities in accordance
                                                        with their specific capabilities. This
                                                        field explicitly identifies those
                                                        capabilities largely by what actions a
                                                        given component supports; e.g.
                                                        metric-scrape, sub-interface, and so on.
                                                        This field is extensible. Entities may
                                                        define a broad array of capabilities,
                                                        which are in-turn dynamically
                                                        interpretted by Meshery for full
                                                        lifecycle management.
                                                      additionalProperties: false
                                                      type: object
                                                      required:
                                                        - schemaVersion
                                                        - version
                                                        - displayName
                                                        - kind
                                                        - type
                                                        - entityState
                                                        - status
                                                      x-oapi-codegen-extra-tags:
                                                        gorm: type:bytes;serializer:json
                                                      properties:
                                                        schemaVersion:
                                                          description: >-
                                                            Specifies the version of the schema to
                                                            which the capability definition
                                                            conforms.
                                                          type: string
                                                          minLength: 2
                                                          maxLength: 100
                                                          pattern: >-
                                                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                          example:
                                                            - v1
                                                            - v1alpha1
                                                            - v2beta3
                                                            - v1.custom-suffix
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: schemaVersion
                                                            json: schemaVersion
                                                        version:
                                                          description: Version of the capability definition.
                                                          type: string
                                                          minLength: 5
                                                          maxLength: 100
                                                          pattern: >-
                                                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: version
                                                            json: version
                                                        displayName:
                                                          description: >-
                                                            Name of the capability in human-readible
                                                            format.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: displayName
                                                            json: displayName
                                                        description:
                                                          type: string
                                                          description: >-
                                                            A written representation of the purpose
                                                            and characteristics of the capability.
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: description
                                                            json: description
                                                        kind:
                                                          description: >-
                                                            Top-level categorization of the
                                                            capability
                                                          additionalProperties: false
                                                          anyOf:
                                                            - const: action
                                                              description: >-
                                                                For capabilities related to executing
                                                                actions on entities. Example: initiate
                                                                log streaming on a Pod. Example:
                                                                initiate deployment of a component.
                                                            - const: mutate
                                                              description: >-
                                                                For capabilities related to mutating an
                                                                entity. Example: the ability to change
                                                                the configuration of a component.
                                                            - const: view
                                                              description: >-
                                                                For capabilities related to viewing an
                                                                entity. Example: the ability to view a
                                                                components configuration.
                                                            - const: interaction
                                                              description: >-
                                                                Catch all for capabilities related to
                                                                interaction with entities. Example: the
                                                                ability for a component to be dragged
                                                                and dropped. Example: supports event
                                                                bubbling to parent components. 
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: kind
                                                            json: kind
                                                        type:
                                                          description: >-
                                                            Classification of capabilities. Used to
                                                            group capabilities similar in nature.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: type
                                                            json: type
                                                        subType:
                                                          description: >-
                                                            Most granular unit of capability
                                                            classification. The combination of Kind,
                                                            Type and SubType together uniquely
                                                            identify a Capability.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: subType
                                                            json: subType
                                                        key:
                                                          description: Key that backs the capability.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: key
                                                            json: key
                                                        entityState:
                                                          description: >-
                                                            State of the entity in which the
                                                            capability is applicable.
                                                          type: array
                                                          items:
                                                            type: string
                                                            enum:
                                                              - declaration
                                                              - instance
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            description: >-
                                                              A string starting with an alphanumeric
                                                              character. Spaces and hyphens allowed.
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: entityState
                                                              json: entityState
                                                        status:
                                                          type: string
                                                          description: Status of the capability
                                                          default: enabled
                                                          enum:
                                                            - enabled
                                                            - disabled
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: status
                                                            json: status
                                                        metadata:
                                                          type: object
                                                          description: >-
                                                            Metadata contains additional information
                                                            associated with the capability.
                                                            Extension point.
                                                          additionalProperties: true
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: metadata
                                                            json: metadata
                                                  isAnnotation:
                                                    type: boolean
                                                    description: >-
                                                      Indicates whether the model and its
                                                      entities should be treated as deployable
                                                      entities or as logical representations.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: isAnnotation
                                                      json: isAnnotation
                                                  primaryColor:
                                                    type: string
                                                    description: Primary color associated with the model.
                                                    minLength: 1
                                                    maxLength: 50
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: primaryColor
                                                      json: primaryColor
                                                  secondaryColor:
                                                    type: string
                                                    description: >-
                                                      Secondary color associated with the
                                                      model.
                                                    minLength: 1
                                                    maxLength: 50
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: secondaryColor
                                                      json: secondaryColor
                                                  svgWhite:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the model in white
                                                      color.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgWhite
                                                      json: svgWhite
                                                  svgColor:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the model in
                                                      colored format.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgColor
                                                      json: svgColor
                                                  svgComplete:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the complete
                                                      model.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgComplete
                                                      json: svgComplete
                                                x-oapi-codegen-extra-tags:
                                                  gorm: type:bytes;serializer:json
                                                additionalProperties: true
                                              model:
                                                type: object
                                                description: >-
                                                  Registrant-defined data associated with
                                                  the model. Properties pertain to the
                                                  software being managed (e.g. Kubernetes
                                                  v1.31)
                                                required:
                                                  - version
                                                properties:
                                                  version:
                                                    description: >-
                                                      Version of the model as defined by the
                                                      registrant.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: version
                                                      json: version
                                                    type: string
                                                    minLength: 5
                                                    maxLength: 100
                                                    pattern: >-
                                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                x-oapi-codegen-extra-tags:
                                                  gorm: type:bytes;serializer:json
                                            required:
                                              - name
                                              - version
                                              - registrant
                                              - category
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          match:
                                            type: object
                                            additionalProperties: false
                                            oneOf:
                                              - type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                              - properties:
                                                  from:
                                                    $comment: >-
                                                      Type is array so that mutliple bindings
                                                      can be supported between 2 nodes
                                                    type: array
                                                    items:
                                                      type: object
                                                      allOf:
                                                        - properties:
                                                            kind:
                                                              type: string
                                                            id:
                                                              type: string
                                                              format: uuid
                                                              description: >-
                                                                A Universally Unique Identifier used to
                                                                uniquely identify entites in Meshery.
                                                                The UUID core defintion is used across
                                                                different schemas.
                                                              x-go-type: uuid.UUID
                                                              x-go-type-import:
                                                                path: github.com/gofrs/uuid
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: id
                                                                json: id
                                                        - oneOf:
                                                            - properties:
                                                                mutatorRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      The sequence of mutatorRef and
                                                                      mutatedRef must match. eg: mutatorRef:
                                                                      [[config, url], [config, name]],
                                                                      mutatedRef: [[configPatch, value],
                                                                      [name]]. The value [config, url] will be
                                                                      patched at [configPatch, value].
                                                                      Similarly [config,name] will be patched
                                                                      at [name].
                                                                  description: >-
                                                                    JSON ref to value from where patch
                                                                    should be applied.
                                                            - properties:
                                                                mutatedRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      JSONPath
                                                                      (https://en.wikipedia.org/wiki/JSONPath)
                                                                      to property to be patched.
                                                  to:
                                                    $comment: >-
                                                      Type is array so that mutliple bindings
                                                      can be supported between 2 nodes
                                                    type: array
                                                    items:
                                                      type: object
                                                      allOf:
                                                        - properties:
                                                            kind:
                                                              type: string
                                                            id:
                                                              type: string
                                                              format: uuid
                                                              description: >-
                                                                A Universally Unique Identifier used to
                                                                uniquely identify entites in Meshery.
                                                                The UUID core defintion is used across
                                                                different schemas.
                                                              x-go-type: uuid.UUID
                                                              x-go-type-import:
                                                                path: github.com/gofrs/uuid
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: id
                                                                json: id
                                                        - oneOf:
                                                            - properties:
                                                                mutatorRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      The sequence of mutatorRef and
                                                                      mutatedRef must match. eg: mutatorRef:
                                                                      [[config, url], [config, name]],
                                                                      mutatedRef: [[configPatch, value],
                                                                      [name]]. The value [config, url] will be
                                                                      patched at [configPatch, value].
                                                                      Similarly [config,name] will be patched
                                                                      at [name].
                                                                  description: >-
                                                                    JSON ref to value from where patch
                                                                    should be applied.
                                                            - properties:
                                                                mutatedRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      JSONPath
                                                                      (https://en.wikipedia.org/wiki/JSONPath)
                                                                      to property to be patched.
                                            x-oapi-codegen-extra-tags:
                                              yaml: match
                                              json: match
                                          patch:
                                            allOf:
                                              - properties:
                                                  patchStrategy:
                                                    description: >-
                                                      patchStrategy allows you to make
                                                      specific changes to a resource using a
                                                      standard JSON Patch format (RFC 6902). 


                                                      add: Inserts a value into an array or
                                                      adds a member to an object.

                                                      replace: Replaces a value.

                                                      merge: Combines the values of the target
                                                      location with the values from the patch.
                                                      If the target location doesn't exist, it
                                                      is created.

                                                      strategic:specific to Kubernetes and
                                                      understands the structure of Kubernetes
                                                      objects. It can handle complex changes
                                                      like updating lists and maps, as well as
                                                      preserving default values. However, it's
                                                      not supported for custom resources. For
                                                      custom resources, only JSON Patch and
                                                      Merge Patch are typically supported.

                                                      remove: Removes a value.

                                                      copy: Copies a value from one location
                                                      to another.

                                                      move: Moves a value from one location to
                                                      another.

                                                      test: Tests that a value at the target
                                                      location is equal to a specified value.
                                                    $comment: >-
                                                      Array Indexing: When working with
                                                      arrays, be aware that Kubernetes uses
                                                      zero-based indexing in JSON patch paths.

                                                      Merge Patch vs. JSON Patch: Merge
                                                      patches are less flexible than JSON
                                                      patches and do not support all the same
                                                      operations.

                                                      Strategic Merge Patch: For some
                                                      Kubernetes resources, you can also use
                                                      the strategic type for a strategic merge
                                                      patch, which understands the structure
                                                      of Kubernetes objects and can handle
                                                      complex operations.
                                                    type: string
                                                    enum:
                                                      - merge
                                                      - strategic
                                                      - add
                                                      - remove
                                                      - copy
                                                      - move
                                                      - test
                                                    default: copy
                                              - oneOf:
                                                  - properties:
                                                      mutatorRef:
                                                        type: array
                                                        items:
                                                          type: array
                                                          items:
                                                            type: string
                                                          description: >-
                                                            The sequence of mutatorRef and
                                                            mutatedRef must match. eg: mutatorRef:
                                                            [[config, url], [config, name]],
                                                            mutatedRef: [[configPatch, value],
                                                            [name]]. The value [config, url] will be
                                                            patched at [configPatch, value].
                                                            Similarly [config,name] will be patched
                                                            at [name].
                                                        description: >-
                                                          JSON ref to value from where patch
                                                          should be applied.
                                                  - properties:
                                                      mutatedRef:
                                                        type: array
                                                        items:
                                                          type: array
                                                          items:
                                                            type: string
                                                          description: >-
                                                            JSONPath
                                                            (https://en.wikipedia.org/wiki/JSONPath)
                                                            to property to be patched.
                                            x-oapi-codegen-extra-tags:
                                              yaml: patch
                                              json: patch
                                        description: >-
                                          Optional fields that are a part of the
                                          `from` selector. Absence of a field has
                                          an implied * meaning.
                                    to:
                                      description: >-
                                        Describes the component(s) which are
                                        involved in the relationship along with
                                        a set of actions to perform upon
                                        selection match.
                                      type: array
                                      items:
                                        type: object
                                        additionalProperties: false
                                        properties:
                                          kind:
                                            type: string
                                            x-oapi-codegen-extra-tags:
                                              yaml: kind
                                              json: kind
                                          model:
                                            description: >-
                                              Name of the model implicated by this
                                              selector. Learn more at
                                              https://docs.meshery.io/concepts/models
                                            $id: https://schemas.meshery.io/model.json
                                            $schema: http://json-schema.org/draft-07/schema#
                                            additionalProperties: false
                                            type: object
                                            properties:
                                              id:
                                                description: >-
                                                  Uniquely identifies the entity (i.e.
                                                  component) as defined in a declaration
                                                  (i.e. design).
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              schemaVersion:
                                                description: >-
                                                  Specifies the version of the schema used
                                                  for the definition.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: schemaVersion
                                                  json: schemaVersion
                                                type: string
                                                minLength: 2
                                                maxLength: 100
                                                pattern: >-
                                                  ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                example:
                                                  - v1
                                                  - v1alpha1
                                                  - v2beta3
                                                  - v1.custom-suffix
                                              version:
                                                description: Version of the model definition.
                                                type: string
                                                x-oapi-codegen-extra-tags:
                                                  yaml: version
                                                  json: version
                                                minLength: 5
                                                maxLength: 100
                                                pattern: >-
                                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              name:
                                                description: >-
                                                  The unique name for the model within the
                                                  scope of a registrant.
                                                type: string
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                x-oapi-codegen-extra-tags:
                                                  yaml: name
                                                  json: name
                                              displayName:
                                                description: Human-readable name for the model.
                                                minLength: 1
                                                maxLength: 100
                                                type: string
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                                x-oapi-codegen-extra-tags:
                                                  yaml: displayName
                                                  json: displayName
                                              description:
                                                type: string
                                                description: Description of the model.
                                                minLength: 1
                                                maxLength: 1000
                                                x-oapi-codegen-extra-tags:
                                                  yaml: description
                                                  json: description
                                              status:
                                                type: string
                                                description: >-
                                                  Status of model, including:

                                                  - duplicate: this component is a
                                                  duplicate of another. The component that
                                                  is to be the canonical reference and
                                                  that is duplicated by other components
                                                  should not be assigned the 'duplicate'
                                                  status.

                                                  - maintenance: model is unavailable for
                                                  a period of time.

                                                  - enabled: model is available for use
                                                  for all users of this Meshery Server.

                                                  - ignored: model is unavailable for use
                                                  for all users of this Meshery Server.
                                                enum:
                                                  - ignored
                                                  - enabled
                                                  - duplicate
                                                x-oapi-codegen-extra-tags:
                                                  yaml: status
                                                  json: status
                                              registrant:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: registrant
                                                  json: registrant
                                                  gorm: foreignKey:RegistrantId;references:Id
                                                $id: >-
                                                  https://schemas.meshery.io/component.json
                                                $schema: http://json-schema.org/draft-07/schema#
                                                description: >-
                                                  Meshery Connections are managed and
                                                  unmanaged resources that either through
                                                  discovery or manual entry are tracked by
                                                  Meshery. Learn more at
                                                  https://docs.meshery.io/concepts/logical/connections
                                                additionalProperties: false
                                                type: object
                                                required:
                                                  - kind
                                                  - type
                                                  - status
                                                properties:
                                                  id:
                                                    description: ID
                                                    type: string
                                                    format: uuid
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: id
                                                      json: id
                                                  name:
                                                    x-oapi-codegen-extra-tags:
                                                      db: name
                                                      yaml: name
                                                      json: name
                                                    type: string
                                                    description: Connection Name
                                                  credential_id:
                                                    x-go-name: CredentialId
                                                    x-oapi-codegen-extra-tags:
                                                      db: credential_id
                                                      yaml: credential_id
                                                      json: credential_id
                                                    description: Credential ID
                                                    type: string
                                                    format: uuid
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                  type:
                                                    x-oapi-codegen-extra-tags:
                                                      db: type
                                                      yaml: type
                                                      json: type
                                                    type: string
                                                    description: Connection Type
                                                  sub_type:
                                                    x-oapi-codegen-extra-tags:
                                                      db: sub_type
                                                      yaml: sub_type
                                                      json: sub_type
                                                    type: string
                                                    description: Connection Subtype
                                                  kind:
                                                    x-oapi-codegen-extra-tags:
                                                      db: kind
                                                      yaml: kind
                                                      json: kind
                                                    type: string
                                                    description: Connection Kind
                                                  metadata:
                                                    x-oapi-codegen-extra-tags:
                                                      db: metadata
                                                      yaml: metadata
                                                      json: metadata
                                                    type: object
                                                  status:
                                                    x-oapi-codegen-extra-tags:
                                                      db: status
                                                      yaml: status
                                                      json: status
                                                    description: Connection Status
                                                    type: string
                                                    enum:
                                                      - discovered
                                                      - registered
                                                      - connected
                                                      - ignored
                                                      - maintenance
                                                      - disconnected
                                                      - deleted
                                                      - not found
                                                  user_id:
                                                    x-go-name: UserID
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: user_id
                                                      json: user_id
                                                    type: string
                                                    format: uuid
                                                    description: >-
                                                      A Universally Unique Identifier used to
                                                      uniquely identify entites in Meshery.
                                                      The UUID core defintion is used across
                                                      different schemas.
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                  created_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: created_at
                                                      json: created_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                                  updated_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: updated_at
                                                      json: updated_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                                  deleted_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: deleted_at
                                                      json: deleted_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                              category:
                                                type: object
                                                description: Category of the model.
                                                properties:
                                                  id:
                                                    type: string
                                                    format: uuid
                                                    description: >-
                                                      A Universally Unique Identifier used to
                                                      uniquely identify entites in Meshery.
                                                      The UUID core defintion is used across
                                                      different schemas.
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: id
                                                      json: id
                                                  name:
                                                    type: string
                                                    minLength: 1
                                                    maxLength: 100
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: name
                                                      json: name
                                                  metadata:
                                                    type: object
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: metadata
                                                      json: metadata
                                                x-oapi-codegen-extra-tags:
                                                  yaml: category
                                                  json: category
                                                  gorm: foreignKey:CategoryId;references:Id
                                              subCategory:
                                                type: string
                                                description: Sub-category of the model.
                                                minLength: 1
                                                maxLength: 100
                                                x-oapi-codegen-extra-tags:
                                                  yaml: subCategory
                                                  json: subCategory
                                              metadata:
                                                type: object
                                                description: >-
                                                  Metadata containing additional
                                                  information associated with the model.
                                                properties:
                                                  capabilities:
                                                    type: array
                                                    description: Capabilities associated with the model
                                                    items:
                                                      $id: >-
                                                        https://schemas.meshery.io/capability.json
                                                      $schema: http://json-schema.org/draft-07/schema#
                                                      description: >-
                                                        Meshery manages entities in accordance
                                                        with their specific capabilities. This
                                                        field explicitly identifies those
                                                        capabilities largely by what actions a
                                                        given component supports; e.g.
                                                        metric-scrape, sub-interface, and so on.
                                                        This field is extensible. Entities may
                                                        define a broad array of capabilities,
                                                        which are in-turn dynamically
                                                        interpretted by Meshery for full
                                                        lifecycle management.
                                                      additionalProperties: false
                                                      type: object
                                                      required:
                                                        - schemaVersion
                                                        - version
                                                        - displayName
                                                        - kind
                                                        - type
                                                        - entityState
                                                        - status
                                                      x-oapi-codegen-extra-tags:
                                                        gorm: type:bytes;serializer:json
                                                      properties:
                                                        schemaVersion:
                                                          description: >-
                                                            Specifies the version of the schema to
                                                            which the capability definition
                                                            conforms.
                                                          type: string
                                                          minLength: 2
                                                          maxLength: 100
                                                          pattern: >-
                                                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                          example:
                                                            - v1
                                                            - v1alpha1
                                                            - v2beta3
                                                            - v1.custom-suffix
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: schemaVersion
                                                            json: schemaVersion
                                                        version:
                                                          description: Version of the capability definition.
                                                          type: string
                                                          minLength: 5
                                                          maxLength: 100
                                                          pattern: >-
                                                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: version
                                                            json: version
                                                        displayName:
                                                          description: >-
                                                            Name of the capability in human-readible
                                                            format.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: displayName
                                                            json: displayName
                                                        description:
                                                          type: string
                                                          description: >-
                                                            A written representation of the purpose
                                                            and characteristics of the capability.
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: description
                                                            json: description
                                                        kind:
                                                          description: >-
                                                            Top-level categorization of the
                                                            capability
                                                          additionalProperties: false
                                                          anyOf:
                                                            - const: action
                                                              description: >-
                                                                For capabilities related to executing
                                                                actions on entities. Example: initiate
                                                                log streaming on a Pod. Example:
                                                                initiate deployment of a component.
                                                            - const: mutate
                                                              description: >-
                                                                For capabilities related to mutating an
                                                                entity. Example: the ability to change
                                                                the configuration of a component.
                                                            - const: view
                                                              description: >-
                                                                For capabilities related to viewing an
                                                                entity. Example: the ability to view a
                                                                components configuration.
                                                            - const: interaction
                                                              description: >-
                                                                Catch all for capabilities related to
                                                                interaction with entities. Example: the
                                                                ability for a component to be dragged
                                                                and dropped. Example: supports event
                                                                bubbling to parent components. 
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: kind
                                                            json: kind
                                                        type:
                                                          description: >-
                                                            Classification of capabilities. Used to
                                                            group capabilities similar in nature.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: type
                                                            json: type
                                                        subType:
                                                          description: >-
                                                            Most granular unit of capability
                                                            classification. The combination of Kind,
                                                            Type and SubType together uniquely
                                                            identify a Capability.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: subType
                                                            json: subType
                                                        key:
                                                          description: Key that backs the capability.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: key
                                                            json: key
                                                        entityState:
                                                          description: >-
                                                            State of the entity in which the
                                                            capability is applicable.
                                                          type: array
                                                          items:
                                                            type: string
                                                            enum:
                                                              - declaration
                                                              - instance
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            description: >-
                                                              A string starting with an alphanumeric
                                                              character. Spaces and hyphens allowed.
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: entityState
                                                              json: entityState
                                                        status:
                                                          type: string
                                                          description: Status of the capability
                                                          default: enabled
                                                          enum:
                                                            - enabled
                                                            - disabled
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: status
                                                            json: status
                                                        metadata:
                                                          type: object
                                                          description: >-
                                                            Metadata contains additional information
                                                            associated with the capability.
                                                            Extension point.
                                                          additionalProperties: true
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: metadata
                                                            json: metadata
                                                  isAnnotation:
                                                    type: boolean
                                                    description: >-
                                                      Indicates whether the model and its
                                                      entities should be treated as deployable
                                                      entities or as logical representations.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: isAnnotation
                                                      json: isAnnotation
                                                  primaryColor:
                                                    type: string
                                                    description: Primary color associated with the model.
                                                    minLength: 1
                                                    maxLength: 50
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: primaryColor
                                                      json: primaryColor
                                                  secondaryColor:
                                                    type: string
                                                    description: >-
                                                      Secondary color associated with the
                                                      model.
                                                    minLength: 1
                                                    maxLength: 50
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: secondaryColor
                                                      json: secondaryColor
                                                  svgWhite:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the model in white
                                                      color.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgWhite
                                                      json: svgWhite
                                                  svgColor:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the model in
                                                      colored format.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgColor
                                                      json: svgColor
                                                  svgComplete:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the complete
                                                      model.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgComplete
                                                      json: svgComplete
                                                x-oapi-codegen-extra-tags:
                                                  gorm: type:bytes;serializer:json
                                                additionalProperties: true
                                              model:
                                                type: object
                                                description: >-
                                                  Registrant-defined data associated with
                                                  the model. Properties pertain to the
                                                  software being managed (e.g. Kubernetes
                                                  v1.31)
                                                required:
                                                  - version
                                                properties:
                                                  version:
                                                    description: >-
                                                      Version of the model as defined by the
                                                      registrant.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: version
                                                      json: version
                                                    type: string
                                                    minLength: 5
                                                    maxLength: 100
                                                    pattern: >-
                                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                x-oapi-codegen-extra-tags:
                                                  gorm: type:bytes;serializer:json
                                            required:
                                              - name
                                              - version
                                              - registrant
                                              - category
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          match:
                                            type: object
                                            additionalProperties: false
                                            oneOf:
                                              - type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                              - properties:
                                                  from:
                                                    $comment: >-
                                                      Type is array so that mutliple bindings
                                                      can be supported between 2 nodes
                                                    type: array
                                                    items:
                                                      type: object
                                                      allOf:
                                                        - properties:
                                                            kind:
                                                              type: string
                                                            id:
                                                              type: string
                                                              format: uuid
                                                              description: >-
                                                                A Universally Unique Identifier used to
                                                                uniquely identify entites in Meshery.
                                                                The UUID core defintion is used across
                                                                different schemas.
                                                              x-go-type: uuid.UUID
                                                              x-go-type-import:
                                                                path: github.com/gofrs/uuid
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: id
                                                                json: id
                                                        - oneOf:
                                                            - properties:
                                                                mutatorRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      The sequence of mutatorRef and
                                                                      mutatedRef must match. eg: mutatorRef:
                                                                      [[config, url], [config, name]],
                                                                      mutatedRef: [[configPatch, value],
                                                                      [name]]. The value [config, url] will be
                                                                      patched at [configPatch, value].
                                                                      Similarly [config,name] will be patched
                                                                      at [name].
                                                                  description: >-
                                                                    JSON ref to value from where patch
                                                                    should be applied.
                                                            - properties:
                                                                mutatedRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      JSONPath
                                                                      (https://en.wikipedia.org/wiki/JSONPath)
                                                                      to property to be patched.
                                                  to:
                                                    $comment: >-
                                                      Type is array so that mutliple bindings
                                                      can be supported between 2 nodes
                                                    type: array
                                                    items:
                                                      type: object
                                                      allOf:
                                                        - properties:
                                                            kind:
                                                              type: string
                                                            id:
                                                              type: string
                                                              format: uuid
                                                              description: >-
                                                                A Universally Unique Identifier used to
                                                                uniquely identify entites in Meshery.
                                                                The UUID core defintion is used across
                                                                different schemas.
                                                              x-go-type: uuid.UUID
                                                              x-go-type-import:
                                                                path: github.com/gofrs/uuid
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: id
                                                                json: id
                                                        - oneOf:
                                                            - properties:
                                                                mutatorRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      The sequence of mutatorRef and
                                                                      mutatedRef must match. eg: mutatorRef:
                                                                      [[config, url], [config, name]],
                                                                      mutatedRef: [[configPatch, value],
                                                                      [name]]. The value [config, url] will be
                                                                      patched at [configPatch, value].
                                                                      Similarly [config,name] will be patched
                                                                      at [name].
                                                                  description: >-
                                                                    JSON ref to value from where patch
                                                                    should be applied.
                                                            - properties:
                                                                mutatedRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      JSONPath
                                                                      (https://en.wikipedia.org/wiki/JSONPath)
                                                                      to property to be patched.
                                            x-oapi-codegen-extra-tags:
                                              yaml: match
                                              json: match
                                          patch:
                                            allOf:
                                              - properties:
                                                  patchStrategy:
                                                    description: >-
                                                      patchStrategy allows you to make
                                                      specific changes to a resource using a
                                                      standard JSON Patch format (RFC 6902). 


                                                      add: Inserts a value into an array or
                                                      adds a member to an object.

                                                      replace: Replaces a value.

                                                      merge: Combines the values of the target
                                                      location with the values from the patch.
                                                      If the target location doesn't exist, it
                                                      is created.

                                                      strategic:specific to Kubernetes and
                                                      understands the structure of Kubernetes
                                                      objects. It can handle complex changes
                                                      like updating lists and maps, as well as
                                                      preserving default values. However, it's
                                                      not supported for custom resources. For
                                                      custom resources, only JSON Patch and
                                                      Merge Patch are typically supported.

                                                      remove: Removes a value.

                                                      copy: Copies a value from one location
                                                      to another.

                                                      move: Moves a value from one location to
                                                      another.

                                                      test: Tests that a value at the target
                                                      location is equal to a specified value.
                                                    $comment: >-
                                                      Array Indexing: When working with
                                                      arrays, be aware that Kubernetes uses
                                                      zero-based indexing in JSON patch paths.

                                                      Merge Patch vs. JSON Patch: Merge
                                                      patches are less flexible than JSON
                                                      patches and do not support all the same
                                                      operations.

                                                      Strategic Merge Patch: For some
                                                      Kubernetes resources, you can also use
                                                      the strategic type for a strategic merge
                                                      patch, which understands the structure
                                                      of Kubernetes objects and can handle
                                                      complex operations.
                                                    type: string
                                                    enum:
                                                      - merge
                                                      - strategic
                                                      - add
                                                      - remove
                                                      - copy
                                                      - move
                                                      - test
                                                    default: copy
                                              - oneOf:
                                                  - properties:
                                                      mutatorRef:
                                                        type: array
                                                        items:
                                                          type: array
                                                          items:
                                                            type: string
                                                          description: >-
                                                            The sequence of mutatorRef and
                                                            mutatedRef must match. eg: mutatorRef:
                                                            [[config, url], [config, name]],
                                                            mutatedRef: [[configPatch, value],
                                                            [name]]. The value [config, url] will be
                                                            patched at [configPatch, value].
                                                            Similarly [config,name] will be patched
                                                            at [name].
                                                        description: >-
                                                          JSON ref to value from where patch
                                                          should be applied.
                                                  - properties:
                                                      mutatedRef:
                                                        type: array
                                                        items:
                                                          type: array
                                                          items:
                                                            type: string
                                                          description: >-
                                                            JSONPath
                                                            (https://en.wikipedia.org/wiki/JSONPath)
                                                            to property to be patched.
                                            x-oapi-codegen-extra-tags:
                                              yaml: patch
                                              json: patch
                                        description: >-
                                          Optional fields that are a part of the
                                          `from` selector. Absence of a field has
                                          an implied * meaning.
                                allow:
                                  description: >-
                                    Selectors used to define relationships which
                                    are allowed.
                                  type: object
                                  required:
                                    - to
                                    - from
                                  properties:
                                    from:
                                      description: >-
                                        Describes the component(s) which are
                                        involved in the relationship along with
                                        a set of actions to perform upon
                                        selection match.
                                      type: array
                                      items:
                                        type: object
                                        additionalProperties: false
                                        properties:
                                          kind:
                                            type: string
                                            x-oapi-codegen-extra-tags:
                                              yaml: kind
                                              json: kind
                                          match_strategy_matrix:
                                            description: >-
                                              Strategy criterion for determing how to
                                              match the values at mutator/mutated
                                              paths
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                          model:
                                            description: >-
                                              Name of the model implicated by this
                                              selector. Learn more at
                                              https://docs.meshery.io/concepts/models
                                            $id: https://schemas.meshery.io/model.json
                                            $schema: http://json-schema.org/draft-07/schema#
                                            additionalProperties: false
                                            type: object
                                            properties:
                                              id:
                                                description: >-
                                                  Uniquely identifies the entity (i.e.
                                                  component) as defined in a declaration
                                                  (i.e. design).
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              schemaVersion:
                                                description: >-
                                                  Specifies the version of the schema used
                                                  for the definition.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: schemaVersion
                                                  json: schemaVersion
                                                type: string
                                                minLength: 2
                                                maxLength: 100
                                                pattern: >-
                                                  ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                example:
                                                  - v1
                                                  - v1alpha1
                                                  - v2beta3
                                                  - v1.custom-suffix
                                              version:
                                                description: Version of the model definition.
                                                type: string
                                                x-oapi-codegen-extra-tags:
                                                  yaml: version
                                                  json: version
                                                minLength: 5
                                                maxLength: 100
                                                pattern: >-
                                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              name:
                                                description: >-
                                                  The unique name for the model within the
                                                  scope of a registrant.
                                                type: string
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                x-oapi-codegen-extra-tags:
                                                  yaml: name
                                                  json: name
                                              displayName:
                                                description: Human-readable name for the model.
                                                minLength: 1
                                                maxLength: 100
                                                type: string
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                                x-oapi-codegen-extra-tags:
                                                  yaml: displayName
                                                  json: displayName
                                              description:
                                                type: string
                                                description: Description of the model.
                                                minLength: 1
                                                maxLength: 1000
                                                x-oapi-codegen-extra-tags:
                                                  yaml: description
                                                  json: description
                                              status:
                                                type: string
                                                description: >-
                                                  Status of model, including:

                                                  - duplicate: this component is a
                                                  duplicate of another. The component that
                                                  is to be the canonical reference and
                                                  that is duplicated by other components
                                                  should not be assigned the 'duplicate'
                                                  status.

                                                  - maintenance: model is unavailable for
                                                  a period of time.

                                                  - enabled: model is available for use
                                                  for all users of this Meshery Server.

                                                  - ignored: model is unavailable for use
                                                  for all users of this Meshery Server.
                                                enum:
                                                  - ignored
                                                  - enabled
                                                  - duplicate
                                                x-oapi-codegen-extra-tags:
                                                  yaml: status
                                                  json: status
                                              registrant:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: registrant
                                                  json: registrant
                                                  gorm: foreignKey:RegistrantId;references:Id
                                                $id: >-
                                                  https://schemas.meshery.io/component.json
                                                $schema: http://json-schema.org/draft-07/schema#
                                                description: >-
                                                  Meshery Connections are managed and
                                                  unmanaged resources that either through
                                                  discovery or manual entry are tracked by
                                                  Meshery. Learn more at
                                                  https://docs.meshery.io/concepts/logical/connections
                                                additionalProperties: false
                                                type: object
                                                required:
                                                  - kind
                                                  - type
                                                  - status
                                                properties:
                                                  id:
                                                    description: ID
                                                    type: string
                                                    format: uuid
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: id
                                                      json: id
                                                  name:
                                                    x-oapi-codegen-extra-tags:
                                                      db: name
                                                      yaml: name
                                                      json: name
                                                    type: string
                                                    description: Connection Name
                                                  credential_id:
                                                    x-go-name: CredentialId
                                                    x-oapi-codegen-extra-tags:
                                                      db: credential_id
                                                      yaml: credential_id
                                                      json: credential_id
                                                    description: Credential ID
                                                    type: string
                                                    format: uuid
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                  type:
                                                    x-oapi-codegen-extra-tags:
                                                      db: type
                                                      yaml: type
                                                      json: type
                                                    type: string
                                                    description: Connection Type
                                                  sub_type:
                                                    x-oapi-codegen-extra-tags:
                                                      db: sub_type
                                                      yaml: sub_type
                                                      json: sub_type
                                                    type: string
                                                    description: Connection Subtype
                                                  kind:
                                                    x-oapi-codegen-extra-tags:
                                                      db: kind
                                                      yaml: kind
                                                      json: kind
                                                    type: string
                                                    description: Connection Kind
                                                  metadata:
                                                    x-oapi-codegen-extra-tags:
                                                      db: metadata
                                                      yaml: metadata
                                                      json: metadata
                                                    type: object
                                                  status:
                                                    x-oapi-codegen-extra-tags:
                                                      db: status
                                                      yaml: status
                                                      json: status
                                                    description: Connection Status
                                                    type: string
                                                    enum:
                                                      - discovered
                                                      - registered
                                                      - connected
                                                      - ignored
                                                      - maintenance
                                                      - disconnected
                                                      - deleted
                                                      - not found
                                                  user_id:
                                                    x-go-name: UserID
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: user_id
                                                      json: user_id
                                                    type: string
                                                    format: uuid
                                                    description: >-
                                                      A Universally Unique Identifier used to
                                                      uniquely identify entites in Meshery.
                                                      The UUID core defintion is used across
                                                      different schemas.
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                  created_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: created_at
                                                      json: created_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                                  updated_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: updated_at
                                                      json: updated_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                                  deleted_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: deleted_at
                                                      json: deleted_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                              category:
                                                type: object
                                                description: Category of the model.
                                                properties:
                                                  id:
                                                    type: string
                                                    format: uuid
                                                    description: >-
                                                      A Universally Unique Identifier used to
                                                      uniquely identify entites in Meshery.
                                                      The UUID core defintion is used across
                                                      different schemas.
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: id
                                                      json: id
                                                  name:
                                                    type: string
                                                    minLength: 1
                                                    maxLength: 100
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: name
                                                      json: name
                                                  metadata:
                                                    type: object
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: metadata
                                                      json: metadata
                                                x-oapi-codegen-extra-tags:
                                                  yaml: category
                                                  json: category
                                                  gorm: foreignKey:CategoryId;references:Id
                                              subCategory:
                                                type: string
                                                description: Sub-category of the model.
                                                minLength: 1
                                                maxLength: 100
                                                x-oapi-codegen-extra-tags:
                                                  yaml: subCategory
                                                  json: subCategory
                                              metadata:
                                                type: object
                                                description: >-
                                                  Metadata containing additional
                                                  information associated with the model.
                                                properties:
                                                  capabilities:
                                                    type: array
                                                    description: Capabilities associated with the model
                                                    items:
                                                      $id: >-
                                                        https://schemas.meshery.io/capability.json
                                                      $schema: http://json-schema.org/draft-07/schema#
                                                      description: >-
                                                        Meshery manages entities in accordance
                                                        with their specific capabilities. This
                                                        field explicitly identifies those
                                                        capabilities largely by what actions a
                                                        given component supports; e.g.
                                                        metric-scrape, sub-interface, and so on.
                                                        This field is extensible. Entities may
                                                        define a broad array of capabilities,
                                                        which are in-turn dynamically
                                                        interpretted by Meshery for full
                                                        lifecycle management.
                                                      additionalProperties: false
                                                      type: object
                                                      required:
                                                        - schemaVersion
                                                        - version
                                                        - displayName
                                                        - kind
                                                        - type
                                                        - entityState
                                                        - status
                                                      x-oapi-codegen-extra-tags:
                                                        gorm: type:bytes;serializer:json
                                                      properties:
                                                        schemaVersion:
                                                          description: >-
                                                            Specifies the version of the schema to
                                                            which the capability definition
                                                            conforms.
                                                          type: string
                                                          minLength: 2
                                                          maxLength: 100
                                                          pattern: >-
                                                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                          example:
                                                            - v1
                                                            - v1alpha1
                                                            - v2beta3
                                                            - v1.custom-suffix
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: schemaVersion
                                                            json: schemaVersion
                                                        version:
                                                          description: Version of the capability definition.
                                                          type: string
                                                          minLength: 5
                                                          maxLength: 100
                                                          pattern: >-
                                                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: version
                                                            json: version
                                                        displayName:
                                                          description: >-
                                                            Name of the capability in human-readible
                                                            format.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: displayName
                                                            json: displayName
                                                        description:
                                                          type: string
                                                          description: >-
                                                            A written representation of the purpose
                                                            and characteristics of the capability.
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: description
                                                            json: description
                                                        kind:
                                                          description: >-
                                                            Top-level categorization of the
                                                            capability
                                                          additionalProperties: false
                                                          anyOf:
                                                            - const: action
                                                              description: >-
                                                                For capabilities related to executing
                                                                actions on entities. Example: initiate
                                                                log streaming on a Pod. Example:
                                                                initiate deployment of a component.
                                                            - const: mutate
                                                              description: >-
                                                                For capabilities related to mutating an
                                                                entity. Example: the ability to change
                                                                the configuration of a component.
                                                            - const: view
                                                              description: >-
                                                                For capabilities related to viewing an
                                                                entity. Example: the ability to view a
                                                                components configuration.
                                                            - const: interaction
                                                              description: >-
                                                                Catch all for capabilities related to
                                                                interaction with entities. Example: the
                                                                ability for a component to be dragged
                                                                and dropped. Example: supports event
                                                                bubbling to parent components. 
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: kind
                                                            json: kind
                                                        type:
                                                          description: >-
                                                            Classification of capabilities. Used to
                                                            group capabilities similar in nature.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: type
                                                            json: type
                                                        subType:
                                                          description: >-
                                                            Most granular unit of capability
                                                            classification. The combination of Kind,
                                                            Type and SubType together uniquely
                                                            identify a Capability.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: subType
                                                            json: subType
                                                        key:
                                                          description: Key that backs the capability.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: key
                                                            json: key
                                                        entityState:
                                                          description: >-
                                                            State of the entity in which the
                                                            capability is applicable.
                                                          type: array
                                                          items:
                                                            type: string
                                                            enum:
                                                              - declaration
                                                              - instance
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            description: >-
                                                              A string starting with an alphanumeric
                                                              character. Spaces and hyphens allowed.
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: entityState
                                                              json: entityState
                                                        status:
                                                          type: string
                                                          description: Status of the capability
                                                          default: enabled
                                                          enum:
                                                            - enabled
                                                            - disabled
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: status
                                                            json: status
                                                        metadata:
                                                          type: object
                                                          description: >-
                                                            Metadata contains additional information
                                                            associated with the capability.
                                                            Extension point.
                                                          additionalProperties: true
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: metadata
                                                            json: metadata
                                                  isAnnotation:
                                                    type: boolean
                                                    description: >-
                                                      Indicates whether the model and its
                                                      entities should be treated as deployable
                                                      entities or as logical representations.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: isAnnotation
                                                      json: isAnnotation
                                                  primaryColor:
                                                    type: string
                                                    description: Primary color associated with the model.
                                                    minLength: 1
                                                    maxLength: 50
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: primaryColor
                                                      json: primaryColor
                                                  secondaryColor:
                                                    type: string
                                                    description: >-
                                                      Secondary color associated with the
                                                      model.
                                                    minLength: 1
                                                    maxLength: 50
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: secondaryColor
                                                      json: secondaryColor
                                                  svgWhite:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the model in white
                                                      color.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgWhite
                                                      json: svgWhite
                                                  svgColor:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the model in
                                                      colored format.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgColor
                                                      json: svgColor
                                                  svgComplete:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the complete
                                                      model.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgComplete
                                                      json: svgComplete
                                                x-oapi-codegen-extra-tags:
                                                  gorm: type:bytes;serializer:json
                                                additionalProperties: true
                                              model:
                                                type: object
                                                description: >-
                                                  Registrant-defined data associated with
                                                  the model. Properties pertain to the
                                                  software being managed (e.g. Kubernetes
                                                  v1.31)
                                                required:
                                                  - version
                                                properties:
                                                  version:
                                                    description: >-
                                                      Version of the model as defined by the
                                                      registrant.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: version
                                                      json: version
                                                    type: string
                                                    minLength: 5
                                                    maxLength: 100
                                                    pattern: >-
                                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                x-oapi-codegen-extra-tags:
                                                  gorm: type:bytes;serializer:json
                                            required:
                                              - name
                                              - version
                                              - registrant
                                              - category
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          match:
                                            type: object
                                            additionalProperties: false
                                            oneOf:
                                              - type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                              - properties:
                                                  from:
                                                    $comment: >-
                                                      Type is array so that mutliple bindings
                                                      can be supported between 2 nodes
                                                    type: array
                                                    items:
                                                      type: object
                                                      allOf:
                                                        - properties:
                                                            kind:
                                                              type: string
                                                            id:
                                                              type: string
                                                              format: uuid
                                                              description: >-
                                                                A Universally Unique Identifier used to
                                                                uniquely identify entites in Meshery.
                                                                The UUID core defintion is used across
                                                                different schemas.
                                                              x-go-type: uuid.UUID
                                                              x-go-type-import:
                                                                path: github.com/gofrs/uuid
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: id
                                                                json: id
                                                        - oneOf:
                                                            - properties:
                                                                mutatorRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      The sequence of mutatorRef and
                                                                      mutatedRef must match. eg: mutatorRef:
                                                                      [[config, url], [config, name]],
                                                                      mutatedRef: [[configPatch, value],
                                                                      [name]]. The value [config, url] will be
                                                                      patched at [configPatch, value].
                                                                      Similarly [config,name] will be patched
                                                                      at [name].
                                                                  description: >-
                                                                    JSON ref to value from where patch
                                                                    should be applied.
                                                            - properties:
                                                                mutatedRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      JSONPath
                                                                      (https://en.wikipedia.org/wiki/JSONPath)
                                                                      to property to be patched.
                                                  to:
                                                    $comment: >-
                                                      Type is array so that mutliple bindings
                                                      can be supported between 2 nodes
                                                    type: array
                                                    items:
                                                      type: object
                                                      allOf:
                                                        - properties:
                                                            kind:
                                                              type: string
                                                            id:
                                                              type: string
                                                              format: uuid
                                                              description: >-
                                                                A Universally Unique Identifier used to
                                                                uniquely identify entites in Meshery.
                                                                The UUID core defintion is used across
                                                                different schemas.
                                                              x-go-type: uuid.UUID
                                                              x-go-type-import:
                                                                path: github.com/gofrs/uuid
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: id
                                                                json: id
                                                        - oneOf:
                                                            - properties:
                                                                mutatorRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      The sequence of mutatorRef and
                                                                      mutatedRef must match. eg: mutatorRef:
                                                                      [[config, url], [config, name]],
                                                                      mutatedRef: [[configPatch, value],
                                                                      [name]]. The value [config, url] will be
                                                                      patched at [configPatch, value].
                                                                      Similarly [config,name] will be patched
                                                                      at [name].
                                                                  description: >-
                                                                    JSON ref to value from where patch
                                                                    should be applied.
                                                            - properties:
                                                                mutatedRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      JSONPath
                                                                      (https://en.wikipedia.org/wiki/JSONPath)
                                                                      to property to be patched.
                                            x-oapi-codegen-extra-tags:
                                              yaml: match
                                              json: match
                                          patch:
                                            allOf:
                                              - properties:
                                                  patchStrategy:
                                                    description: >-
                                                      patchStrategy allows you to make
                                                      specific changes to a resource using a
                                                      standard JSON Patch format (RFC 6902). 


                                                      add: Inserts a value into an array or
                                                      adds a member to an object.

                                                      replace: Replaces a value.

                                                      merge: Combines the values of the target
                                                      location with the values from the patch.
                                                      If the target location doesn't exist, it
                                                      is created.

                                                      strategic:specific to Kubernetes and
                                                      understands the structure of Kubernetes
                                                      objects. It can handle complex changes
                                                      like updating lists and maps, as well as
                                                      preserving default values. However, it's
                                                      not supported for custom resources. For
                                                      custom resources, only JSON Patch and
                                                      Merge Patch are typically supported.

                                                      remove: Removes a value.

                                                      copy: Copies a value from one location
                                                      to another.

                                                      move: Moves a value from one location to
                                                      another.

                                                      test: Tests that a value at the target
                                                      location is equal to a specified value.
                                                    $comment: >-
                                                      Array Indexing: When working with
                                                      arrays, be aware that Kubernetes uses
                                                      zero-based indexing in JSON patch paths.

                                                      Merge Patch vs. JSON Patch: Merge
                                                      patches are less flexible than JSON
                                                      patches and do not support all the same
                                                      operations.

                                                      Strategic Merge Patch: For some
                                                      Kubernetes resources, you can also use
                                                      the strategic type for a strategic merge
                                                      patch, which understands the structure
                                                      of Kubernetes objects and can handle
                                                      complex operations.
                                                    type: string
                                                    enum:
                                                      - merge
                                                      - strategic
                                                      - add
                                                      - remove
                                                      - copy
                                                      - move
                                                      - test
                                                    default: copy
                                              - oneOf:
                                                  - properties:
                                                      mutatorRef:
                                                        type: array
                                                        items:
                                                          type: array
                                                          items:
                                                            type: string
                                                          description: >-
                                                            The sequence of mutatorRef and
                                                            mutatedRef must match. eg: mutatorRef:
                                                            [[config, url], [config, name]],
                                                            mutatedRef: [[configPatch, value],
                                                            [name]]. The value [config, url] will be
                                                            patched at [configPatch, value].
                                                            Similarly [config,name] will be patched
                                                            at [name].
                                                        description: >-
                                                          JSON ref to value from where patch
                                                          should be applied.
                                                  - properties:
                                                      mutatedRef:
                                                        type: array
                                                        items:
                                                          type: array
                                                          items:
                                                            type: string
                                                          description: >-
                                                            JSONPath
                                                            (https://en.wikipedia.org/wiki/JSONPath)
                                                            to property to be patched.
                                            x-oapi-codegen-extra-tags:
                                              yaml: patch
                                              json: patch
                                        description: >-
                                          Optional fields that are a part of the
                                          `from` selector. Absence of a field has
                                          an implied * meaning.
                                    to:
                                      description: >-
                                        Describes the component(s) which are
                                        involved in the relationship along with
                                        a set of actions to perform upon
                                        selection match.
                                      type: array
                                      items:
                                        type: object
                                        additionalProperties: false
                                        properties:
                                          kind:
                                            type: string
                                            x-oapi-codegen-extra-tags:
                                              yaml: kind
                                              json: kind
                                          model:
                                            description: >-
                                              Name of the model implicated by this
                                              selector. Learn more at
                                              https://docs.meshery.io/concepts/models
                                            $id: https://schemas.meshery.io/model.json
                                            $schema: http://json-schema.org/draft-07/schema#
                                            additionalProperties: false
                                            type: object
                                            properties:
                                              id:
                                                description: >-
                                                  Uniquely identifies the entity (i.e.
                                                  component) as defined in a declaration
                                                  (i.e. design).
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              schemaVersion:
                                                description: >-
                                                  Specifies the version of the schema used
                                                  for the definition.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: schemaVersion
                                                  json: schemaVersion
                                                type: string
                                                minLength: 2
                                                maxLength: 100
                                                pattern: >-
                                                  ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                example:
                                                  - v1
                                                  - v1alpha1
                                                  - v2beta3
                                                  - v1.custom-suffix
                                              version:
                                                description: Version of the model definition.
                                                type: string
                                                x-oapi-codegen-extra-tags:
                                                  yaml: version
                                                  json: version
                                                minLength: 5
                                                maxLength: 100
                                                pattern: >-
                                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              name:
                                                description: >-
                                                  The unique name for the model within the
                                                  scope of a registrant.
                                                type: string
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                x-oapi-codegen-extra-tags:
                                                  yaml: name
                                                  json: name
                                              displayName:
                                                description: Human-readable name for the model.
                                                minLength: 1
                                                maxLength: 100
                                                type: string
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                                x-oapi-codegen-extra-tags:
                                                  yaml: displayName
                                                  json: displayName
                                              description:
                                                type: string
                                                description: Description of the model.
                                                minLength: 1
                                                maxLength: 1000
                                                x-oapi-codegen-extra-tags:
                                                  yaml: description
                                                  json: description
                                              status:
                                                type: string
                                                description: >-
                                                  Status of model, including:

                                                  - duplicate: this component is a
                                                  duplicate of another. The component that
                                                  is to be the canonical reference and
                                                  that is duplicated by other components
                                                  should not be assigned the 'duplicate'
                                                  status.

                                                  - maintenance: model is unavailable for
                                                  a period of time.

                                                  - enabled: model is available for use
                                                  for all users of this Meshery Server.

                                                  - ignored: model is unavailable for use
                                                  for all users of this Meshery Server.
                                                enum:
                                                  - ignored
                                                  - enabled
                                                  - duplicate
                                                x-oapi-codegen-extra-tags:
                                                  yaml: status
                                                  json: status
                                              registrant:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: registrant
                                                  json: registrant
                                                  gorm: foreignKey:RegistrantId;references:Id
                                                $id: >-
                                                  https://schemas.meshery.io/component.json
                                                $schema: http://json-schema.org/draft-07/schema#
                                                description: >-
                                                  Meshery Connections are managed and
                                                  unmanaged resources that either through
                                                  discovery or manual entry are tracked by
                                                  Meshery. Learn more at
                                                  https://docs.meshery.io/concepts/logical/connections
                                                additionalProperties: false
                                                type: object
                                                required:
                                                  - kind
                                                  - type
                                                  - status
                                                properties:
                                                  id:
                                                    description: ID
                                                    type: string
                                                    format: uuid
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: id
                                                      json: id
                                                  name:
                                                    x-oapi-codegen-extra-tags:
                                                      db: name
                                                      yaml: name
                                                      json: name
                                                    type: string
                                                    description: Connection Name
                                                  credential_id:
                                                    x-go-name: CredentialId
                                                    x-oapi-codegen-extra-tags:
                                                      db: credential_id
                                                      yaml: credential_id
                                                      json: credential_id
                                                    description: Credential ID
                                                    type: string
                                                    format: uuid
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                  type:
                                                    x-oapi-codegen-extra-tags:
                                                      db: type
                                                      yaml: type
                                                      json: type
                                                    type: string
                                                    description: Connection Type
                                                  sub_type:
                                                    x-oapi-codegen-extra-tags:
                                                      db: sub_type
                                                      yaml: sub_type
                                                      json: sub_type
                                                    type: string
                                                    description: Connection Subtype
                                                  kind:
                                                    x-oapi-codegen-extra-tags:
                                                      db: kind
                                                      yaml: kind
                                                      json: kind
                                                    type: string
                                                    description: Connection Kind
                                                  metadata:
                                                    x-oapi-codegen-extra-tags:
                                                      db: metadata
                                                      yaml: metadata
                                                      json: metadata
                                                    type: object
                                                  status:
                                                    x-oapi-codegen-extra-tags:
                                                      db: status
                                                      yaml: status
                                                      json: status
                                                    description: Connection Status
                                                    type: string
                                                    enum:
                                                      - discovered
                                                      - registered
                                                      - connected
                                                      - ignored
                                                      - maintenance
                                                      - disconnected
                                                      - deleted
                                                      - not found
                                                  user_id:
                                                    x-go-name: UserID
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: user_id
                                                      json: user_id
                                                    type: string
                                                    format: uuid
                                                    description: >-
                                                      A Universally Unique Identifier used to
                                                      uniquely identify entites in Meshery.
                                                      The UUID core defintion is used across
                                                      different schemas.
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                  created_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: created_at
                                                      json: created_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                                  updated_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: updated_at
                                                      json: updated_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                                  deleted_at:
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: deleted_at
                                                      json: deleted_at
                                                    type: string
                                                    format: date-time
                                                    x-go-type-skip-optional-pointer: true
                                              category:
                                                type: object
                                                description: Category of the model.
                                                properties:
                                                  id:
                                                    type: string
                                                    format: uuid
                                                    description: >-
                                                      A Universally Unique Identifier used to
                                                      uniquely identify entites in Meshery.
                                                      The UUID core defintion is used across
                                                      different schemas.
                                                    x-go-type: uuid.UUID
                                                    x-go-type-import:
                                                      path: github.com/gofrs/uuid
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: id
                                                      json: id
                                                  name:
                                                    type: string
                                                    minLength: 1
                                                    maxLength: 100
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: name
                                                      json: name
                                                  metadata:
                                                    type: object
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: metadata
                                                      json: metadata
                                                x-oapi-codegen-extra-tags:
                                                  yaml: category
                                                  json: category
                                                  gorm: foreignKey:CategoryId;references:Id
                                              subCategory:
                                                type: string
                                                description: Sub-category of the model.
                                                minLength: 1
                                                maxLength: 100
                                                x-oapi-codegen-extra-tags:
                                                  yaml: subCategory
                                                  json: subCategory
                                              metadata:
                                                type: object
                                                description: >-
                                                  Metadata containing additional
                                                  information associated with the model.
                                                properties:
                                                  capabilities:
                                                    type: array
                                                    description: Capabilities associated with the model
                                                    items:
                                                      $id: >-
                                                        https://schemas.meshery.io/capability.json
                                                      $schema: http://json-schema.org/draft-07/schema#
                                                      description: >-
                                                        Meshery manages entities in accordance
                                                        with their specific capabilities. This
                                                        field explicitly identifies those
                                                        capabilities largely by what actions a
                                                        given component supports; e.g.
                                                        metric-scrape, sub-interface, and so on.
                                                        This field is extensible. Entities may
                                                        define a broad array of capabilities,
                                                        which are in-turn dynamically
                                                        interpretted by Meshery for full
                                                        lifecycle management.
                                                      additionalProperties: false
                                                      type: object
                                                      required:
                                                        - schemaVersion
                                                        - version
                                                        - displayName
                                                        - kind
                                                        - type
                                                        - entityState
                                                        - status
                                                      x-oapi-codegen-extra-tags:
                                                        gorm: type:bytes;serializer:json
                                                      properties:
                                                        schemaVersion:
                                                          description: >-
                                                            Specifies the version of the schema to
                                                            which the capability definition
                                                            conforms.
                                                          type: string
                                                          minLength: 2
                                                          maxLength: 100
                                                          pattern: >-
                                                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                          example:
                                                            - v1
                                                            - v1alpha1
                                                            - v2beta3
                                                            - v1.custom-suffix
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: schemaVersion
                                                            json: schemaVersion
                                                        version:
                                                          description: Version of the capability definition.
                                                          type: string
                                                          minLength: 5
                                                          maxLength: 100
                                                          pattern: >-
                                                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: version
                                                            json: version
                                                        displayName:
                                                          description: >-
                                                            Name of the capability in human-readible
                                                            format.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: displayName
                                                            json: displayName
                                                        description:
                                                          type: string
                                                          description: >-
                                                            A written representation of the purpose
                                                            and characteristics of the capability.
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: description
                                                            json: description
                                                        kind:
                                                          description: >-
                                                            Top-level categorization of the
                                                            capability
                                                          additionalProperties: false
                                                          anyOf:
                                                            - const: action
                                                              description: >-
                                                                For capabilities related to executing
                                                                actions on entities. Example: initiate
                                                                log streaming on a Pod. Example:
                                                                initiate deployment of a component.
                                                            - const: mutate
                                                              description: >-
                                                                For capabilities related to mutating an
                                                                entity. Example: the ability to change
                                                                the configuration of a component.
                                                            - const: view
                                                              description: >-
                                                                For capabilities related to viewing an
                                                                entity. Example: the ability to view a
                                                                components configuration.
                                                            - const: interaction
                                                              description: >-
                                                                Catch all for capabilities related to
                                                                interaction with entities. Example: the
                                                                ability for a component to be dragged
                                                                and dropped. Example: supports event
                                                                bubbling to parent components. 
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: kind
                                                            json: kind
                                                        type:
                                                          description: >-
                                                            Classification of capabilities. Used to
                                                            group capabilities similar in nature.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: type
                                                            json: type
                                                        subType:
                                                          description: >-
                                                            Most granular unit of capability
                                                            classification. The combination of Kind,
                                                            Type and SubType together uniquely
                                                            identify a Capability.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: subType
                                                            json: subType
                                                        key:
                                                          description: Key that backs the capability.
                                                          type: string
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: key
                                                            json: key
                                                        entityState:
                                                          description: >-
                                                            State of the entity in which the
                                                            capability is applicable.
                                                          type: array
                                                          items:
                                                            type: string
                                                            enum:
                                                              - declaration
                                                              - instance
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            description: >-
                                                              A string starting with an alphanumeric
                                                              character. Spaces and hyphens allowed.
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: entityState
                                                              json: entityState
                                                        status:
                                                          type: string
                                                          description: Status of the capability
                                                          default: enabled
                                                          enum:
                                                            - enabled
                                                            - disabled
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: status
                                                            json: status
                                                        metadata:
                                                          type: object
                                                          description: >-
                                                            Metadata contains additional information
                                                            associated with the capability.
                                                            Extension point.
                                                          additionalProperties: true
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: metadata
                                                            json: metadata
                                                  isAnnotation:
                                                    type: boolean
                                                    description: >-
                                                      Indicates whether the model and its
                                                      entities should be treated as deployable
                                                      entities or as logical representations.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: isAnnotation
                                                      json: isAnnotation
                                                  primaryColor:
                                                    type: string
                                                    description: Primary color associated with the model.
                                                    minLength: 1
                                                    maxLength: 50
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: primaryColor
                                                      json: primaryColor
                                                  secondaryColor:
                                                    type: string
                                                    description: >-
                                                      Secondary color associated with the
                                                      model.
                                                    minLength: 1
                                                    maxLength: 50
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: secondaryColor
                                                      json: secondaryColor
                                                  svgWhite:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the model in white
                                                      color.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgWhite
                                                      json: svgWhite
                                                  svgColor:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the model in
                                                      colored format.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgColor
                                                      json: svgColor
                                                  svgComplete:
                                                    type: string
                                                    description: >-
                                                      SVG representation of the complete
                                                      model.
                                                    minLength: 1
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: svgComplete
                                                      json: svgComplete
                                                x-oapi-codegen-extra-tags:
                                                  gorm: type:bytes;serializer:json
                                                additionalProperties: true
                                              model:
                                                type: object
                                                description: >-
                                                  Registrant-defined data associated with
                                                  the model. Properties pertain to the
                                                  software being managed (e.g. Kubernetes
                                                  v1.31)
                                                required:
                                                  - version
                                                properties:
                                                  version:
                                                    description: >-
                                                      Version of the model as defined by the
                                                      registrant.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: version
                                                      json: version
                                                    type: string
                                                    minLength: 5
                                                    maxLength: 100
                                                    pattern: >-
                                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                x-oapi-codegen-extra-tags:
                                                  gorm: type:bytes;serializer:json
                                            required:
                                              - name
                                              - version
                                              - registrant
                                              - category
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          match:
                                            type: object
                                            additionalProperties: false
                                            oneOf:
                                              - type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                              - properties:
                                                  from:
                                                    $comment: >-
                                                      Type is array so that mutliple bindings
                                                      can be supported between 2 nodes
                                                    type: array
                                                    items:
                                                      type: object
                                                      allOf:
                                                        - properties:
                                                            kind:
                                                              type: string
                                                            id:
                                                              type: string
                                                              format: uuid
                                                              description: >-
                                                                A Universally Unique Identifier used to
                                                                uniquely identify entites in Meshery.
                                                                The UUID core defintion is used across
                                                                different schemas.
                                                              x-go-type: uuid.UUID
                                                              x-go-type-import:
                                                                path: github.com/gofrs/uuid
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: id
                                                                json: id
                                                        - oneOf:
                                                            - properties:
                                                                mutatorRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      The sequence of mutatorRef and
                                                                      mutatedRef must match. eg: mutatorRef:
                                                                      [[config, url], [config, name]],
                                                                      mutatedRef: [[configPatch, value],
                                                                      [name]]. The value [config, url] will be
                                                                      patched at [configPatch, value].
                                                                      Similarly [config,name] will be patched
                                                                      at [name].
                                                                  description: >-
                                                                    JSON ref to value from where patch
                                                                    should be applied.
                                                            - properties:
                                                                mutatedRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      JSONPath
                                                                      (https://en.wikipedia.org/wiki/JSONPath)
                                                                      to property to be patched.
                                                  to:
                                                    $comment: >-
                                                      Type is array so that mutliple bindings
                                                      can be supported between 2 nodes
                                                    type: array
                                                    items:
                                                      type: object
                                                      allOf:
                                                        - properties:
                                                            kind:
                                                              type: string
                                                            id:
                                                              type: string
                                                              format: uuid
                                                              description: >-
                                                                A Universally Unique Identifier used to
                                                                uniquely identify entites in Meshery.
                                                                The UUID core defintion is used across
                                                                different schemas.
                                                              x-go-type: uuid.UUID
                                                              x-go-type-import:
                                                                path: github.com/gofrs/uuid
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: id
                                                                json: id
                                                        - oneOf:
                                                            - properties:
                                                                mutatorRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      The sequence of mutatorRef and
                                                                      mutatedRef must match. eg: mutatorRef:
                                                                      [[config, url], [config, name]],
                                                                      mutatedRef: [[configPatch, value],
                                                                      [name]]. The value [config, url] will be
                                                                      patched at [configPatch, value].
                                                                      Similarly [config,name] will be patched
                                                                      at [name].
                                                                  description: >-
                                                                    JSON ref to value from where patch
                                                                    should be applied.
                                                            - properties:
                                                                mutatedRef:
                                                                  type: array
                                                                  items:
                                                                    type: array
                                                                    items:
                                                                      type: string
                                                                    description: >-
                                                                      JSONPath
                                                                      (https://en.wikipedia.org/wiki/JSONPath)
                                                                      to property to be patched.
                                            x-oapi-codegen-extra-tags:
                                              yaml: match
                                              json: match
                                          patch:
                                            allOf:
                                              - properties:
                                                  patchStrategy:
                                                    description: >-
                                                      patchStrategy allows you to make
                                                      specific changes to a resource using a
                                                      standard JSON Patch format (RFC 6902). 


                                                      add: Inserts a value into an array or
                                                      adds a member to an object.

                                                      replace: Replaces a value.

                                                      merge: Combines the values of the target
                                                      location with the values from the patch.
                                                      If the target location doesn't exist, it
                                                      is created.

                                                      strategic:specific to Kubernetes and
                                                      understands the structure of Kubernetes
                                                      objects. It can handle complex changes
                                                      like updating lists and maps, as well as
                                                      preserving default values. However, it's
                                                      not supported for custom resources. For
                                                      custom resources, only JSON Patch and
                                                      Merge Patch are typically supported.

                                                      remove: Removes a value.

                                                      copy: Copies a value from one location
                                                      to another.

                                                      move: Moves a value from one location to
                                                      another.

                                                      test: Tests that a value at the target
                                                      location is equal to a specified value.
                                                    $comment: >-
                                                      Array Indexing: When working with
                                                      arrays, be aware that Kubernetes uses
                                                      zero-based indexing in JSON patch paths.

                                                      Merge Patch vs. JSON Patch: Merge
                                                      patches are less flexible than JSON
                                                      patches and do not support all the same
                                                      operations.

                                                      Strategic Merge Patch: For some
                                                      Kubernetes resources, you can also use
                                                      the strategic type for a strategic merge
                                                      patch, which understands the structure
                                                      of Kubernetes objects and can handle
                                                      complex operations.
                                                    type: string
                                                    enum:
                                                      - merge
                                                      - strategic
                                                      - add
                                                      - remove
                                                      - copy
                                                      - move
                                                      - test
                                                    default: copy
                                              - oneOf:
                                                  - properties:
                                                      mutatorRef:
                                                        type: array
                                                        items:
                                                          type: array
                                                          items:
                                                            type: string
                                                          description: >-
                                                            The sequence of mutatorRef and
                                                            mutatedRef must match. eg: mutatorRef:
                                                            [[config, url], [config, name]],
                                                            mutatedRef: [[configPatch, value],
                                                            [name]]. The value [config, url] will be
                                                            patched at [configPatch, value].
                                                            Similarly [config,name] will be patched
                                                            at [name].
                                                        description: >-
                                                          JSON ref to value from where patch
                                                          should be applied.
                                                  - properties:
                                                      mutatedRef:
                                                        type: array
                                                        items:
                                                          type: array
                                                          items:
                                                            type: string
                                                          description: >-
                                                            JSONPath
                                                            (https://en.wikipedia.org/wiki/JSONPath)
                                                            to property to be patched.
                                            x-oapi-codegen-extra-tags:
                                              yaml: patch
                                              json: patch
                                        description: >-
                                          Optional fields that are a part of the
                                          `from` selector. Absence of a field has
                                          an implied * meaning.
                  required:
                    - id
                    - name
                    - schemaVersion
                    - version
                    - components
                    - relationships
                options:
                  type: object
                  properties:
                    returnDiffOnly:
                      type: boolean
                      description: >-
                        If true, only return the diff of changes instead of the
                        complete updated design
                    enableTrace:
                      type: boolean
                      description: >-
                        If true, include detailed trace information in the
                        response
      responses:
        '200':
          description: Successful evaluation
          content:
            application/json:
              schema:
                type: object
                description: >-
                  Schema for the response of a relationship evaluation process
                  in Meshery
                required:
                  - schemaVersion
                  - design
                  - actions
                properties:
                  schemaVersion:
                    type: string
                    description: >-
                      Specifies the version of the schema to which the
                      evaluation response conforms.
                  design:
                    x-go-type: pattern.PatternFile
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1beta1/pattern
                    description: >-
                      The final evaluated design, including all updated
                      components and relationships. This can be either the
                      complete updated design or only a diff of changes. The
                      version of the design will be automatically incremented if
                      any modifications are made during the evaluation process.
                      This field provides a comprehensive view of the design
                      state after all relationship evaluations and policy
                      applications have been completed.
                    $schema: http://json-schema.org/draft-07/schema#
                    title: Design Schema
                    type: object
                    properties:
                      id:
                        x-order: 1
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entites in Meshery. The UUID core defintion
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        description: >-
                          Name of the design; a descriptive, but concise title
                          for the design document.
                        x-order: 2
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema to which the
                          design conforms.
                        x-order: 3
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        default: v0.0.1
                        x-order: 4
                        description: >-
                          Revision of the design as expressed by an
                          auto-incremented, SemVer-compliant version number. May
                          be manually set by a user or third-party system, but
                          will always be required to be of version number higher
                          than the previously defined version number.
                        minLength: 1
                        maxLength: 50
                        type: string
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                      metadata:
                        type: object
                        x-order: 5
                        additionalProperties: true
                        properties:
                          resolvedAliases:
                            description: Map of resolved aliases present in the design
                            type: object
                            x-go-type: map[string]core.ResolvedAlias
                            x-go-type-import:
                              path: github.com/meshery/schemas/models/v1alpha1/core
                            additionalProperties:
                              description: >-
                                An resolved alias is an component that acts as
                                an ref/pointer to a field in another component,
                                resolvedAlias are aware of there immediate
                                parents and completely resolved parents also
                              allOf:
                                - description: >-
                                    An alias is an component that acts as an
                                    ref/pointer to a field in another component,
                                    nonResolvedAlias are not aware of there
                                    immediate parents
                                  type: object
                                  properties:
                                    relationship_id:
                                      type: string
                                      format: uuid
                                      description: >-
                                        A Universally Unique Identifier used to
                                        uniquely identify entities in Meshery.
                                        The UUID core definition is used across
                                        different schemas.
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                    alias_component_id:
                                      type: string
                                      format: uuid
                                      description: >-
                                        A Universally Unique Identifier used to
                                        uniquely identify entities in Meshery.
                                        The UUID core definition is used across
                                        different schemas.
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                    immediate_parent_id:
                                      type: string
                                      format: uuid
                                      description: >-
                                        A Universally Unique Identifier used to
                                        uniquely identify entities in Meshery.
                                        The UUID core definition is used across
                                        different schemas.
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                    immediate_ref_field_path:
                                      type: array
                                      items:
                                        type: string
                                  required:
                                    - relationship_id
                                    - alias_component_id
                                    - immediate_parent_id
                                    - immediate_ref_field_path
                                - type: object
                                  properties:
                                    resolved_parent_id:
                                      type: string
                                      format: uuid
                                      description: >-
                                        A Universally Unique Identifier used to
                                        uniquely identify entities in Meshery.
                                        The UUID core definition is used across
                                        different schemas.
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                    resolved_ref_field_path:
                                      type: array
                                      items:
                                        type: string
                                  required:
                                    - resolved_parent_id
                                    - resolved_ref_field_path
                      components:
                        description: A list of one or more component declarations.
                        minItems: 0
                        x-order: 6
                        type: array
                        items:
                          x-go-type: '*component.ComponentDefinition'
                          x-go-type-import:
                            path: >-
                              github.com/meshery/schemas/models/v1beta1/component
                          $id: https://schemas.meshery.io/component.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: >-
                            Components are reusable building blocks for
                            depicting capabilities defined within models. Learn
                            more at https://docs.meshery.io/concepts/components
                          additionalProperties: false
                          type: object
                          properties:
                            id:
                              description: >-
                                Uniquely identifies the entity (i.e. component)
                                as defined in a declaration (i.e. design).
                              x-order: 1
                              x-oapi-codegen-extra-tags:
                                yaml: id
                                json: id
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              default: 00000000-0000-0000-0000-000000000000
                            schemaVersion:
                              x-order: 2
                              description: >-
                                Specifies the version of the schema to which the
                                component definition conforms.
                              x-oapi-codegen-extra-tags:
                                yaml: schemaVersion
                                json: schemaVersion
                              default: components.meshery.io/v1beta1
                              type: string
                              minLength: 2
                              maxLength: 100
                              pattern: >-
                                ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                              example:
                                - v1
                                - v1alpha1
                                - v2beta3
                                - v1.custom-suffix
                            version:
                              x-order: 3
                              description: Version of the component definition.
                              minLength: 1
                              maxLength: 50
                              x-oapi-codegen-extra-tags:
                                yaml: version
                                json: version
                              type: string
                              pattern: >-
                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              default: v0.0.1
                            displayName:
                              x-order: 4
                              description: Name of the component in human-readible format.
                              x-oapi-codegen-extra-tags:
                                yaml: displayName
                                json: displayName
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description:
                              x-order: 5
                              type: string
                              description: >-
                                A written representation of the purpose and
                                characteristics of the component.
                              x-oapi-codegen-extra-tags:
                                yaml: description
                                json: description
                            format:
                              x-order: 6
                              type: string
                              enum:
                                - JSON
                                - CUE
                              default: JSON
                              description: >-
                                Format specifies the format used in the
                                `component.schema` field. JSON is the default.
                              x-oapi-codegen-extra-tags:
                                yaml: format
                                json: format
                            model:
                              x-go-type: model.ModelDefinition
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1beta1/model
                              x-order: 7
                              description: >-
                                Reference to the specific registered model to
                                which the component belongs and from which model
                                version, category, and other properties may be
                                referenced. Learn more at
                                https://docs.meshery.io/concepts/models
                              x-oapi-codegen-extra-tags:
                                gorm: foreignKey:ModelId;references:Id
                              $id: https://schemas.meshery.io/model.json
                              $schema: http://json-schema.org/draft-07/schema#
                              additionalProperties: false
                              type: object
                              properties:
                                id:
                                  description: >-
                                    Uniquely identifies the entity (i.e.
                                    component) as defined in a declaration (i.e.
                                    design).
                                  x-order: 1
                                  x-oapi-codegen-extra-tags:
                                    yaml: id
                                    json: id
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema used for
                                    the definition.
                                  x-order: 2
                                  x-oapi-codegen-extra-tags:
                                    yaml: schemaVersion
                                    json: schemaVersion
                                  default: models.meshery.io/v1beta1
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                version:
                                  description: Version of the model definition.
                                  type: string
                                  x-order: 3
                                  x-oapi-codegen-extra-tags:
                                    yaml: version
                                    json: version
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  default: v0.0.1
                                name:
                                  type: string
                                  description: >-
                                    The unique name for the model within the
                                    scope of a registrant.
                                  helperText: >-
                                    Model name should be in lowercase with
                                    hyphens, not whitespaces.
                                  pattern: ^[a-z0-9-]+$
                                  examples:
                                    - cert-manager
                                  x-order: 4
                                  x-oapi-codegen-extra-tags:
                                    yaml: name
                                    json: name
                                  default: untitled-model
                                displayName:
                                  description: Human-readable name for the model.
                                  helperText: >-
                                    Model display name may include letters,
                                    numbers, and spaces. Special characters are
                                    not allowed.
                                  minLength: 1
                                  maxLength: 100
                                  type: string
                                  pattern: ^[a-zA-Z0-9 ]+$
                                  examples:
                                    - Cert Manager
                                  x-order: 5
                                  x-oapi-codegen-extra-tags:
                                    yaml: displayName
                                    json: displayName
                                  default: Untitled Model
                                description:
                                  type: string
                                  default: A new Meshery model.
                                  description: Description of the model.
                                  minLength: 1
                                  maxLength: 1000
                                  x-order: 6
                                  x-oapi-codegen-extra-tags:
                                    yaml: description,omitempty
                                    json: description,omitempty
                                status:
                                  type: string
                                  description: >-
                                    Status of model, including:

                                    - duplicate: this component is a duplicate
                                    of another. The component that is to be the
                                    canonical reference and that is duplicated
                                    by other components should not be assigned
                                    the 'duplicate' status.

                                    - maintenance: model is unavailable for a
                                    period of time.

                                    - enabled: model is available for use for
                                    all users of this Meshery Server.

                                    - ignored: model is unavailable for use for
                                    all users of this Meshery Server.
                                  enum:
                                    - ignored
                                    - enabled
                                    - duplicate
                                  x-order: 7
                                  x-oapi-codegen-extra-tags:
                                    yaml: status
                                    json: status
                                  default: enabled
                                registrant:
                                  x-oapi-codegen-extra-tags:
                                    yaml: registrant
                                    json: registrant
                                    gorm: foreignKey:RegistrantId;references:ID
                                  x-order: 8
                                  x-go-type: connection.Connection
                                  x-go-type-import:
                                    path: >-
                                      github.com/meshery/schemas/models/v1beta1/connection
                                  $id: https://schemas.meshery.io/component.json
                                  $schema: http://json-schema.org/draft-07/schema#
                                  description: >-
                                    Meshery Connections are managed and
                                    unmanaged resources that either through
                                    discovery or manual entry are tracked by
                                    Meshery. Learn more at
                                    https://docs.meshery.io/concepts/logical/connections
                                  additionalProperties: false
                                  type: object
                                  required:
                                    - id
                                    - schemaVersion
                                    - name
                                    - type
                                    - sub_type
                                    - kind
                                    - status
                                  properties:
                                    id:
                                      description: ID
                                      x-order: 1
                                      x-go-name: ID
                                      x-oapi-codegen-extra-tags:
                                        db: id
                                        yaml: id
                                      type: string
                                      format: uuid
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      default: 00000000-0000-0000-0000-000000000000
                                    name:
                                      x-oapi-codegen-extra-tags:
                                        db: name
                                        yaml: name
                                      x-order: 2
                                      type: string
                                      description: Connection Name
                                    credential_id:
                                      x-go-name: CredentialID
                                      x-oapi-codegen-extra-tags:
                                        db: credential_id
                                        yaml: credential_id
                                      x-order: 3
                                      description: Credential ID
                                      type: string
                                      format: uuid
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      default: 00000000-0000-0000-0000-000000000000
                                    type:
                                      x-oapi-codegen-extra-tags:
                                        db: type
                                        yaml: type
                                      x-order: 4
                                      type: string
                                      description: Connection Type
                                    sub_type:
                                      x-oapi-codegen-extra-tags:
                                        db: sub_type
                                        yaml: sub_type
                                      x-order: 5
                                      type: string
                                      description: Connection Subtype
                                    kind:
                                      x-oapi-codegen-extra-tags:
                                        db: kind
                                        yaml: kind
                                      x-order: 6
                                      type: string
                                      description: Connection Kind
                                    metadata:
                                      x-oapi-codegen-extra-tags:
                                        db: metadata
                                        yaml: metadata
                                      x-order: 7
                                      x-go-type: core.Map
                                      x-go-type-skip-optional-pointer: true
                                      type: object
                                    status:
                                      x-oapi-codegen-extra-tags:
                                        db: status
                                        yaml: status
                                      x-order: 8
                                      description: Connection Status
                                      type: string
                                      enum:
                                        - discovered
                                        - registered
                                        - connected
                                        - ignored
                                        - maintenance
                                        - disconnected
                                        - deleted
                                        - not found
                                    user_id:
                                      x-go-name: UserID
                                      x-oapi-codegen-extra-tags:
                                        db: user_id
                                        yaml: user_id
                                      x-order: 9
                                      type: string
                                      format: uuid
                                      description: >-
                                        A Universally Unique Identifier used to
                                        uniquely identify entites in Meshery.
                                        The UUID core defintion is used across
                                        different schemas.
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      default: 00000000-0000-0000-0000-000000000000
                                    created_at:
                                      x-oapi-codegen-extra-tags:
                                        db: created_at
                                        yaml: created_at
                                      x-order: 10
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                    updated_at:
                                      x-oapi-codegen-extra-tags:
                                        db: updated_at
                                        yaml: updated_at
                                      x-order: 11
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                    deleted_at:
                                      x-oapi-codegen-extra-tags:
                                        db: deleted_at
                                        yaml: deleted_at
                                      x-go-type: core.NullTime
                                      x-order: 12
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                    environments:
                                      type: array
                                      items:
                                        x-go-type: '*environment.Environment'
                                        $id: >-
                                          https://schemas.meshery.io/environment.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Environments allow you to
                                          logically group related Connections and
                                          their associated Credentials.. Learn
                                          more at
                                          https://docs.meshery.io/concepts/logical/environments
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - id
                                          - name
                                          - description
                                          - organization_id
                                        properties:
                                          id:
                                            description: ID
                                            x-order: 1
                                            x-go-name: ID
                                            x-oapi-codegen-extra-tags:
                                              db: id
                                              yaml: id
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            default: 00000000-0000-0000-0000-000000000000
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                            x-order: 2
                                            type: string
                                            description: Environment name
                                          description:
                                            x-oapi-codegen-extra-tags:
                                              db: description
                                              yaml: description
                                            x-order: 3
                                            type: string
                                            description: Environment description
                                          organization_id:
                                            x-go-name: OrganizationID
                                            x-oapi-codegen-extra-tags:
                                              db: organization_id
                                              yaml: organization_id
                                            x-order: 4
                                            description: Environment organization ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            default: 00000000-0000-0000-0000-000000000000
                                          owner:
                                            x-oapi-codegen-extra-tags:
                                              db: owner
                                              yaml: owner
                                            x-order: 5
                                            description: Environment owner
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            default: 00000000-0000-0000-0000-000000000000
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              db: created_at
                                              yaml: created_at
                                            x-order: 6
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                            x-order: 7
                                            x-go-type: core.Map
                                            x-go-type-skip-optional-pointer: true
                                            type: object
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              db: updated_at
                                              yaml: updated_at
                                            x-order: 8
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              db: deleted_at
                                              yaml: deleted_at
                                            x-go-type: core.NullTime
                                            x-go-import: database/sql
                                            x-order: 9
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      x-oapi-codegen-extra-tags:
                                        db: '-'
                                        yaml: environments
                                        gorm: '-'
                                      x-go-type-skip-optional-pointer: true
                                      x-order: 13
                                    schemaVersion:
                                      description: >-
                                        Specifies the version of the schema used
                                        for the definition.
                                      x-order: 14
                                      x-oapi-codegen-extra-tags:
                                        yaml: schemaVersion
                                        db: '-'
                                        gorm: '-'
                                      default: connections.meshery.io/v1beta1
                                      type: string
                                      minLength: 2
                                      maxLength: 100
                                      pattern: >-
                                        ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                      example:
                                        - v1
                                        - v1alpha1
                                        - v2beta3
                                        - v1.custom-suffix
                                registrantId:
                                  description: ID of the registrant.
                                  x-oapi-codegen-extra-tags:
                                    yaml: connection_id
                                    json: connection_id
                                    gorm: column:connection_id
                                  x-order: 8
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                categoryId:
                                  description: ID of the category.
                                  x-oapi-codegen-extra-tags:
                                    yaml: '-'
                                    json: '-'
                                    gorm: categoryID
                                  x-order: 8
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                category:
                                  x-order: 9
                                  x-oapi-codegen-extra-tags:
                                    yaml: category
                                    json: category
                                    gorm: foreignKey:CategoryId;references:Id
                                  x-go-type: category.CategoryDefinition
                                  x-go-type-import:
                                    path: >-
                                      github.com/meshery/schemas/models/v1beta1/category
                                  $id: https://schemas.meshery.io/category.json
                                  $schema: http://json-schema.org/draft-07/schema#
                                  type: object
                                  description: Category of the model.
                                  required:
                                    - id
                                    - name
                                    - metadata
                                  properties:
                                    id:
                                      x-order: 1
                                      type: string
                                      format: uuid
                                      description: >-
                                        A Universally Unique Identifier used to
                                        uniquely identify entites in Meshery.
                                        The UUID core defintion is used across
                                        different schemas.
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      default: 00000000-0000-0000-0000-000000000000
                                    name:
                                      type: string
                                      minLength: 1
                                      maxLength: 100
                                      x-oapi-codegen-extra-tags:
                                        yaml: name
                                        json: name
                                        gorm: name
                                      default: Uncategorized
                                      description: >-
                                        The category of the model that
                                        determines the main grouping.
                                      enum:
                                        - Analytics
                                        - App Definition and Development
                                        - Cloud Native Network
                                        - Cloud Native Storage
                                        - Database
                                        - Machine Learning
                                        - Observability and Analysis
                                        - Orchestration & Management
                                        - Platform
                                        - Provisioning
                                        - Runtime
                                        - Security & Compliance
                                        - Serverless
                                        - Tools
                                        - Uncategorized
                                      x-order: 2
                                    metadata:
                                      type: object
                                      x-oapi-codegen-extra-tags:
                                        yaml: metadata,omitempty
                                        json: metadata,omitempty
                                        gorm: type:bytes;serializer:json
                                      x-order: 3
                                subCategory:
                                  x-order: 10
                                  x-go-type: subcategory.SubCategoryDefinition
                                  x-go-type-import:
                                    path: >-
                                      github.com/meshery/schemas/models/v1beta1/subcategory
                                  $id: https://schemas.meshery.io/category.json
                                  $schema: http://json-schema.org/draft-07/schema#
                                  type: string
                                  title: SubCategory
                                  description: >-
                                    Sub category of the model determines the
                                    secondary grouping.
                                  default: Uncategorized
                                  enum:
                                    - API Gateway
                                    - API Integration
                                    - Application Definition & Image Build
                                    - Automation & Configuration
                                    - Certified Kubernetes - Distribution
                                    - Chaos Engineering
                                    - Cloud Native Storage
                                    - Cloud Provider
                                    - CNI
                                    - Compute
                                    - Container Registry
                                    - Container Runtime
                                    - Container Security
                                    - Container
                                    - Content Delivery Network
                                    - Continuous Integration & Delivery
                                    - Coordination & Service Discovery
                                    - Database
                                    - Flowchart
                                    - Framework
                                    - Installable Platform
                                    - Key Management
                                    - Key Management Service
                                    - Kubernetes
                                    - Logging
                                    - Machine Learning
                                    - Management Governance
                                    - Metrics
                                    - Monitoring
                                    - Networking Content Delivery
                                    - Operating System
                                    - Query
                                    - Remote Procedure Call
                                    - Scheduling & Orchestration
                                    - Secrets Management
                                    - Security Identity & Compliance
                                    - Service Mesh
                                    - Service Proxy
                                    - Source Version Control
                                    - Storage
                                    - Specifications
                                    - Streaming & Messaging
                                    - Tools
                                    - Tracing
                                    - Uncategorized
                                    - Video Conferencing
                                  minLength: 1
                                  maxLength: 100
                                  x-oapi-codegen-extra-tags:
                                    yaml: subCategory
                                    json: subCategory
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata containing additional information
                                    associated with the model.
                                  required:
                                    - svgWhite
                                    - svgColor
                                  properties:
                                    capabilities:
                                      type: array
                                      description: Capabilities associated with the model
                                      items:
                                        x-go-type: capability.Capability
                                        x-go-type-import:
                                          path: >-
                                            github.com/meshery/schemas/models/v1alpha1/capability
                                        $id: >-
                                          https://schemas.meshery.io/capability.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery manages entities in accordance
                                          with their specific capabilities. This
                                          field explicitly identifies those
                                          capabilities largely by what actions a
                                          given component supports; e.g.
                                          metric-scrape, sub-interface, and so on.
                                          This field is extensible. Entities may
                                          define a broad array of capabilities,
                                          which are in-turn dynamically
                                          interpretted by Meshery for full
                                          lifecycle management.
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - description
                                          - schemaVersion
                                          - version
                                          - displayName
                                          - kind
                                          - type
                                          - subType
                                          - entityState
                                          - key
                                          - status
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        properties:
                                          schemaVersion:
                                            description: >-
                                              Specifies the version of the schema to
                                              which the capability definition
                                              conforms.
                                            type: string
                                            minLength: 2
                                            maxLength: 100
                                            pattern: >-
                                              ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                            example:
                                              - v1
                                              - v1alpha1
                                              - v2beta3
                                              - v1.custom-suffix
                                          version:
                                            description: Version of the capability definition.
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            default: v0.0.1
                                          displayName:
                                            description: >-
                                              Name of the capability in human-readible
                                              format.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          description:
                                            type: string
                                            description: >-
                                              A written representation of the purpose
                                              and characteristics of the capability.
                                          kind:
                                            description: >-
                                              Top-level categorization of the
                                              capability
                                            additionalProperties: false
                                            anyOf:
                                              - const: action
                                                description: >-
                                                  For capabilities related to executing
                                                  actions on entities. Example: initiate
                                                  log streaming on a Pod. Example:
                                                  initiate deployment of a component.
                                              - const: mutate
                                                description: >-
                                                  For capabilities related to mutating an
                                                  entity. Example: the ability to change
                                                  the configuration of a component.
                                              - const: view
                                                description: >-
                                                  For capabilities related to viewing an
                                                  entity. Example: the ability to view a
                                                  components configuration.
                                              - const: interaction
                                                description: >-
                                                  Catch all for capabilities related to
                                                  interaction with entities. Example: the
                                                  ability for a component to be dragged
                                                  and dropped. Example: supports event
                                                  bubbling to parent components. 
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          type:
                                            description: >-
                                              Classification of capabilities. Used to
                                              group capabilities similar in nature.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          subType:
                                            description: >-
                                              Most granular unit of capability
                                              classification. The combination of Kind,
                                              Type and SubType together uniquely
                                              identify a Capability.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          key:
                                            description: Key that backs the capability.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          entityState:
                                            description: >-
                                              State of the entity in which the
                                              capability is applicable.
                                            type: array
                                            items:
                                              type: string
                                              enum:
                                                - declaration
                                                - instance
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              description: >-
                                                A string starting with an alphanumeric
                                                character. Spaces and hyphens allowed.
                                          status:
                                            type: string
                                            description: Status of the capability
                                            default: enabled
                                            enum:
                                              - enabled
                                              - disabled
                                          metadata:
                                            type: object
                                            description: >-
                                              Metadata contains additional information
                                              associated with the capability.
                                              Extension point.
                                            additionalProperties: true
                                        default:
                                          - description: >-
                                              Configure the visual styles for the
                                              component
                                            displayName: Styling
                                            entityState:
                                              - declaration
                                            key: ''
                                            kind: mutate
                                            schemaVersion: capability.meshery.io/v1alpha1
                                            status: enabled
                                            subType: ''
                                            type: style
                                            version: 0.7.0
                                          - description: Change the shape of the component
                                            displayName: Change Shape
                                            entityState:
                                              - declaration
                                            key: ''
                                            kind: mutate
                                            schemaVersion: capability.meshery.io/v1alpha1
                                            status: enabled
                                            subType: shape
                                            type: style
                                            version: 0.7.0
                                          - description: >-
                                              Drag and Drop a component into a parent
                                              component in graph view
                                            displayName: Compound Drag And Drop
                                            entityState:
                                              - declaration
                                            key: ''
                                            kind: interaction
                                            schemaVersion: capability.meshery.io/v1alpha1
                                            status: enabled
                                            subType: compoundDnd
                                            type: graph
                                            version: 0.7.0
                                          - description: Add text to nodes body
                                            displayName: Body Text
                                            entityState:
                                              - declaration
                                            key: ''
                                            kind: mutate
                                            schemaVersion: capability.meshery.io/v1alpha1
                                            status: enabled
                                            subType: body-text
                                            type: style
                                            version: 0.7.0
                                      x-order: 1
                                    isAnnotation:
                                      type: boolean
                                      description: >-
                                        Indicates whether the model and its
                                        entities should be treated as deployable
                                        entities or as logical representations.
                                      x-oapi-codegen-extra-tags:
                                        yaml: isAnnotation
                                        json: isAnnotation
                                      x-order: 2
                                      default: false
                                    primaryColor:
                                      type: string
                                      description: Primary color associated with the model.
                                      minLength: 1
                                      maxLength: 50
                                      default: '#00b39f'
                                      x-oapi-codegen-extra-tags:
                                        yaml: primaryColor
                                        json: primaryColor
                                      x-order: 3
                                    secondaryColor:
                                      type: string
                                      description: >-
                                        Secondary color associated with the
                                        model.
                                      minLength: 1
                                      maxLength: 50
                                      default: '#00D3A9'
                                      x-oapi-codegen-extra-tags:
                                        yaml: secondaryColor
                                        json: secondaryColor
                                      x-order: 4
                                    svgWhite:
                                      type: string
                                      description: >-
                                        SVG representation of the model in white
                                        color.
                                      minLength: 1
                                      x-oapi-codegen-extra-tags:
                                        yaml: svgWhite
                                        json: svgWhite
                                      x-order: 5
                                      default: >-
                                        <svg width="32" height="32" viewBox="0 0
                                        32 32" fill="none"
                                        xmlns="http://www.w3.org/2000/svg"><path
                                        d="M16.405
                                        8.732v6.57l5.694-3.297-5.694-3.273Zm0
                                        7.942v6.602l5.747-3.285-5.747-3.317Z"
                                        fill="#fff"/><path d="M15.586
                                        15.256v-6.47l-5.622 3.225 5.622
                                        3.245ZM4.307 23.252a13.809 13.809 0 0 0
                                        4.362 4.39v-6.914l-4.362
                                        2.524Zm11.279-.008v-6.52L9.95
                                        19.985l5.636 3.258Z" fill="#fff"
                                        fill-opacity=".8"/><path d="m9.49 27.23
                                        5.707-3.263-5.707-3.3v6.563Z"
                                        fill="#fff"/><path d="M22.54
                                        27.265v-6.553l-5.699 3.259 5.7
                                        3.294Zm5.58-4.773a13.697 13.697 0 0 0
                                        1.612-5.895l-5.934 3.397 4.323 2.498Z"
                                        fill="#fff" fill-opacity=".8"/><path
                                        d="m23.362 19.298
                                        5.728-3.276-5.728-3.291v6.567Z"
                                        fill="#fff"/><path d="M22.541
                                        11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                                        7.955v-6.574l-5.685 3.292 5.685 3.281Z"
                                        fill="#fff" fill-opacity=".8"/><path
                                        d="M9.49
                                        12.684v6.622l5.728-3.316-5.728-3.306Z"
                                        fill="#fff"/><path d="M15.586 2.25a13.69
                                        13.69 0 0 0-6.037 1.595l6.037
                                        3.463V2.25Z" fill="#fff"
                                        fill-opacity=".8"/><path d="M9.49
                                        4.756v6.583l5.732-3.288L9.49 4.756Z"
                                        fill="#fff"/><path d="M8.669 4.356a13.83
                                        13.83 0 0 0-4.362 4.39l4.362
                                        2.518V4.356Z" fill="#fff"
                                        fill-opacity=".8"/><path d="M22.504
                                        3.88a13.695 13.695 0 0
                                        0-6.099-1.63v5.123l6.1-3.493ZM2.25
                                        16.483c.071 2.12.634 4.196 1.644
                                        6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68
                                        13.68 0 0 0-1.644
                                        6.036l6.068-3.482-4.424-2.554Z"
                                        fill="#fff"/><path d="M9.539
                                        28.147a13.673 13.673 0 0 0 6.047
                                        1.603v-5.062L9.54 28.147Z" fill="#fff"
                                        fill-opacity=".8"/><path d="M27.697
                                        8.768a13.83 13.83 0 0
                                        0-4.335-4.383v6.889l4.335-2.506ZM23.362
                                        27.62a13.851 13.851 0 0 0
                                        4.351-4.417l-4.351-2.514v6.93Z"
                                        fill="#fff"/><path d="M29.75
                                        15.452a13.659 13.659 0 0
                                        0-1.63-5.979l-4.381 2.53 6.011 3.45Z"
                                        fill="#fff" fill-opacity=".8"/><path
                                        d="M16.405 29.75a13.673 13.673 0 0 0
                                        6.036-1.595l-6.036-3.498v5.093Z"
                                        fill="#fff"/><path d="M8.669
                                        19.247v-6.494L3.03 15.986l5.639 3.261Z"
                                        fill="#fff" fill-opacity=".8"/></svg>
                                    svgColor:
                                      type: string
                                      description: >-
                                        SVG representation of the model in
                                        colored format.
                                      minLength: 1
                                      x-oapi-codegen-extra-tags:
                                        yaml: svgColor
                                        json: svgColor
                                      x-order: 6
                                      default: >-
                                        <svg xmlns="http://www.w3.org/2000/svg"
                                        id="Layer_1" data-name="Layer 1"
                                        viewBox="0 0 134.95
                                        135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                                        points="69.49 31.82 69.49 64.07 97.44
                                        47.89 69.49 31.82"
                                        class="cls-1"/><polygon points="69.49
                                        70.81 69.49 103.22 97.7 87.09 69.49
                                        70.81" class="cls-1"/><polygon
                                        points="65.47 63.85 65.47 32.09 37.87
                                        47.92 65.47 63.85" class="cls-2"/><path
                                        d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                                        class="cls-2"/><polygon points="65.47
                                        103.06 65.47 71.05 37.8 87.07 65.47
                                        103.06" class="cls-2"/><polygon
                                        points="35.54 122.63 63.56 106.61 35.54
                                        90.41 35.54 122.63"
                                        class="cls-1"/><polygon points="99.61
                                        122.8 99.61 90.63 71.63 106.63 99.61
                                        122.8" class="cls-2"/><path
                                        d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                                        class="cls-2"/><polygon points="103.64
                                        83.69 131.76 67.61 103.64 51.45 103.64
                                        83.69" class="cls-1"/><polygon
                                        points="99.61 44.5 99.61 12.52 71.76
                                        28.49 99.61 44.5"
                                        class="cls-2"/><polygon points="99.61
                                        83.55 99.61 51.28 71.7 67.44 99.61
                                        83.55" class="cls-2"/><polygon
                                        points="67.48 135.02 67.49 135.02 67.48
                                        135.02 67.48 135.02"
                                        class="cls-2"/><polygon points="35.54
                                        51.22 35.54 83.73 63.66 67.45 35.54
                                        51.22" class="cls-1"/><path
                                        d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                                        class="cls-2"/><polygon points="35.54
                                        12.3 35.54 44.62 63.68 28.48 35.54 12.3"
                                        class="cls-1"/><path
                                        d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                                        class="cls-2"/><path
                                        d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                                        class="cls-1"/><path
                                        d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                                        class="cls-1"/><path
                                        d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                                        class="cls-1"/><path
                                        d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                                        class="cls-2"/><path
                                        d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                                        class="cls-1"/><path
                                        d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                                        class="cls-1"/><path
                                        d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                                        class="cls-2"/><path
                                        d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                                        class="cls-1"/><polygon points="31.51
                                        83.44 31.51 51.56 3.83 67.43 31.51
                                        83.44" class="cls-2"/></svg>
                                    svgComplete:
                                      type: string
                                      description: >-
                                        SVG representation of the complete
                                        model.
                                      minLength: 1
                                      x-oapi-codegen-extra-tags:
                                        yaml: svgComplete
                                        json: svgComplete
                                      x-order: 7
                                    shape:
                                      x-order: 8
                                      type: string
                                      description: >-
                                        The shape of the node’s body. Note that
                                        each shape fits within the specified
                                        width and height, and so you may have to
                                        adjust width and height if you desire an
                                        equilateral shape (i.e. width !== height
                                        for several equilateral shapes)
                                      default: circle
                                      enum:
                                        - circle
                                        - ellipse
                                        - triangle
                                        - round-triangle
                                        - rectangle
                                        - round-rectangle
                                        - bottom-round-rectangle
                                        - cut-rectangle
                                        - barrel
                                        - rhomboid
                                        - diamond
                                        - round-diamond
                                        - pentagon
                                        - round-pentagon
                                        - hexagon
                                        - round-hexagon
                                        - concave-hexagon
                                        - heptagon
                                        - round-heptagon
                                        - octagon
                                        - round-octagon
                                        - star
                                        - tag
                                        - round-tag
                                        - vee
                                        - polygon
                                  x-oapi-codegen-extra-tags:
                                    gorm: type:bytes;serializer:json
                                    json: metadata
                                    yaml: metadata
                                  x-order: 11
                                  additionalProperties: true
                                model:
                                  x-oapi-codegen-extra-tags:
                                    gorm: type:bytes;serializer:json
                                  x-order: 12
                                  type: object
                                  description: >-
                                    Registrant-defined data associated with the
                                    model. Properties pertain to the software
                                    being managed (e.g. Kubernetes v1.31).
                                  required:
                                    - version
                                  properties:
                                    version:
                                      description: >-
                                        Version of the model as defined by the
                                        registrant.
                                      allOf:
                                        - type: string
                                          minLength: 5
                                          maxLength: 100
                                          pattern: >-
                                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                          description: >-
                                            A valid semantic version string between
                                            5 and 256 characters. The pattern allows
                                            for a major.minor.patch version followed
                                            by an optional pre-release tag like
                                            '-alpha' or '-beta.2' and an optional
                                            build metadata tag like '+build.1.
                                          default: v0.0.1
                                      x-oapi-codegen-extra-tags:
                                        yaml: version
                                        json: version
                                      x-order: 1
                                relationships:
                                  type: array
                                  x-go-type: interface{}
                                  x-oapi-codegen-extra-tags:
                                    gorm: '-'
                                    json: relationships
                                    yaml: relationships
                                components:
                                  type: array
                                  x-go-type: interface{}
                                  x-oapi-codegen-extra-tags:
                                    gorm: '-'
                                    json: components
                                    yaml: components
                                componentsCount:
                                  type: integer
                                  description: >-
                                    Number of components associated with the
                                    model.
                                  x-order: 13
                                  x-oapi-codegen-extra-tags:
                                    json: components_count
                                    yaml: components_count
                                    gorm: '-'
                                  default: 0
                                relationshipsCount:
                                  type: integer
                                  description: >-
                                    Number of relationships associated with the
                                    model.
                                  x-order: 13
                                  x-oapi-codegen-extra-tags:
                                    gorm: '-'
                                    json: relationships_count
                                    yaml: relationships_count
                                  default: 0
                              required:
                                - id
                                - schemaVersion
                                - displayName
                                - status
                                - subCategory
                                - model
                                - name
                                - description
                                - version
                                - registrant
                                - category
                                - categoryId
                                - registrantId
                                - relationshipsCount
                                - componentsCount
                                - components
                                - relationships
                            modelId:
                              description: >-
                                ModelId is the foreign key to the model to which
                                the component belongs.
                              x-oapi-codegen-extra-tags:
                                gorm: >-
                                  index:idx_component_definition_dbs_model_id,column:model_id
                                yaml: '-'
                                json: '-'
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              default: 00000000-0000-0000-0000-000000000000
                            styles:
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                                yaml: styles
                                json: styles
                              x-go-type: core.ComponentStyles
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1alpha1/core
                              x-order: 8
                              type: object
                              description: Visualization styles for a component
                              required:
                                - shape
                                - primaryColor
                                - svgColor
                                - svgWhite
                                - svgComplete
                              allOf:
                                - type: object
                                  description: Common styles for all entities
                                  additionalProperties: true
                                  required:
                                    - primaryColor
                                    - svgColor
                                    - svgWhite
                                    - svgComplete
                                  properties:
                                    primaryColor:
                                      type: string
                                      description: >-
                                        Primary color of the component used for
                                        UI representation.
                                    secondaryColor:
                                      type: string
                                      description: >-
                                        Secondary color of the entity used for
                                        UI representation.
                                    svgWhite:
                                      type: string
                                      description: >-
                                        White SVG of the entity used for UI
                                        representation on dark background.
                                    svgColor:
                                      type: string
                                      description: >-
                                        Colored SVG of the entity used for UI
                                        representation on light background.
                                    svgComplete:
                                      type: string
                                      description: >-
                                        Complete SVG of the entity used for UI
                                        representation, often inclusive of
                                        background.
                                    color:
                                      type: string
                                      description: >-
                                        The color of the element's label.
                                        Colours may be specified by name (e.g.
                                        red), hex (e.g.
                                    text-opacity:
                                      type: number
                                      description: >-
                                        The opacity of the label text, including
                                        its outline.
                                      minimum: 0
                                      maximum: 1
                                    font-family:
                                      type: string
                                      description: >-
                                        A comma-separated list of font names to
                                        use on the label text.
                                    font-size:
                                      type: string
                                      description: The size of the label text.
                                    font-style:
                                      type: string
                                      description: >-
                                        A CSS font style to be applied to the
                                        label text.
                                    font-weight:
                                      type: string
                                      description: >-
                                        A CSS font weight to be applied to the
                                        label text.
                                    text-transform:
                                      type: string
                                      description: >-
                                        A transformation to apply to the label
                                        text
                                      enum:
                                        - none
                                        - uppercase
                                        - lowercase
                                    opacity:
                                      type: number
                                      description: >-
                                        The opacity of the element, ranging from
                                        0 to 1. Note that the opacity of a
                                        compound node parent affects the
                                        effective opacity of its children.
                                      minimum: 0
                                      maximum: 1
                                    z-index:
                                      type: integer
                                      description: >-
                                        An integer value that affects the
                                        relative draw order of elements. In
                                        general, an element with a higher
                                        z-index will be drawn on top of an
                                        element with a lower z-index. Note that
                                        edges are under nodes despite z-index.
                                    label:
                                      type: string
                                      description: >-
                                        The text to display for an element's
                                        label. Can give a path, e.g. data(id)
                                        will label with the elements id
                                    animation:
                                      type: object
                                      description: >-
                                        The animation to apply to the element.
                                        example ripple,bounce,etc
                                - type: object
                                  properties:
                                    shape:
                                      type: string
                                      description: >-
                                        The shape of the node's body. Note that
                                        each shape fits within the specified
                                        width and height, and so you may have to
                                        adjust width and height if you desire an
                                        equilateral shape (i.e. width !== height
                                        for several equilateral shapes)
                                      enum:
                                        - ellipse
                                        - triangle
                                        - round-triangle
                                        - rectangle
                                        - round-rectangle
                                        - bottom-round-rectangle
                                        - cut-rectangle
                                        - barrel
                                        - rhomboid
                                        - diamond
                                        - round-diamond
                                        - pentagon
                                        - round-pentagon
                                        - hexagon
                                        - round-hexagon
                                        - concave-hexagon
                                        - heptagon
                                        - round-heptagon
                                        - octagon
                                        - round-octagon
                                        - star
                                        - tag
                                        - round-tag
                                        - vee
                                        - polygon
                                    position:
                                      type: object
                                      additionalProperties: false
                                      required:
                                        - x
                                        - 'y'
                                      description: >-
                                        The position of the node. If the
                                        position is set, the node is drawn at
                                        that position in the given dimensions.
                                        If the position is not set, the node is
                                        drawn at a random position.
                                      properties:
                                        x:
                                          type: number
                                          description: The x-coordinate of the node.
                                          x-go-type: float64
                                        'y':
                                          type: number
                                          description: The y-coordinate of the node.
                                          x-go-type: float64
                                    body-text:
                                      type: string
                                      description: >-
                                        The text to display for an element's
                                        body. Can give a path, e.g. data(id)
                                        will label with the elements id
                                    body-text-wrap:
                                      type: string
                                      description: >-
                                        How to wrap the text in the node. Can be
                                        'none', 'wrap', or 'ellipsis'.
                                    body-text-max-width:
                                      type: string
                                      description: >-
                                        The maximum width for wrapping text in
                                        the node.
                                    body-text-opacity:
                                      type: number
                                      description: >-
                                        The opacity of the node's body text,
                                        including its outline.
                                      minimum: 0
                                      maximum: 1
                                    body-text-background-color:
                                      type: string
                                      description: >-
                                        The colour of the node's body text
                                        background. Colours may be specified by
                                        name (e.g. red), hex (e.g.
                                    body-text-font-size:
                                      type: number
                                      description: The size of the node's body text.
                                    body-text-color:
                                      type: string
                                      description: >-
                                        The colour of the node's body text.
                                        Colours may be specified by name (e.g.
                                        red), hex (e.g.
                                    body-text-font-weight:
                                      type: string
                                      description: >-
                                        A CSS font weight to be applied to the
                                        node's body text.
                                    body-text-horizontal-align:
                                      type: string
                                      description: >-
                                        A CSS horizontal alignment to be applied
                                        to the node's body text.
                                    body-text-decoration:
                                      type: string
                                      description: >-
                                        A CSS text decoration to be applied to
                                        the node's body text.
                                    body-text-vertical-align:
                                      type: string
                                      description: >-
                                        A CSS vertical alignment to be applied
                                        to the node's body text.
                                    width:
                                      type: number
                                      description: >-
                                        The width of the node's body or the
                                        width of an edge's line.
                                    height:
                                      type: number
                                      description: The height of the node's body
                                    background-image:
                                      type: string
                                      description: >-
                                        The URL that points to the image to show
                                        in the node.
                                    background-color:
                                      type: string
                                      description: >-
                                        The colour of the node's body. Colours
                                        may be specified by name (e.g. red), hex
                                        (e.g.
                                    background-blacken:
                                      type: number
                                      description: >-
                                        Blackens the node's body for values from
                                        0 to 1; whitens the node's body for
                                        values from 0 to -1.
                                      maximum: 1
                                      minimum: -1
                                    background-opacity:
                                      type: number
                                      description: >-
                                        The opacity level of the node's
                                        background colour
                                      maximum: 1
                                      minimum: 0
                                    background-position-x:
                                      type: string
                                      description: >-
                                        The x position of the background image,
                                        measured in percent (e.g. 50%) or pixels
                                        (e.g. 10px)
                                    background-position-y:
                                      type: string
                                      description: >-
                                        The y position of the background image,
                                        measured in percent (e.g. 50%) or pixels
                                        (e.g. 10px)
                                    background-offset-x:
                                      type: string
                                      description: >-
                                        The x offset of the background image,
                                        measured in percent (e.g. 50%) or pixels
                                        (e.g. 10px)
                                    background-offset-y:
                                      type: string
                                      description: >-
                                        The y offset of the background image,
                                        measured in percent (e.g. 50%) or pixels
                                        (e.g. 10px)
                                    background-fit:
                                      type: string
                                      description: >-
                                        How the background image is fit to the
                                        node. Can be 'none', 'contain', or
                                        'cover'.
                                    background-clip:
                                      type: string
                                      description: >-
                                        How the background image is clipped to
                                        the node. Can be 'none', 'node', or
                                        'node-border'.
                                    background-width-relative-to:
                                      type: string
                                      description: >-
                                        How the background image's width is
                                        determined. Can be 'none', 'inner', or
                                        'outer'.
                                    background-height-relative-to:
                                      type: string
                                      description: >-
                                        How the background image's height is
                                        determined. Can be 'none', 'inner', or
                                        'outer'.
                                    border-width:
                                      type: number
                                      description: The size of the node's border.
                                      minimum: 0
                                    border-style:
                                      type: string
                                      description: The style of the node's border
                                      enum:
                                        - solid
                                        - dotted
                                        - dashed
                                        - double
                                    border-color:
                                      type: string
                                      description: >-
                                        The colour of the node's border. Colours
                                        may be specified by name (e.g. red), hex
                                        (e.g.
                                    border-opacity:
                                      type: number
                                      description: The opacity of the node's border
                                      minimum: 0
                                      maximum: 1
                                    padding:
                                      type: number
                                      description: >-
                                        The amount of padding around all sides
                                        of the node.
                                      minimum: 0
                                    text-halign:
                                      type: string
                                      description: >-
                                        The horizontal alignment of a node's
                                        label
                                      enum:
                                        - left
                                        - center
                                        - right
                                    text-valign:
                                      type: string
                                      description: The vertical alignment of a node's label
                                      enum:
                                        - top
                                        - center
                                        - bottom
                                    ghost:
                                      type: string
                                      description: >-
                                        Whether to use the ghost effect, a
                                        semitransparent duplicate of the element
                                        drawn at an offset.
                                      default: 'no'
                                      enum:
                                        - 'yes'
                                        - 'no'
                                    active-bg-color:
                                      type: string
                                      description: >-
                                        The colour of the indicator shown when
                                        the background is grabbed by the user.
                                        Selector needs to be *core*. Colours may
                                        be specified by name (e.g. red), hex
                                        (e.g.
                                    active-bg-opacity:
                                      type: string
                                      description: >-
                                        The opacity of the active background
                                        indicator. Selector needs to be *core*.
                                    active-bg-size:
                                      type: string
                                      description: >-
                                        The opacity of the active background
                                        indicator. Selector needs to be *core*.
                                    selection-box-color:
                                      type: string
                                      description: >-
                                        The background colour of the selection
                                        box used for drag selection. Selector
                                        needs to be *core*. Colours may be
                                        specified by name (e.g. red), hex (e.g.
                                    selection-box-border-width:
                                      type: number
                                      description: >-
                                        The size of the border on the selection
                                        box. Selector needs to be *core*
                                    selection-box-opacity:
                                      type: number
                                      description: >-
                                        The opacity of the selection box.
                                        Selector needs to be *core*
                                      minimum: 0
                                      maximum: 1
                                    outside-texture-bg-color:
                                      type: string
                                      description: >-
                                        The colour of the area outside the
                                        viewport texture when
                                        initOptions.textureOnViewport === true.
                                        Selector needs to be *core*. Colours may
                                        be specified by name (e.g. red), hex
                                        (e.g.
                                    outside-texture-bg-opacity:
                                      type: number
                                      description: >-
                                        The opacity of the area outside the
                                        viewport texture. Selector needs to be
                                        *core*
                                      minimum: 0
                                      maximum: 1
                                    shape-polygon-points:
                                      type: string
                                      description: >-
                                        An array (or a space-separated string)
                                        of numbers ranging on [-1, 1],
                                        representing alternating x and y values
                                        (i.e. x1 y1 x2 y2, x3 y3 ...). This
                                        represents the points in the polygon for
                                        the node's shape. The bounding box of
                                        the node is given by (-1, -1), (1, -1),
                                        (1, 1), (-1, 1). The node's position is
                                        the origin (0, 0 )
                                    menu-background-color:
                                      type: string
                                      description: >-
                                        The colour of the background of the
                                        component menu. Colours may be specified
                                        by name (e.g. red), hex (e.g.
                                    menu-background-opacity:
                                      type: number
                                      description: >-
                                        The opacity of the background of the
                                        component menu.
                                      minimum: 0
                                      maximum: 1
                                    menu-forground-color:
                                      type: string
                                      description: >-
                                        The colour of the text or icons in the
                                        component menu. Colours may be specified
                                        by name (e.g. red), hex (e.g.
                            capabilities:
                              x-order: 9
                              type: array
                              description: >-
                                Meshery manages components in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. ComponentDefinitions may
                                define a broad array of capabilities, which are
                                in-turn dynamically interpretted by Meshery for
                                full lifecycle management.
                              items:
                                x-go-type: capability.Capability
                                x-go-type-import:
                                  path: >-
                                    github.com/meshery/schemas/models/v1alpha1/capability
                                $id: https://schemas.meshery.io/capability.json
                                $schema: http://json-schema.org/draft-07/schema#
                                description: >-
                                  Meshery manages entities in accordance with
                                  their specific capabilities. This field
                                  explicitly identifies those capabilities
                                  largely by what actions a given component
                                  supports; e.g. metric-scrape, sub-interface,
                                  and so on. This field is extensible. Entities
                                  may define a broad array of capabilities,
                                  which are in-turn dynamically interpretted by
                                  Meshery for full lifecycle management.
                                additionalProperties: false
                                type: object
                                required:
                                  - description
                                  - schemaVersion
                                  - version
                                  - displayName
                                  - kind
                                  - type
                                  - subType
                                  - entityState
                                  - key
                                  - status
                                x-oapi-codegen-extra-tags:
                                  gorm: type:bytes;serializer:json
                                properties:
                                  schemaVersion:
                                    description: >-
                                      Specifies the version of the schema to
                                      which the capability definition conforms.
                                    type: string
                                    minLength: 2
                                    maxLength: 100
                                    pattern: >-
                                      ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                    example:
                                      - v1
                                      - v1alpha1
                                      - v2beta3
                                      - v1.custom-suffix
                                  version:
                                    description: Version of the capability definition.
                                    type: string
                                    minLength: 5
                                    maxLength: 100
                                    pattern: >-
                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                    default: v0.0.1
                                  displayName:
                                    description: >-
                                      Name of the capability in human-readible
                                      format.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  description:
                                    type: string
                                    description: >-
                                      A written representation of the purpose
                                      and characteristics of the capability.
                                  kind:
                                    description: Top-level categorization of the capability
                                    additionalProperties: false
                                    anyOf:
                                      - const: action
                                        description: >-
                                          For capabilities related to executing
                                          actions on entities. Example: initiate
                                          log streaming on a Pod. Example:
                                          initiate deployment of a component.
                                      - const: mutate
                                        description: >-
                                          For capabilities related to mutating an
                                          entity. Example: the ability to change
                                          the configuration of a component.
                                      - const: view
                                        description: >-
                                          For capabilities related to viewing an
                                          entity. Example: the ability to view a
                                          components configuration.
                                      - const: interaction
                                        description: >-
                                          Catch all for capabilities related to
                                          interaction with entities. Example: the
                                          ability for a component to be dragged
                                          and dropped. Example: supports event
                                          bubbling to parent components. 
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  type:
                                    description: >-
                                      Classification of capabilities. Used to
                                      group capabilities similar in nature.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  subType:
                                    description: >-
                                      Most granular unit of capability
                                      classification. The combination of Kind,
                                      Type and SubType together uniquely
                                      identify a Capability.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  key:
                                    description: Key that backs the capability.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  entityState:
                                    description: >-
                                      State of the entity in which the
                                      capability is applicable.
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                        - declaration
                                        - instance
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      description: >-
                                        A string starting with an alphanumeric
                                        character. Spaces and hyphens allowed.
                                  status:
                                    type: string
                                    description: Status of the capability
                                    default: enabled
                                    enum:
                                      - enabled
                                      - disabled
                                  metadata:
                                    type: object
                                    description: >-
                                      Metadata contains additional information
                                      associated with the capability. Extension
                                      point.
                                    additionalProperties: true
                                default:
                                  - description: >-
                                      Configure the visual styles for the
                                      component
                                    displayName: Styling
                                    entityState:
                                      - declaration
                                    key: ''
                                    kind: mutate
                                    schemaVersion: capability.meshery.io/v1alpha1
                                    status: enabled
                                    subType: ''
                                    type: style
                                    version: 0.7.0
                                  - description: Change the shape of the component
                                    displayName: Change Shape
                                    entityState:
                                      - declaration
                                    key: ''
                                    kind: mutate
                                    schemaVersion: capability.meshery.io/v1alpha1
                                    status: enabled
                                    subType: shape
                                    type: style
                                    version: 0.7.0
                                  - description: >-
                                      Drag and Drop a component into a parent
                                      component in graph view
                                    displayName: Compound Drag And Drop
                                    entityState:
                                      - declaration
                                    key: ''
                                    kind: interaction
                                    schemaVersion: capability.meshery.io/v1alpha1
                                    status: enabled
                                    subType: compoundDnd
                                    type: graph
                                    version: 0.7.0
                                  - description: Add text to nodes body
                                    displayName: Body Text
                                    entityState:
                                      - declaration
                                    key: ''
                                    kind: mutate
                                    schemaVersion: capability.meshery.io/v1alpha1
                                    status: enabled
                                    subType: body-text
                                    type: style
                                    version: 0.7.0
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                                yaml: capabilities
                                json: capabilities
                              default:
                                - schemaVersion: capability.meshery.io/v1alpha1
                                  version: 0.7.0
                                  displayName: Performance Test
                                  description: >-
                                    Initiate a performance test. Meshery will
                                    execute the load generation, collect
                                    metrics, and present the results.
                                  kind: action
                                  type: operator
                                  subType: perf-test
                                  key: ''
                                  entityState:
                                    - instance
                                  status: enabled
                                  metadata: null
                                - schemaVersion: capability.meshery.io/v1alpha1
                                  version: 0.7.0
                                  displayName: Workload Configuration
                                  description: >-
                                    Configure the workload specific setting of a
                                    component
                                  kind: mutate
                                  type: configuration
                                  subType: config
                                  key: ''
                                  entityState:
                                    - declaration
                                  status: enabled
                                  metadata: null
                                - schemaVersion: capability.meshery.io/v1alpha1
                                  version: 0.7.0
                                  displayName: Labels and Annotations Configuration
                                  description: >-
                                    Configure Labels And Annotations for  the
                                    component 
                                  kind: mutate
                                  type: configuration
                                  subType: labels-and-annotations
                                  key: ''
                                  entityState:
                                    - declaration
                                  status: enabled
                                  metadata: null
                                - schemaVersion: capability.meshery.io/v1alpha1
                                  version: 0.7.0
                                  displayName: Relationships
                                  description: View relationships for the component
                                  kind: view
                                  type: configuration
                                  subType: relationship
                                  key: ''
                                  entityState:
                                    - declaration
                                    - instance
                                  status: enabled
                                  metadata: null
                                - schemaVersion: capability.meshery.io/v1alpha1
                                  version: 0.7.0
                                  displayName: Json Schema
                                  description: 'View Component Definition '
                                  kind: view
                                  type: configuration
                                  subType: definition
                                  key: ''
                                  entityState:
                                    - declaration
                                    - instance
                                  status: enabled
                                  metadata: null
                                - schemaVersion: capability.meshery.io/v1alpha1
                                  version: 0.7.0
                                  displayName: Styling
                                  description: >-
                                    Configure the visual styles for the
                                    component
                                  kind: mutate
                                  type: style
                                  subType: ''
                                  key: ''
                                  entityState:
                                    - declaration
                                  status: enabled
                                  metadata: null
                                - schemaVersion: capability.meshery.io/v1alpha1
                                  version: 0.7.0
                                  displayName: Change Shape
                                  description: Change the shape of the component
                                  kind: mutate
                                  type: style
                                  subType: shape
                                  key: ''
                                  entityState:
                                    - declaration
                                  status: enabled
                                  metadata: null
                                - schemaVersion: capability.meshery.io/v1alpha1
                                  version: 0.7.0
                                  displayName: Compound Drag And Drop
                                  description: >-
                                    Drag and Drop a component into a parent
                                    component in graph view
                                  kind: interaction
                                  type: graph
                                  subType: compoundDnd
                                  key: ''
                                  entityState:
                                    - declaration
                                  status: enabled
                                  metadata: null
                            status:
                              x-order: 10
                              type: string
                              description: >-
                                Status of component, including:

                                - duplicate: this component is a duplicate of
                                another. The component that is to be the
                                canonical reference and that is duplicated by
                                other components should not be assigned the
                                'duplicate' status.

                                - maintenance: model is unavailable for a period
                                of time.

                                - enabled: model is available for use for all
                                users of this Meshery Server.

                                - ignored: model is unavailable for use for all
                                users of this Meshery Server.
                              default: enabled
                              enum:
                                - ignored
                                - enabled
                                - duplicate
                                - resolved
                                - open
                              x-oapi-codegen-extra-tags:
                                yaml: status
                                json: status
                            metadata:
                              x-order: 11
                              type: object
                              description: >-
                                Metadata contains additional information
                                associated with the component.
                              required:
                                - genealogy
                                - isAnnotation
                                - isNamespaced
                                - published
                                - instanceDetails
                                - configurationUISchema
                              properties:
                                genealogy:
                                  x-order: 1
                                  type: string
                                  description: >-
                                    Genealogy represents the various
                                    representational states of the component.
                                isAnnotation:
                                  x-order: 2
                                  type: boolean
                                  description: >-
                                    Identifies whether the component is
                                    semantically meaningful or not; identifies
                                    whether the component should be treated as
                                    deployable entity or is for purposes of
                                    logical representation.
                                  default: false
                                isNamespaced:
                                  x-order: 3
                                  type: boolean
                                  description: >-
                                    Identifies whether the component is scoped
                                    to namespace or clsuter wide.
                                published:
                                  x-order: 4
                                  type: boolean
                                  description: >-
                                    'published' controls whether the component
                                    should be registered in Meshery Registry.
                                    When the same 'published' property in
                                    Models, is set to 'false', the Model
                                    property takes precedence with all Entities
                                    in the Model not being registered.
                                instanceDetails:
                                  x-order: 5
                                  type: object
                                  description: >-
                                    InstanceDetails contains information about
                                    the instance of the component.
                                configurationUISchema:
                                  x-order: 6
                                  type: string
                                  description: >-
                                    Defines the UI schema for rendering the
                                    component's configuration. For more details,
                                    visit:
                                    https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                                    .
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              additionalProperties: true
                            configuration:
                              x-order: 12
                              description: >-
                                The configuration of the component. The
                                configuration is based on the schema defined
                                within the component
                                definition(component.schema).
                              type: object
                              $comment: >-
                                The configuration of the component. The
                                configuration is based on the schema defined
                                within the component
                                definition(component.schema).
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                            component:
                              x-order: 13
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              x-go-type: Component
                              description: >-
                                data related to the third party capability that
                                Component Defintion wraps , this is herematicaly
                                sealed an
                              type: object
                              properties:
                                version:
                                  type: string
                                  description: >-
                                    Version of the component produced by the
                                    registrant. Example: APIVersion of a
                                    Kubernetes Pod.
                                  x-order: 1
                                kind:
                                  type: string
                                  description: >-
                                    The unique identifier (name) assigned by the
                                    registrant to this component. Example: A
                                    Kubernetes Pod is of kind 'Pod'.
                                  x-order: 2
                                schema:
                                  type: string
                                  description: >-
                                    JSON schema of the object as defined by the
                                    registrant.
                                  x-order: 3
                              required:
                                - version
                                - kind
                                - schema
                          required:
                            - id
                            - displayName
                            - description
                            - schemaVersion
                            - format
                            - version
                            - configuration
                            - metadata
                            - modelId
                            - model
                            - component
                      preferences:
                        type: object
                        description: Design-level preferences
                        x-order: 7
                        properties:
                          layers:
                            type: object
                            description: List of available layers
                        required:
                          - layers
                      relationships:
                        description: List of relationships between components
                        type: array
                        x-order: 8
                        items:
                          x-go-type: '*relationship.RelationshipDefinition'
                          x-go-type-import:
                            path: >-
                              github.com/meshery/schemas/models/v1alpha3/relationship
                          $id: https://schemas.meshery.io/relationship.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: >-
                            Relationships define the nature of interaction
                            between interconnected components in Meshery. The
                            combination of relationship properties kind, type,
                            and subtype characterize various genealogical
                            relations among and between components.
                            Relationships have selectors, selector sets,
                            metadata, and optional parameters. Learn more at
                            https://docs.meshery.io/concepts/logical/relationships.
                          required:
                            - schemaVersion
                            - version
                            - model
                            - kind
                            - type
                            - subType
                          additionalProperties: false
                          type: object
                          properties:
                            id:
                              description: >-
                                Uniquely identifies the entity (i.e. component)
                                as defined in a declaration (i.e. design).
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              x-oapi-codegen-extra-tags:
                                yaml: id
                                json: id
                            schemaVersion:
                              description: >-
                                Specifies the version of the schema used for the
                                relationship definition.
                              type: string
                              minLength: 2
                              maxLength: 100
                              pattern: >-
                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                              example:
                                - v1
                                - v1alpha1
                                - v2beta3
                                - v1.custom-suffix
                              x-oapi-codegen-extra-tags:
                                yaml: schemaVersion
                                json: schemaVersion
                              default: relationships.meshery.io/v1alpha3
                            version:
                              type: string
                              minLength: 5
                              maxLength: 100
                              pattern: >-
                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              description: >-
                                A valid semantic version string between 5 and
                                256 characters. The pattern allows for a
                                major.minor.patch version followed by an
                                optional pre-release tag like '-alpha' or
                                '-beta.2' and an optional build metadata tag
                                like '+build.1.
                              default: v0.0.1
                              x-oapi-codegen-extra-tags:
                                yaml: version
                                json: version
                            model:
                              description: >-
                                Name of the model in which this relationship is
                                packaged.
                              $id: https://schemas.meshery.io/model.json
                              $schema: http://json-schema.org/draft-07/schema#
                              additionalProperties: false
                              type: object
                              properties:
                                id:
                                  description: >-
                                    Uniquely identifies the entity (i.e.
                                    component) as defined in a declaration (i.e.
                                    design).
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  x-oapi-codegen-extra-tags:
                                    yaml: id
                                    json: id
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema used for
                                    the definition.
                                  x-oapi-codegen-extra-tags:
                                    yaml: schemaVersion
                                    json: schemaVersion
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                version:
                                  description: Version of the model definition.
                                  type: string
                                  x-oapi-codegen-extra-tags:
                                    yaml: version
                                    json: version
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                name:
                                  description: >-
                                    The unique name for the model within the
                                    scope of a registrant.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: name
                                    json: name
                                displayName:
                                  description: Human-readable name for the model.
                                  minLength: 1
                                  maxLength: 100
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                  x-oapi-codegen-extra-tags:
                                    yaml: displayName
                                    json: displayName
                                description:
                                  type: string
                                  description: Description of the model.
                                  minLength: 1
                                  maxLength: 1000
                                  x-oapi-codegen-extra-tags:
                                    yaml: description
                                    json: description
                                status:
                                  type: string
                                  description: >-
                                    Status of model, including:

                                    - duplicate: this component is a duplicate
                                    of another. The component that is to be the
                                    canonical reference and that is duplicated
                                    by other components should not be assigned
                                    the 'duplicate' status.

                                    - maintenance: model is unavailable for a
                                    period of time.

                                    - enabled: model is available for use for
                                    all users of this Meshery Server.

                                    - ignored: model is unavailable for use for
                                    all users of this Meshery Server.
                                  enum:
                                    - ignored
                                    - enabled
                                    - duplicate
                                  x-oapi-codegen-extra-tags:
                                    yaml: status
                                    json: status
                                registrant:
                                  x-oapi-codegen-extra-tags:
                                    yaml: registrant
                                    json: registrant
                                    gorm: foreignKey:RegistrantId;references:Id
                                  $id: https://schemas.meshery.io/component.json
                                  $schema: http://json-schema.org/draft-07/schema#
                                  description: >-
                                    Meshery Connections are managed and
                                    unmanaged resources that either through
                                    discovery or manual entry are tracked by
                                    Meshery. Learn more at
                                    https://docs.meshery.io/concepts/logical/connections
                                  additionalProperties: false
                                  type: object
                                  required:
                                    - kind
                                    - type
                                    - status
                                  properties:
                                    id:
                                      description: ID
                                      type: string
                                      format: uuid
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      x-oapi-codegen-extra-tags:
                                        yaml: id
                                        json: id
                                    name:
                                      x-oapi-codegen-extra-tags:
                                        db: name
                                        yaml: name
                                        json: name
                                      type: string
                                      description: Connection Name
                                    credential_id:
                                      x-go-name: CredentialId
                                      x-oapi-codegen-extra-tags:
                                        db: credential_id
                                        yaml: credential_id
                                        json: credential_id
                                      description: Credential ID
                                      type: string
                                      format: uuid
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                    type:
                                      x-oapi-codegen-extra-tags:
                                        db: type
                                        yaml: type
                                        json: type
                                      type: string
                                      description: Connection Type
                                    sub_type:
                                      x-oapi-codegen-extra-tags:
                                        db: sub_type
                                        yaml: sub_type
                                        json: sub_type
                                      type: string
                                      description: Connection Subtype
                                    kind:
                                      x-oapi-codegen-extra-tags:
                                        db: kind
                                        yaml: kind
                                        json: kind
                                      type: string
                                      description: Connection Kind
                                    metadata:
                                      x-oapi-codegen-extra-tags:
                                        db: metadata
                                        yaml: metadata
                                        json: metadata
                                      type: object
                                    status:
                                      x-oapi-codegen-extra-tags:
                                        db: status
                                        yaml: status
                                        json: status
                                      description: Connection Status
                                      type: string
                                      enum:
                                        - discovered
                                        - registered
                                        - connected
                                        - ignored
                                        - maintenance
                                        - disconnected
                                        - deleted
                                        - not found
                                    user_id:
                                      x-go-name: UserID
                                      x-oapi-codegen-extra-tags:
                                        yaml: user_id
                                        json: user_id
                                      type: string
                                      format: uuid
                                      description: >-
                                        A Universally Unique Identifier used to
                                        uniquely identify entites in Meshery.
                                        The UUID core defintion is used across
                                        different schemas.
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                    created_at:
                                      x-oapi-codegen-extra-tags:
                                        yaml: created_at
                                        json: created_at
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                    updated_at:
                                      x-oapi-codegen-extra-tags:
                                        yaml: updated_at
                                        json: updated_at
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                    deleted_at:
                                      x-oapi-codegen-extra-tags:
                                        yaml: deleted_at
                                        json: deleted_at
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                category:
                                  type: object
                                  description: Category of the model.
                                  properties:
                                    id:
                                      type: string
                                      format: uuid
                                      description: >-
                                        A Universally Unique Identifier used to
                                        uniquely identify entites in Meshery.
                                        The UUID core defintion is used across
                                        different schemas.
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      x-oapi-codegen-extra-tags:
                                        yaml: id
                                        json: id
                                    name:
                                      type: string
                                      minLength: 1
                                      maxLength: 100
                                      x-oapi-codegen-extra-tags:
                                        yaml: name
                                        json: name
                                    metadata:
                                      type: object
                                      x-oapi-codegen-extra-tags:
                                        yaml: metadata
                                        json: metadata
                                  x-oapi-codegen-extra-tags:
                                    yaml: category
                                    json: category
                                    gorm: foreignKey:CategoryId;references:Id
                                subCategory:
                                  type: string
                                  description: Sub-category of the model.
                                  minLength: 1
                                  maxLength: 100
                                  x-oapi-codegen-extra-tags:
                                    yaml: subCategory
                                    json: subCategory
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata containing additional information
                                    associated with the model.
                                  properties:
                                    capabilities:
                                      type: array
                                      description: Capabilities associated with the model
                                      items:
                                        $id: >-
                                          https://schemas.meshery.io/capability.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery manages entities in accordance
                                          with their specific capabilities. This
                                          field explicitly identifies those
                                          capabilities largely by what actions a
                                          given component supports; e.g.
                                          metric-scrape, sub-interface, and so on.
                                          This field is extensible. Entities may
                                          define a broad array of capabilities,
                                          which are in-turn dynamically
                                          interpretted by Meshery for full
                                          lifecycle management.
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - schemaVersion
                                          - version
                                          - displayName
                                          - kind
                                          - type
                                          - entityState
                                          - status
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        properties:
                                          schemaVersion:
                                            description: >-
                                              Specifies the version of the schema to
                                              which the capability definition
                                              conforms.
                                            type: string
                                            minLength: 2
                                            maxLength: 100
                                            pattern: >-
                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                            example:
                                              - v1
                                              - v1alpha1
                                              - v2beta3
                                              - v1.custom-suffix
                                            x-oapi-codegen-extra-tags:
                                              yaml: schemaVersion
                                              json: schemaVersion
                                          version:
                                            description: Version of the capability definition.
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                          displayName:
                                            description: >-
                                              Name of the capability in human-readible
                                              format.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            x-oapi-codegen-extra-tags:
                                              yaml: displayName
                                              json: displayName
                                          description:
                                            type: string
                                            description: >-
                                              A written representation of the purpose
                                              and characteristics of the capability.
                                            x-oapi-codegen-extra-tags:
                                              yaml: description
                                              json: description
                                          kind:
                                            description: >-
                                              Top-level categorization of the
                                              capability
                                            additionalProperties: false
                                            anyOf:
                                              - const: action
                                                description: >-
                                                  For capabilities related to executing
                                                  actions on entities. Example: initiate
                                                  log streaming on a Pod. Example:
                                                  initiate deployment of a component.
                                              - const: mutate
                                                description: >-
                                                  For capabilities related to mutating an
                                                  entity. Example: the ability to change
                                                  the configuration of a component.
                                              - const: view
                                                description: >-
                                                  For capabilities related to viewing an
                                                  entity. Example: the ability to view a
                                                  components configuration.
                                              - const: interaction
                                                description: >-
                                                  Catch all for capabilities related to
                                                  interaction with entities. Example: the
                                                  ability for a component to be dragged
                                                  and dropped. Example: supports event
                                                  bubbling to parent components. 
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            x-oapi-codegen-extra-tags:
                                              yaml: kind
                                              json: kind
                                          type:
                                            description: >-
                                              Classification of capabilities. Used to
                                              group capabilities similar in nature.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            x-oapi-codegen-extra-tags:
                                              yaml: type
                                              json: type
                                          subType:
                                            description: >-
                                              Most granular unit of capability
                                              classification. The combination of Kind,
                                              Type and SubType together uniquely
                                              identify a Relaationship.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            oneOf:
                                              - const: inventory
                                                description: >-
                                                  A hierarchical inventory relationship in
                                                  which the configuration of (parent)
                                                  component is patched with the
                                                  configuration of other (child)
                                                  component. Eg: The configuration of the
                                                  EnvoyFilter (parent) component is
                                                  patched with the configuration as
                                                  received from WASMFilter (child)
                                                  component.
                                              - const: matchLabels
                                                description: >-
                                                  Match label relationships offer a
                                                  dynamic association between one or more
                                                  components and are a flexible way to
                                                  group and manage related components in
                                                  Meshery.
                                              - const: permission
                                                description: >-
                                                  A relationship that represents a set of
                                                  security-centric bindings between
                                                  components.
                                              - const: network
                                                description: >-
                                                  A relationship that represents a line of
                                                  communication between two or more
                                                  components.
                                              - const: firewall
                                                description: >-
                                                  A relationship that act as a
                                                  network-based security boundary for
                                                  ingress and egress traffic.
                                              - const: mount
                                                description: >-
                                                  A relationship that represents volume
                                                  mounts between components.
                                              - const: alias
                                                description: >-
                                                  An alias for a field path in another
                                                  component.
                                              - const: annotation
                                                description: >-
                                                  A relationship that provide valuable
                                                  context for users, controllers, and
                                                  third-party tools within the Meshery
                                                  ecosystem.
                                              - const: reference
                                                description: >-
                                                  A reference relationship  is a
                                                  declarative linkage where one resource
                                                  identifies or depends on another
                                                  resource by referencing its name, kind,
                                                  API version, or some other property
                                            x-oapi-codegen-extra-tags:
                                              yaml: subType
                                              json: subType
                                          key:
                                            description: Key that backs the capability.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            x-oapi-codegen-extra-tags:
                                              yaml: key
                                              json: key
                                          entityState:
                                            description: >-
                                              State of the entity in which the
                                              capability is applicable.
                                            type: array
                                            items:
                                              type: string
                                              enum:
                                                - declaration
                                                - instance
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              description: >-
                                                A string starting with an alphanumeric
                                                character. Spaces and hyphens allowed.
                                              x-oapi-codegen-extra-tags:
                                                yaml: entityState
                                                json: entityState
                                          status:
                                            type: string
                                            description: Status of the capability
                                            default: enabled
                                            enum:
                                              - enabled
                                              - disabled
                                            x-oapi-codegen-extra-tags:
                                              yaml: status
                                              json: status
                                          metadata:
                                            type: object
                                            description: >-
                                              Metadata contains additional information
                                              associated with the capability.
                                              Extension point.
                                            additionalProperties: true
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                    isAnnotation:
                                      type: boolean
                                      description: >-
                                        Indicates whether the model and its
                                        entities should be treated as deployable
                                        entities or as logical representations.
                                      x-oapi-codegen-extra-tags:
                                        yaml: isAnnotation
                                        json: isAnnotation
                                    primaryColor:
                                      type: string
                                      description: Primary color associated with the model.
                                      minLength: 1
                                      maxLength: 50
                                      x-oapi-codegen-extra-tags:
                                        yaml: primaryColor
                                        json: primaryColor
                                    secondaryColor:
                                      type: string
                                      description: >-
                                        Secondary color associated with the
                                        model.
                                      minLength: 1
                                      maxLength: 50
                                      x-oapi-codegen-extra-tags:
                                        yaml: secondaryColor
                                        json: secondaryColor
                                    svgWhite:
                                      type: string
                                      description: >-
                                        SVG representation of the model in white
                                        color.
                                      minLength: 1
                                      x-oapi-codegen-extra-tags:
                                        yaml: svgWhite
                                        json: svgWhite
                                    svgColor:
                                      type: string
                                      description: >-
                                        SVG representation of the model in
                                        colored format.
                                      minLength: 1
                                      x-oapi-codegen-extra-tags:
                                        yaml: svgColor
                                        json: svgColor
                                    svgComplete:
                                      type: string
                                      description: >-
                                        SVG representation of the complete
                                        model.
                                      minLength: 1
                                      x-oapi-codegen-extra-tags:
                                        yaml: svgComplete
                                        json: svgComplete
                                  x-oapi-codegen-extra-tags:
                                    gorm: type:bytes;serializer:json
                                  additionalProperties: true
                                model:
                                  type: object
                                  description: >-
                                    Registrant-defined data associated with the
                                    model. Properties pertain to the software
                                    being managed (e.g. Kubernetes v1.31)
                                  required:
                                    - version
                                  properties:
                                    version:
                                      description: >-
                                        Version of the model as defined by the
                                        registrant.
                                      x-oapi-codegen-extra-tags:
                                        yaml: version
                                        json: version
                                      type: string
                                      minLength: 5
                                      maxLength: 100
                                      pattern: >-
                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  x-oapi-codegen-extra-tags:
                                    gorm: type:bytes;serializer:json
                              required:
                                - name
                                - version
                                - registrant
                                - category
                            kind:
                              description: >-
                                Kind of the Relationship. Learn more about
                                relationships -
                                https://docs.meshery.io/concepts/logical/relationships.
                              enum:
                                - hierarchical
                                - edge
                                - sibling
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: kind
                                json: kind
                            type:
                              description: >-
                                Classification of relationships. Used to group
                                relationships similar in nature.
                              x-go-name: RelationshipType
                              gorm: column:type
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: type
                                json: type
                            subType:
                              description: >-
                                Most granular unit of relationship
                                classification. The combination of Kind, Type
                                and SubType together uniquely identify a
                                Relationship.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: subType
                                json: subType
                            status:
                              type: string
                              description: Status of the relationship.
                              default: enabled
                              enum:
                                - pending
                                - approved
                                - ignored
                                - enabled
                                - deleted
                              x-oapi-codegen-extra-tags:
                                yaml: status
                                json: status
                            evaluationQuery:
                              description: >-
                                Optional. Assigns the policy to be used for the
                                evaluation of the relationship. Deprecation
                                Notice: In the future, this property is either
                                to be removed or to it is to be an array of
                                optional policy $refs.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: evaluationQuery
                                json: evaluationQuery
                            capabilities:
                              type: array
                              description: Capabilities associated with the relationship.
                              items:
                                $id: https://schemas.meshery.io/capability.json
                                $schema: http://json-schema.org/draft-07/schema#
                                description: >-
                                  Meshery manages entities in accordance with
                                  their specific capabilities. This field
                                  explicitly identifies those capabilities
                                  largely by what actions a given component
                                  supports; e.g. metric-scrape, sub-interface,
                                  and so on. This field is extensible. Entities
                                  may define a broad array of capabilities,
                                  which are in-turn dynamically interpretted by
                                  Meshery for full lifecycle management.
                                additionalProperties: false
                                type: object
                                required:
                                  - schemaVersion
                                  - version
                                  - displayName
                                  - kind
                                  - type
                                  - entityState
                                  - status
                                x-oapi-codegen-extra-tags:
                                  gorm: type:bytes;serializer:json
                                properties:
                                  schemaVersion:
                                    description: >-
                                      Specifies the version of the schema to
                                      which the capability definition conforms.
                                    type: string
                                    minLength: 2
                                    maxLength: 100
                                    pattern: >-
                                      ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                    example:
                                      - v1
                                      - v1alpha1
                                      - v2beta3
                                      - v1.custom-suffix
                                    x-oapi-codegen-extra-tags:
                                      yaml: schemaVersion
                                      json: schemaVersion
                                  version:
                                    description: Version of the capability definition.
                                    type: string
                                    minLength: 5
                                    maxLength: 100
                                    pattern: >-
                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                    x-oapi-codegen-extra-tags:
                                      yaml: version
                                      json: version
                                  displayName:
                                    description: >-
                                      Name of the capability in human-readible
                                      format.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: displayName
                                      json: displayName
                                  description:
                                    type: string
                                    description: >-
                                      A written representation of the purpose
                                      and characteristics of the capability.
                                    x-oapi-codegen-extra-tags:
                                      yaml: description
                                      json: description
                                  kind:
                                    description: Top-level categorization of the capability
                                    additionalProperties: false
                                    anyOf:
                                      - const: action
                                        description: >-
                                          For capabilities related to executing
                                          actions on entities. Example: initiate
                                          log streaming on a Pod. Example:
                                          initiate deployment of a component.
                                      - const: mutate
                                        description: >-
                                          For capabilities related to mutating an
                                          entity. Example: the ability to change
                                          the configuration of a component.
                                      - const: view
                                        description: >-
                                          For capabilities related to viewing an
                                          entity. Example: the ability to view a
                                          components configuration.
                                      - const: interaction
                                        description: >-
                                          Catch all for capabilities related to
                                          interaction with entities. Example: the
                                          ability for a component to be dragged
                                          and dropped. Example: supports event
                                          bubbling to parent components. 
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  type:
                                    description: >-
                                      Classification of capabilities. Used to
                                      group capabilities similar in nature.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: type
                                      json: type
                                  subType:
                                    description: >-
                                      Most granular unit of capability
                                      classification. The combination of Kind,
                                      Type and SubType together uniquely
                                      identify a Capability.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: subType
                                      json: subType
                                  key:
                                    description: Key that backs the capability.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: key
                                      json: key
                                  entityState:
                                    description: >-
                                      State of the entity in which the
                                      capability is applicable.
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                        - declaration
                                        - instance
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      description: >-
                                        A string starting with an alphanumeric
                                        character. Spaces and hyphens allowed.
                                      x-oapi-codegen-extra-tags:
                                        yaml: entityState
                                        json: entityState
                                  status:
                                    type: string
                                    description: Status of the capability
                                    default: enabled
                                    enum:
                                      - enabled
                                      - disabled
                                    x-oapi-codegen-extra-tags:
                                      yaml: status
                                      json: status
                                  metadata:
                                    type: object
                                    description: >-
                                      Metadata contains additional information
                                      associated with the capability. Extension
                                      point.
                                    additionalProperties: true
                                    x-oapi-codegen-extra-tags:
                                      yaml: metadata
                                      json: metadata
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                            metadata:
                              type: object
                              description: >-
                                Metadata contains additional information
                                associated with the Relationship.
                              additionalProperties: true
                              x-oapi-codegen-extra-tags:
                                gorm: foreignKey:ModelId;references:Id
                              properties:
                                description:
                                  description: >-
                                    Characterization of the meaning of the
                                    relationship and its relevance to both
                                    Meshery and entities under management.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: description
                                    json: description
                                isAnnotation:
                                  type: boolean
                                  description: >-
                                    Indicates whether the relationship should be
                                    treated as a logical representation only
                                  x-oapi-codegen-extra-tags:
                                    yaml: isAnnotation
                                    json: isAnnotation
                                  default: false
                                styles:
                                  anyOf:
                                    - type: object
                                      description: Visualization styles for a relationship
                                      allOf:
                                        - type: object
                                          description: Common styles for all entities
                                          additionalProperties: false
                                          required:
                                            - primaryColor
                                            - svgColor
                                            - svgWhite
                                          properties:
                                            primaryColor:
                                              type: string
                                              description: >-
                                                Primary color of the component used for
                                                UI representation.
                                            secondaryColor:
                                              type: string
                                              description: >-
                                                Secondary color of the entity used for
                                                UI representation.
                                            svgWhite:
                                              type: string
                                              description: >-
                                                White SVG of the entity used for UI
                                                representation on dark background.
                                            svgColor:
                                              type: string
                                              description: >-
                                                Colored SVG of the entity used for UI
                                                representation on light background.
                                            svgComplete:
                                              type: string
                                              description: >-
                                                Complete SVG of the entity used for UI
                                                representation, often inclusive of
                                                background.
                                            color:
                                              type: string
                                              description: >-
                                                The color of the element's label.
                                                Colours may be specified by name (e.g.
                                                red), hex (e.g. #ff0000 or #f00), RGB
                                                (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                                hsl(0, 100%, 50%)).
                                            text-opacity:
                                              type: number
                                              description: >-
                                                The opacity of the label text, including
                                                its outline.
                                              minimum: 0
                                              maximum: 1
                                            font-family:
                                              type: string
                                              description: >-
                                                A comma-separated list of font names to
                                                use on the label text.
                                            font-size:
                                              type: string
                                              description: The size of the label text.
                                            font-style:
                                              type: string
                                              description: >-
                                                A CSS font style to be applied to the
                                                label text.
                                            font-weight:
                                              type: string
                                              description: >-
                                                A CSS font weight to be applied to the
                                                label text.
                                            text-transform:
                                              type: string
                                              description: >-
                                                A transformation to apply to the label
                                                text
                                              enum:
                                                - none
                                                - uppercase
                                                - lowercase
                                            opacity:
                                              type: number
                                              description: >-
                                                The opacity of the element, ranging from
                                                0 to 1. Note that the opacity of a
                                                compound node parent affects the
                                                effective opacity of its children.See
                                                https://js.cytoscape.org/#style/visibility
                                              minimum: 0
                                              maximum: 1
                                            z-index:
                                              type: integer
                                              description: >-
                                                An integer value that affects the
                                                relative draw order of elements. In
                                                general, an element with a higher
                                                z-index will be drawn on top of an
                                                element with a lower z-index. Note that
                                                edges are under nodes despite z-index.
                                            label:
                                              type: string
                                              description: >-
                                                The text to display for an element’s
                                                label. Can give a path, e.g. data(id)
                                                will label with the elements id
                                        - properties:
                                            edge-animation:
                                              type: string
                                              description: >-
                                                The animation to use for the edge. Can
                                                be like 'marching-ants' , 'blink' ,
                                                'moving-gradient',etc .
                                            curve-style:
                                              type: string
                                              description: >-
                                                The curving method used to separate two
                                                or more edges between two nodes; may be
                                                haystack (very fast, bundled straight
                                                edges for which loops and compounds are
                                                unsupported), straight (straight edges
                                                with all arrows supported), bezier
                                                (bundled curved edges), unbundled-bezier
                                                (curved edges for use with manual
                                                control points), segments (a series of
                                                straight lines), taxi (right-angled
                                                lines, hierarchically bundled). Note
                                                that haystack edges work best with
                                                ellipse, rectangle, or similar nodes.
                                                Smaller node shapes, like triangle, will
                                                not be as aesthetically pleasing. Also
                                                note that edge endpoint arrows are
                                                unsupported for haystack edges.
                                              default: straight
                                              enum:
                                                - straight
                                                - haystack
                                                - bezier
                                                - unbundled-bezier
                                                - segments
                                                - taxi
                                            line-color:
                                              type: string
                                              description: >-
                                                The colour of the edge’s line. Colours
                                                may be specified by name (e.g. red), hex
                                                (e.g. #ff0000 or #f00), RGB (e.g.
                                                rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                                100%, 50%)).
                                            line-style:
                                              type: string
                                              description: The style of the edge’s line.
                                              enum:
                                                - solid
                                                - dotted
                                                - dashed
                                            line-cap:
                                              type: string
                                              description: >-
                                                The cap style of the edge’s line; may be
                                                butt (default), round, or square. The
                                                cap may or may not be visible, depending
                                                on the shape of the node and the
                                                relative size of the node and edge. Caps
                                                other than butt extend beyond the
                                                specified endpoint of the edge.
                                              enum:
                                                - butt
                                                - round
                                                - square
                                              default: butt
                                            line-opacity:
                                              type: number
                                              minimum: 0
                                              maximum: 1
                                              default: 1
                                              description: >-
                                                The opacity of the edge’s line and
                                                arrow. Useful if you wish to have a
                                                separate opacity for the edge label
                                                versus the edge line. Note that the
                                                opacity value of the edge element
                                                affects the effective opacity of its
                                                line and label subcomponents.
                                            target-arrow-color:
                                              type: string
                                              description: >-
                                                The colour of the edge’s source arrow.
                                                Colours may be specified by name (e.g.
                                                red), hex (e.g. #ff0000 or #f00), RGB
                                                (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                                hsl(0, 100%, 50%)).
                                            target-arrow-shape:
                                              type: string
                                              description: The shape of the edge’s source arrow
                                              enum:
                                                - triangle
                                                - triangle-tee
                                                - circle-triangle
                                                - triangle-cross
                                                - triangle-backcurve
                                                - vee
                                                - tee
                                                - square
                                                - circle
                                                - diamond
                                                - chevron
                                                - none
                                            target-arrow-fill:
                                              type: string
                                              description: >-
                                                The fill state of the edge’s source
                                                arrow
                                              enum:
                                                - filled
                                                - hollow
                                            mid-target-arrow-color:
                                              type: string
                                              description: >-
                                                The colour of the edge’s source arrow.
                                                Colours may be specified by name (e.g.
                                                red), hex (e.g. #ff0000 or #f00), RGB
                                                (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                                hsl(0, 100%, 50%)).
                                            mid-target-arrow-shape:
                                              type: string
                                              description: The shape of the edge’s source arrow
                                              enum:
                                                - triangle
                                                - triangle-tee
                                                - circle-triangle
                                                - triangle-cross
                                                - triangle-backcurve
                                                - vee
                                                - tee
                                                - square
                                                - circle
                                                - diamond
                                                - chevron
                                                - none
                                            mid-target-arrow-fill:
                                              type: string
                                              description: >-
                                                The fill state of the edge’s source
                                                arrow
                                              enum:
                                                - filled
                                                - hollow
                                            arrow-scale:
                                              type: number
                                              description: Scaling for the arrow size.
                                              minimum: 0
                                            source-label:
                                              type: string
                                              description: >-
                                                The text to display for an edge’s source
                                                label. Can give a path, e.g. data(id)
                                                will label with the elements id
                                            target-label:
                                              type: string
                                              description: >-
                                                The text to display for an edge’s target
                                                label. Can give a path, e.g. data(id)
                                                will label with the elements id
                                    - type: object
                                      description: Common styles for all entities
                                      additionalProperties: false
                                      required:
                                        - primaryColor
                                        - svgColor
                                        - svgWhite
                                      properties:
                                        primaryColor:
                                          type: string
                                          description: >-
                                            Primary color of the component used for
                                            UI representation.
                                        secondaryColor:
                                          type: string
                                          description: >-
                                            Secondary color of the entity used for
                                            UI representation.
                                        svgWhite:
                                          type: string
                                          description: >-
                                            White SVG of the entity used for UI
                                            representation on dark background.
                                        svgColor:
                                          type: string
                                          description: >-
                                            Colored SVG of the entity used for UI
                                            representation on light background.
                                        svgComplete:
                                          type: string
                                          description: >-
                                            Complete SVG of the entity used for UI
                                            representation, often inclusive of
                                            background.
                                        color:
                                          type: string
                                          description: >-
                                            The color of the element's label.
                                            Colours may be specified by name (e.g.
                                            red), hex (e.g. #ff0000 or #f00), RGB
                                            (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                            hsl(0, 100%, 50%)).
                                        text-opacity:
                                          type: number
                                          description: >-
                                            The opacity of the label text, including
                                            its outline.
                                          minimum: 0
                                          maximum: 1
                                        font-family:
                                          type: string
                                          description: >-
                                            A comma-separated list of font names to
                                            use on the label text.
                                        font-size:
                                          type: string
                                          description: The size of the label text.
                                        font-style:
                                          type: string
                                          description: >-
                                            A CSS font style to be applied to the
                                            label text.
                                        font-weight:
                                          type: string
                                          description: >-
                                            A CSS font weight to be applied to the
                                            label text.
                                        text-transform:
                                          type: string
                                          description: >-
                                            A transformation to apply to the label
                                            text
                                          enum:
                                            - none
                                            - uppercase
                                            - lowercase
                                        opacity:
                                          type: number
                                          description: >-
                                            The opacity of the element, ranging from
                                            0 to 1. Note that the opacity of a
                                            compound node parent affects the
                                            effective opacity of its children.See
                                            https://js.cytoscape.org/#style/visibility
                                          minimum: 0
                                          maximum: 1
                                        z-index:
                                          type: integer
                                          description: >-
                                            An integer value that affects the
                                            relative draw order of elements. In
                                            general, an element with a higher
                                            z-index will be drawn on top of an
                                            element with a lower z-index. Note that
                                            edges are under nodes despite z-index.
                                        label:
                                          type: string
                                          description: >-
                                            The text to display for an element’s
                                            label. Can give a path, e.g. data(id)
                                            will label with the elements id
                                      $comment: Extension point for additional styles
                                  x-oapi-codegen-extra-tags:
                                    yaml: styles
                                    json: styles
                            selectors:
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              type: array
                              description: >-
                                Selectors are organized as an array, with each
                                item containing a distinct set of selectors that
                                share a common functionality. This structure
                                allows for flexibility in defining
                                relationships, even when different components
                                are involved.
                              $comment: >-
                                Sets of selectors are interpreted as a logical
                                UNION. Properties within a selector `allow` and
                                `deny` are interpreted as logical AND, while
                                'from' and 'to' represents a UNION of set of
                                combinatorial pairs.
                              items:
                                type: object
                                description: >-
                                  Optional selectors used to match Components.
                                  Absence of a selector means that it is applied
                                  to all Components.
                                additionalProperties: false
                                required:
                                  - allow
                                properties:
                                  deny:
                                    description: >-
                                      Optional selectors used to define
                                      relationships which should not be created
                                      / is restricted.
                                    type: object
                                    required:
                                      - to
                                      - from
                                    properties:
                                      from:
                                        description: >-
                                          Describes the component(s) which are
                                          involved in the relationship along with
                                          a set of actions to perform upon
                                          selection match.
                                        type: array
                                        items:
                                          type: object
                                          additionalProperties: false
                                          properties:
                                            kind:
                                              type: string
                                              x-oapi-codegen-extra-tags:
                                                yaml: kind
                                                json: kind
                                            model:
                                              description: >-
                                                Name of the model implicated by this
                                                selector. Learn more at
                                                https://docs.meshery.io/concepts/models
                                              $id: https://schemas.meshery.io/model.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              additionalProperties: false
                                              type: object
                                              properties:
                                                id:
                                                  description: >-
                                                    Uniquely identifies the entity (i.e.
                                                    component) as defined in a declaration
                                                    (i.e. design).
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema used
                                                    for the definition.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                version:
                                                  description: Version of the model definition.
                                                  type: string
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                name:
                                                  description: >-
                                                    The unique name for the model within the
                                                    scope of a registrant.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: name
                                                    json: name
                                                displayName:
                                                  description: Human-readable name for the model.
                                                  minLength: 1
                                                  maxLength: 100
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: Description of the model.
                                                  minLength: 1
                                                  maxLength: 1000
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                status:
                                                  type: string
                                                  description: >-
                                                    Status of model, including:

                                                    - duplicate: this component is a
                                                    duplicate of another. The component that
                                                    is to be the canonical reference and
                                                    that is duplicated by other components
                                                    should not be assigned the 'duplicate'
                                                    status.

                                                    - maintenance: model is unavailable for
                                                    a period of time.

                                                    - enabled: model is available for use
                                                    for all users of this Meshery Server.

                                                    - ignored: model is unavailable for use
                                                    for all users of this Meshery Server.
                                                  enum:
                                                    - ignored
                                                    - enabled
                                                    - duplicate
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                registrant:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: registrant
                                                    json: registrant
                                                    gorm: foreignKey:RegistrantId;references:Id
                                                  $id: >-
                                                    https://schemas.meshery.io/component.json
                                                  $schema: http://json-schema.org/draft-07/schema#
                                                  description: >-
                                                    Meshery Connections are managed and
                                                    unmanaged resources that either through
                                                    discovery or manual entry are tracked by
                                                    Meshery. Learn more at
                                                    https://docs.meshery.io/concepts/logical/connections
                                                  additionalProperties: false
                                                  type: object
                                                  required:
                                                    - kind
                                                    - type
                                                    - status
                                                  properties:
                                                    id:
                                                      description: ID
                                                      type: string
                                                      format: uuid
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                    name:
                                                      x-oapi-codegen-extra-tags:
                                                        db: name
                                                        yaml: name
                                                        json: name
                                                      type: string
                                                      description: Connection Name
                                                    credential_id:
                                                      x-go-name: CredentialId
                                                      x-oapi-codegen-extra-tags:
                                                        db: credential_id
                                                        yaml: credential_id
                                                        json: credential_id
                                                      description: Credential ID
                                                      type: string
                                                      format: uuid
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                    type:
                                                      x-oapi-codegen-extra-tags:
                                                        db: type
                                                        yaml: type
                                                        json: type
                                                      type: string
                                                      description: Connection Type
                                                    sub_type:
                                                      x-oapi-codegen-extra-tags:
                                                        db: sub_type
                                                        yaml: sub_type
                                                        json: sub_type
                                                      type: string
                                                      description: Connection Subtype
                                                    kind:
                                                      x-oapi-codegen-extra-tags:
                                                        db: kind
                                                        yaml: kind
                                                        json: kind
                                                      type: string
                                                      description: Connection Kind
                                                    metadata:
                                                      x-oapi-codegen-extra-tags:
                                                        db: metadata
                                                        yaml: metadata
                                                        json: metadata
                                                      type: object
                                                    status:
                                                      x-oapi-codegen-extra-tags:
                                                        db: status
                                                        yaml: status
                                                        json: status
                                                      description: Connection Status
                                                      type: string
                                                      enum:
                                                        - discovered
                                                        - registered
                                                        - connected
                                                        - ignored
                                                        - maintenance
                                                        - disconnected
                                                        - deleted
                                                        - not found
                                                    user_id:
                                                      x-go-name: UserID
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: user_id
                                                        json: user_id
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                    created_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: created_at
                                                        json: created_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                    updated_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: updated_at
                                                        json: updated_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                    deleted_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: deleted_at
                                                        json: deleted_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                category:
                                                  type: object
                                                  description: Category of the model.
                                                  properties:
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                    name:
                                                      type: string
                                                      minLength: 1
                                                      maxLength: 100
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: name
                                                        json: name
                                                    metadata:
                                                      type: object
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: metadata
                                                        json: metadata
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: category
                                                    json: category
                                                    gorm: foreignKey:CategoryId;references:Id
                                                subCategory:
                                                  type: string
                                                  description: Sub-category of the model.
                                                  minLength: 1
                                                  maxLength: 100
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subCategory
                                                    json: subCategory
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata containing additional
                                                    information associated with the model.
                                                  properties:
                                                    capabilities:
                                                      type: array
                                                      description: Capabilities associated with the model
                                                      items:
                                                        $id: >-
                                                          https://schemas.meshery.io/capability.json
                                                        $schema: http://json-schema.org/draft-07/schema#
                                                        description: >-
                                                          Meshery manages entities in accordance
                                                          with their specific capabilities. This
                                                          field explicitly identifies those
                                                          capabilities largely by what actions a
                                                          given component supports; e.g.
                                                          metric-scrape, sub-interface, and so on.
                                                          This field is extensible. Entities may
                                                          define a broad array of capabilities,
                                                          which are in-turn dynamically
                                                          interpretted by Meshery for full
                                                          lifecycle management.
                                                        additionalProperties: false
                                                        type: object
                                                        required:
                                                          - schemaVersion
                                                          - version
                                                          - displayName
                                                          - kind
                                                          - type
                                                          - entityState
                                                          - status
                                                        x-oapi-codegen-extra-tags:
                                                          gorm: type:bytes;serializer:json
                                                        properties:
                                                          schemaVersion:
                                                            description: >-
                                                              Specifies the version of the schema to
                                                              which the capability definition
                                                              conforms.
                                                            type: string
                                                            minLength: 2
                                                            maxLength: 100
                                                            pattern: >-
                                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                            example:
                                                              - v1
                                                              - v1alpha1
                                                              - v2beta3
                                                              - v1.custom-suffix
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: schemaVersion
                                                              json: schemaVersion
                                                          version:
                                                            description: Version of the capability definition.
                                                            type: string
                                                            minLength: 5
                                                            maxLength: 100
                                                            pattern: >-
                                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: version
                                                              json: version
                                                          displayName:
                                                            description: >-
                                                              Name of the capability in human-readible
                                                              format.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: displayName
                                                              json: displayName
                                                          description:
                                                            type: string
                                                            description: >-
                                                              A written representation of the purpose
                                                              and characteristics of the capability.
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: description
                                                              json: description
                                                          kind:
                                                            description: >-
                                                              Top-level categorization of the
                                                              capability
                                                            additionalProperties: false
                                                            anyOf:
                                                              - const: action
                                                                description: >-
                                                                  For capabilities related to executing
                                                                  actions on entities. Example: initiate
                                                                  log streaming on a Pod. Example:
                                                                  initiate deployment of a component.
                                                              - const: mutate
                                                                description: >-
                                                                  For capabilities related to mutating an
                                                                  entity. Example: the ability to change
                                                                  the configuration of a component.
                                                              - const: view
                                                                description: >-
                                                                  For capabilities related to viewing an
                                                                  entity. Example: the ability to view a
                                                                  components configuration.
                                                              - const: interaction
                                                                description: >-
                                                                  Catch all for capabilities related to
                                                                  interaction with entities. Example: the
                                                                  ability for a component to be dragged
                                                                  and dropped. Example: supports event
                                                                  bubbling to parent components. 
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: kind
                                                              json: kind
                                                          type:
                                                            description: >-
                                                              Classification of capabilities. Used to
                                                              group capabilities similar in nature.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: type
                                                              json: type
                                                          subType:
                                                            description: >-
                                                              Most granular unit of capability
                                                              classification. The combination of Kind,
                                                              Type and SubType together uniquely
                                                              identify a Capability.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: subType
                                                              json: subType
                                                          key:
                                                            description: Key that backs the capability.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: key
                                                              json: key
                                                          entityState:
                                                            description: >-
                                                              State of the entity in which the
                                                              capability is applicable.
                                                            type: array
                                                            items:
                                                              type: string
                                                              enum:
                                                                - declaration
                                                                - instance
                                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                              description: >-
                                                                A string starting with an alphanumeric
                                                                character. Spaces and hyphens allowed.
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: entityState
                                                                json: entityState
                                                          status:
                                                            type: string
                                                            description: Status of the capability
                                                            default: enabled
                                                            enum:
                                                              - enabled
                                                              - disabled
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: status
                                                              json: status
                                                          metadata:
                                                            type: object
                                                            description: >-
                                                              Metadata contains additional information
                                                              associated with the capability.
                                                              Extension point.
                                                            additionalProperties: true
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: metadata
                                                              json: metadata
                                                    isAnnotation:
                                                      type: boolean
                                                      description: >-
                                                        Indicates whether the model and its
                                                        entities should be treated as deployable
                                                        entities or as logical representations.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: isAnnotation
                                                        json: isAnnotation
                                                    primaryColor:
                                                      type: string
                                                      description: Primary color associated with the model.
                                                      minLength: 1
                                                      maxLength: 50
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: primaryColor
                                                        json: primaryColor
                                                    secondaryColor:
                                                      type: string
                                                      description: >-
                                                        Secondary color associated with the
                                                        model.
                                                      minLength: 1
                                                      maxLength: 50
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: secondaryColor
                                                        json: secondaryColor
                                                    svgWhite:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the model in white
                                                        color.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgWhite
                                                        json: svgWhite
                                                    svgColor:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the model in
                                                        colored format.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgColor
                                                        json: svgColor
                                                    svgComplete:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the complete
                                                        model.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgComplete
                                                        json: svgComplete
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                                  additionalProperties: true
                                                model:
                                                  type: object
                                                  description: >-
                                                    Registrant-defined data associated with
                                                    the model. Properties pertain to the
                                                    software being managed (e.g. Kubernetes
                                                    v1.31)
                                                  required:
                                                    - version
                                                  properties:
                                                    version:
                                                      description: >-
                                                        Version of the model as defined by the
                                                        registrant.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: version
                                                        json: version
                                                      type: string
                                                      minLength: 5
                                                      maxLength: 100
                                                      pattern: >-
                                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                              required:
                                                - name
                                                - version
                                                - registrant
                                                - category
                                            id:
                                              type: string
                                              format: uuid
                                              description: >-
                                                A Universally Unique Identifier used to
                                                uniquely identify entites in Meshery.
                                                The UUID core defintion is used across
                                                different schemas.
                                              x-go-type: uuid.UUID
                                              x-go-type-import:
                                                path: github.com/gofrs/uuid
                                              x-oapi-codegen-extra-tags:
                                                yaml: id
                                                json: id
                                            match:
                                              type: object
                                              additionalProperties: false
                                              oneOf:
                                                - type: array
                                                  items:
                                                    type: array
                                                    items:
                                                      type: string
                                                - properties:
                                                    from:
                                                      $comment: >-
                                                        Type is array so that mutliple bindings
                                                        can be supported between 2 nodes
                                                      type: array
                                                      items:
                                                        type: object
                                                        allOf:
                                                          - properties:
                                                              kind:
                                                                type: string
                                                              id:
                                                                type: string
                                                                format: uuid
                                                                description: >-
                                                                  A Universally Unique Identifier used to
                                                                  uniquely identify entites in Meshery.
                                                                  The UUID core defintion is used across
                                                                  different schemas.
                                                                x-go-type: uuid.UUID
                                                                x-go-type-import:
                                                                  path: github.com/gofrs/uuid
                                                                x-oapi-codegen-extra-tags:
                                                                  yaml: id
                                                                  json: id
                                                          - oneOf:
                                                              - properties:
                                                                  mutatorRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        The sequence of mutatorRef and
                                                                        mutatedRef must match. eg: mutatorRef:
                                                                        [[config, url], [config, name]],
                                                                        mutatedRef: [[configPatch, value],
                                                                        [name]]. The value [config, url] will be
                                                                        patched at [configPatch, value].
                                                                        Similarly [config,name] will be patched
                                                                        at [name].
                                                                    description: >-
                                                                      JSON ref to value from where patch
                                                                      should be applied.
                                                              - properties:
                                                                  mutatedRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        JSONPath
                                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                                        to property to be patched.
                                                    to:
                                                      $comment: >-
                                                        Type is array so that mutliple bindings
                                                        can be supported between 2 nodes
                                                      type: array
                                                      items:
                                                        type: object
                                                        allOf:
                                                          - properties:
                                                              kind:
                                                                type: string
                                                              id:
                                                                type: string
                                                                format: uuid
                                                                description: >-
                                                                  A Universally Unique Identifier used to
                                                                  uniquely identify entites in Meshery.
                                                                  The UUID core defintion is used across
                                                                  different schemas.
                                                                x-go-type: uuid.UUID
                                                                x-go-type-import:
                                                                  path: github.com/gofrs/uuid
                                                                x-oapi-codegen-extra-tags:
                                                                  yaml: id
                                                                  json: id
                                                          - oneOf:
                                                              - properties:
                                                                  mutatorRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        The sequence of mutatorRef and
                                                                        mutatedRef must match. eg: mutatorRef:
                                                                        [[config, url], [config, name]],
                                                                        mutatedRef: [[configPatch, value],
                                                                        [name]]. The value [config, url] will be
                                                                        patched at [configPatch, value].
                                                                        Similarly [config,name] will be patched
                                                                        at [name].
                                                                    description: >-
                                                                      JSON ref to value from where patch
                                                                      should be applied.
                                                              - properties:
                                                                  mutatedRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        JSONPath
                                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                                        to property to be patched.
                                              x-oapi-codegen-extra-tags:
                                                yaml: match
                                                json: match
                                            patch:
                                              allOf:
                                                - properties:
                                                    patchStrategy:
                                                      description: >-
                                                        patchStrategy allows you to make
                                                        specific changes to a resource using a
                                                        standard JSON Patch format (RFC 6902). 


                                                        add: Inserts a value into an array or
                                                        adds a member to an object.

                                                        replace: Replaces a value.

                                                        merge: Combines the values of the target
                                                        location with the values from the patch.
                                                        If the target location doesn't exist, it
                                                        is created.

                                                        strategic:specific to Kubernetes and
                                                        understands the structure of Kubernetes
                                                        objects. It can handle complex changes
                                                        like updating lists and maps, as well as
                                                        preserving default values. However, it's
                                                        not supported for custom resources. For
                                                        custom resources, only JSON Patch and
                                                        Merge Patch are typically supported.

                                                        remove: Removes a value.

                                                        copy: Copies a value from one location
                                                        to another.

                                                        move: Moves a value from one location to
                                                        another.

                                                        test: Tests that a value at the target
                                                        location is equal to a specified value.
                                                      $comment: >-
                                                        Array Indexing: When working with
                                                        arrays, be aware that Kubernetes uses
                                                        zero-based indexing in JSON patch paths.

                                                        Merge Patch vs. JSON Patch: Merge
                                                        patches are less flexible than JSON
                                                        patches and do not support all the same
                                                        operations.

                                                        Strategic Merge Patch: For some
                                                        Kubernetes resources, you can also use
                                                        the strategic type for a strategic merge
                                                        patch, which understands the structure
                                                        of Kubernetes objects and can handle
                                                        complex operations.
                                                      type: string
                                                      enum:
                                                        - merge
                                                        - strategic
                                                        - add
                                                        - remove
                                                        - copy
                                                        - move
                                                        - test
                                                      default: copy
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                              x-oapi-codegen-extra-tags:
                                                yaml: patch
                                                json: patch
                                          description: >-
                                            Optional fields that are a part of the
                                            `from` selector. Absence of a field has
                                            an implied * meaning.
                                      to:
                                        description: >-
                                          Describes the component(s) which are
                                          involved in the relationship along with
                                          a set of actions to perform upon
                                          selection match.
                                        type: array
                                        items:
                                          type: object
                                          additionalProperties: false
                                          properties:
                                            kind:
                                              type: string
                                              x-oapi-codegen-extra-tags:
                                                yaml: kind
                                                json: kind
                                            model:
                                              description: >-
                                                Name of the model implicated by this
                                                selector. Learn more at
                                                https://docs.meshery.io/concepts/models
                                              $id: https://schemas.meshery.io/model.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              additionalProperties: false
                                              type: object
                                              properties:
                                                id:
                                                  description: >-
                                                    Uniquely identifies the entity (i.e.
                                                    component) as defined in a declaration
                                                    (i.e. design).
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema used
                                                    for the definition.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                version:
                                                  description: Version of the model definition.
                                                  type: string
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                name:
                                                  description: >-
                                                    The unique name for the model within the
                                                    scope of a registrant.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: name
                                                    json: name
                                                displayName:
                                                  description: Human-readable name for the model.
                                                  minLength: 1
                                                  maxLength: 100
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: Description of the model.
                                                  minLength: 1
                                                  maxLength: 1000
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                status:
                                                  type: string
                                                  description: >-
                                                    Status of model, including:

                                                    - duplicate: this component is a
                                                    duplicate of another. The component that
                                                    is to be the canonical reference and
                                                    that is duplicated by other components
                                                    should not be assigned the 'duplicate'
                                                    status.

                                                    - maintenance: model is unavailable for
                                                    a period of time.

                                                    - enabled: model is available for use
                                                    for all users of this Meshery Server.

                                                    - ignored: model is unavailable for use
                                                    for all users of this Meshery Server.
                                                  enum:
                                                    - ignored
                                                    - enabled
                                                    - duplicate
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                registrant:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: registrant
                                                    json: registrant
                                                    gorm: foreignKey:RegistrantId;references:Id
                                                  $id: >-
                                                    https://schemas.meshery.io/component.json
                                                  $schema: http://json-schema.org/draft-07/schema#
                                                  description: >-
                                                    Meshery Connections are managed and
                                                    unmanaged resources that either through
                                                    discovery or manual entry are tracked by
                                                    Meshery. Learn more at
                                                    https://docs.meshery.io/concepts/logical/connections
                                                  additionalProperties: false
                                                  type: object
                                                  required:
                                                    - kind
                                                    - type
                                                    - status
                                                  properties:
                                                    id:
                                                      description: ID
                                                      type: string
                                                      format: uuid
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                    name:
                                                      x-oapi-codegen-extra-tags:
                                                        db: name
                                                        yaml: name
                                                        json: name
                                                      type: string
                                                      description: Connection Name
                                                    credential_id:
                                                      x-go-name: CredentialId
                                                      x-oapi-codegen-extra-tags:
                                                        db: credential_id
                                                        yaml: credential_id
                                                        json: credential_id
                                                      description: Credential ID
                                                      type: string
                                                      format: uuid
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                    type:
                                                      x-oapi-codegen-extra-tags:
                                                        db: type
                                                        yaml: type
                                                        json: type
                                                      type: string
                                                      description: Connection Type
                                                    sub_type:
                                                      x-oapi-codegen-extra-tags:
                                                        db: sub_type
                                                        yaml: sub_type
                                                        json: sub_type
                                                      type: string
                                                      description: Connection Subtype
                                                    kind:
                                                      x-oapi-codegen-extra-tags:
                                                        db: kind
                                                        yaml: kind
                                                        json: kind
                                                      type: string
                                                      description: Connection Kind
                                                    metadata:
                                                      x-oapi-codegen-extra-tags:
                                                        db: metadata
                                                        yaml: metadata
                                                        json: metadata
                                                      type: object
                                                    status:
                                                      x-oapi-codegen-extra-tags:
                                                        db: status
                                                        yaml: status
                                                        json: status
                                                      description: Connection Status
                                                      type: string
                                                      enum:
                                                        - discovered
                                                        - registered
                                                        - connected
                                                        - ignored
                                                        - maintenance
                                                        - disconnected
                                                        - deleted
                                                        - not found
                                                    user_id:
                                                      x-go-name: UserID
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: user_id
                                                        json: user_id
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                    created_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: created_at
                                                        json: created_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                    updated_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: updated_at
                                                        json: updated_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                    deleted_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: deleted_at
                                                        json: deleted_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                category:
                                                  type: object
                                                  description: Category of the model.
                                                  properties:
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                    name:
                                                      type: string
                                                      minLength: 1
                                                      maxLength: 100
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: name
                                                        json: name
                                                    metadata:
                                                      type: object
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: metadata
                                                        json: metadata
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: category
                                                    json: category
                                                    gorm: foreignKey:CategoryId;references:Id
                                                subCategory:
                                                  type: string
                                                  description: Sub-category of the model.
                                                  minLength: 1
                                                  maxLength: 100
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subCategory
                                                    json: subCategory
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata containing additional
                                                    information associated with the model.
                                                  properties:
                                                    capabilities:
                                                      type: array
                                                      description: Capabilities associated with the model
                                                      items:
                                                        $id: >-
                                                          https://schemas.meshery.io/capability.json
                                                        $schema: http://json-schema.org/draft-07/schema#
                                                        description: >-
                                                          Meshery manages entities in accordance
                                                          with their specific capabilities. This
                                                          field explicitly identifies those
                                                          capabilities largely by what actions a
                                                          given component supports; e.g.
                                                          metric-scrape, sub-interface, and so on.
                                                          This field is extensible. Entities may
                                                          define a broad array of capabilities,
                                                          which are in-turn dynamically
                                                          interpretted by Meshery for full
                                                          lifecycle management.
                                                        additionalProperties: false
                                                        type: object
                                                        required:
                                                          - schemaVersion
                                                          - version
                                                          - displayName
                                                          - kind
                                                          - type
                                                          - entityState
                                                          - status
                                                        x-oapi-codegen-extra-tags:
                                                          gorm: type:bytes;serializer:json
                                                        properties:
                                                          schemaVersion:
                                                            description: >-
                                                              Specifies the version of the schema to
                                                              which the capability definition
                                                              conforms.
                                                            type: string
                                                            minLength: 2
                                                            maxLength: 100
                                                            pattern: >-
                                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                            example:
                                                              - v1
                                                              - v1alpha1
                                                              - v2beta3
                                                              - v1.custom-suffix
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: schemaVersion
                                                              json: schemaVersion
                                                          version:
                                                            description: Version of the capability definition.
                                                            type: string
                                                            minLength: 5
                                                            maxLength: 100
                                                            pattern: >-
                                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: version
                                                              json: version
                                                          displayName:
                                                            description: >-
                                                              Name of the capability in human-readible
                                                              format.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: displayName
                                                              json: displayName
                                                          description:
                                                            type: string
                                                            description: >-
                                                              A written representation of the purpose
                                                              and characteristics of the capability.
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: description
                                                              json: description
                                                          kind:
                                                            description: >-
                                                              Top-level categorization of the
                                                              capability
                                                            additionalProperties: false
                                                            anyOf:
                                                              - const: action
                                                                description: >-
                                                                  For capabilities related to executing
                                                                  actions on entities. Example: initiate
                                                                  log streaming on a Pod. Example:
                                                                  initiate deployment of a component.
                                                              - const: mutate
                                                                description: >-
                                                                  For capabilities related to mutating an
                                                                  entity. Example: the ability to change
                                                                  the configuration of a component.
                                                              - const: view
                                                                description: >-
                                                                  For capabilities related to viewing an
                                                                  entity. Example: the ability to view a
                                                                  components configuration.
                                                              - const: interaction
                                                                description: >-
                                                                  Catch all for capabilities related to
                                                                  interaction with entities. Example: the
                                                                  ability for a component to be dragged
                                                                  and dropped. Example: supports event
                                                                  bubbling to parent components. 
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: kind
                                                              json: kind
                                                          type:
                                                            description: >-
                                                              Classification of capabilities. Used to
                                                              group capabilities similar in nature.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: type
                                                              json: type
                                                          subType:
                                                            description: >-
                                                              Most granular unit of capability
                                                              classification. The combination of Kind,
                                                              Type and SubType together uniquely
                                                              identify a Capability.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: subType
                                                              json: subType
                                                          key:
                                                            description: Key that backs the capability.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: key
                                                              json: key
                                                          entityState:
                                                            description: >-
                                                              State of the entity in which the
                                                              capability is applicable.
                                                            type: array
                                                            items:
                                                              type: string
                                                              enum:
                                                                - declaration
                                                                - instance
                                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                              description: >-
                                                                A string starting with an alphanumeric
                                                                character. Spaces and hyphens allowed.
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: entityState
                                                                json: entityState
                                                          status:
                                                            type: string
                                                            description: Status of the capability
                                                            default: enabled
                                                            enum:
                                                              - enabled
                                                              - disabled
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: status
                                                              json: status
                                                          metadata:
                                                            type: object
                                                            description: >-
                                                              Metadata contains additional information
                                                              associated with the capability.
                                                              Extension point.
                                                            additionalProperties: true
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: metadata
                                                              json: metadata
                                                    isAnnotation:
                                                      type: boolean
                                                      description: >-
                                                        Indicates whether the model and its
                                                        entities should be treated as deployable
                                                        entities or as logical representations.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: isAnnotation
                                                        json: isAnnotation
                                                    primaryColor:
                                                      type: string
                                                      description: Primary color associated with the model.
                                                      minLength: 1
                                                      maxLength: 50
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: primaryColor
                                                        json: primaryColor
                                                    secondaryColor:
                                                      type: string
                                                      description: >-
                                                        Secondary color associated with the
                                                        model.
                                                      minLength: 1
                                                      maxLength: 50
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: secondaryColor
                                                        json: secondaryColor
                                                    svgWhite:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the model in white
                                                        color.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgWhite
                                                        json: svgWhite
                                                    svgColor:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the model in
                                                        colored format.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgColor
                                                        json: svgColor
                                                    svgComplete:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the complete
                                                        model.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgComplete
                                                        json: svgComplete
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                                  additionalProperties: true
                                                model:
                                                  type: object
                                                  description: >-
                                                    Registrant-defined data associated with
                                                    the model. Properties pertain to the
                                                    software being managed (e.g. Kubernetes
                                                    v1.31)
                                                  required:
                                                    - version
                                                  properties:
                                                    version:
                                                      description: >-
                                                        Version of the model as defined by the
                                                        registrant.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: version
                                                        json: version
                                                      type: string
                                                      minLength: 5
                                                      maxLength: 100
                                                      pattern: >-
                                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                              required:
                                                - name
                                                - version
                                                - registrant
                                                - category
                                            id:
                                              type: string
                                              format: uuid
                                              description: >-
                                                A Universally Unique Identifier used to
                                                uniquely identify entites in Meshery.
                                                The UUID core defintion is used across
                                                different schemas.
                                              x-go-type: uuid.UUID
                                              x-go-type-import:
                                                path: github.com/gofrs/uuid
                                              x-oapi-codegen-extra-tags:
                                                yaml: id
                                                json: id
                                            match:
                                              type: object
                                              additionalProperties: false
                                              oneOf:
                                                - type: array
                                                  items:
                                                    type: array
                                                    items:
                                                      type: string
                                                - properties:
                                                    from:
                                                      $comment: >-
                                                        Type is array so that mutliple bindings
                                                        can be supported between 2 nodes
                                                      type: array
                                                      items:
                                                        type: object
                                                        allOf:
                                                          - properties:
                                                              kind:
                                                                type: string
                                                              id:
                                                                type: string
                                                                format: uuid
                                                                description: >-
                                                                  A Universally Unique Identifier used to
                                                                  uniquely identify entites in Meshery.
                                                                  The UUID core defintion is used across
                                                                  different schemas.
                                                                x-go-type: uuid.UUID
                                                                x-go-type-import:
                                                                  path: github.com/gofrs/uuid
                                                                x-oapi-codegen-extra-tags:
                                                                  yaml: id
                                                                  json: id
                                                          - oneOf:
                                                              - properties:
                                                                  mutatorRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        The sequence of mutatorRef and
                                                                        mutatedRef must match. eg: mutatorRef:
                                                                        [[config, url], [config, name]],
                                                                        mutatedRef: [[configPatch, value],
                                                                        [name]]. The value [config, url] will be
                                                                        patched at [configPatch, value].
                                                                        Similarly [config,name] will be patched
                                                                        at [name].
                                                                    description: >-
                                                                      JSON ref to value from where patch
                                                                      should be applied.
                                                              - properties:
                                                                  mutatedRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        JSONPath
                                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                                        to property to be patched.
                                                    to:
                                                      $comment: >-
                                                        Type is array so that mutliple bindings
                                                        can be supported between 2 nodes
                                                      type: array
                                                      items:
                                                        type: object
                                                        allOf:
                                                          - properties:
                                                              kind:
                                                                type: string
                                                              id:
                                                                type: string
                                                                format: uuid
                                                                description: >-
                                                                  A Universally Unique Identifier used to
                                                                  uniquely identify entites in Meshery.
                                                                  The UUID core defintion is used across
                                                                  different schemas.
                                                                x-go-type: uuid.UUID
                                                                x-go-type-import:
                                                                  path: github.com/gofrs/uuid
                                                                x-oapi-codegen-extra-tags:
                                                                  yaml: id
                                                                  json: id
                                                          - oneOf:
                                                              - properties:
                                                                  mutatorRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        The sequence of mutatorRef and
                                                                        mutatedRef must match. eg: mutatorRef:
                                                                        [[config, url], [config, name]],
                                                                        mutatedRef: [[configPatch, value],
                                                                        [name]]. The value [config, url] will be
                                                                        patched at [configPatch, value].
                                                                        Similarly [config,name] will be patched
                                                                        at [name].
                                                                    description: >-
                                                                      JSON ref to value from where patch
                                                                      should be applied.
                                                              - properties:
                                                                  mutatedRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        JSONPath
                                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                                        to property to be patched.
                                              x-oapi-codegen-extra-tags:
                                                yaml: match
                                                json: match
                                            patch:
                                              allOf:
                                                - properties:
                                                    patchStrategy:
                                                      description: >-
                                                        patchStrategy allows you to make
                                                        specific changes to a resource using a
                                                        standard JSON Patch format (RFC 6902). 


                                                        add: Inserts a value into an array or
                                                        adds a member to an object.

                                                        replace: Replaces a value.

                                                        merge: Combines the values of the target
                                                        location with the values from the patch.
                                                        If the target location doesn't exist, it
                                                        is created.

                                                        strategic:specific to Kubernetes and
                                                        understands the structure of Kubernetes
                                                        objects. It can handle complex changes
                                                        like updating lists and maps, as well as
                                                        preserving default values. However, it's
                                                        not supported for custom resources. For
                                                        custom resources, only JSON Patch and
                                                        Merge Patch are typically supported.

                                                        remove: Removes a value.

                                                        copy: Copies a value from one location
                                                        to another.

                                                        move: Moves a value from one location to
                                                        another.

                                                        test: Tests that a value at the target
                                                        location is equal to a specified value.
                                                      $comment: >-
                                                        Array Indexing: When working with
                                                        arrays, be aware that Kubernetes uses
                                                        zero-based indexing in JSON patch paths.

                                                        Merge Patch vs. JSON Patch: Merge
                                                        patches are less flexible than JSON
                                                        patches and do not support all the same
                                                        operations.

                                                        Strategic Merge Patch: For some
                                                        Kubernetes resources, you can also use
                                                        the strategic type for a strategic merge
                                                        patch, which understands the structure
                                                        of Kubernetes objects and can handle
                                                        complex operations.
                                                      type: string
                                                      enum:
                                                        - merge
                                                        - strategic
                                                        - add
                                                        - remove
                                                        - copy
                                                        - move
                                                        - test
                                                      default: copy
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                              x-oapi-codegen-extra-tags:
                                                yaml: patch
                                                json: patch
                                          description: >-
                                            Optional fields that are a part of the
                                            `from` selector. Absence of a field has
                                            an implied * meaning.
                                  allow:
                                    description: >-
                                      Selectors used to define relationships
                                      which are allowed.
                                    type: object
                                    required:
                                      - to
                                      - from
                                    properties:
                                      from:
                                        description: >-
                                          Describes the component(s) which are
                                          involved in the relationship along with
                                          a set of actions to perform upon
                                          selection match.
                                        type: array
                                        items:
                                          type: object
                                          additionalProperties: false
                                          properties:
                                            kind:
                                              type: string
                                              x-oapi-codegen-extra-tags:
                                                yaml: kind
                                                json: kind
                                            match_strategy_matrix:
                                              description: >-
                                                Strategy criterion for determing how to
                                                match the values at mutator/mutated
                                                paths
                                              type: array
                                              items:
                                                type: array
                                                items:
                                                  type: string
                                            model:
                                              description: >-
                                                Name of the model implicated by this
                                                selector. Learn more at
                                                https://docs.meshery.io/concepts/models
                                              $id: https://schemas.meshery.io/model.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              additionalProperties: false
                                              type: object
                                              properties:
                                                id:
                                                  description: >-
                                                    Uniquely identifies the entity (i.e.
                                                    component) as defined in a declaration
                                                    (i.e. design).
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema used
                                                    for the definition.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                version:
                                                  description: Version of the model definition.
                                                  type: string
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                name:
                                                  description: >-
                                                    The unique name for the model within the
                                                    scope of a registrant.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: name
                                                    json: name
                                                displayName:
                                                  description: Human-readable name for the model.
                                                  minLength: 1
                                                  maxLength: 100
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: Description of the model.
                                                  minLength: 1
                                                  maxLength: 1000
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                status:
                                                  type: string
                                                  description: >-
                                                    Status of model, including:

                                                    - duplicate: this component is a
                                                    duplicate of another. The component that
                                                    is to be the canonical reference and
                                                    that is duplicated by other components
                                                    should not be assigned the 'duplicate'
                                                    status.

                                                    - maintenance: model is unavailable for
                                                    a period of time.

                                                    - enabled: model is available for use
                                                    for all users of this Meshery Server.

                                                    - ignored: model is unavailable for use
                                                    for all users of this Meshery Server.
                                                  enum:
                                                    - ignored
                                                    - enabled
                                                    - duplicate
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                registrant:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: registrant
                                                    json: registrant
                                                    gorm: foreignKey:RegistrantId;references:Id
                                                  $id: >-
                                                    https://schemas.meshery.io/component.json
                                                  $schema: http://json-schema.org/draft-07/schema#
                                                  description: >-
                                                    Meshery Connections are managed and
                                                    unmanaged resources that either through
                                                    discovery or manual entry are tracked by
                                                    Meshery. Learn more at
                                                    https://docs.meshery.io/concepts/logical/connections
                                                  additionalProperties: false
                                                  type: object
                                                  required:
                                                    - kind
                                                    - type
                                                    - status
                                                  properties:
                                                    id:
                                                      description: ID
                                                      type: string
                                                      format: uuid
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                    name:
                                                      x-oapi-codegen-extra-tags:
                                                        db: name
                                                        yaml: name
                                                        json: name
                                                      type: string
                                                      description: Connection Name
                                                    credential_id:
                                                      x-go-name: CredentialId
                                                      x-oapi-codegen-extra-tags:
                                                        db: credential_id
                                                        yaml: credential_id
                                                        json: credential_id
                                                      description: Credential ID
                                                      type: string
                                                      format: uuid
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                    type:
                                                      x-oapi-codegen-extra-tags:
                                                        db: type
                                                        yaml: type
                                                        json: type
                                                      type: string
                                                      description: Connection Type
                                                    sub_type:
                                                      x-oapi-codegen-extra-tags:
                                                        db: sub_type
                                                        yaml: sub_type
                                                        json: sub_type
                                                      type: string
                                                      description: Connection Subtype
                                                    kind:
                                                      x-oapi-codegen-extra-tags:
                                                        db: kind
                                                        yaml: kind
                                                        json: kind
                                                      type: string
                                                      description: Connection Kind
                                                    metadata:
                                                      x-oapi-codegen-extra-tags:
                                                        db: metadata
                                                        yaml: metadata
                                                        json: metadata
                                                      type: object
                                                    status:
                                                      x-oapi-codegen-extra-tags:
                                                        db: status
                                                        yaml: status
                                                        json: status
                                                      description: Connection Status
                                                      type: string
                                                      enum:
                                                        - discovered
                                                        - registered
                                                        - connected
                                                        - ignored
                                                        - maintenance
                                                        - disconnected
                                                        - deleted
                                                        - not found
                                                    user_id:
                                                      x-go-name: UserID
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: user_id
                                                        json: user_id
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                    created_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: created_at
                                                        json: created_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                    updated_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: updated_at
                                                        json: updated_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                    deleted_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: deleted_at
                                                        json: deleted_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                category:
                                                  type: object
                                                  description: Category of the model.
                                                  properties:
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                    name:
                                                      type: string
                                                      minLength: 1
                                                      maxLength: 100
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: name
                                                        json: name
                                                    metadata:
                                                      type: object
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: metadata
                                                        json: metadata
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: category
                                                    json: category
                                                    gorm: foreignKey:CategoryId;references:Id
                                                subCategory:
                                                  type: string
                                                  description: Sub-category of the model.
                                                  minLength: 1
                                                  maxLength: 100
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subCategory
                                                    json: subCategory
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata containing additional
                                                    information associated with the model.
                                                  properties:
                                                    capabilities:
                                                      type: array
                                                      description: Capabilities associated with the model
                                                      items:
                                                        $id: >-
                                                          https://schemas.meshery.io/capability.json
                                                        $schema: http://json-schema.org/draft-07/schema#
                                                        description: >-
                                                          Meshery manages entities in accordance
                                                          with their specific capabilities. This
                                                          field explicitly identifies those
                                                          capabilities largely by what actions a
                                                          given component supports; e.g.
                                                          metric-scrape, sub-interface, and so on.
                                                          This field is extensible. Entities may
                                                          define a broad array of capabilities,
                                                          which are in-turn dynamically
                                                          interpretted by Meshery for full
                                                          lifecycle management.
                                                        additionalProperties: false
                                                        type: object
                                                        required:
                                                          - schemaVersion
                                                          - version
                                                          - displayName
                                                          - kind
                                                          - type
                                                          - entityState
                                                          - status
                                                        x-oapi-codegen-extra-tags:
                                                          gorm: type:bytes;serializer:json
                                                        properties:
                                                          schemaVersion:
                                                            description: >-
                                                              Specifies the version of the schema to
                                                              which the capability definition
                                                              conforms.
                                                            type: string
                                                            minLength: 2
                                                            maxLength: 100
                                                            pattern: >-
                                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                            example:
                                                              - v1
                                                              - v1alpha1
                                                              - v2beta3
                                                              - v1.custom-suffix
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: schemaVersion
                                                              json: schemaVersion
                                                          version:
                                                            description: Version of the capability definition.
                                                            type: string
                                                            minLength: 5
                                                            maxLength: 100
                                                            pattern: >-
                                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: version
                                                              json: version
                                                          displayName:
                                                            description: >-
                                                              Name of the capability in human-readible
                                                              format.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: displayName
                                                              json: displayName
                                                          description:
                                                            type: string
                                                            description: >-
                                                              A written representation of the purpose
                                                              and characteristics of the capability.
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: description
                                                              json: description
                                                          kind:
                                                            description: >-
                                                              Top-level categorization of the
                                                              capability
                                                            additionalProperties: false
                                                            anyOf:
                                                              - const: action
                                                                description: >-
                                                                  For capabilities related to executing
                                                                  actions on entities. Example: initiate
                                                                  log streaming on a Pod. Example:
                                                                  initiate deployment of a component.
                                                              - const: mutate
                                                                description: >-
                                                                  For capabilities related to mutating an
                                                                  entity. Example: the ability to change
                                                                  the configuration of a component.
                                                              - const: view
                                                                description: >-
                                                                  For capabilities related to viewing an
                                                                  entity. Example: the ability to view a
                                                                  components configuration.
                                                              - const: interaction
                                                                description: >-
                                                                  Catch all for capabilities related to
                                                                  interaction with entities. Example: the
                                                                  ability for a component to be dragged
                                                                  and dropped. Example: supports event
                                                                  bubbling to parent components. 
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: kind
                                                              json: kind
                                                          type:
                                                            description: >-
                                                              Classification of capabilities. Used to
                                                              group capabilities similar in nature.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: type
                                                              json: type
                                                          subType:
                                                            description: >-
                                                              Most granular unit of capability
                                                              classification. The combination of Kind,
                                                              Type and SubType together uniquely
                                                              identify a Capability.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: subType
                                                              json: subType
                                                          key:
                                                            description: Key that backs the capability.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: key
                                                              json: key
                                                          entityState:
                                                            description: >-
                                                              State of the entity in which the
                                                              capability is applicable.
                                                            type: array
                                                            items:
                                                              type: string
                                                              enum:
                                                                - declaration
                                                                - instance
                                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                              description: >-
                                                                A string starting with an alphanumeric
                                                                character. Spaces and hyphens allowed.
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: entityState
                                                                json: entityState
                                                          status:
                                                            type: string
                                                            description: Status of the capability
                                                            default: enabled
                                                            enum:
                                                              - enabled
                                                              - disabled
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: status
                                                              json: status
                                                          metadata:
                                                            type: object
                                                            description: >-
                                                              Metadata contains additional information
                                                              associated with the capability.
                                                              Extension point.
                                                            additionalProperties: true
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: metadata
                                                              json: metadata
                                                    isAnnotation:
                                                      type: boolean
                                                      description: >-
                                                        Indicates whether the model and its
                                                        entities should be treated as deployable
                                                        entities or as logical representations.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: isAnnotation
                                                        json: isAnnotation
                                                    primaryColor:
                                                      type: string
                                                      description: Primary color associated with the model.
                                                      minLength: 1
                                                      maxLength: 50
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: primaryColor
                                                        json: primaryColor
                                                    secondaryColor:
                                                      type: string
                                                      description: >-
                                                        Secondary color associated with the
                                                        model.
                                                      minLength: 1
                                                      maxLength: 50
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: secondaryColor
                                                        json: secondaryColor
                                                    svgWhite:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the model in white
                                                        color.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgWhite
                                                        json: svgWhite
                                                    svgColor:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the model in
                                                        colored format.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgColor
                                                        json: svgColor
                                                    svgComplete:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the complete
                                                        model.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgComplete
                                                        json: svgComplete
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                                  additionalProperties: true
                                                model:
                                                  type: object
                                                  description: >-
                                                    Registrant-defined data associated with
                                                    the model. Properties pertain to the
                                                    software being managed (e.g. Kubernetes
                                                    v1.31)
                                                  required:
                                                    - version
                                                  properties:
                                                    version:
                                                      description: >-
                                                        Version of the model as defined by the
                                                        registrant.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: version
                                                        json: version
                                                      type: string
                                                      minLength: 5
                                                      maxLength: 100
                                                      pattern: >-
                                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                              required:
                                                - name
                                                - version
                                                - registrant
                                                - category
                                            id:
                                              type: string
                                              format: uuid
                                              description: >-
                                                A Universally Unique Identifier used to
                                                uniquely identify entites in Meshery.
                                                The UUID core defintion is used across
                                                different schemas.
                                              x-go-type: uuid.UUID
                                              x-go-type-import:
                                                path: github.com/gofrs/uuid
                                              x-oapi-codegen-extra-tags:
                                                yaml: id
                                                json: id
                                            match:
                                              type: object
                                              additionalProperties: false
                                              oneOf:
                                                - type: array
                                                  items:
                                                    type: array
                                                    items:
                                                      type: string
                                                - properties:
                                                    from:
                                                      $comment: >-
                                                        Type is array so that mutliple bindings
                                                        can be supported between 2 nodes
                                                      type: array
                                                      items:
                                                        type: object
                                                        allOf:
                                                          - properties:
                                                              kind:
                                                                type: string
                                                              id:
                                                                type: string
                                                                format: uuid
                                                                description: >-
                                                                  A Universally Unique Identifier used to
                                                                  uniquely identify entites in Meshery.
                                                                  The UUID core defintion is used across
                                                                  different schemas.
                                                                x-go-type: uuid.UUID
                                                                x-go-type-import:
                                                                  path: github.com/gofrs/uuid
                                                                x-oapi-codegen-extra-tags:
                                                                  yaml: id
                                                                  json: id
                                                          - oneOf:
                                                              - properties:
                                                                  mutatorRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        The sequence of mutatorRef and
                                                                        mutatedRef must match. eg: mutatorRef:
                                                                        [[config, url], [config, name]],
                                                                        mutatedRef: [[configPatch, value],
                                                                        [name]]. The value [config, url] will be
                                                                        patched at [configPatch, value].
                                                                        Similarly [config,name] will be patched
                                                                        at [name].
                                                                    description: >-
                                                                      JSON ref to value from where patch
                                                                      should be applied.
                                                              - properties:
                                                                  mutatedRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        JSONPath
                                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                                        to property to be patched.
                                                    to:
                                                      $comment: >-
                                                        Type is array so that mutliple bindings
                                                        can be supported between 2 nodes
                                                      type: array
                                                      items:
                                                        type: object
                                                        allOf:
                                                          - properties:
                                                              kind:
                                                                type: string
                                                              id:
                                                                type: string
                                                                format: uuid
                                                                description: >-
                                                                  A Universally Unique Identifier used to
                                                                  uniquely identify entites in Meshery.
                                                                  The UUID core defintion is used across
                                                                  different schemas.
                                                                x-go-type: uuid.UUID
                                                                x-go-type-import:
                                                                  path: github.com/gofrs/uuid
                                                                x-oapi-codegen-extra-tags:
                                                                  yaml: id
                                                                  json: id
                                                          - oneOf:
                                                              - properties:
                                                                  mutatorRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        The sequence of mutatorRef and
                                                                        mutatedRef must match. eg: mutatorRef:
                                                                        [[config, url], [config, name]],
                                                                        mutatedRef: [[configPatch, value],
                                                                        [name]]. The value [config, url] will be
                                                                        patched at [configPatch, value].
                                                                        Similarly [config,name] will be patched
                                                                        at [name].
                                                                    description: >-
                                                                      JSON ref to value from where patch
                                                                      should be applied.
                                                              - properties:
                                                                  mutatedRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        JSONPath
                                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                                        to property to be patched.
                                              x-oapi-codegen-extra-tags:
                                                yaml: match
                                                json: match
                                            patch:
                                              allOf:
                                                - properties:
                                                    patchStrategy:
                                                      description: >-
                                                        patchStrategy allows you to make
                                                        specific changes to a resource using a
                                                        standard JSON Patch format (RFC 6902). 


                                                        add: Inserts a value into an array or
                                                        adds a member to an object.

                                                        replace: Replaces a value.

                                                        merge: Combines the values of the target
                                                        location with the values from the patch.
                                                        If the target location doesn't exist, it
                                                        is created.

                                                        strategic:specific to Kubernetes and
                                                        understands the structure of Kubernetes
                                                        objects. It can handle complex changes
                                                        like updating lists and maps, as well as
                                                        preserving default values. However, it's
                                                        not supported for custom resources. For
                                                        custom resources, only JSON Patch and
                                                        Merge Patch are typically supported.

                                                        remove: Removes a value.

                                                        copy: Copies a value from one location
                                                        to another.

                                                        move: Moves a value from one location to
                                                        another.

                                                        test: Tests that a value at the target
                                                        location is equal to a specified value.
                                                      $comment: >-
                                                        Array Indexing: When working with
                                                        arrays, be aware that Kubernetes uses
                                                        zero-based indexing in JSON patch paths.

                                                        Merge Patch vs. JSON Patch: Merge
                                                        patches are less flexible than JSON
                                                        patches and do not support all the same
                                                        operations.

                                                        Strategic Merge Patch: For some
                                                        Kubernetes resources, you can also use
                                                        the strategic type for a strategic merge
                                                        patch, which understands the structure
                                                        of Kubernetes objects and can handle
                                                        complex operations.
                                                      type: string
                                                      enum:
                                                        - merge
                                                        - strategic
                                                        - add
                                                        - remove
                                                        - copy
                                                        - move
                                                        - test
                                                      default: copy
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                              x-oapi-codegen-extra-tags:
                                                yaml: patch
                                                json: patch
                                          description: >-
                                            Optional fields that are a part of the
                                            `from` selector. Absence of a field has
                                            an implied * meaning.
                                      to:
                                        description: >-
                                          Describes the component(s) which are
                                          involved in the relationship along with
                                          a set of actions to perform upon
                                          selection match.
                                        type: array
                                        items:
                                          type: object
                                          additionalProperties: false
                                          properties:
                                            kind:
                                              type: string
                                              x-oapi-codegen-extra-tags:
                                                yaml: kind
                                                json: kind
                                            model:
                                              description: >-
                                                Name of the model implicated by this
                                                selector. Learn more at
                                                https://docs.meshery.io/concepts/models
                                              $id: https://schemas.meshery.io/model.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              additionalProperties: false
                                              type: object
                                              properties:
                                                id:
                                                  description: >-
                                                    Uniquely identifies the entity (i.e.
                                                    component) as defined in a declaration
                                                    (i.e. design).
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema used
                                                    for the definition.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                version:
                                                  description: Version of the model definition.
                                                  type: string
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                name:
                                                  description: >-
                                                    The unique name for the model within the
                                                    scope of a registrant.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: name
                                                    json: name
                                                displayName:
                                                  description: Human-readable name for the model.
                                                  minLength: 1
                                                  maxLength: 100
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: Description of the model.
                                                  minLength: 1
                                                  maxLength: 1000
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                status:
                                                  type: string
                                                  description: >-
                                                    Status of model, including:

                                                    - duplicate: this component is a
                                                    duplicate of another. The component that
                                                    is to be the canonical reference and
                                                    that is duplicated by other components
                                                    should not be assigned the 'duplicate'
                                                    status.

                                                    - maintenance: model is unavailable for
                                                    a period of time.

                                                    - enabled: model is available for use
                                                    for all users of this Meshery Server.

                                                    - ignored: model is unavailable for use
                                                    for all users of this Meshery Server.
                                                  enum:
                                                    - ignored
                                                    - enabled
                                                    - duplicate
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                registrant:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: registrant
                                                    json: registrant
                                                    gorm: foreignKey:RegistrantId;references:Id
                                                  $id: >-
                                                    https://schemas.meshery.io/component.json
                                                  $schema: http://json-schema.org/draft-07/schema#
                                                  description: >-
                                                    Meshery Connections are managed and
                                                    unmanaged resources that either through
                                                    discovery or manual entry are tracked by
                                                    Meshery. Learn more at
                                                    https://docs.meshery.io/concepts/logical/connections
                                                  additionalProperties: false
                                                  type: object
                                                  required:
                                                    - kind
                                                    - type
                                                    - status
                                                  properties:
                                                    id:
                                                      description: ID
                                                      type: string
                                                      format: uuid
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                    name:
                                                      x-oapi-codegen-extra-tags:
                                                        db: name
                                                        yaml: name
                                                        json: name
                                                      type: string
                                                      description: Connection Name
                                                    credential_id:
                                                      x-go-name: CredentialId
                                                      x-oapi-codegen-extra-tags:
                                                        db: credential_id
                                                        yaml: credential_id
                                                        json: credential_id
                                                      description: Credential ID
                                                      type: string
                                                      format: uuid
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                    type:
                                                      x-oapi-codegen-extra-tags:
                                                        db: type
                                                        yaml: type
                                                        json: type
                                                      type: string
                                                      description: Connection Type
                                                    sub_type:
                                                      x-oapi-codegen-extra-tags:
                                                        db: sub_type
                                                        yaml: sub_type
                                                        json: sub_type
                                                      type: string
                                                      description: Connection Subtype
                                                    kind:
                                                      x-oapi-codegen-extra-tags:
                                                        db: kind
                                                        yaml: kind
                                                        json: kind
                                                      type: string
                                                      description: Connection Kind
                                                    metadata:
                                                      x-oapi-codegen-extra-tags:
                                                        db: metadata
                                                        yaml: metadata
                                                        json: metadata
                                                      type: object
                                                    status:
                                                      x-oapi-codegen-extra-tags:
                                                        db: status
                                                        yaml: status
                                                        json: status
                                                      description: Connection Status
                                                      type: string
                                                      enum:
                                                        - discovered
                                                        - registered
                                                        - connected
                                                        - ignored
                                                        - maintenance
                                                        - disconnected
                                                        - deleted
                                                        - not found
                                                    user_id:
                                                      x-go-name: UserID
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: user_id
                                                        json: user_id
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                    created_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: created_at
                                                        json: created_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                    updated_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: updated_at
                                                        json: updated_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                    deleted_at:
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: deleted_at
                                                        json: deleted_at
                                                      type: string
                                                      format: date-time
                                                      x-go-type-skip-optional-pointer: true
                                                category:
                                                  type: object
                                                  description: Category of the model.
                                                  properties:
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                    name:
                                                      type: string
                                                      minLength: 1
                                                      maxLength: 100
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: name
                                                        json: name
                                                    metadata:
                                                      type: object
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: metadata
                                                        json: metadata
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: category
                                                    json: category
                                                    gorm: foreignKey:CategoryId;references:Id
                                                subCategory:
                                                  type: string
                                                  description: Sub-category of the model.
                                                  minLength: 1
                                                  maxLength: 100
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subCategory
                                                    json: subCategory
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata containing additional
                                                    information associated with the model.
                                                  properties:
                                                    capabilities:
                                                      type: array
                                                      description: Capabilities associated with the model
                                                      items:
                                                        $id: >-
                                                          https://schemas.meshery.io/capability.json
                                                        $schema: http://json-schema.org/draft-07/schema#
                                                        description: >-
                                                          Meshery manages entities in accordance
                                                          with their specific capabilities. This
                                                          field explicitly identifies those
                                                          capabilities largely by what actions a
                                                          given component supports; e.g.
                                                          metric-scrape, sub-interface, and so on.
                                                          This field is extensible. Entities may
                                                          define a broad array of capabilities,
                                                          which are in-turn dynamically
                                                          interpretted by Meshery for full
                                                          lifecycle management.
                                                        additionalProperties: false
                                                        type: object
                                                        required:
                                                          - schemaVersion
                                                          - version
                                                          - displayName
                                                          - kind
                                                          - type
                                                          - entityState
                                                          - status
                                                        x-oapi-codegen-extra-tags:
                                                          gorm: type:bytes;serializer:json
                                                        properties:
                                                          schemaVersion:
                                                            description: >-
                                                              Specifies the version of the schema to
                                                              which the capability definition
                                                              conforms.
                                                            type: string
                                                            minLength: 2
                                                            maxLength: 100
                                                            pattern: >-
                                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                            example:
                                                              - v1
                                                              - v1alpha1
                                                              - v2beta3
                                                              - v1.custom-suffix
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: schemaVersion
                                                              json: schemaVersion
                                                          version:
                                                            description: Version of the capability definition.
                                                            type: string
                                                            minLength: 5
                                                            maxLength: 100
                                                            pattern: >-
                                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: version
                                                              json: version
                                                          displayName:
                                                            description: >-
                                                              Name of the capability in human-readible
                                                              format.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: displayName
                                                              json: displayName
                                                          description:
                                                            type: string
                                                            description: >-
                                                              A written representation of the purpose
                                                              and characteristics of the capability.
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: description
                                                              json: description
                                                          kind:
                                                            description: >-
                                                              Top-level categorization of the
                                                              capability
                                                            additionalProperties: false
                                                            anyOf:
                                                              - const: action
                                                                description: >-
                                                                  For capabilities related to executing
                                                                  actions on entities. Example: initiate
                                                                  log streaming on a Pod. Example:
                                                                  initiate deployment of a component.
                                                              - const: mutate
                                                                description: >-
                                                                  For capabilities related to mutating an
                                                                  entity. Example: the ability to change
                                                                  the configuration of a component.
                                                              - const: view
                                                                description: >-
                                                                  For capabilities related to viewing an
                                                                  entity. Example: the ability to view a
                                                                  components configuration.
                                                              - const: interaction
                                                                description: >-
                                                                  Catch all for capabilities related to
                                                                  interaction with entities. Example: the
                                                                  ability for a component to be dragged
                                                                  and dropped. Example: supports event
                                                                  bubbling to parent components. 
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: kind
                                                              json: kind
                                                          type:
                                                            description: >-
                                                              Classification of capabilities. Used to
                                                              group capabilities similar in nature.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: type
                                                              json: type
                                                          subType:
                                                            description: >-
                                                              Most granular unit of capability
                                                              classification. The combination of Kind,
                                                              Type and SubType together uniquely
                                                              identify a Capability.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: subType
                                                              json: subType
                                                          key:
                                                            description: Key that backs the capability.
                                                            type: string
                                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: key
                                                              json: key
                                                          entityState:
                                                            description: >-
                                                              State of the entity in which the
                                                              capability is applicable.
                                                            type: array
                                                            items:
                                                              type: string
                                                              enum:
                                                                - declaration
                                                                - instance
                                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                              description: >-
                                                                A string starting with an alphanumeric
                                                                character. Spaces and hyphens allowed.
                                                              x-oapi-codegen-extra-tags:
                                                                yaml: entityState
                                                                json: entityState
                                                          status:
                                                            type: string
                                                            description: Status of the capability
                                                            default: enabled
                                                            enum:
                                                              - enabled
                                                              - disabled
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: status
                                                              json: status
                                                          metadata:
                                                            type: object
                                                            description: >-
                                                              Metadata contains additional information
                                                              associated with the capability.
                                                              Extension point.
                                                            additionalProperties: true
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: metadata
                                                              json: metadata
                                                    isAnnotation:
                                                      type: boolean
                                                      description: >-
                                                        Indicates whether the model and its
                                                        entities should be treated as deployable
                                                        entities or as logical representations.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: isAnnotation
                                                        json: isAnnotation
                                                    primaryColor:
                                                      type: string
                                                      description: Primary color associated with the model.
                                                      minLength: 1
                                                      maxLength: 50
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: primaryColor
                                                        json: primaryColor
                                                    secondaryColor:
                                                      type: string
                                                      description: >-
                                                        Secondary color associated with the
                                                        model.
                                                      minLength: 1
                                                      maxLength: 50
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: secondaryColor
                                                        json: secondaryColor
                                                    svgWhite:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the model in white
                                                        color.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgWhite
                                                        json: svgWhite
                                                    svgColor:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the model in
                                                        colored format.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgColor
                                                        json: svgColor
                                                    svgComplete:
                                                      type: string
                                                      description: >-
                                                        SVG representation of the complete
                                                        model.
                                                      minLength: 1
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: svgComplete
                                                        json: svgComplete
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                                  additionalProperties: true
                                                model:
                                                  type: object
                                                  description: >-
                                                    Registrant-defined data associated with
                                                    the model. Properties pertain to the
                                                    software being managed (e.g. Kubernetes
                                                    v1.31)
                                                  required:
                                                    - version
                                                  properties:
                                                    version:
                                                      description: >-
                                                        Version of the model as defined by the
                                                        registrant.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: version
                                                        json: version
                                                      type: string
                                                      minLength: 5
                                                      maxLength: 100
                                                      pattern: >-
                                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                              required:
                                                - name
                                                - version
                                                - registrant
                                                - category
                                            id:
                                              type: string
                                              format: uuid
                                              description: >-
                                                A Universally Unique Identifier used to
                                                uniquely identify entites in Meshery.
                                                The UUID core defintion is used across
                                                different schemas.
                                              x-go-type: uuid.UUID
                                              x-go-type-import:
                                                path: github.com/gofrs/uuid
                                              x-oapi-codegen-extra-tags:
                                                yaml: id
                                                json: id
                                            match:
                                              type: object
                                              additionalProperties: false
                                              oneOf:
                                                - type: array
                                                  items:
                                                    type: array
                                                    items:
                                                      type: string
                                                - properties:
                                                    from:
                                                      $comment: >-
                                                        Type is array so that mutliple bindings
                                                        can be supported between 2 nodes
                                                      type: array
                                                      items:
                                                        type: object
                                                        allOf:
                                                          - properties:
                                                              kind:
                                                                type: string
                                                              id:
                                                                type: string
                                                                format: uuid
                                                                description: >-
                                                                  A Universally Unique Identifier used to
                                                                  uniquely identify entites in Meshery.
                                                                  The UUID core defintion is used across
                                                                  different schemas.
                                                                x-go-type: uuid.UUID
                                                                x-go-type-import:
                                                                  path: github.com/gofrs/uuid
                                                                x-oapi-codegen-extra-tags:
                                                                  yaml: id
                                                                  json: id
                                                          - oneOf:
                                                              - properties:
                                                                  mutatorRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        The sequence of mutatorRef and
                                                                        mutatedRef must match. eg: mutatorRef:
                                                                        [[config, url], [config, name]],
                                                                        mutatedRef: [[configPatch, value],
                                                                        [name]]. The value [config, url] will be
                                                                        patched at [configPatch, value].
                                                                        Similarly [config,name] will be patched
                                                                        at [name].
                                                                    description: >-
                                                                      JSON ref to value from where patch
                                                                      should be applied.
                                                              - properties:
                                                                  mutatedRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        JSONPath
                                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                                        to property to be patched.
                                                    to:
                                                      $comment: >-
                                                        Type is array so that mutliple bindings
                                                        can be supported between 2 nodes
                                                      type: array
                                                      items:
                                                        type: object
                                                        allOf:
                                                          - properties:
                                                              kind:
                                                                type: string
                                                              id:
                                                                type: string
                                                                format: uuid
                                                                description: >-
                                                                  A Universally Unique Identifier used to
                                                                  uniquely identify entites in Meshery.
                                                                  The UUID core defintion is used across
                                                                  different schemas.
                                                                x-go-type: uuid.UUID
                                                                x-go-type-import:
                                                                  path: github.com/gofrs/uuid
                                                                x-oapi-codegen-extra-tags:
                                                                  yaml: id
                                                                  json: id
                                                          - oneOf:
                                                              - properties:
                                                                  mutatorRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        The sequence of mutatorRef and
                                                                        mutatedRef must match. eg: mutatorRef:
                                                                        [[config, url], [config, name]],
                                                                        mutatedRef: [[configPatch, value],
                                                                        [name]]. The value [config, url] will be
                                                                        patched at [configPatch, value].
                                                                        Similarly [config,name] will be patched
                                                                        at [name].
                                                                    description: >-
                                                                      JSON ref to value from where patch
                                                                      should be applied.
                                                              - properties:
                                                                  mutatedRef:
                                                                    type: array
                                                                    items:
                                                                      type: array
                                                                      items:
                                                                        type: string
                                                                      description: >-
                                                                        JSONPath
                                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                                        to property to be patched.
                                              x-oapi-codegen-extra-tags:
                                                yaml: match
                                                json: match
                                            patch:
                                              allOf:
                                                - properties:
                                                    patchStrategy:
                                                      description: >-
                                                        patchStrategy allows you to make
                                                        specific changes to a resource using a
                                                        standard JSON Patch format (RFC 6902). 


                                                        add: Inserts a value into an array or
                                                        adds a member to an object.

                                                        replace: Replaces a value.

                                                        merge: Combines the values of the target
                                                        location with the values from the patch.
                                                        If the target location doesn't exist, it
                                                        is created.

                                                        strategic:specific to Kubernetes and
                                                        understands the structure of Kubernetes
                                                        objects. It can handle complex changes
                                                        like updating lists and maps, as well as
                                                        preserving default values. However, it's
                                                        not supported for custom resources. For
                                                        custom resources, only JSON Patch and
                                                        Merge Patch are typically supported.

                                                        remove: Removes a value.

                                                        copy: Copies a value from one location
                                                        to another.

                                                        move: Moves a value from one location to
                                                        another.

                                                        test: Tests that a value at the target
                                                        location is equal to a specified value.
                                                      $comment: >-
                                                        Array Indexing: When working with
                                                        arrays, be aware that Kubernetes uses
                                                        zero-based indexing in JSON patch paths.

                                                        Merge Patch vs. JSON Patch: Merge
                                                        patches are less flexible than JSON
                                                        patches and do not support all the same
                                                        operations.

                                                        Strategic Merge Patch: For some
                                                        Kubernetes resources, you can also use
                                                        the strategic type for a strategic merge
                                                        patch, which understands the structure
                                                        of Kubernetes objects and can handle
                                                        complex operations.
                                                      type: string
                                                      enum:
                                                        - merge
                                                        - strategic
                                                        - add
                                                        - remove
                                                        - copy
                                                        - move
                                                        - test
                                                      default: copy
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                              x-oapi-codegen-extra-tags:
                                                yaml: patch
                                                json: patch
                                          description: >-
                                            Optional fields that are a part of the
                                            `from` selector. Absence of a field has
                                            an implied * meaning.
                    required:
                      - id
                      - name
                      - schemaVersion
                      - version
                      - components
                      - relationships
                  evaluationHash:
                    type: string
                    description: >-
                      Hash of the input parameters and configuration used for
                      this evaluation. Useful for identifying duplicate
                      evaluations or caching results.
                    example: a1b2c3d4e5f6g7h8i9j0
                  timestamp:
                    type: string
                    format: date-time
                    description: >-
                      ISO 8601 formatted timestamp of when the evaluation was
                      completed.
                  actions:
                    type: array
                    item:
                      type: object
                      required:
                        - op
                        - value
                      properties:
                        op:
                          type: string
                          enum:
                            - update_component
                            - update_component_configuration
                            - add_component
                            - delete_component
                            - add_relationship
                            - update_relationship
                            - delete_relationship
                        value:
                          type: object
        '400':
          description: Bad request
        '500':
          description: Internal server error
      tags:
        - evaluation_other
  /api/academy/cirricula/registered:
    servers: []
    get:
      x-internal:
        - cloud
      tags:
        - Academy_API_Academy
      operationId: getMyAcademyCirricula
      summary: Get academy content
      description: >-
        Returns a list of academy content registered by the user with optional
        filtering.
      parameters:
        - name: contentType
          in: query
          description: Filter content by content types
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: orgId
          in: query
          description: Filter content by organization IDs
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
  /api/academy/cirricula:
    servers: []
    get:
      x-internal:
        - cloud
      tags:
        - Academy_API_Academy
      operationId: getAcademyCirricula
      summary: Get academy content
      description: Returns a list of academy content with optional filtering.
      parameters:
        - name: contentType
          in: query
          description: Filter content by content types
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: visibility
          in: query
          description: Filter content by visibility (public/private)
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: level
          in: query
          description: Filter content by difficulty level
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: orgId
          in: query
          description: Filter content by organization IDs
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: category
          in: query
          description: Filter content by categories
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: status
          in: query
          description: Filter by registration status
          required: false
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: search
          in: query
          description: Search content by title
          required: false
          schema:
            type: string
  /api/academy/{type}/{orgId}/{slug}:
    servers: []
    get:
      x-internal:
        - cloud
      summary: Get a single learning path
      description: Returns a learning path identified by type, orgId, and slug.
      parameters:
        - name: type
          in: path
          required: true
          schema:
            type: string
        - name: orgId
          in: path
          required: true
          schema:
            type: string
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A single academy content
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Id of the cirricula
                    example: 923458-3490394-934893
                    x-go-name: ID
                    x-oapi-codegen-extra-tags:
                      db: id
                      json: id
                      yaml: id
                  type:
                    x-go-type: ContentType
                    x-oapi-codegen-extra-tags:
                      db: type
                    type: string
                    enum:
                      - learning-path
                      - challenge
                      - certification
                  orgId:
                    type: string
                    description: Organization ID that owns this learning path
                    example: layer5
                    x-oapi-codegen-extra-tags:
                      db: org_id
                      json: org_id
                      yaml: org_id
                  visibility:
                    description: Visibility of the cirricula
                    x-go-type: Visibility
                    x-oapi-codegen-extra-tags:
                      db: visibility
                      json: visibility
                      yaml: visibility
                    type: string
                    enum:
                      - public
                      - private
                  status:
                    example: ready
                    description: Status of the cirricula
                    x-go-type: Status
                    x-oapi-codegen-extra-tags:
                      db: status
                      json: status
                      yaml: status
                    type: string
                    enum:
                      - ready
                      - archived
                      - not_ready
                  slug:
                    type: string
                    description: slug of the cirricula
                    example: intro-kubernetes-course
                  level:
                    description: Level of the cirricula
                    x-go-type: Level
                    x-oapi-codegen-extra-tags:
                      db: level
                      json: level
                      yaml: level
                    type: string
                    enum:
                      - beginner
                      - intermediate
                      - advanced
                  createdAt:
                    description: When the cirricula item was created
                    x-oapi-codegen-extra-tags:
                      db: created_at
                      json: created_at
                      yaml: created_at
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  updatedAt:
                    description: When the cirricula was last updated
                    x-go-type: core.Time
                    x-oapi-codegen-extra-tags:
                      db: updated_at
                      json: updated_at
                      yaml: updated_at
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deletedAt:
                    x-go-type: core.NullTime
                    x-oapi-codegen-extra-tags:
                      db: deleted_at
                      json: deleted_at
                      yaml: deleted_at
                    description: Timestamp when the resource was deleted.
                    type: string
                    format: date-time
                    x-go-name: DeletedAt
                    x-go-type-skip-optional-pointer: true
                  metadata:
                    type: object
                    description: Additional metadata about the cirricula
                    additionalProperties: true
                    x-go-type: core.Map
                    x-go-type-skip-optional-pointer: true
                    x-oapi-codegen-extra-tags:
                      db: metadata
                      json: metadata
                      yaml: metadata
                    oneOf:
                      - x-go-type: CurriculaMetadata
                        type: object
                        properties:
                          title:
                            type: string
                            description: Title of the learning path
                            example: Mastering Kubernetes for Engineers
                          description:
                            type: string
                            description: Description of the learning path
                            example: >-
                              Learn how to configure your Kubernetes clusters
                              and manage the lifecycle of your workloads
                          banner:
                            type: string
                            format: uri
                            nullable: true
                            description: >-
                              Filename of the banner image, which should be
                              placed in the same directory as the _index.md file
                            example: kubernetes-icon.svg
                          permalink:
                            type: string
                            format: uri
                            description: Canonical URL for the learning path
                            example: >-
                              http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
                          badge:
                            x-go-type: Badge
                            type: object
                            required:
                              - label
                              - title
                              - description
                              - png
                              - svg
                            properties:
                              label:
                                type: string
                                description: >-
                                  unique identifier for the badge ( auto
                                  generated )
                                example: Kubernetes-Expert
                              title:
                                type: string
                                description: Title of the badge
                                example: Kubernetes Expert
                              description:
                                type: string
                                description: Description of the badge
                                example: >-
                                  Awarded for mastering Kubernetes concepts and
                                  practices
                              png:
                                type: string
                                format: uri
                                description: URL to the badge image
                                example: >-
                                  http://localhost:9876/badges/kubernetes-expert.png
                              svg:
                                type: string
                                format: uri
                                description: URL to the badge SVG image
                                example: >-
                                  http://localhost:9876/badges/kubernetes-expert.svg
                          certificate:
                            x-go-type: Certificate
                            type: object
                            required:
                              - id
                              - org_id
                              - title
                              - description
                              - issuing_authorities
                              - issued_date
                              - recipient_id
                              - recipient_name
                            properties:
                              id:
                                type: string
                                description: Unique identifier for the certificate
                                example: 1234567890abcdef
                                x-go-name: ID
                              org_id:
                                description: >-
                                  UUID of the organization that issued the
                                  certificate
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                              recipient_id:
                                type: string
                                description: >-
                                  ID of the recipient (user) who received the
                                  certificate
                                example: 1234567890abcdef
                              recipient_name:
                                type: string
                                description: >-
                                  Name of the recipient (user) who received the
                                  certificate
                                example: John Doe
                              title:
                                type: string
                                description: Title of the certificate
                                example: Kubernetes Expert Certification
                              description:
                                type: string
                                description: Description of the certificate
                                example: >-
                                  Awarded for successfully completing the
                                  Kubernetes Expert course
                              issuing_authorities:
                                type: array
                                items:
                                  x-go-type: CertificateIssuingAuthority
                                  type: object
                                  required:
                                    - name
                                    - url
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the issuing authority
                                      example: Cloud Native Foundation
                                    role:
                                      type: string
                                      description: Role of the issuing authority
                                      example: COO
                                    signature_url:
                                      type: string
                                      format: uri
                                      description: >-
                                        URL to the signature image of the
                                        issuing authority should be a publicly
                                        accessible URL and transparent PNG or
                                        SVG format
                                      example: >-
                                        http://localhost:9876/signatures/cloud-native-foundation.png
                                description: >-
                                  List of issuing authorities for the
                                  certificate
                              issued_date:
                                type: string
                                format: date-time
                                description: Date when the certificate was issued
                                example: '2023-10-01T12:00:00Z'
                              expiration_date:
                                type: string
                                format: date-time
                                description: Date when the certificate expires (optional)
                                example: '2025-10-01T12:00:00Z'
                          children:
                            type: array
                            description: List of children items in the top-level curricula
                            items:
                              x-go-type: ChildNode
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier for the course
                                  example: 1234567890abcdef
                                  x-go-name: ID
                                  x-oapi-codegen-extra-tags:
                                    db: id
                                    json: id
                                    yaml: id
                                title:
                                  type: string
                                  description: Title of the course
                                  example: Kubernetes Basics
                                permalink:
                                  type: string
                                  format: uri
                                  description: URL to the course content
                                  example: >-
                                    http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
                                description:
                                  type: string
                                  description: Course description
                                  example: Learn the basics of Kubernetes
                                weight:
                                  type: number
                                  description: >-
                                    A numeric value to determine the display
                                    order. A smaller number appears first. If
                                    not specified, items will be sorted
                                    alphabetically by title.
                                  example: eg 1 , 2
                                banner:
                                  type: string
                                  format: uri
                                  nullable: true
                                  description: >-
                                    Filename of the banner image, which should
                                    be placed in the same directory as the
                                    _index.md file
                                  example: kubernetes-icon.svg
                                type:
                                  x-go-type: ContentType
                                  description: >-
                                    Type of the content (e.g., learning-path,
                                    challenge, certification)
                                  type: string
                                  enum:
                                    - learning-path
                                    - challenge
                                    - certification
                                children:
                                  type: array
                                  description: List of child nodes (sub-courses or modules)
                                  items:
                                    type: object
                                    x-go-type: ChildNode
                              required:
                                - title
                                - description
                                - id
                                - permalink
                        required:
                          - title
                          - description
                          - permalink
                required:
                  - id
                  - type
                  - orgId
                  - visibility
                  - status
                  - slug
                  - createdAt
                  - updatedAt
                  - deletedAt
                  - metadata
                  - level
        '400':
          description: Invalid request parameters
        '500':
          description: Server error
      tags:
        - Academy_API_other
  /api/academy/register:
    servers: []
    post:
      x-internal:
        - cloud
      tags:
        - Academy_API_Academy
      summary: Register a user to academy content
      operationId: registerToAcademyContent
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content_id
                - user_id
              properties:
                content_id:
                  type: string
                  description: ID of the academy content to register for
                content_type:
                  type: string
                  enum:
                    - learning-path
                    - challenge
                    - certification
      responses:
        '200':
          description: registered content
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - org_id
                  - user_id
                  - status
                  - created_at
                  - updated_at
                  - content_id
                  - certificate
                  - metadata
                properties:
                  id:
                    x-go-name: ID
                    x-oapi-codegen-extra-tags:
                      db: id
                      json: id
                      yaml: id
                    type: string
                    format: uuid
                    description: >-
                      A Universally Unique Identifier used to uniquely identify
                      entities in Meshery. The UUID core definition is used
                      across different schemas.
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  org_id:
                    description: ID of the organization
                    x-oapi-codegen-extra-tags:
                      db: org_id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  content_id:
                    type: string
                    description: ID of the course content
                    x-oapi-codegen-extra-tags:
                      db: content_id
                  user_id:
                    description: ID of the user (foreign key to User)
                    x-oapi-codegen-extra-tags:
                      db: user_id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  status:
                    x-go-type: AcademyRegistrationStatus
                    description: Status of the user's course registration
                    x-oapi-codegen-extra-tags:
                      db: status
                    type: string
                    enum:
                      - registered
                      - completed
                      - failed
                      - withdrawn
                  updated_at:
                    description: When the registration was updated
                    x-oapi-codegen-extra-tags:
                      db: updated_at
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  created_at:
                    description: When the registration was created
                    x-oapi-codegen-extra-tags:
                      db: created_at
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deleted_at:
                    x-go-type: core.NullTime
                    x-oapi-codegen-extra-tags:
                      db: deleted_at
                    description: Timestamp when the resource was deleted.
                    type: string
                    format: date-time
                    x-go-name: DeletedAt
                    x-go-type-skip-optional-pointer: true
                  certificate:
                    x-go-type: core.Map
                    description: >-
                      Issued certificate for completing the curricula under
                      registration
                    x-oapi-codegen-extra-tags:
                      db: certificate
                    type: object
                    required:
                      - id
                      - org_id
                      - title
                      - description
                      - issuing_authorities
                      - issued_date
                      - recipient_id
                      - recipient_name
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the certificate
                        example: 1234567890abcdef
                        x-go-name: ID
                      org_id:
                        description: UUID of the organization that issued the certificate
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                      recipient_id:
                        type: string
                        description: >-
                          ID of the recipient (user) who received the
                          certificate
                        example: 1234567890abcdef
                      recipient_name:
                        type: string
                        description: >-
                          Name of the recipient (user) who received the
                          certificate
                        example: John Doe
                      title:
                        type: string
                        description: Title of the certificate
                        example: Kubernetes Expert Certification
                      description:
                        type: string
                        description: Description of the certificate
                        example: >-
                          Awarded for successfully completing the Kubernetes
                          Expert course
                      issuing_authorities:
                        type: array
                        items:
                          x-go-type: CertificateIssuingAuthority
                          type: object
                          required:
                            - name
                            - url
                          properties:
                            name:
                              type: string
                              description: Name of the issuing authority
                              example: Cloud Native Foundation
                            role:
                              type: string
                              description: Role of the issuing authority
                              example: COO
                            signature_url:
                              type: string
                              format: uri
                              description: >-
                                URL to the signature image of the issuing
                                authority should be a publicly accessible URL
                                and transparent PNG or SVG format
                              example: >-
                                http://localhost:9876/signatures/cloud-native-foundation.png
                        description: List of issuing authorities for the certificate
                      issued_date:
                        type: string
                        format: date-time
                        description: Date when the certificate was issued
                        example: '2023-10-01T12:00:00Z'
                      expiration_date:
                        type: string
                        format: date-time
                        description: Date when the certificate expires (optional)
                        example: '2025-10-01T12:00:00Z'
                  metadata:
                    type: object
                    description: Additional metadata about the registration
                    additionalProperties: true
                    x-go-type: core.Map
                    x-go-type-skip-optional-pointer: true
                    x-oapi-codegen-extra-tags:
                      db: metadata
        '400':
          description: Invalid request parameters
        '500':
          description: Server error
  /api/academy/registrations/{contentId}:
    servers: []
    get:
      tags:
        - Academy_API_Academy
      x-internal:
        - cloud
      summary: Get registration information for academy content
      description: >-
        Returns registration data for a specific content item, optionally
        filtered by status.
      parameters:
        - name: contentId
          in: path
          required: true
          description: The ID of the content to retrieve registration data for
          schema:
            type: string
        - name: status
          in: query
          required: false
          description: Filter registrations by status (e.g., registered, completed)
          schema:
            type: string
      responses:
        '200':
          description: Registration data for the specified content
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - org_id
                  - user_id
                  - status
                  - created_at
                  - updated_at
                  - content_id
                  - certificate
                  - metadata
                properties:
                  id:
                    x-go-name: ID
                    x-oapi-codegen-extra-tags:
                      db: id
                      json: id
                      yaml: id
                    type: string
                    format: uuid
                    description: >-
                      A Universally Unique Identifier used to uniquely identify
                      entities in Meshery. The UUID core definition is used
                      across different schemas.
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  org_id:
                    description: ID of the organization
                    x-oapi-codegen-extra-tags:
                      db: org_id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  content_id:
                    type: string
                    description: ID of the course content
                    x-oapi-codegen-extra-tags:
                      db: content_id
                  user_id:
                    description: ID of the user (foreign key to User)
                    x-oapi-codegen-extra-tags:
                      db: user_id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  status:
                    x-go-type: AcademyRegistrationStatus
                    description: Status of the user's course registration
                    x-oapi-codegen-extra-tags:
                      db: status
                    type: string
                    enum:
                      - registered
                      - completed
                      - failed
                      - withdrawn
                  updated_at:
                    description: When the registration was updated
                    x-oapi-codegen-extra-tags:
                      db: updated_at
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  created_at:
                    description: When the registration was created
                    x-oapi-codegen-extra-tags:
                      db: created_at
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deleted_at:
                    x-go-type: core.NullTime
                    x-oapi-codegen-extra-tags:
                      db: deleted_at
                    description: Timestamp when the resource was deleted.
                    type: string
                    format: date-time
                    x-go-name: DeletedAt
                    x-go-type-skip-optional-pointer: true
                  certificate:
                    x-go-type: core.Map
                    description: >-
                      Issued certificate for completing the curricula under
                      registration
                    x-oapi-codegen-extra-tags:
                      db: certificate
                    type: object
                    required:
                      - id
                      - org_id
                      - title
                      - description
                      - issuing_authorities
                      - issued_date
                      - recipient_id
                      - recipient_name
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the certificate
                        example: 1234567890abcdef
                        x-go-name: ID
                      org_id:
                        description: UUID of the organization that issued the certificate
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                      recipient_id:
                        type: string
                        description: >-
                          ID of the recipient (user) who received the
                          certificate
                        example: 1234567890abcdef
                      recipient_name:
                        type: string
                        description: >-
                          Name of the recipient (user) who received the
                          certificate
                        example: John Doe
                      title:
                        type: string
                        description: Title of the certificate
                        example: Kubernetes Expert Certification
                      description:
                        type: string
                        description: Description of the certificate
                        example: >-
                          Awarded for successfully completing the Kubernetes
                          Expert course
                      issuing_authorities:
                        type: array
                        items:
                          x-go-type: CertificateIssuingAuthority
                          type: object
                          required:
                            - name
                            - url
                          properties:
                            name:
                              type: string
                              description: Name of the issuing authority
                              example: Cloud Native Foundation
                            role:
                              type: string
                              description: Role of the issuing authority
                              example: COO
                            signature_url:
                              type: string
                              format: uri
                              description: >-
                                URL to the signature image of the issuing
                                authority should be a publicly accessible URL
                                and transparent PNG or SVG format
                              example: >-
                                http://localhost:9876/signatures/cloud-native-foundation.png
                        description: List of issuing authorities for the certificate
                      issued_date:
                        type: string
                        format: date-time
                        description: Date when the certificate was issued
                        example: '2023-10-01T12:00:00Z'
                      expiration_date:
                        type: string
                        format: date-time
                        description: Date when the certificate expires (optional)
                        example: '2025-10-01T12:00:00Z'
                  metadata:
                    type: object
                    description: Additional metadata about the registration
                    additionalProperties: true
                    x-go-type: core.Map
                    x-go-type-skip-optional-pointer: true
                    x-oapi-codegen-extra-tags:
                      db: metadata
        '400':
          description: Invalid request parameters
        '404':
          description: Content not found
        '500':
          description: Server error
  /api/academy/registrations/{registrationId}/progress-tracker/update-current-item:
    servers: []
    post:
      tags:
        - Academy_API_Academy
      x-internal:
        - cloud
      operationId: updateCurrentItemInProgressTracker
      summary: Update the current item in the progress tracker
      parameters:
        - name: registrationId
          in: path
          required: true
          schema:
            type: string
          description: The ID of the registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                content_type:
                  type: string
                  enum:
                    - learning-path
                    - challenge
                    - certification
                  x-go-type: ContentType
                item_data:
                  x-go-type: CirriculaCurrentItemData
                  type: object
                  required:
                    - id
                    - last_opened
                    - content_type
                  properties:
                    id:
                      type: string
                    last_opened:
                      type: string
                      format: date-time
                    content_type:
                      type: string
                      enum:
                        - learning-path
                        - challenge
                        - certification
                      x-go-type: ContentType
              required:
                - content_type
                - item_data
      responses:
        '200':
          description: Successfully updated the progress tracker
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  progress_tracker:
                    type: object
                    required:
                      - current_item
                      - grades
                      - time_spent
                      - completed
                      - completed_items
                    properties:
                      current_item:
                        type: object
                        additionalProperties:
                          x-go-type: CirriculaCurrentItemData
                          type: object
                          required:
                            - id
                            - last_opened
                            - content_type
                          properties:
                            id:
                              type: string
                            last_opened:
                              type: string
                              format: date-time
                            content_type:
                              type: string
                              enum:
                                - learning-path
                                - challenge
                                - certification
                              x-go-type: ContentType
                      grades:
                        type: object
                        additionalProperties:
                          x-go-type: QuizEvaluationResult
                          type: object
                          required:
                            - score
                            - passed
                            - total_marks
                            - pass_percentage
                            - quiz
                            - attempted_at
                            - attempts
                            - percentage_scored
                            - correct_submissions
                          properties:
                            score:
                              type: integer
                            passed:
                              type: boolean
                            percentage_scored:
                              type: number
                              format: float
                            total_marks:
                              type: integer
                            pass_percentage:
                              type: number
                              format: float
                            correct_submissions:
                              type: object
                              additionalProperties:
                                type: boolean
                            quiz:
                              x-go-type: Quiz
                              type: object
                              required:
                                - id
                                - title
                                - orgId
                                - description
                                - slug
                                - relPermalink
                                - permalink
                                - type
                                - section
                                - layout
                                - date
                                - final
                                - lastmod
                                - draft
                                - file_path
                                - pass_percentage
                                - time_limit
                                - questions
                                - total_questions
                                - total_marks
                                - prerequisites
                              properties:
                                id:
                                  type: string
                                  x-go-name: ID
                                  x-oapi-codegen-extra-tags:
                                    json: id
                                orgId:
                                  type: string
                                  description: Organization ID that owns this quiz
                                  example: layer5
                                  x-oapi-codegen-extra-tags:
                                    db: org_id
                                    json: org_id
                                    yaml: org_id
                                final:
                                  type: boolean
                                  description: >-
                                    Indicates if the quiz is final . i.e this
                                    quiz will used to evaluate the completion of
                                    parent section eg course , module , learning
                                    path
                                  example: true
                                title:
                                  type: string
                                description:
                                  type: string
                                slug:
                                  type: string
                                relPermalink:
                                  type: string
                                permalink:
                                  type: string
                                type:
                                  type: string
                                section:
                                  type: string
                                layout:
                                  type: string
                                date:
                                  type: string
                                  format: date
                                lastmod:
                                  type: string
                                  format: date
                                draft:
                                  type: boolean
                                file_path:
                                  type: string
                                pass_percentage:
                                  type: number
                                  format: float
                                time_limit:
                                  type: string
                                questions:
                                  type: array
                                  items:
                                    x-go-type: Question
                                    type: object
                                    required:
                                      - id
                                      - text
                                      - type
                                      - marks
                                      - options
                                      - correct_answer
                                    properties:
                                      id:
                                        type: string
                                      text:
                                        type: string
                                      type:
                                        x-go-type: QuestionType
                                        type: string
                                        x-enum-varnames:
                                          - QuestionTypeMultipleAnswers
                                          - QuestionTypeSingleAnswer
                                          - QuestionTypeShortAnswer
                                          - QuestionTypeEssay
                                        enum:
                                          - multiple-answers
                                          - single-answer
                                          - short-answer
                                          - essay
                                      marks:
                                        type: integer
                                      multiple_answers:
                                        type: boolean
                                      options:
                                        type: array
                                        items:
                                          x-go-type: QuestionOption
                                          type: object
                                          required:
                                            - id
                                            - text
                                            - is_correct
                                          properties:
                                            id:
                                              type: string
                                            text:
                                              type: string
                                            is_correct:
                                              type: boolean
                                      correct_answer:
                                        type: string
                                total_questions:
                                  type: integer
                                total_marks:
                                  type: integer
                                prerequisites:
                                  type: array
                                  items:
                                    x-go-type: Parent
                                    type: object
                                    required:
                                      - id
                                      - title
                                      - relPermalink
                                      - type
                                    properties:
                                      id:
                                        type: string
                                      title:
                                        type: string
                                      relPermalink:
                                        type: string
                                      type:
                                        type: string
                                parent:
                                  x-go-type: Parent
                                  type: object
                                  required:
                                    - id
                                    - title
                                    - relPermalink
                                    - type
                                  properties:
                                    id:
                                      type: string
                                    title:
                                      type: string
                                    relPermalink:
                                      type: string
                                    type:
                                      type: string
                            attempted_at:
                              type: string
                              format: date-time
                            attempts:
                              type: integer
                      time_spent:
                        type: integer
                        description: Total time spent in seconds
                      completed_items:
                        type: object
                        description: >-
                          Items that have been completed (map of item IDs to
                          item data)
                        additionalProperties:
                          x-go-type: ProgressItemCompleted
                          type: object
                          required:
                            - completed_at
                            - item_data
                          properties:
                            completed_at:
                              type: string
                              format: date-time
                              description: Timestamp when the item was completed
                            item_data:
                              x-go-type: Parent
                              type: object
                              required:
                                - id
                                - title
                                - relPermalink
                                - type
                              properties:
                                id:
                                  type: string
                                title:
                                  type: string
                                relPermalink:
                                  type: string
                                type:
                                  type: string
                      completed:
                        type: string
                        format: date-time
                        x-go-type: core.NullTime
                  registration_id:
                    type: string
                  content_type:
                    type: string
                    enum:
                      - learning-path
                      - challenge
                      - certification
                  item_data:
                    type: object
                    required:
                      - id
                      - last_opened
                      - content_type
                    properties:
                      id:
                        type: string
                      last_opened:
                        type: string
                        format: date-time
                      content_type:
                        type: string
                        enum:
                          - learning-path
                          - challenge
                          - certification
                        x-go-type: ContentType
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /api/academy/quiz/submit:
    servers: []
    post:
      tags:
        - Academy_API_Academy
      x-internal:
        - cloud
      operationId: submitQuiz
      summary: Submit a quiz for evaluation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - quiz_abs_path
                - registration_id
                - user_id
                - answers
              properties:
                quiz_abs_path:
                  type: string
                registration_id:
                  type: string
                user_id:
                  type: string
                answers:
                  type: array
                  items:
                    x-go-type: SubmittedAnswer
                    type: object
                    required:
                      - question_id
                      - selected_option_id
                      - answer_text
                    properties:
                      question_id:
                        type: string
                      selected_option_id:
                        type: object
                        additionalProperties:
                          type: boolean
                      answer_text:
                        type: string
      responses:
        '200':
          description: Successfully updated the progress tracker
          content:
            application/json:
              schema:
                type: object
                required:
                  - score
                  - passed
                  - total_marks
                  - pass_percentage
                  - quiz
                  - attempted_at
                  - attempts
                  - percentage_scored
                  - correct_submissions
                properties:
                  score:
                    type: integer
                  passed:
                    type: boolean
                  percentage_scored:
                    type: number
                    format: float
                  total_marks:
                    type: integer
                  pass_percentage:
                    type: number
                    format: float
                  correct_submissions:
                    type: object
                    additionalProperties:
                      type: boolean
                  quiz:
                    x-go-type: Quiz
                    type: object
                    required:
                      - id
                      - title
                      - orgId
                      - description
                      - slug
                      - relPermalink
                      - permalink
                      - type
                      - section
                      - layout
                      - date
                      - final
                      - lastmod
                      - draft
                      - file_path
                      - pass_percentage
                      - time_limit
                      - questions
                      - total_questions
                      - total_marks
                      - prerequisites
                    properties:
                      id:
                        type: string
                        x-go-name: ID
                        x-oapi-codegen-extra-tags:
                          json: id
                      orgId:
                        type: string
                        description: Organization ID that owns this quiz
                        example: layer5
                        x-oapi-codegen-extra-tags:
                          db: org_id
                          json: org_id
                          yaml: org_id
                      final:
                        type: boolean
                        description: >-
                          Indicates if the quiz is final . i.e this quiz will
                          used to evaluate the completion of parent section eg
                          course , module , learning path
                        example: true
                      title:
                        type: string
                      description:
                        type: string
                      slug:
                        type: string
                      relPermalink:
                        type: string
                      permalink:
                        type: string
                      type:
                        type: string
                      section:
                        type: string
                      layout:
                        type: string
                      date:
                        type: string
                        format: date
                      lastmod:
                        type: string
                        format: date
                      draft:
                        type: boolean
                      file_path:
                        type: string
                      pass_percentage:
                        type: number
                        format: float
                      time_limit:
                        type: string
                      questions:
                        type: array
                        items:
                          x-go-type: Question
                          type: object
                          required:
                            - id
                            - text
                            - type
                            - marks
                            - options
                            - correct_answer
                          properties:
                            id:
                              type: string
                            text:
                              type: string
                            type:
                              x-go-type: QuestionType
                              type: string
                              x-enum-varnames:
                                - QuestionTypeMultipleAnswers
                                - QuestionTypeSingleAnswer
                                - QuestionTypeShortAnswer
                                - QuestionTypeEssay
                              enum:
                                - multiple-answers
                                - single-answer
                                - short-answer
                                - essay
                            marks:
                              type: integer
                            multiple_answers:
                              type: boolean
                            options:
                              type: array
                              items:
                                x-go-type: QuestionOption
                                type: object
                                required:
                                  - id
                                  - text
                                  - is_correct
                                properties:
                                  id:
                                    type: string
                                  text:
                                    type: string
                                  is_correct:
                                    type: boolean
                            correct_answer:
                              type: string
                      total_questions:
                        type: integer
                      total_marks:
                        type: integer
                      prerequisites:
                        type: array
                        items:
                          x-go-type: Parent
                          type: object
                          required:
                            - id
                            - title
                            - relPermalink
                            - type
                          properties:
                            id:
                              type: string
                            title:
                              type: string
                            relPermalink:
                              type: string
                            type:
                              type: string
                      parent:
                        x-go-type: Parent
                        type: object
                        required:
                          - id
                          - title
                          - relPermalink
                          - type
                        properties:
                          id:
                            type: string
                          title:
                            type: string
                          relPermalink:
                            type: string
                          type:
                            type: string
                  attempted_at:
                    type: string
                    format: date-time
                  attempts:
                    type: integer
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  details:
                    type: string
  /api/academy/admin/summary:
    servers: []
    get:
      tags:
        - Academy_API_Academy
      x-internal:
        - cloud
      operationId: getAcademyAdminSummary
      summary: Get academy content summary
      description: Returns a summary of all academy content with  metrics.
      responses:
        '200':
          description: A list of content with total count and registration metrics
          content:
            application/json:
              schema:
                type: object
        '400':
          description: Invalid request parameters
        '500':
          description: Server error
  /api/academy/admin/registrations:
    servers: []
    get:
      x-internal:
        - cloud
      tags:
        - Academy_API_Academy
      operationId: getAcademyAdminRegistrations
      summary: Get academy registrations
      description: >-
        Returns a list of academy registrations with user, curricula, and
        pagination details.
      parameters:
        - name: pagesize
          in: query
          required: false
          description: Number of results per page
          schema:
            type: integer
        - name: page
          in: query
          required: false
          description: Page number
          schema:
            type: integer
        - name: content_type
          in: query
          required: false
          description: Filter by content types
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
        - name: status
          in: query
          required: false
          description: Filter by registration status
          schema:
            type: array
            items:
              type: string
            style: form
            explode: true
      responses:
        '200':
          description: List of registrations with pagination info
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - total_count
                  - page_size
                  - page
                properties:
                  data:
                    type: array
                    items:
                      x-go-type: UserRegistration
                      type: object
                      required:
                        - curricula_title
                        - curricula_type
                        - curricula_permalink
                        - registration_id
                        - status
                        - user_id
                        - user_email
                        - user_last_name
                        - user_first_name
                        - user_avatar_url
                        - total_count
                      properties:
                        curricula_title:
                          type: string
                          description: Title of the curricula
                          x-oapi-codegen-extra-tags:
                            db: curricula_title
                        curricula_type:
                          type: string
                          enum:
                            - learning-path
                            - challenge
                            - certification
                          description: Type of the curricula
                          x-go-type: ContentType
                          x-oapi-codegen-extra-tags:
                            db: curricula_type
                        curricula_permalink:
                          type: string
                          description: Permalink of the curricula
                          x-oapi-codegen-extra-tags:
                            db: curricula_permalink
                        registration_id:
                          type: string
                          format: uuid
                          description: Unique ID of the registration
                          x-oapi-codegen-extra-tags:
                            db: registration_id
                        status:
                          description: Registration status
                          x-go-type: AcademyRegistrationStatus
                          x-oapi-codegen-extra-tags:
                            db: status
                          type: string
                          enum:
                            - registered
                            - completed
                            - failed
                            - withdrawn
                        created_at:
                          type: string
                          format: date-time
                          description: When the registration was created
                          x-oapi-codegen-extra-tags:
                            db: created_at
                        user_id:
                          type: string
                          format: uuid
                          description: ID of the user
                          x-oapi-codegen-extra-tags:
                            db: user_id
                        user_first_name:
                          type: string
                          description: First name of the user
                          x-oapi-codegen-extra-tags:
                            db: user_first_name
                        user_last_name:
                          type: string
                          description: Last name of the user
                          x-oapi-codegen-extra-tags:
                            db: user_last_name
                        user_email:
                          type: string
                          format: email
                          description: Email of the user
                          x-oapi-codegen-extra-tags:
                            db: user_email
                        user_avatar_url:
                          type: string
                          format: uri
                          description: Avatar URL of the user
                          x-oapi-codegen-extra-tags:
                            db: user_avatar_url
                        total_count:
                          type: integer
                          format: int64
                          description: Total count for pagination
                          x-oapi-codegen-extra-tags:
                            db: total_count
                  total_count:
                    type: integer
                    format: int64
                  page_size:
                    type: integer
                  page:
                    type: integer
        '400':
          description: Invalid request parameters
        '500':
          description: Server error
  /api/academy/certificates/{certificateId}:
    servers: []
    get:
      x-internal:
        - cloud
      tags:
        - Academy_API_Academy
      operationId: getCertificateById
      summary: Get a certificate by ID
      description: Returns a certificate identified by its ID.
      parameters:
        - name: certificateId
          in: path
          required: true
          description: The ID of the certificate to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A single certificate
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - org_id
                  - title
                  - description
                  - issuing_authorities
                  - issued_date
                  - recipient_id
                  - recipient_name
                properties:
                  id:
                    type: string
                    description: Unique identifier for the certificate
                    example: 1234567890abcdef
                    x-go-name: ID
                  org_id:
                    description: UUID of the organization that issued the certificate
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  recipient_id:
                    type: string
                    description: ID of the recipient (user) who received the certificate
                    example: 1234567890abcdef
                  recipient_name:
                    type: string
                    description: Name of the recipient (user) who received the certificate
                    example: John Doe
                  title:
                    type: string
                    description: Title of the certificate
                    example: Kubernetes Expert Certification
                  description:
                    type: string
                    description: Description of the certificate
                    example: >-
                      Awarded for successfully completing the Kubernetes Expert
                      course
                  issuing_authorities:
                    type: array
                    items:
                      x-go-type: CertificateIssuingAuthority
                      type: object
                      required:
                        - name
                        - url
                      properties:
                        name:
                          type: string
                          description: Name of the issuing authority
                          example: Cloud Native Foundation
                        role:
                          type: string
                          description: Role of the issuing authority
                          example: COO
                        signature_url:
                          type: string
                          format: uri
                          description: >-
                            URL to the signature image of the issuing authority
                            should be a publicly accessible URL and transparent
                            PNG or SVG format
                          example: >-
                            http://localhost:9876/signatures/cloud-native-foundation.png
                    description: List of issuing authorities for the certificate
                  issued_date:
                    type: string
                    format: date-time
                    description: Date when the certificate was issued
                    example: '2023-10-01T12:00:00Z'
                  expiration_date:
                    type: string
                    format: date-time
                    description: Date when the certificate expires (optional)
                    example: '2025-10-01T12:00:00Z'
        '400':
          description: Invalid request parameters
        '404':
          description: Certificate not found
        '500':
          description: Server error
  /api/organizations/invitations:
    servers: []
    get:
      x-internal:
        - cloud
      operationId: getInvitations
      tags:
        - invitation_Invitation
      summary: Get all invitations for the organization
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                  - data
                  - totalCount
                properties:
                  Data:
                    type: array
                    items:
                      x-go-type: Invitation
                      type: object
                      required:
                        - id
                        - default
                        - name
                        - description
                        - emails
                        - orgId
                        - expiresAt
                        - quota
                        - acceptedBy
                        - status
                        - roles
                        - teams
                        - createdAt
                        - updatedAt
                        - deletedAt
                      properties:
                        id:
                          ref: '#/components/schemas/uuid'
                          x-go-name: ID
                          description: >-
                            Unique identifier for the invitation , is also used
                            as the invitation code
                        isDefault:
                          type: boolean
                          description: >-
                            Indicates whether the invitation is a default
                            invitation (open invite), which can be used to
                            assign users when signing up from fqdn or custom
                            domain, a organization can only have one default
                            invitation
                          x-oapi-codegen-extra-tags:
                            db: is_default
                            json: is_default
                        name:
                          type: string
                          description: >-
                            Name of the invitation, which can be used to
                            identify the invitation, required and cant be empty
                            string,
                        description:
                          type: string
                          description: >-
                            Description of the invitation, which can be used to
                            provide additional information about the invitation,
                            null or empty string means the invitation does not
                            have a description
                        emails:
                          type: array
                          items:
                            type: string
                            format: email
                            description: >-
                              Exact email address or the email address pattern
                              for which the invitation is valid , null means the
                              invitation is valid for all email addresses
                        orgId:
                          type: string
                          description: ID of the organization to which the user is invited
                          x-oapi-codegen-extra-tags:
                            db: org_id
                            json: org_id
                        expiresAt:
                          type: string
                          format: date-time
                          description: >-
                            Timestamp when the invitation expires, if applicable
                            , null or empty string means the invitation does not
                            expire
                          x-oapi-codegen-extra-tags:
                            db: expires_at
                            json: expires_at
                        quota:
                          type: integer
                          description: >-
                            Quota for the invitation, which can be used to limit
                            the number of users that can accept the invitation,
                            null or empty string means the invitation does not
                            have a quota
                        acceptedBy:
                          type: array
                          items:
                            type: string
                          description: >-
                            List of user ids that have already accepted the
                            invitation, null or empty string means the
                            invitation has not been used yet
                          x-oapi-codegen-extra-tags:
                            db: accepted_by
                            json: accepted_by
                        roles:
                          type: array
                          items:
                            type: string
                            description: >-
                              Roles that the user will have when accepting the
                              invitation, null or empty string means the
                              invitation does not specify any roles
                        teams:
                          type: array
                          items:
                            type: string
                            description: >-
                              Teams that the user will be added to when
                              accepting the invitation, null or empty string
                              means the invitation does not specify any teams
                        status:
                          type: string
                          x-go-type: InvitationStatus
                          enum:
                            - enabled
                            - disabled
                          description: >-
                            Status of the invitation, where enabled means the
                            invitation is active and can be used, disabled means
                            the invitation is no longer valid and is temporarily
                            inactive, disabled invitations can be re-enabled
                            later.
                        createdAt:
                          type: string
                          format: date-time
                          description: Timestamp when the invitation was created
                          x-oapi-codegen-extra-tags:
                            db: created_at
                            json: created_at
                        updatedAt:
                          type: string
                          format: date-time
                          description: Timestamp when the invitation was last updated
                          x-oapi-codegen-extra-tags:
                            db: updated_at
                            json: updated_at
                        deletedAt:
                          type: string
                          format: date-time
                          x-go-type: core.NullTime
                          description: >-
                            Timestamp when the invitation was deleted, if
                            applicable
                          x-oapi-codegen-extra-tags:
                            db: deleted_at
                            json: deleted_at
                    description: List of invitations
                    x-oapi-codegen-extra-tags:
                      json: data
                  TotalCount:
                    type: integer
                    description: Total number of invitations available
                    x-oapi-codegen-extra-tags:
                      json: total_count
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
    post:
      x-internal:
        - cloud
      operationId: createInvitation
      tags:
        - invitation_Invitation
      summary: Create a new invitation for the organization
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - default
                - name
                - description
                - emails
                - orgId
                - expiresAt
                - quota
                - acceptedBy
                - status
                - roles
                - teams
                - createdAt
                - updatedAt
                - deletedAt
              properties:
                id:
                  ref: '#/components/schemas/uuid'
                  x-go-name: ID
                  description: >-
                    Unique identifier for the invitation , is also used as the
                    invitation code
                isDefault:
                  type: boolean
                  description: >-
                    Indicates whether the invitation is a default invitation
                    (open invite), which can be used to assign users when
                    signing up from fqdn or custom domain, a organization can
                    only have one default invitation
                  x-oapi-codegen-extra-tags:
                    db: is_default
                    json: is_default
                name:
                  type: string
                  description: >-
                    Name of the invitation, which can be used to identify the
                    invitation, required and cant be empty string,
                description:
                  type: string
                  description: >-
                    Description of the invitation, which can be used to provide
                    additional information about the invitation, null or empty
                    string means the invitation does not have a description
                emails:
                  type: array
                  items:
                    type: string
                    format: email
                    description: >-
                      Exact email address or the email address pattern for which
                      the invitation is valid , null means the invitation is
                      valid for all email addresses
                orgId:
                  type: string
                  description: ID of the organization to which the user is invited
                  x-oapi-codegen-extra-tags:
                    db: org_id
                    json: org_id
                expiresAt:
                  type: string
                  format: date-time
                  description: >-
                    Timestamp when the invitation expires, if applicable , null
                    or empty string means the invitation does not expire
                  x-oapi-codegen-extra-tags:
                    db: expires_at
                    json: expires_at
                quota:
                  type: integer
                  description: >-
                    Quota for the invitation, which can be used to limit the
                    number of users that can accept the invitation, null or
                    empty string means the invitation does not have a quota
                acceptedBy:
                  type: array
                  items:
                    type: string
                  description: >-
                    List of user ids that have already accepted the invitation,
                    null or empty string means the invitation has not been used
                    yet
                  x-oapi-codegen-extra-tags:
                    db: accepted_by
                    json: accepted_by
                roles:
                  type: array
                  items:
                    type: string
                    description: >-
                      Roles that the user will have when accepting the
                      invitation, null or empty string means the invitation does
                      not specify any roles
                teams:
                  type: array
                  items:
                    type: string
                    description: >-
                      Teams that the user will be added to when accepting the
                      invitation, null or empty string means the invitation does
                      not specify any teams
                status:
                  type: string
                  x-go-type: InvitationStatus
                  enum:
                    - enabled
                    - disabled
                  description: >-
                    Status of the invitation, where enabled means the invitation
                    is active and can be used, disabled means the invitation is
                    no longer valid and is temporarily inactive, disabled
                    invitations can be re-enabled later.
                createdAt:
                  type: string
                  format: date-time
                  description: Timestamp when the invitation was created
                  x-oapi-codegen-extra-tags:
                    db: created_at
                    json: created_at
                updatedAt:
                  type: string
                  format: date-time
                  description: Timestamp when the invitation was last updated
                  x-oapi-codegen-extra-tags:
                    db: updated_at
                    json: updated_at
                deletedAt:
                  type: string
                  format: date-time
                  x-go-type: core.NullTime
                  description: Timestamp when the invitation was deleted, if applicable
                  x-oapi-codegen-extra-tags:
                    db: deleted_at
                    json: deleted_at
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - default
                  - name
                  - description
                  - emails
                  - orgId
                  - expiresAt
                  - quota
                  - acceptedBy
                  - status
                  - roles
                  - teams
                  - createdAt
                  - updatedAt
                  - deletedAt
                properties:
                  id:
                    ref: '#/components/schemas/uuid'
                    x-go-name: ID
                    description: >-
                      Unique identifier for the invitation , is also used as the
                      invitation code
                  isDefault:
                    type: boolean
                    description: >-
                      Indicates whether the invitation is a default invitation
                      (open invite), which can be used to assign users when
                      signing up from fqdn or custom domain, a organization can
                      only have one default invitation
                    x-oapi-codegen-extra-tags:
                      db: is_default
                      json: is_default
                  name:
                    type: string
                    description: >-
                      Name of the invitation, which can be used to identify the
                      invitation, required and cant be empty string,
                  description:
                    type: string
                    description: >-
                      Description of the invitation, which can be used to
                      provide additional information about the invitation, null
                      or empty string means the invitation does not have a
                      description
                  emails:
                    type: array
                    items:
                      type: string
                      format: email
                      description: >-
                        Exact email address or the email address pattern for
                        which the invitation is valid , null means the
                        invitation is valid for all email addresses
                  orgId:
                    type: string
                    description: ID of the organization to which the user is invited
                    x-oapi-codegen-extra-tags:
                      db: org_id
                      json: org_id
                  expiresAt:
                    type: string
                    format: date-time
                    description: >-
                      Timestamp when the invitation expires, if applicable ,
                      null or empty string means the invitation does not expire
                    x-oapi-codegen-extra-tags:
                      db: expires_at
                      json: expires_at
                  quota:
                    type: integer
                    description: >-
                      Quota for the invitation, which can be used to limit the
                      number of users that can accept the invitation, null or
                      empty string means the invitation does not have a quota
                  acceptedBy:
                    type: array
                    items:
                      type: string
                    description: >-
                      List of user ids that have already accepted the
                      invitation, null or empty string means the invitation has
                      not been used yet
                    x-oapi-codegen-extra-tags:
                      db: accepted_by
                      json: accepted_by
                  roles:
                    type: array
                    items:
                      type: string
                      description: >-
                        Roles that the user will have when accepting the
                        invitation, null or empty string means the invitation
                        does not specify any roles
                  teams:
                    type: array
                    items:
                      type: string
                      description: >-
                        Teams that the user will be added to when accepting the
                        invitation, null or empty string means the invitation
                        does not specify any teams
                  status:
                    type: string
                    x-go-type: InvitationStatus
                    enum:
                      - enabled
                      - disabled
                    description: >-
                      Status of the invitation, where enabled means the
                      invitation is active and can be used, disabled means the
                      invitation is no longer valid and is temporarily inactive,
                      disabled invitations can be re-enabled later.
                  createdAt:
                    type: string
                    format: date-time
                    description: Timestamp when the invitation was created
                    x-oapi-codegen-extra-tags:
                      db: created_at
                      json: created_at
                  updatedAt:
                    type: string
                    format: date-time
                    description: Timestamp when the invitation was last updated
                    x-oapi-codegen-extra-tags:
                      db: updated_at
                      json: updated_at
                  deletedAt:
                    type: string
                    format: date-time
                    x-go-type: core.NullTime
                    description: Timestamp when the invitation was deleted, if applicable
                    x-oapi-codegen-extra-tags:
                      db: deleted_at
                      json: deleted_at
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500':
          description: Internal Server Error
components:
  schemas:
    design_DeletePatternModel:
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-go-type-skip-optional-pointer: true
        name:
          type: string
          x-go-type-skip-optional-pointer: true
    design_PatternFile:
      $schema: http://json-schema.org/draft-07/schema#
      title: Design Schema
      description: >-
        Designs are your primary tool for collaborative authorship of your
        infrastructure, workflow, and processes.
      type: object
      properties:
        id:
          x-order: 1
          type: string
          format: uuid
          description: >-
            A Universally Unique Identifier used to uniquely identify entites in
            Meshery. The UUID core defintion is used across different schemas.
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        name:
          type: string
          description: >-
            Name of the design; a descriptive, but concise title for the design
            document.
          x-order: 2
        schemaVersion:
          description: Specifies the version of the schema to which the design conforms.
          x-order: 3
          type: string
          minLength: 2
          maxLength: 100
          pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
          example:
            - v1
            - v1alpha1
            - v2beta3
            - v1.custom-suffix
        version:
          default: v0.0.1
          x-order: 4
          description: >-
            Revision of the design as expressed by an auto-incremented,
            SemVer-compliant version number. May be manually set by a user or
            third-party system, but will always be required to be of version
            number higher than the previously defined version number.
          minLength: 1
          maxLength: 50
          type: string
          pattern: >-
            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
        metadata:
          type: object
          x-order: 5
          additionalProperties: true
          properties:
            resolvedAliases:
              description: Map of resolved aliases present in the design
              type: object
              x-go-type: map[string]core.ResolvedAlias
              x-go-type-import:
                path: github.com/meshery/schemas/models/v1alpha1/core
              additionalProperties:
                description: >-
                  An resolved alias is an component that acts as an ref/pointer
                  to a field in another component, resolvedAlias are aware of
                  there immediate parents and completely resolved parents also
                allOf:
                  - description: >-
                      An alias is an component that acts as an ref/pointer to a
                      field in another component, nonResolvedAlias are not aware
                      of there immediate parents
                    type: object
                    properties:
                      relationship_id:
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entities in Meshery. The UUID core definition
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                      alias_component_id:
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entities in Meshery. The UUID core definition
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                      immediate_parent_id:
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entities in Meshery. The UUID core definition
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                      immediate_ref_field_path:
                        type: array
                        items:
                          type: string
                    required:
                      - relationship_id
                      - alias_component_id
                      - immediate_parent_id
                      - immediate_ref_field_path
                  - type: object
                    properties:
                      resolved_parent_id:
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entities in Meshery. The UUID core definition
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                      resolved_ref_field_path:
                        type: array
                        items:
                          type: string
                    required:
                      - resolved_parent_id
                      - resolved_ref_field_path
        components:
          description: A list of one or more component declarations.
          minItems: 0
          x-order: 6
          type: array
          items:
            x-go-type: '*component.ComponentDefinition'
            x-go-type-import:
              path: github.com/meshery/schemas/models/v1beta1/component
            $id: https://schemas.meshery.io/component.json
            $schema: http://json-schema.org/draft-07/schema#
            description: >-
              Components are reusable building blocks for depicting capabilities
              defined within models. Learn more at
              https://docs.meshery.io/concepts/components
            additionalProperties: false
            type: object
            properties:
              id:
                description: >-
                  Uniquely identifies the entity (i.e. component) as defined in
                  a declaration (i.e. design).
                x-order: 1
                x-oapi-codegen-extra-tags:
                  yaml: id
                  json: id
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                default: 00000000-0000-0000-0000-000000000000
              schemaVersion:
                x-order: 2
                description: >-
                  Specifies the version of the schema to which the component
                  definition conforms.
                x-oapi-codegen-extra-tags:
                  yaml: schemaVersion
                  json: schemaVersion
                default: components.meshery.io/v1beta1
                type: string
                minLength: 2
                maxLength: 100
                pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                example:
                  - v1
                  - v1alpha1
                  - v2beta3
                  - v1.custom-suffix
              version:
                x-order: 3
                description: Version of the component definition.
                minLength: 1
                maxLength: 50
                x-oapi-codegen-extra-tags:
                  yaml: version
                  json: version
                type: string
                pattern: >-
                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                default: v0.0.1
              displayName:
                x-order: 4
                description: Name of the component in human-readible format.
                x-oapi-codegen-extra-tags:
                  yaml: displayName
                  json: displayName
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
              description:
                x-order: 5
                type: string
                description: >-
                  A written representation of the purpose and characteristics of
                  the component.
                x-oapi-codegen-extra-tags:
                  yaml: description
                  json: description
              format:
                x-order: 6
                type: string
                enum:
                  - JSON
                  - CUE
                default: JSON
                description: >-
                  Format specifies the format used in the `component.schema`
                  field. JSON is the default.
                x-oapi-codegen-extra-tags:
                  yaml: format
                  json: format
              model:
                x-go-type: model.ModelDefinition
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1beta1/model
                x-order: 7
                description: >-
                  Reference to the specific registered model to which the
                  component belongs and from which model version, category, and
                  other properties may be referenced. Learn more at
                  https://docs.meshery.io/concepts/models
                x-oapi-codegen-extra-tags:
                  gorm: foreignKey:ModelId;references:Id
                $id: https://schemas.meshery.io/model.json
                $schema: http://json-schema.org/draft-07/schema#
                additionalProperties: false
                type: object
                properties:
                  id:
                    description: >-
                      Uniquely identifies the entity (i.e. component) as defined
                      in a declaration (i.e. design).
                    x-order: 1
                    x-oapi-codegen-extra-tags:
                      yaml: id
                      json: id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  schemaVersion:
                    description: >-
                      Specifies the version of the schema used for the
                      definition.
                    x-order: 2
                    x-oapi-codegen-extra-tags:
                      yaml: schemaVersion
                      json: schemaVersion
                    default: models.meshery.io/v1beta1
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                  version:
                    description: Version of the model definition.
                    type: string
                    x-order: 3
                    x-oapi-codegen-extra-tags:
                      yaml: version
                      json: version
                    minLength: 5
                    maxLength: 100
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    default: v0.0.1
                  name:
                    type: string
                    description: >-
                      The unique name for the model within the scope of a
                      registrant.
                    helperText: >-
                      Model name should be in lowercase with hyphens, not
                      whitespaces.
                    pattern: ^[a-z0-9-]+$
                    examples:
                      - cert-manager
                    x-order: 4
                    x-oapi-codegen-extra-tags:
                      yaml: name
                      json: name
                    default: untitled-model
                  displayName:
                    description: Human-readable name for the model.
                    helperText: >-
                      Model display name may include letters, numbers, and
                      spaces. Special characters are not allowed.
                    minLength: 1
                    maxLength: 100
                    type: string
                    pattern: ^[a-zA-Z0-9 ]+$
                    examples:
                      - Cert Manager
                    x-order: 5
                    x-oapi-codegen-extra-tags:
                      yaml: displayName
                      json: displayName
                    default: Untitled Model
                  description:
                    type: string
                    default: A new Meshery model.
                    description: Description of the model.
                    minLength: 1
                    maxLength: 1000
                    x-order: 6
                    x-oapi-codegen-extra-tags:
                      yaml: description,omitempty
                      json: description,omitempty
                  status:
                    type: string
                    description: >-
                      Status of model, including:

                      - duplicate: this component is a duplicate of another. The
                      component that is to be the canonical reference and that
                      is duplicated by other components should not be assigned
                      the 'duplicate' status.

                      - maintenance: model is unavailable for a period of time.

                      - enabled: model is available for use for all users of
                      this Meshery Server.

                      - ignored: model is unavailable for use for all users of
                      this Meshery Server.
                    enum:
                      - ignored
                      - enabled
                      - duplicate
                    x-order: 7
                    x-oapi-codegen-extra-tags:
                      yaml: status
                      json: status
                    default: enabled
                  registrant:
                    x-oapi-codegen-extra-tags:
                      yaml: registrant
                      json: registrant
                      gorm: foreignKey:RegistrantId;references:ID
                    x-order: 8
                    x-go-type: connection.Connection
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1beta1/connection
                    $id: https://schemas.meshery.io/component.json
                    $schema: http://json-schema.org/draft-07/schema#
                    description: >-
                      Meshery Connections are managed and unmanaged resources
                      that either through discovery or manual entry are tracked
                      by Meshery. Learn more at
                      https://docs.meshery.io/concepts/logical/connections
                    additionalProperties: false
                    type: object
                    required:
                      - id
                      - schemaVersion
                      - name
                      - type
                      - sub_type
                      - kind
                      - status
                    properties:
                      id:
                        description: ID
                        x-order: 1
                        x-go-name: ID
                        x-oapi-codegen-extra-tags:
                          db: id
                          yaml: id
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      name:
                        x-oapi-codegen-extra-tags:
                          db: name
                          yaml: name
                        x-order: 2
                        type: string
                        description: Connection Name
                      credential_id:
                        x-go-name: CredentialID
                        x-oapi-codegen-extra-tags:
                          db: credential_id
                          yaml: credential_id
                        x-order: 3
                        description: Credential ID
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      type:
                        x-oapi-codegen-extra-tags:
                          db: type
                          yaml: type
                        x-order: 4
                        type: string
                        description: Connection Type
                      sub_type:
                        x-oapi-codegen-extra-tags:
                          db: sub_type
                          yaml: sub_type
                        x-order: 5
                        type: string
                        description: Connection Subtype
                      kind:
                        x-oapi-codegen-extra-tags:
                          db: kind
                          yaml: kind
                        x-order: 6
                        type: string
                        description: Connection Kind
                      metadata:
                        x-oapi-codegen-extra-tags:
                          db: metadata
                          yaml: metadata
                        x-order: 7
                        x-go-type: core.Map
                        x-go-type-skip-optional-pointer: true
                        type: object
                      status:
                        x-oapi-codegen-extra-tags:
                          db: status
                          yaml: status
                        x-order: 8
                        description: Connection Status
                        type: string
                        enum:
                          - discovered
                          - registered
                          - connected
                          - ignored
                          - maintenance
                          - disconnected
                          - deleted
                          - not found
                      user_id:
                        x-go-name: UserID
                        x-oapi-codegen-extra-tags:
                          db: user_id
                          yaml: user_id
                        x-order: 9
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entites in Meshery. The UUID core defintion
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      created_at:
                        x-oapi-codegen-extra-tags:
                          db: created_at
                          yaml: created_at
                        x-order: 10
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                      updated_at:
                        x-oapi-codegen-extra-tags:
                          db: updated_at
                          yaml: updated_at
                        x-order: 11
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                      deleted_at:
                        x-oapi-codegen-extra-tags:
                          db: deleted_at
                          yaml: deleted_at
                        x-go-type: core.NullTime
                        x-order: 12
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                      environments:
                        type: array
                        items:
                          x-go-type: '*environment.Environment'
                          $id: https://schemas.meshery.io/environment.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: >-
                            Meshery Environments allow you to logically group
                            related Connections and their associated
                            Credentials.. Learn more at
                            https://docs.meshery.io/concepts/logical/environments
                          additionalProperties: false
                          type: object
                          required:
                            - id
                            - name
                            - description
                            - organization_id
                          properties:
                            id:
                              description: ID
                              x-order: 1
                              x-go-name: ID
                              x-oapi-codegen-extra-tags:
                                db: id
                                yaml: id
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              default: 00000000-0000-0000-0000-000000000000
                            name:
                              x-oapi-codegen-extra-tags:
                                db: name
                                yaml: name
                              x-order: 2
                              type: string
                              description: Environment name
                            description:
                              x-oapi-codegen-extra-tags:
                                db: description
                                yaml: description
                              x-order: 3
                              type: string
                              description: Environment description
                            organization_id:
                              x-go-name: OrganizationID
                              x-oapi-codegen-extra-tags:
                                db: organization_id
                                yaml: organization_id
                              x-order: 4
                              description: Environment organization ID
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              default: 00000000-0000-0000-0000-000000000000
                            owner:
                              x-oapi-codegen-extra-tags:
                                db: owner
                                yaml: owner
                              x-order: 5
                              description: Environment owner
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              default: 00000000-0000-0000-0000-000000000000
                            created_at:
                              x-oapi-codegen-extra-tags:
                                db: created_at
                                yaml: created_at
                              x-order: 6
                              type: string
                              format: date-time
                              x-go-type-skip-optional-pointer: true
                            metadata:
                              x-oapi-codegen-extra-tags:
                                db: metadata
                                yaml: metadata
                              x-order: 7
                              x-go-type: core.Map
                              x-go-type-skip-optional-pointer: true
                              type: object
                            updated_at:
                              x-oapi-codegen-extra-tags:
                                db: updated_at
                                yaml: updated_at
                              x-order: 8
                              type: string
                              format: date-time
                              x-go-type-skip-optional-pointer: true
                            deleted_at:
                              x-oapi-codegen-extra-tags:
                                db: deleted_at
                                yaml: deleted_at
                              x-go-type: core.NullTime
                              x-go-import: database/sql
                              x-order: 9
                              type: string
                              format: date-time
                              x-go-type-skip-optional-pointer: true
                        x-oapi-codegen-extra-tags:
                          db: '-'
                          yaml: environments
                          gorm: '-'
                        x-go-type-skip-optional-pointer: true
                        x-order: 13
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema used for the
                          definition.
                        x-order: 14
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          db: '-'
                          gorm: '-'
                        default: connections.meshery.io/v1beta1
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                  registrantId:
                    description: ID of the registrant.
                    x-oapi-codegen-extra-tags:
                      yaml: connection_id
                      json: connection_id
                      gorm: column:connection_id
                    x-order: 8
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  categoryId:
                    description: ID of the category.
                    x-oapi-codegen-extra-tags:
                      yaml: '-'
                      json: '-'
                      gorm: categoryID
                    x-order: 8
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  category:
                    x-order: 9
                    x-oapi-codegen-extra-tags:
                      yaml: category
                      json: category
                      gorm: foreignKey:CategoryId;references:Id
                    x-go-type: category.CategoryDefinition
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1beta1/category
                    $id: https://schemas.meshery.io/category.json
                    $schema: http://json-schema.org/draft-07/schema#
                    type: object
                    description: Category of the model.
                    required:
                      - id
                      - name
                      - metadata
                    properties:
                      id:
                        x-order: 1
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entites in Meshery. The UUID core defintion
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      name:
                        type: string
                        minLength: 1
                        maxLength: 100
                        x-oapi-codegen-extra-tags:
                          yaml: name
                          json: name
                          gorm: name
                        default: Uncategorized
                        description: >-
                          The category of the model that determines the main
                          grouping.
                        enum:
                          - Analytics
                          - App Definition and Development
                          - Cloud Native Network
                          - Cloud Native Storage
                          - Database
                          - Machine Learning
                          - Observability and Analysis
                          - Orchestration & Management
                          - Platform
                          - Provisioning
                          - Runtime
                          - Security & Compliance
                          - Serverless
                          - Tools
                          - Uncategorized
                        x-order: 2
                      metadata:
                        type: object
                        x-oapi-codegen-extra-tags:
                          yaml: metadata,omitempty
                          json: metadata,omitempty
                          gorm: type:bytes;serializer:json
                        x-order: 3
                  subCategory:
                    x-order: 10
                    x-go-type: subcategory.SubCategoryDefinition
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1beta1/subcategory
                    $id: https://schemas.meshery.io/category.json
                    $schema: http://json-schema.org/draft-07/schema#
                    type: string
                    title: SubCategory
                    description: >-
                      Sub category of the model determines the secondary
                      grouping.
                    default: Uncategorized
                    enum:
                      - API Gateway
                      - API Integration
                      - Application Definition & Image Build
                      - Automation & Configuration
                      - Certified Kubernetes - Distribution
                      - Chaos Engineering
                      - Cloud Native Storage
                      - Cloud Provider
                      - CNI
                      - Compute
                      - Container Registry
                      - Container Runtime
                      - Container Security
                      - Container
                      - Content Delivery Network
                      - Continuous Integration & Delivery
                      - Coordination & Service Discovery
                      - Database
                      - Flowchart
                      - Framework
                      - Installable Platform
                      - Key Management
                      - Key Management Service
                      - Kubernetes
                      - Logging
                      - Machine Learning
                      - Management Governance
                      - Metrics
                      - Monitoring
                      - Networking Content Delivery
                      - Operating System
                      - Query
                      - Remote Procedure Call
                      - Scheduling & Orchestration
                      - Secrets Management
                      - Security Identity & Compliance
                      - Service Mesh
                      - Service Proxy
                      - Source Version Control
                      - Storage
                      - Specifications
                      - Streaming & Messaging
                      - Tools
                      - Tracing
                      - Uncategorized
                      - Video Conferencing
                    minLength: 1
                    maxLength: 100
                    x-oapi-codegen-extra-tags:
                      yaml: subCategory
                      json: subCategory
                  metadata:
                    type: object
                    description: >-
                      Metadata containing additional information associated with
                      the model.
                    required:
                      - svgWhite
                      - svgColor
                    properties:
                      capabilities:
                        type: array
                        description: Capabilities associated with the model
                        items:
                          x-go-type: capability.Capability
                          x-go-type-import:
                            path: >-
                              github.com/meshery/schemas/models/v1alpha1/capability
                          $id: https://schemas.meshery.io/capability.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: >-
                            Meshery manages entities in accordance with their
                            specific capabilities. This field explicitly
                            identifies those capabilities largely by what
                            actions a given component supports; e.g.
                            metric-scrape, sub-interface, and so on. This field
                            is extensible. Entities may define a broad array of
                            capabilities, which are in-turn dynamically
                            interpretted by Meshery for full lifecycle
                            management.
                          additionalProperties: false
                          type: object
                          required:
                            - description
                            - schemaVersion
                            - version
                            - displayName
                            - kind
                            - type
                            - subType
                            - entityState
                            - key
                            - status
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                          properties:
                            schemaVersion:
                              description: >-
                                Specifies the version of the schema to which the
                                capability definition conforms.
                              type: string
                              minLength: 2
                              maxLength: 100
                              pattern: >-
                                ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                              example:
                                - v1
                                - v1alpha1
                                - v2beta3
                                - v1.custom-suffix
                            version:
                              description: Version of the capability definition.
                              type: string
                              minLength: 5
                              maxLength: 100
                              pattern: >-
                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              default: v0.0.1
                            displayName:
                              description: Name of the capability in human-readible format.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description:
                              type: string
                              description: >-
                                A written representation of the purpose and
                                characteristics of the capability.
                            kind:
                              description: Top-level categorization of the capability
                              additionalProperties: false
                              anyOf:
                                - const: action
                                  description: >-
                                    For capabilities related to executing
                                    actions on entities. Example: initiate log
                                    streaming on a Pod. Example: initiate
                                    deployment of a component.
                                - const: mutate
                                  description: >-
                                    For capabilities related to mutating an
                                    entity. Example: the ability to change the
                                    configuration of a component.
                                - const: view
                                  description: >-
                                    For capabilities related to viewing an
                                    entity. Example: the ability to view a
                                    components configuration.
                                - const: interaction
                                  description: >-
                                    Catch all for capabilities related to
                                    interaction with entities. Example: the
                                    ability for a component to be dragged and
                                    dropped. Example: supports event bubbling to
                                    parent components. 
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            type:
                              description: >-
                                Classification of capabilities. Used to group
                                capabilities similar in nature.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            subType:
                              description: >-
                                Most granular unit of capability classification.
                                The combination of Kind, Type and SubType
                                together uniquely identify a Capability.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            key:
                              description: Key that backs the capability.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            entityState:
                              description: >-
                                State of the entity in which the capability is
                                applicable.
                              type: array
                              items:
                                type: string
                                enum:
                                  - declaration
                                  - instance
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                description: >-
                                  A string starting with an alphanumeric
                                  character. Spaces and hyphens allowed.
                            status:
                              type: string
                              description: Status of the capability
                              default: enabled
                              enum:
                                - enabled
                                - disabled
                            metadata:
                              type: object
                              description: >-
                                Metadata contains additional information
                                associated with the capability. Extension point.
                              additionalProperties: true
                          default:
                            - description: Configure the visual styles for the component
                              displayName: Styling
                              entityState:
                                - declaration
                              key: ''
                              kind: mutate
                              schemaVersion: capability.meshery.io/v1alpha1
                              status: enabled
                              subType: ''
                              type: style
                              version: 0.7.0
                            - description: Change the shape of the component
                              displayName: Change Shape
                              entityState:
                                - declaration
                              key: ''
                              kind: mutate
                              schemaVersion: capability.meshery.io/v1alpha1
                              status: enabled
                              subType: shape
                              type: style
                              version: 0.7.0
                            - description: >-
                                Drag and Drop a component into a parent
                                component in graph view
                              displayName: Compound Drag And Drop
                              entityState:
                                - declaration
                              key: ''
                              kind: interaction
                              schemaVersion: capability.meshery.io/v1alpha1
                              status: enabled
                              subType: compoundDnd
                              type: graph
                              version: 0.7.0
                            - description: Add text to nodes body
                              displayName: Body Text
                              entityState:
                                - declaration
                              key: ''
                              kind: mutate
                              schemaVersion: capability.meshery.io/v1alpha1
                              status: enabled
                              subType: body-text
                              type: style
                              version: 0.7.0
                        x-order: 1
                      isAnnotation:
                        type: boolean
                        description: >-
                          Indicates whether the model and its entities should be
                          treated as deployable entities or as logical
                          representations.
                        x-oapi-codegen-extra-tags:
                          yaml: isAnnotation
                          json: isAnnotation
                        x-order: 2
                        default: false
                      primaryColor:
                        type: string
                        description: Primary color associated with the model.
                        minLength: 1
                        maxLength: 50
                        default: '#00b39f'
                        x-oapi-codegen-extra-tags:
                          yaml: primaryColor
                          json: primaryColor
                        x-order: 3
                      secondaryColor:
                        type: string
                        description: Secondary color associated with the model.
                        minLength: 1
                        maxLength: 50
                        default: '#00D3A9'
                        x-oapi-codegen-extra-tags:
                          yaml: secondaryColor
                          json: secondaryColor
                        x-order: 4
                      svgWhite:
                        type: string
                        description: SVG representation of the model in white color.
                        minLength: 1
                        x-oapi-codegen-extra-tags:
                          yaml: svgWhite
                          json: svgWhite
                        x-order: 5
                        default: >-
                          <svg width="32" height="32" viewBox="0 0 32 32"
                          fill="none" xmlns="http://www.w3.org/2000/svg"><path
                          d="M16.405 8.732v6.57l5.694-3.297-5.694-3.273Zm0
                          7.942v6.602l5.747-3.285-5.747-3.317Z"
                          fill="#fff"/><path d="M15.586 15.256v-6.47l-5.622
                          3.225 5.622 3.245ZM4.307 23.252a13.809 13.809 0 0 0
                          4.362 4.39v-6.914l-4.362 2.524Zm11.279-.008v-6.52L9.95
                          19.985l5.636 3.258Z" fill="#fff"
                          fill-opacity=".8"/><path d="m9.49 27.23
                          5.707-3.263-5.707-3.3v6.563Z" fill="#fff"/><path
                          d="M22.54 27.265v-6.553l-5.699 3.259 5.7
                          3.294Zm5.58-4.773a13.697 13.697 0 0 0
                          1.612-5.895l-5.934 3.397 4.323 2.498Z" fill="#fff"
                          fill-opacity=".8"/><path d="m23.362 19.298
                          5.728-3.276-5.728-3.291v6.567Z" fill="#fff"/><path
                          d="M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                          7.955v-6.574l-5.685 3.292 5.685 3.281Z" fill="#fff"
                          fill-opacity=".8"/><path d="M9.49
                          12.684v6.622l5.728-3.316-5.728-3.306Z"
                          fill="#fff"/><path d="M15.586 2.25a13.69 13.69 0 0
                          0-6.037 1.595l6.037 3.463V2.25Z" fill="#fff"
                          fill-opacity=".8"/><path d="M9.49
                          4.756v6.583l5.732-3.288L9.49 4.756Z"
                          fill="#fff"/><path d="M8.669 4.356a13.83 13.83 0 0
                          0-4.362 4.39l4.362 2.518V4.356Z" fill="#fff"
                          fill-opacity=".8"/><path d="M22.504 3.88a13.695 13.695
                          0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25 16.483c.071
                          2.12.634 4.196 1.644
                          6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68 13.68
                          0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z"
                          fill="#fff"/><path d="M9.539 28.147a13.673 13.673 0 0
                          0 6.047 1.603v-5.062L9.54 28.147Z" fill="#fff"
                          fill-opacity=".8"/><path d="M27.697 8.768a13.83 13.83
                          0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362
                          27.62a13.851 13.851 0 0 0
                          4.351-4.417l-4.351-2.514v6.93Z" fill="#fff"/><path
                          d="M29.75 15.452a13.659 13.659 0 0 0-1.63-5.979l-4.381
                          2.53 6.011 3.45Z" fill="#fff" fill-opacity=".8"/><path
                          d="M16.405 29.75a13.673 13.673 0 0 0
                          6.036-1.595l-6.036-3.498v5.093Z" fill="#fff"/><path
                          d="M8.669 19.247v-6.494L3.03 15.986l5.639 3.261Z"
                          fill="#fff" fill-opacity=".8"/></svg>
                      svgColor:
                        type: string
                        description: SVG representation of the model in colored format.
                        minLength: 1
                        x-oapi-codegen-extra-tags:
                          yaml: svgColor
                          json: svgColor
                        x-order: 6
                        default: >-
                          <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1"
                          data-name="Layer 1" viewBox="0 0 134.95
                          135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                          points="69.49 31.82 69.49 64.07 97.44 47.89 69.49
                          31.82" class="cls-1"/><polygon points="69.49 70.81
                          69.49 103.22 97.7 87.09 69.49 70.81"
                          class="cls-1"/><polygon points="65.47 63.85 65.47
                          32.09 37.87 47.92 65.47 63.85" class="cls-2"/><path
                          d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                          class="cls-2"/><polygon points="65.47 103.06 65.47
                          71.05 37.8 87.07 65.47 103.06" class="cls-2"/><polygon
                          points="35.54 122.63 63.56 106.61 35.54 90.41 35.54
                          122.63" class="cls-1"/><polygon points="99.61 122.8
                          99.61 90.63 71.63 106.63 99.61 122.8"
                          class="cls-2"/><path
                          d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                          class="cls-2"/><polygon points="103.64 83.69 131.76
                          67.61 103.64 51.45 103.64 83.69"
                          class="cls-1"/><polygon points="99.61 44.5 99.61 12.52
                          71.76 28.49 99.61 44.5" class="cls-2"/><polygon
                          points="99.61 83.55 99.61 51.28 71.7 67.44 99.61
                          83.55" class="cls-2"/><polygon points="67.48 135.02
                          67.49 135.02 67.48 135.02 67.48 135.02"
                          class="cls-2"/><polygon points="35.54 51.22 35.54
                          83.73 63.66 67.45 35.54 51.22" class="cls-1"/><path
                          d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                          class="cls-2"/><polygon points="35.54 12.3 35.54 44.62
                          63.68 28.48 35.54 12.3" class="cls-1"/><path
                          d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                          class="cls-2"/><path
                          d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                          class="cls-1"/><path
                          d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                          class="cls-1"/><path
                          d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                          class="cls-1"/><path
                          d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                          class="cls-2"/><path
                          d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                          class="cls-1"/><path
                          d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                          class="cls-1"/><path
                          d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                          class="cls-2"/><path
                          d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                          class="cls-1"/><polygon points="31.51 83.44 31.51
                          51.56 3.83 67.43 31.51 83.44" class="cls-2"/></svg>
                      svgComplete:
                        type: string
                        description: SVG representation of the complete model.
                        minLength: 1
                        x-oapi-codegen-extra-tags:
                          yaml: svgComplete
                          json: svgComplete
                        x-order: 7
                      shape:
                        x-order: 8
                        type: string
                        description: >-
                          The shape of the node’s body. Note that each shape
                          fits within the specified width and height, and so you
                          may have to adjust width and height if you desire an
                          equilateral shape (i.e. width !== height for several
                          equilateral shapes)
                        default: circle
                        enum:
                          - circle
                          - ellipse
                          - triangle
                          - round-triangle
                          - rectangle
                          - round-rectangle
                          - bottom-round-rectangle
                          - cut-rectangle
                          - barrel
                          - rhomboid
                          - diamond
                          - round-diamond
                          - pentagon
                          - round-pentagon
                          - hexagon
                          - round-hexagon
                          - concave-hexagon
                          - heptagon
                          - round-heptagon
                          - octagon
                          - round-octagon
                          - star
                          - tag
                          - round-tag
                          - vee
                          - polygon
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                      json: metadata
                      yaml: metadata
                    x-order: 11
                    additionalProperties: true
                  model:
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    x-order: 12
                    type: object
                    description: >-
                      Registrant-defined data associated with the model.
                      Properties pertain to the software being managed (e.g.
                      Kubernetes v1.31).
                    required:
                      - version
                    properties:
                      version:
                        description: Version of the model as defined by the registrant.
                        allOf:
                          - type: string
                            minLength: 5
                            maxLength: 100
                            pattern: >-
                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                            description: >-
                              A valid semantic version string between 5 and 256
                              characters. The pattern allows for a
                              major.minor.patch version followed by an optional
                              pre-release tag like '-alpha' or '-beta.2' and an
                              optional build metadata tag like '+build.1.
                            default: v0.0.1
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        x-order: 1
                  relationships:
                    type: array
                    x-go-type: interface{}
                    x-oapi-codegen-extra-tags:
                      gorm: '-'
                      json: relationships
                      yaml: relationships
                  components:
                    type: array
                    x-go-type: interface{}
                    x-oapi-codegen-extra-tags:
                      gorm: '-'
                      json: components
                      yaml: components
                  componentsCount:
                    type: integer
                    description: Number of components associated with the model.
                    x-order: 13
                    x-oapi-codegen-extra-tags:
                      json: components_count
                      yaml: components_count
                      gorm: '-'
                    default: 0
                  relationshipsCount:
                    type: integer
                    description: Number of relationships associated with the model.
                    x-order: 13
                    x-oapi-codegen-extra-tags:
                      gorm: '-'
                      json: relationships_count
                      yaml: relationships_count
                    default: 0
                required:
                  - id
                  - schemaVersion
                  - displayName
                  - status
                  - subCategory
                  - model
                  - name
                  - description
                  - version
                  - registrant
                  - category
                  - categoryId
                  - registrantId
                  - relationshipsCount
                  - componentsCount
                  - components
                  - relationships
              modelId:
                description: >-
                  ModelId is the foreign key to the model to which the component
                  belongs.
                x-oapi-codegen-extra-tags:
                  gorm: index:idx_component_definition_dbs_model_id,column:model_id
                  yaml: '-'
                  json: '-'
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                default: 00000000-0000-0000-0000-000000000000
              styles:
                x-oapi-codegen-extra-tags:
                  gorm: type:bytes;serializer:json
                  yaml: styles
                  json: styles
                x-go-type: core.ComponentStyles
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1alpha1/core
                x-order: 8
                type: object
                description: Visualization styles for a component
                required:
                  - shape
                  - primaryColor
                  - svgColor
                  - svgWhite
                  - svgComplete
                allOf:
                  - type: object
                    description: Common styles for all entities
                    additionalProperties: true
                    required:
                      - primaryColor
                      - svgColor
                      - svgWhite
                      - svgComplete
                    properties:
                      primaryColor:
                        type: string
                        description: >-
                          Primary color of the component used for UI
                          representation.
                      secondaryColor:
                        type: string
                        description: >-
                          Secondary color of the entity used for UI
                          representation.
                      svgWhite:
                        type: string
                        description: >-
                          White SVG of the entity used for UI representation on
                          dark background.
                      svgColor:
                        type: string
                        description: >-
                          Colored SVG of the entity used for UI representation
                          on light background.
                      svgComplete:
                        type: string
                        description: >-
                          Complete SVG of the entity used for UI representation,
                          often inclusive of background.
                      color:
                        type: string
                        description: >-
                          The color of the element's label. Colours may be
                          specified by name (e.g. red), hex (e.g.
                      text-opacity:
                        type: number
                        description: The opacity of the label text, including its outline.
                        minimum: 0
                        maximum: 1
                      font-family:
                        type: string
                        description: >-
                          A comma-separated list of font names to use on the
                          label text.
                      font-size:
                        type: string
                        description: The size of the label text.
                      font-style:
                        type: string
                        description: A CSS font style to be applied to the label text.
                      font-weight:
                        type: string
                        description: A CSS font weight to be applied to the label text.
                      text-transform:
                        type: string
                        description: A transformation to apply to the label text
                        enum:
                          - none
                          - uppercase
                          - lowercase
                      opacity:
                        type: number
                        description: >-
                          The opacity of the element, ranging from 0 to 1. Note
                          that the opacity of a compound node parent affects the
                          effective opacity of its children.
                        minimum: 0
                        maximum: 1
                      z-index:
                        type: integer
                        description: >-
                          An integer value that affects the relative draw order
                          of elements. In general, an element with a higher
                          z-index will be drawn on top of an element with a
                          lower z-index. Note that edges are under nodes despite
                          z-index.
                      label:
                        type: string
                        description: >-
                          The text to display for an element's label. Can give a
                          path, e.g. data(id) will label with the elements id
                      animation:
                        type: object
                        description: >-
                          The animation to apply to the element. example
                          ripple,bounce,etc
                  - type: object
                    properties:
                      shape:
                        type: string
                        description: >-
                          The shape of the node's body. Note that each shape
                          fits within the specified width and height, and so you
                          may have to adjust width and height if you desire an
                          equilateral shape (i.e. width !== height for several
                          equilateral shapes)
                        enum:
                          - ellipse
                          - triangle
                          - round-triangle
                          - rectangle
                          - round-rectangle
                          - bottom-round-rectangle
                          - cut-rectangle
                          - barrel
                          - rhomboid
                          - diamond
                          - round-diamond
                          - pentagon
                          - round-pentagon
                          - hexagon
                          - round-hexagon
                          - concave-hexagon
                          - heptagon
                          - round-heptagon
                          - octagon
                          - round-octagon
                          - star
                          - tag
                          - round-tag
                          - vee
                          - polygon
                      position:
                        type: object
                        additionalProperties: false
                        required:
                          - x
                          - 'y'
                        description: >-
                          The position of the node. If the position is set, the
                          node is drawn at that position in the given
                          dimensions. If the position is not set, the node is
                          drawn at a random position.
                        properties:
                          x:
                            type: number
                            description: The x-coordinate of the node.
                            x-go-type: float64
                          'y':
                            type: number
                            description: The y-coordinate of the node.
                            x-go-type: float64
                      body-text:
                        type: string
                        description: >-
                          The text to display for an element's body. Can give a
                          path, e.g. data(id) will label with the elements id
                      body-text-wrap:
                        type: string
                        description: >-
                          How to wrap the text in the node. Can be 'none',
                          'wrap', or 'ellipsis'.
                      body-text-max-width:
                        type: string
                        description: The maximum width for wrapping text in the node.
                      body-text-opacity:
                        type: number
                        description: >-
                          The opacity of the node's body text, including its
                          outline.
                        minimum: 0
                        maximum: 1
                      body-text-background-color:
                        type: string
                        description: >-
                          The colour of the node's body text background. Colours
                          may be specified by name (e.g. red), hex (e.g.
                      body-text-font-size:
                        type: number
                        description: The size of the node's body text.
                      body-text-color:
                        type: string
                        description: >-
                          The colour of the node's body text. Colours may be
                          specified by name (e.g. red), hex (e.g.
                      body-text-font-weight:
                        type: string
                        description: >-
                          A CSS font weight to be applied to the node's body
                          text.
                      body-text-horizontal-align:
                        type: string
                        description: >-
                          A CSS horizontal alignment to be applied to the node's
                          body text.
                      body-text-decoration:
                        type: string
                        description: >-
                          A CSS text decoration to be applied to the node's body
                          text.
                      body-text-vertical-align:
                        type: string
                        description: >-
                          A CSS vertical alignment to be applied to the node's
                          body text.
                      width:
                        type: number
                        description: >-
                          The width of the node's body or the width of an edge's
                          line.
                      height:
                        type: number
                        description: The height of the node's body
                      background-image:
                        type: string
                        description: The URL that points to the image to show in the node.
                      background-color:
                        type: string
                        description: >-
                          The colour of the node's body. Colours may be
                          specified by name (e.g. red), hex (e.g.
                      background-blacken:
                        type: number
                        description: >-
                          Blackens the node's body for values from 0 to 1;
                          whitens the node's body for values from 0 to -1.
                        maximum: 1
                        minimum: -1
                      background-opacity:
                        type: number
                        description: The opacity level of the node's background colour
                        maximum: 1
                        minimum: 0
                      background-position-x:
                        type: string
                        description: >-
                          The x position of the background image, measured in
                          percent (e.g. 50%) or pixels (e.g. 10px)
                      background-position-y:
                        type: string
                        description: >-
                          The y position of the background image, measured in
                          percent (e.g. 50%) or pixels (e.g. 10px)
                      background-offset-x:
                        type: string
                        description: >-
                          The x offset of the background image, measured in
                          percent (e.g. 50%) or pixels (e.g. 10px)
                      background-offset-y:
                        type: string
                        description: >-
                          The y offset of the background image, measured in
                          percent (e.g. 50%) or pixels (e.g. 10px)
                      background-fit:
                        type: string
                        description: >-
                          How the background image is fit to the node. Can be
                          'none', 'contain', or 'cover'.
                      background-clip:
                        type: string
                        description: >-
                          How the background image is clipped to the node. Can
                          be 'none', 'node', or 'node-border'.
                      background-width-relative-to:
                        type: string
                        description: >-
                          How the background image's width is determined. Can be
                          'none', 'inner', or 'outer'.
                      background-height-relative-to:
                        type: string
                        description: >-
                          How the background image's height is determined. Can
                          be 'none', 'inner', or 'outer'.
                      border-width:
                        type: number
                        description: The size of the node's border.
                        minimum: 0
                      border-style:
                        type: string
                        description: The style of the node's border
                        enum:
                          - solid
                          - dotted
                          - dashed
                          - double
                      border-color:
                        type: string
                        description: >-
                          The colour of the node's border. Colours may be
                          specified by name (e.g. red), hex (e.g.
                      border-opacity:
                        type: number
                        description: The opacity of the node's border
                        minimum: 0
                        maximum: 1
                      padding:
                        type: number
                        description: The amount of padding around all sides of the node.
                        minimum: 0
                      text-halign:
                        type: string
                        description: The horizontal alignment of a node's label
                        enum:
                          - left
                          - center
                          - right
                      text-valign:
                        type: string
                        description: The vertical alignment of a node's label
                        enum:
                          - top
                          - center
                          - bottom
                      ghost:
                        type: string
                        description: >-
                          Whether to use the ghost effect, a semitransparent
                          duplicate of the element drawn at an offset.
                        default: 'no'
                        enum:
                          - 'yes'
                          - 'no'
                      active-bg-color:
                        type: string
                        description: >-
                          The colour of the indicator shown when the background
                          is grabbed by the user. Selector needs to be *core*.
                          Colours may be specified by name (e.g. red), hex (e.g.
                      active-bg-opacity:
                        type: string
                        description: >-
                          The opacity of the active background indicator.
                          Selector needs to be *core*.
                      active-bg-size:
                        type: string
                        description: >-
                          The opacity of the active background indicator.
                          Selector needs to be *core*.
                      selection-box-color:
                        type: string
                        description: >-
                          The background colour of the selection box used for
                          drag selection. Selector needs to be *core*. Colours
                          may be specified by name (e.g. red), hex (e.g.
                      selection-box-border-width:
                        type: number
                        description: >-
                          The size of the border on the selection box. Selector
                          needs to be *core*
                      selection-box-opacity:
                        type: number
                        description: >-
                          The opacity of the selection box. Selector needs to be
                          *core*
                        minimum: 0
                        maximum: 1
                      outside-texture-bg-color:
                        type: string
                        description: >-
                          The colour of the area outside the viewport texture
                          when initOptions.textureOnViewport === true. Selector
                          needs to be *core*. Colours may be specified by name
                          (e.g. red), hex (e.g.
                      outside-texture-bg-opacity:
                        type: number
                        description: >-
                          The opacity of the area outside the viewport texture.
                          Selector needs to be *core*
                        minimum: 0
                        maximum: 1
                      shape-polygon-points:
                        type: string
                        description: >-
                          An array (or a space-separated string) of numbers
                          ranging on [-1, 1], representing alternating x and y
                          values (i.e. x1 y1 x2 y2, x3 y3 ...). This represents
                          the points in the polygon for the node's shape. The
                          bounding box of the node is given by (-1, -1), (1,
                          -1), (1, 1), (-1, 1). The node's position is the
                          origin (0, 0 )
                      menu-background-color:
                        type: string
                        description: >-
                          The colour of the background of the component menu.
                          Colours may be specified by name (e.g. red), hex (e.g.
                      menu-background-opacity:
                        type: number
                        description: The opacity of the background of the component menu.
                        minimum: 0
                        maximum: 1
                      menu-forground-color:
                        type: string
                        description: >-
                          The colour of the text or icons in the component menu.
                          Colours may be specified by name (e.g. red), hex (e.g.
              capabilities:
                x-order: 9
                type: array
                description: >-
                  Meshery manages components in accordance with their specific
                  capabilities. This field explicitly identifies those
                  capabilities largely by what actions a given component
                  supports; e.g. metric-scrape, sub-interface, and so on. This
                  field is extensible. ComponentDefinitions may define a broad
                  array of capabilities, which are in-turn dynamically
                  interpretted by Meshery for full lifecycle management.
                items:
                  x-go-type: capability.Capability
                  x-go-type-import:
                    path: github.com/meshery/schemas/models/v1alpha1/capability
                  $id: https://schemas.meshery.io/capability.json
                  $schema: http://json-schema.org/draft-07/schema#
                  description: >-
                    Meshery manages entities in accordance with their specific
                    capabilities. This field explicitly identifies those
                    capabilities largely by what actions a given component
                    supports; e.g. metric-scrape, sub-interface, and so on. This
                    field is extensible. Entities may define a broad array of
                    capabilities, which are in-turn dynamically interpretted by
                    Meshery for full lifecycle management.
                  additionalProperties: false
                  type: object
                  required:
                    - description
                    - schemaVersion
                    - version
                    - displayName
                    - kind
                    - type
                    - subType
                    - entityState
                    - key
                    - status
                  x-oapi-codegen-extra-tags:
                    gorm: type:bytes;serializer:json
                  properties:
                    schemaVersion:
                      description: >-
                        Specifies the version of the schema to which the
                        capability definition conforms.
                      type: string
                      minLength: 2
                      maxLength: 100
                      pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                      example:
                        - v1
                        - v1alpha1
                        - v2beta3
                        - v1.custom-suffix
                    version:
                      description: Version of the capability definition.
                      type: string
                      minLength: 5
                      maxLength: 100
                      pattern: >-
                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                      default: v0.0.1
                    displayName:
                      description: Name of the capability in human-readible format.
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    description:
                      type: string
                      description: >-
                        A written representation of the purpose and
                        characteristics of the capability.
                    kind:
                      description: Top-level categorization of the capability
                      additionalProperties: false
                      anyOf:
                        - const: action
                          description: >-
                            For capabilities related to executing actions on
                            entities. Example: initiate log streaming on a Pod.
                            Example: initiate deployment of a component.
                        - const: mutate
                          description: >-
                            For capabilities related to mutating an entity.
                            Example: the ability to change the configuration of
                            a component.
                        - const: view
                          description: >-
                            For capabilities related to viewing an entity.
                            Example: the ability to view a components
                            configuration.
                        - const: interaction
                          description: >-
                            Catch all for capabilities related to interaction
                            with entities. Example: the ability for a component
                            to be dragged and dropped. Example: supports event
                            bubbling to parent components. 
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    type:
                      description: >-
                        Classification of capabilities. Used to group
                        capabilities similar in nature.
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    subType:
                      description: >-
                        Most granular unit of capability classification. The
                        combination of Kind, Type and SubType together uniquely
                        identify a Capability.
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    key:
                      description: Key that backs the capability.
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    entityState:
                      description: >-
                        State of the entity in which the capability is
                        applicable.
                      type: array
                      items:
                        type: string
                        enum:
                          - declaration
                          - instance
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        description: >-
                          A string starting with an alphanumeric character.
                          Spaces and hyphens allowed.
                    status:
                      type: string
                      description: Status of the capability
                      default: enabled
                      enum:
                        - enabled
                        - disabled
                    metadata:
                      type: object
                      description: >-
                        Metadata contains additional information associated with
                        the capability. Extension point.
                      additionalProperties: true
                  default:
                    - description: Configure the visual styles for the component
                      displayName: Styling
                      entityState:
                        - declaration
                      key: ''
                      kind: mutate
                      schemaVersion: capability.meshery.io/v1alpha1
                      status: enabled
                      subType: ''
                      type: style
                      version: 0.7.0
                    - description: Change the shape of the component
                      displayName: Change Shape
                      entityState:
                        - declaration
                      key: ''
                      kind: mutate
                      schemaVersion: capability.meshery.io/v1alpha1
                      status: enabled
                      subType: shape
                      type: style
                      version: 0.7.0
                    - description: >-
                        Drag and Drop a component into a parent component in
                        graph view
                      displayName: Compound Drag And Drop
                      entityState:
                        - declaration
                      key: ''
                      kind: interaction
                      schemaVersion: capability.meshery.io/v1alpha1
                      status: enabled
                      subType: compoundDnd
                      type: graph
                      version: 0.7.0
                    - description: Add text to nodes body
                      displayName: Body Text
                      entityState:
                        - declaration
                      key: ''
                      kind: mutate
                      schemaVersion: capability.meshery.io/v1alpha1
                      status: enabled
                      subType: body-text
                      type: style
                      version: 0.7.0
                x-oapi-codegen-extra-tags:
                  gorm: type:bytes;serializer:json
                  yaml: capabilities
                  json: capabilities
                default:
                  - schemaVersion: capability.meshery.io/v1alpha1
                    version: 0.7.0
                    displayName: Performance Test
                    description: >-
                      Initiate a performance test. Meshery will execute the load
                      generation, collect metrics, and present the results.
                    kind: action
                    type: operator
                    subType: perf-test
                    key: ''
                    entityState:
                      - instance
                    status: enabled
                    metadata: null
                  - schemaVersion: capability.meshery.io/v1alpha1
                    version: 0.7.0
                    displayName: Workload Configuration
                    description: Configure the workload specific setting of a component
                    kind: mutate
                    type: configuration
                    subType: config
                    key: ''
                    entityState:
                      - declaration
                    status: enabled
                    metadata: null
                  - schemaVersion: capability.meshery.io/v1alpha1
                    version: 0.7.0
                    displayName: Labels and Annotations Configuration
                    description: 'Configure Labels And Annotations for  the component '
                    kind: mutate
                    type: configuration
                    subType: labels-and-annotations
                    key: ''
                    entityState:
                      - declaration
                    status: enabled
                    metadata: null
                  - schemaVersion: capability.meshery.io/v1alpha1
                    version: 0.7.0
                    displayName: Relationships
                    description: View relationships for the component
                    kind: view
                    type: configuration
                    subType: relationship
                    key: ''
                    entityState:
                      - declaration
                      - instance
                    status: enabled
                    metadata: null
                  - schemaVersion: capability.meshery.io/v1alpha1
                    version: 0.7.0
                    displayName: Json Schema
                    description: 'View Component Definition '
                    kind: view
                    type: configuration
                    subType: definition
                    key: ''
                    entityState:
                      - declaration
                      - instance
                    status: enabled
                    metadata: null
                  - schemaVersion: capability.meshery.io/v1alpha1
                    version: 0.7.0
                    displayName: Styling
                    description: Configure the visual styles for the component
                    kind: mutate
                    type: style
                    subType: ''
                    key: ''
                    entityState:
                      - declaration
                    status: enabled
                    metadata: null
                  - schemaVersion: capability.meshery.io/v1alpha1
                    version: 0.7.0
                    displayName: Change Shape
                    description: Change the shape of the component
                    kind: mutate
                    type: style
                    subType: shape
                    key: ''
                    entityState:
                      - declaration
                    status: enabled
                    metadata: null
                  - schemaVersion: capability.meshery.io/v1alpha1
                    version: 0.7.0
                    displayName: Compound Drag And Drop
                    description: >-
                      Drag and Drop a component into a parent component in graph
                      view
                    kind: interaction
                    type: graph
                    subType: compoundDnd
                    key: ''
                    entityState:
                      - declaration
                    status: enabled
                    metadata: null
              status:
                x-order: 10
                type: string
                description: >-
                  Status of component, including:

                  - duplicate: this component is a duplicate of another. The
                  component that is to be the canonical reference and that is
                  duplicated by other components should not be assigned the
                  'duplicate' status.

                  - maintenance: model is unavailable for a period of time.

                  - enabled: model is available for use for all users of this
                  Meshery Server.

                  - ignored: model is unavailable for use for all users of this
                  Meshery Server.
                default: enabled
                enum:
                  - ignored
                  - enabled
                  - duplicate
                  - resolved
                  - open
                x-oapi-codegen-extra-tags:
                  yaml: status
                  json: status
              metadata:
                x-order: 11
                type: object
                description: >-
                  Metadata contains additional information associated with the
                  component.
                required:
                  - genealogy
                  - isAnnotation
                  - isNamespaced
                  - published
                  - instanceDetails
                  - configurationUISchema
                properties:
                  genealogy:
                    x-order: 1
                    type: string
                    description: >-
                      Genealogy represents the various representational states
                      of the component.
                  isAnnotation:
                    x-order: 2
                    type: boolean
                    description: >-
                      Identifies whether the component is semantically
                      meaningful or not; identifies whether the component should
                      be treated as deployable entity or is for purposes of
                      logical representation.
                    default: false
                  isNamespaced:
                    x-order: 3
                    type: boolean
                    description: >-
                      Identifies whether the component is scoped to namespace or
                      clsuter wide.
                  published:
                    x-order: 4
                    type: boolean
                    description: >-
                      'published' controls whether the component should be
                      registered in Meshery Registry. When the same 'published'
                      property in Models, is set to 'false', the Model property
                      takes precedence with all Entities in the Model not being
                      registered.
                  instanceDetails:
                    x-order: 5
                    type: object
                    description: >-
                      InstanceDetails contains information about the instance of
                      the component.
                  configurationUISchema:
                    x-order: 6
                    type: string
                    description: >-
                      Defines the UI schema for rendering the component's
                      configuration. For more details, visit:
                      https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                      .
                x-oapi-codegen-extra-tags:
                  gorm: type:bytes;serializer:json
                additionalProperties: true
              configuration:
                x-order: 12
                description: >-
                  The configuration of the component. The configuration is based
                  on the schema defined within the component
                  definition(component.schema).
                type: object
                $comment: >-
                  The configuration of the component. The configuration is based
                  on the schema defined within the component
                  definition(component.schema).
                x-oapi-codegen-extra-tags:
                  gorm: type:bytes;serializer:json
              component:
                x-order: 13
                x-oapi-codegen-extra-tags:
                  gorm: type:bytes;serializer:json
                x-go-type: Component
                description: >-
                  data related to the third party capability that Component
                  Defintion wraps , this is herematicaly sealed an
                type: object
                properties:
                  version:
                    type: string
                    description: >-
                      Version of the component produced by the registrant.
                      Example: APIVersion of a Kubernetes Pod.
                    x-order: 1
                  kind:
                    type: string
                    description: >-
                      The unique identifier (name) assigned by the registrant to
                      this component. Example: A Kubernetes Pod is of kind
                      'Pod'.
                    x-order: 2
                  schema:
                    type: string
                    description: JSON schema of the object as defined by the registrant.
                    x-order: 3
                required:
                  - version
                  - kind
                  - schema
            required:
              - id
              - displayName
              - description
              - schemaVersion
              - format
              - version
              - configuration
              - metadata
              - modelId
              - model
              - component
        preferences:
          type: object
          description: Design-level preferences
          x-order: 7
          properties:
            layers:
              type: object
              description: List of available layers
          required:
            - layers
        relationships:
          description: List of relationships between components
          type: array
          x-order: 8
          items:
            x-go-type: '*relationship.RelationshipDefinition'
            x-go-type-import:
              path: github.com/meshery/schemas/models/v1alpha3/relationship
            $id: https://schemas.meshery.io/relationship.json
            $schema: http://json-schema.org/draft-07/schema#
            description: >-
              Relationships define the nature of interaction between
              interconnected components in Meshery. The combination of
              relationship properties kind, type, and subtype characterize
              various genealogical relations among and between components.
              Relationships have selectors, selector sets, metadata, and
              optional parameters. Learn more at
              https://docs.meshery.io/concepts/logical/relationships.
            required:
              - schemaVersion
              - version
              - model
              - kind
              - type
              - subType
            additionalProperties: false
            type: object
            properties:
              id:
                description: >-
                  Uniquely identifies the entity (i.e. component) as defined in
                  a declaration (i.e. design).
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                x-oapi-codegen-extra-tags:
                  yaml: id
                  json: id
              schemaVersion:
                description: >-
                  Specifies the version of the schema used for the relationship
                  definition.
                type: string
                minLength: 2
                maxLength: 100
                pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                example:
                  - v1
                  - v1alpha1
                  - v2beta3
                  - v1.custom-suffix
                x-oapi-codegen-extra-tags:
                  yaml: schemaVersion
                  json: schemaVersion
                default: relationships.meshery.io/v1alpha3
              version:
                type: string
                minLength: 5
                maxLength: 100
                pattern: >-
                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                description: >-
                  A valid semantic version string between 5 and 256 characters.
                  The pattern allows for a major.minor.patch version followed by
                  an optional pre-release tag like '-alpha' or '-beta.2' and an
                  optional build metadata tag like '+build.1.
                default: v0.0.1
                x-oapi-codegen-extra-tags:
                  yaml: version
                  json: version
              model:
                description: Name of the model in which this relationship is packaged.
                $id: https://schemas.meshery.io/model.json
                $schema: http://json-schema.org/draft-07/schema#
                additionalProperties: false
                type: object
                properties:
                  id:
                    description: >-
                      Uniquely identifies the entity (i.e. component) as defined
                      in a declaration (i.e. design).
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      yaml: id
                      json: id
                  schemaVersion:
                    description: >-
                      Specifies the version of the schema used for the
                      definition.
                    x-oapi-codegen-extra-tags:
                      yaml: schemaVersion
                      json: schemaVersion
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                  version:
                    description: Version of the model definition.
                    type: string
                    x-oapi-codegen-extra-tags:
                      yaml: version
                      json: version
                    minLength: 5
                    maxLength: 100
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                  name:
                    description: >-
                      The unique name for the model within the scope of a
                      registrant.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: name
                      json: name
                  displayName:
                    description: Human-readable name for the model.
                    minLength: 1
                    maxLength: 100
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                    x-oapi-codegen-extra-tags:
                      yaml: displayName
                      json: displayName
                  description:
                    type: string
                    description: Description of the model.
                    minLength: 1
                    maxLength: 1000
                    x-oapi-codegen-extra-tags:
                      yaml: description
                      json: description
                  status:
                    type: string
                    description: >-
                      Status of model, including:

                      - duplicate: this component is a duplicate of another. The
                      component that is to be the canonical reference and that
                      is duplicated by other components should not be assigned
                      the 'duplicate' status.

                      - maintenance: model is unavailable for a period of time.

                      - enabled: model is available for use for all users of
                      this Meshery Server.

                      - ignored: model is unavailable for use for all users of
                      this Meshery Server.
                    enum:
                      - ignored
                      - enabled
                      - duplicate
                    x-oapi-codegen-extra-tags:
                      yaml: status
                      json: status
                  registrant:
                    x-oapi-codegen-extra-tags:
                      yaml: registrant
                      json: registrant
                      gorm: foreignKey:RegistrantId;references:Id
                    $id: https://schemas.meshery.io/component.json
                    $schema: http://json-schema.org/draft-07/schema#
                    description: >-
                      Meshery Connections are managed and unmanaged resources
                      that either through discovery or manual entry are tracked
                      by Meshery. Learn more at
                      https://docs.meshery.io/concepts/logical/connections
                    additionalProperties: false
                    type: object
                    required:
                      - kind
                      - type
                      - status
                    properties:
                      id:
                        description: ID
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                      name:
                        x-oapi-codegen-extra-tags:
                          db: name
                          yaml: name
                          json: name
                        type: string
                        description: Connection Name
                      credential_id:
                        x-go-name: CredentialId
                        x-oapi-codegen-extra-tags:
                          db: credential_id
                          yaml: credential_id
                          json: credential_id
                        description: Credential ID
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                      type:
                        x-oapi-codegen-extra-tags:
                          db: type
                          yaml: type
                          json: type
                        type: string
                        description: Connection Type
                      sub_type:
                        x-oapi-codegen-extra-tags:
                          db: sub_type
                          yaml: sub_type
                          json: sub_type
                        type: string
                        description: Connection Subtype
                      kind:
                        x-oapi-codegen-extra-tags:
                          db: kind
                          yaml: kind
                          json: kind
                        type: string
                        description: Connection Kind
                      metadata:
                        x-oapi-codegen-extra-tags:
                          db: metadata
                          yaml: metadata
                          json: metadata
                        type: object
                      status:
                        x-oapi-codegen-extra-tags:
                          db: status
                          yaml: status
                          json: status
                        description: Connection Status
                        type: string
                        enum:
                          - discovered
                          - registered
                          - connected
                          - ignored
                          - maintenance
                          - disconnected
                          - deleted
                          - not found
                      user_id:
                        x-go-name: UserID
                        x-oapi-codegen-extra-tags:
                          yaml: user_id
                          json: user_id
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entites in Meshery. The UUID core defintion
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                      created_at:
                        x-oapi-codegen-extra-tags:
                          yaml: created_at
                          json: created_at
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                      updated_at:
                        x-oapi-codegen-extra-tags:
                          yaml: updated_at
                          json: updated_at
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                      deleted_at:
                        x-oapi-codegen-extra-tags:
                          yaml: deleted_at
                          json: deleted_at
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                  category:
                    type: object
                    description: Category of the model.
                    properties:
                      id:
                        type: string
                        format: uuid
                        description: >-
                          A Universally Unique Identifier used to uniquely
                          identify entites in Meshery. The UUID core defintion
                          is used across different schemas.
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                      name:
                        type: string
                        minLength: 1
                        maxLength: 100
                        x-oapi-codegen-extra-tags:
                          yaml: name
                          json: name
                      metadata:
                        type: object
                        x-oapi-codegen-extra-tags:
                          yaml: metadata
                          json: metadata
                    x-oapi-codegen-extra-tags:
                      yaml: category
                      json: category
                      gorm: foreignKey:CategoryId;references:Id
                  subCategory:
                    type: string
                    description: Sub-category of the model.
                    minLength: 1
                    maxLength: 100
                    x-oapi-codegen-extra-tags:
                      yaml: subCategory
                      json: subCategory
                  metadata:
                    type: object
                    description: >-
                      Metadata containing additional information associated with
                      the model.
                    properties:
                      capabilities:
                        type: array
                        description: Capabilities associated with the model
                        items:
                          $id: https://schemas.meshery.io/capability.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: >-
                            Meshery manages entities in accordance with their
                            specific capabilities. This field explicitly
                            identifies those capabilities largely by what
                            actions a given component supports; e.g.
                            metric-scrape, sub-interface, and so on. This field
                            is extensible. Entities may define a broad array of
                            capabilities, which are in-turn dynamically
                            interpretted by Meshery for full lifecycle
                            management.
                          additionalProperties: false
                          type: object
                          required:
                            - schemaVersion
                            - version
                            - displayName
                            - kind
                            - type
                            - entityState
                            - status
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                          properties:
                            schemaVersion:
                              description: >-
                                Specifies the version of the schema to which the
                                capability definition conforms.
                              type: string
                              minLength: 2
                              maxLength: 100
                              pattern: >-
                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                              example:
                                - v1
                                - v1alpha1
                                - v2beta3
                                - v1.custom-suffix
                              x-oapi-codegen-extra-tags:
                                yaml: schemaVersion
                                json: schemaVersion
                            version:
                              description: Version of the capability definition.
                              type: string
                              minLength: 5
                              maxLength: 100
                              pattern: >-
                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              x-oapi-codegen-extra-tags:
                                yaml: version
                                json: version
                            displayName:
                              description: Name of the capability in human-readible format.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: displayName
                                json: displayName
                            description:
                              type: string
                              description: >-
                                A written representation of the purpose and
                                characteristics of the capability.
                              x-oapi-codegen-extra-tags:
                                yaml: description
                                json: description
                            kind:
                              description: Top-level categorization of the capability
                              additionalProperties: false
                              anyOf:
                                - const: action
                                  description: >-
                                    For capabilities related to executing
                                    actions on entities. Example: initiate log
                                    streaming on a Pod. Example: initiate
                                    deployment of a component.
                                - const: mutate
                                  description: >-
                                    For capabilities related to mutating an
                                    entity. Example: the ability to change the
                                    configuration of a component.
                                - const: view
                                  description: >-
                                    For capabilities related to viewing an
                                    entity. Example: the ability to view a
                                    components configuration.
                                - const: interaction
                                  description: >-
                                    Catch all for capabilities related to
                                    interaction with entities. Example: the
                                    ability for a component to be dragged and
                                    dropped. Example: supports event bubbling to
                                    parent components. 
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: kind
                                json: kind
                            type:
                              description: >-
                                Classification of capabilities. Used to group
                                capabilities similar in nature.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: type
                                json: type
                            subType:
                              description: >-
                                Most granular unit of capability classification.
                                The combination of Kind, Type and SubType
                                together uniquely identify a Relaationship.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              oneOf:
                                - const: inventory
                                  description: >-
                                    A hierarchical inventory relationship in
                                    which the configuration of (parent)
                                    component is patched with the configuration
                                    of other (child) component. Eg: The
                                    configuration of the EnvoyFilter (parent)
                                    component is patched with the configuration
                                    as received from WASMFilter (child)
                                    component.
                                - const: matchLabels
                                  description: >-
                                    Match label relationships offer a dynamic
                                    association between one or more components
                                    and are a flexible way to group and manage
                                    related components in Meshery.
                                - const: permission
                                  description: >-
                                    A relationship that represents a set of
                                    security-centric bindings between
                                    components.
                                - const: network
                                  description: >-
                                    A relationship that represents a line of
                                    communication between two or more
                                    components.
                                - const: firewall
                                  description: >-
                                    A relationship that act as a network-based
                                    security boundary for ingress and egress
                                    traffic.
                                - const: mount
                                  description: >-
                                    A relationship that represents volume mounts
                                    between components.
                                - const: alias
                                  description: >-
                                    An alias for a field path in another
                                    component.
                                - const: annotation
                                  description: >-
                                    A relationship that provide valuable context
                                    for users, controllers, and third-party
                                    tools within the Meshery ecosystem.
                                - const: reference
                                  description: >-
                                    A reference relationship  is a declarative
                                    linkage where one resource identifies or
                                    depends on another resource by referencing
                                    its name, kind, API version, or some other
                                    property
                              x-oapi-codegen-extra-tags:
                                yaml: subType
                                json: subType
                            key:
                              description: Key that backs the capability.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: key
                                json: key
                            entityState:
                              description: >-
                                State of the entity in which the capability is
                                applicable.
                              type: array
                              items:
                                type: string
                                enum:
                                  - declaration
                                  - instance
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                description: >-
                                  A string starting with an alphanumeric
                                  character. Spaces and hyphens allowed.
                                x-oapi-codegen-extra-tags:
                                  yaml: entityState
                                  json: entityState
                            status:
                              type: string
                              description: Status of the capability
                              default: enabled
                              enum:
                                - enabled
                                - disabled
                              x-oapi-codegen-extra-tags:
                                yaml: status
                                json: status
                            metadata:
                              type: object
                              description: >-
                                Metadata contains additional information
                                associated with the capability. Extension point.
                              additionalProperties: true
                              x-oapi-codegen-extra-tags:
                                yaml: metadata
                                json: metadata
                      isAnnotation:
                        type: boolean
                        description: >-
                          Indicates whether the model and its entities should be
                          treated as deployable entities or as logical
                          representations.
                        x-oapi-codegen-extra-tags:
                          yaml: isAnnotation
                          json: isAnnotation
                      primaryColor:
                        type: string
                        description: Primary color associated with the model.
                        minLength: 1
                        maxLength: 50
                        x-oapi-codegen-extra-tags:
                          yaml: primaryColor
                          json: primaryColor
                      secondaryColor:
                        type: string
                        description: Secondary color associated with the model.
                        minLength: 1
                        maxLength: 50
                        x-oapi-codegen-extra-tags:
                          yaml: secondaryColor
                          json: secondaryColor
                      svgWhite:
                        type: string
                        description: SVG representation of the model in white color.
                        minLength: 1
                        x-oapi-codegen-extra-tags:
                          yaml: svgWhite
                          json: svgWhite
                      svgColor:
                        type: string
                        description: SVG representation of the model in colored format.
                        minLength: 1
                        x-oapi-codegen-extra-tags:
                          yaml: svgColor
                          json: svgColor
                      svgComplete:
                        type: string
                        description: SVG representation of the complete model.
                        minLength: 1
                        x-oapi-codegen-extra-tags:
                          yaml: svgComplete
                          json: svgComplete
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    additionalProperties: true
                  model:
                    type: object
                    description: >-
                      Registrant-defined data associated with the model.
                      Properties pertain to the software being managed (e.g.
                      Kubernetes v1.31)
                    required:
                      - version
                    properties:
                      version:
                        description: Version of the model as defined by the registrant.
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        type: string
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                required:
                  - name
                  - version
                  - registrant
                  - category
              kind:
                description: >-
                  Kind of the Relationship. Learn more about relationships -
                  https://docs.meshery.io/concepts/logical/relationships.
                enum:
                  - hierarchical
                  - edge
                  - sibling
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                x-oapi-codegen-extra-tags:
                  yaml: kind
                  json: kind
              type:
                description: >-
                  Classification of relationships. Used to group relationships
                  similar in nature.
                x-go-name: RelationshipType
                gorm: column:type
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                x-oapi-codegen-extra-tags:
                  yaml: type
                  json: type
              subType:
                description: >-
                  Most granular unit of relationship classification. The
                  combination of Kind, Type and SubType together uniquely
                  identify a Relationship.
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                x-oapi-codegen-extra-tags:
                  yaml: subType
                  json: subType
              status:
                type: string
                description: Status of the relationship.
                default: enabled
                enum:
                  - pending
                  - approved
                  - ignored
                  - enabled
                  - deleted
                x-oapi-codegen-extra-tags:
                  yaml: status
                  json: status
              evaluationQuery:
                description: >-
                  Optional. Assigns the policy to be used for the evaluation of
                  the relationship. Deprecation Notice: In the future, this
                  property is either to be removed or to it is to be an array of
                  optional policy $refs.
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                x-oapi-codegen-extra-tags:
                  yaml: evaluationQuery
                  json: evaluationQuery
              capabilities:
                type: array
                description: Capabilities associated with the relationship.
                items:
                  $id: https://schemas.meshery.io/capability.json
                  $schema: http://json-schema.org/draft-07/schema#
                  description: >-
                    Meshery manages entities in accordance with their specific
                    capabilities. This field explicitly identifies those
                    capabilities largely by what actions a given component
                    supports; e.g. metric-scrape, sub-interface, and so on. This
                    field is extensible. Entities may define a broad array of
                    capabilities, which are in-turn dynamically interpretted by
                    Meshery for full lifecycle management.
                  additionalProperties: false
                  type: object
                  required:
                    - schemaVersion
                    - version
                    - displayName
                    - kind
                    - type
                    - entityState
                    - status
                  x-oapi-codegen-extra-tags:
                    gorm: type:bytes;serializer:json
                  properties:
                    schemaVersion:
                      description: >-
                        Specifies the version of the schema to which the
                        capability definition conforms.
                      type: string
                      minLength: 2
                      maxLength: 100
                      pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                      example:
                        - v1
                        - v1alpha1
                        - v2beta3
                        - v1.custom-suffix
                      x-oapi-codegen-extra-tags:
                        yaml: schemaVersion
                        json: schemaVersion
                    version:
                      description: Version of the capability definition.
                      type: string
                      minLength: 5
                      maxLength: 100
                      pattern: >-
                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                      x-oapi-codegen-extra-tags:
                        yaml: version
                        json: version
                    displayName:
                      description: Name of the capability in human-readible format.
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      x-oapi-codegen-extra-tags:
                        yaml: displayName
                        json: displayName
                    description:
                      type: string
                      description: >-
                        A written representation of the purpose and
                        characteristics of the capability.
                      x-oapi-codegen-extra-tags:
                        yaml: description
                        json: description
                    kind:
                      description: Top-level categorization of the capability
                      additionalProperties: false
                      anyOf:
                        - const: action
                          description: >-
                            For capabilities related to executing actions on
                            entities. Example: initiate log streaming on a Pod.
                            Example: initiate deployment of a component.
                        - const: mutate
                          description: >-
                            For capabilities related to mutating an entity.
                            Example: the ability to change the configuration of
                            a component.
                        - const: view
                          description: >-
                            For capabilities related to viewing an entity.
                            Example: the ability to view a components
                            configuration.
                        - const: interaction
                          description: >-
                            Catch all for capabilities related to interaction
                            with entities. Example: the ability for a component
                            to be dragged and dropped. Example: supports event
                            bubbling to parent components. 
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      x-oapi-codegen-extra-tags:
                        yaml: kind
                        json: kind
                    type:
                      description: >-
                        Classification of capabilities. Used to group
                        capabilities similar in nature.
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      x-oapi-codegen-extra-tags:
                        yaml: type
                        json: type
                    subType:
                      description: >-
                        Most granular unit of capability classification. The
                        combination of Kind, Type and SubType together uniquely
                        identify a Capability.
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      x-oapi-codegen-extra-tags:
                        yaml: subType
                        json: subType
                    key:
                      description: Key that backs the capability.
                      type: string
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      x-oapi-codegen-extra-tags:
                        yaml: key
                        json: key
                    entityState:
                      description: >-
                        State of the entity in which the capability is
                        applicable.
                      type: array
                      items:
                        type: string
                        enum:
                          - declaration
                          - instance
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        description: >-
                          A string starting with an alphanumeric character.
                          Spaces and hyphens allowed.
                        x-oapi-codegen-extra-tags:
                          yaml: entityState
                          json: entityState
                    status:
                      type: string
                      description: Status of the capability
                      default: enabled
                      enum:
                        - enabled
                        - disabled
                      x-oapi-codegen-extra-tags:
                        yaml: status
                        json: status
                    metadata:
                      type: object
                      description: >-
                        Metadata contains additional information associated with
                        the capability. Extension point.
                      additionalProperties: true
                      x-oapi-codegen-extra-tags:
                        yaml: metadata
                        json: metadata
                x-oapi-codegen-extra-tags:
                  gorm: type:bytes;serializer:json
              metadata:
                type: object
                description: >-
                  Metadata contains additional information associated with the
                  Relationship.
                additionalProperties: true
                x-oapi-codegen-extra-tags:
                  gorm: foreignKey:ModelId;references:Id
                properties:
                  description:
                    description: >-
                      Characterization of the meaning of the relationship and
                      its relevance to both Meshery and entities under
                      management.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: description
                      json: description
                  isAnnotation:
                    type: boolean
                    description: >-
                      Indicates whether the relationship should be treated as a
                      logical representation only
                    x-oapi-codegen-extra-tags:
                      yaml: isAnnotation
                      json: isAnnotation
                    default: false
                  styles:
                    anyOf:
                      - type: object
                        description: Visualization styles for a relationship
                        allOf:
                          - type: object
                            description: Common styles for all entities
                            additionalProperties: false
                            required:
                              - primaryColor
                              - svgColor
                              - svgWhite
                            properties:
                              primaryColor:
                                type: string
                                description: >-
                                  Primary color of the component used for UI
                                  representation.
                              secondaryColor:
                                type: string
                                description: >-
                                  Secondary color of the entity used for UI
                                  representation.
                              svgWhite:
                                type: string
                                description: >-
                                  White SVG of the entity used for UI
                                  representation on dark background.
                              svgColor:
                                type: string
                                description: >-
                                  Colored SVG of the entity used for UI
                                  representation on light background.
                              svgComplete:
                                type: string
                                description: >-
                                  Complete SVG of the entity used for UI
                                  representation, often inclusive of background.
                              color:
                                type: string
                                description: >-
                                  The color of the element's label. Colours may
                                  be specified by name (e.g. red), hex (e.g.
                                  #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)),
                                  or HSL (e.g. hsl(0, 100%, 50%)).
                              text-opacity:
                                type: number
                                description: >-
                                  The opacity of the label text, including its
                                  outline.
                                minimum: 0
                                maximum: 1
                              font-family:
                                type: string
                                description: >-
                                  A comma-separated list of font names to use on
                                  the label text.
                              font-size:
                                type: string
                                description: The size of the label text.
                              font-style:
                                type: string
                                description: >-
                                  A CSS font style to be applied to the label
                                  text.
                              font-weight:
                                type: string
                                description: >-
                                  A CSS font weight to be applied to the label
                                  text.
                              text-transform:
                                type: string
                                description: A transformation to apply to the label text
                                enum:
                                  - none
                                  - uppercase
                                  - lowercase
                              opacity:
                                type: number
                                description: >-
                                  The opacity of the element, ranging from 0 to
                                  1. Note that the opacity of a compound node
                                  parent affects the effective opacity of its
                                  children.See
                                  https://js.cytoscape.org/#style/visibility
                                minimum: 0
                                maximum: 1
                              z-index:
                                type: integer
                                description: >-
                                  An integer value that affects the relative
                                  draw order of elements. In general, an element
                                  with a higher z-index will be drawn on top of
                                  an element with a lower z-index. Note that
                                  edges are under nodes despite z-index.
                              label:
                                type: string
                                description: >-
                                  The text to display for an element’s label.
                                  Can give a path, e.g. data(id) will label with
                                  the elements id
                          - properties:
                              edge-animation:
                                type: string
                                description: >-
                                  The animation to use for the edge. Can be like
                                  'marching-ants' , 'blink' ,
                                  'moving-gradient',etc .
                              curve-style:
                                type: string
                                description: >-
                                  The curving method used to separate two or
                                  more edges between two nodes; may be haystack
                                  (very fast, bundled straight edges for which
                                  loops and compounds are unsupported), straight
                                  (straight edges with all arrows supported),
                                  bezier (bundled curved edges),
                                  unbundled-bezier (curved edges for use with
                                  manual control points), segments (a series of
                                  straight lines), taxi (right-angled lines,
                                  hierarchically bundled). Note that haystack
                                  edges work best with ellipse, rectangle, or
                                  similar nodes. Smaller node shapes, like
                                  triangle, will not be as aesthetically
                                  pleasing. Also note that edge endpoint arrows
                                  are unsupported for haystack edges.
                                default: straight
                                enum:
                                  - straight
                                  - haystack
                                  - bezier
                                  - unbundled-bezier
                                  - segments
                                  - taxi
                              line-color:
                                type: string
                                description: >-
                                  The colour of the edge’s line. Colours may be
                                  specified by name (e.g. red), hex (e.g.
                                  #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)),
                                  or HSL (e.g. hsl(0, 100%, 50%)).
                              line-style:
                                type: string
                                description: The style of the edge’s line.
                                enum:
                                  - solid
                                  - dotted
                                  - dashed
                              line-cap:
                                type: string
                                description: >-
                                  The cap style of the edge’s line; may be butt
                                  (default), round, or square. The cap may or
                                  may not be visible, depending on the shape of
                                  the node and the relative size of the node and
                                  edge. Caps other than butt extend beyond the
                                  specified endpoint of the edge.
                                enum:
                                  - butt
                                  - round
                                  - square
                                default: butt
                              line-opacity:
                                type: number
                                minimum: 0
                                maximum: 1
                                default: 1
                                description: >-
                                  The opacity of the edge’s line and arrow.
                                  Useful if you wish to have a separate opacity
                                  for the edge label versus the edge line. Note
                                  that the opacity value of the edge element
                                  affects the effective opacity of its line and
                                  label subcomponents.
                              target-arrow-color:
                                type: string
                                description: >-
                                  The colour of the edge’s source arrow. Colours
                                  may be specified by name (e.g. red), hex (e.g.
                                  #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)),
                                  or HSL (e.g. hsl(0, 100%, 50%)).
                              target-arrow-shape:
                                type: string
                                description: The shape of the edge’s source arrow
                                enum:
                                  - triangle
                                  - triangle-tee
                                  - circle-triangle
                                  - triangle-cross
                                  - triangle-backcurve
                                  - vee
                                  - tee
                                  - square
                                  - circle
                                  - diamond
                                  - chevron
                                  - none
                              target-arrow-fill:
                                type: string
                                description: The fill state of the edge’s source arrow
                                enum:
                                  - filled
                                  - hollow
                              mid-target-arrow-color:
                                type: string
                                description: >-
                                  The colour of the edge’s source arrow. Colours
                                  may be specified by name (e.g. red), hex (e.g.
                                  #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)),
                                  or HSL (e.g. hsl(0, 100%, 50%)).
                              mid-target-arrow-shape:
                                type: string
                                description: The shape of the edge’s source arrow
                                enum:
                                  - triangle
                                  - triangle-tee
                                  - circle-triangle
                                  - triangle-cross
                                  - triangle-backcurve
                                  - vee
                                  - tee
                                  - square
                                  - circle
                                  - diamond
                                  - chevron
                                  - none
                              mid-target-arrow-fill:
                                type: string
                                description: The fill state of the edge’s source arrow
                                enum:
                                  - filled
                                  - hollow
                              arrow-scale:
                                type: number
                                description: Scaling for the arrow size.
                                minimum: 0
                              source-label:
                                type: string
                                description: >-
                                  The text to display for an edge’s source
                                  label. Can give a path, e.g. data(id) will
                                  label with the elements id
                              target-label:
                                type: string
                                description: >-
                                  The text to display for an edge’s target
                                  label. Can give a path, e.g. data(id) will
                                  label with the elements id
                      - type: object
                        description: Common styles for all entities
                        additionalProperties: false
                        required:
                          - primaryColor
                          - svgColor
                          - svgWhite
                        properties:
                          primaryColor:
                            type: string
                            description: >-
                              Primary color of the component used for UI
                              representation.
                          secondaryColor:
                            type: string
                            description: >-
                              Secondary color of the entity used for UI
                              representation.
                          svgWhite:
                            type: string
                            description: >-
                              White SVG of the entity used for UI representation
                              on dark background.
                          svgColor:
                            type: string
                            description: >-
                              Colored SVG of the entity used for UI
                              representation on light background.
                          svgComplete:
                            type: string
                            description: >-
                              Complete SVG of the entity used for UI
                              representation, often inclusive of background.
                          color:
                            type: string
                            description: >-
                              The color of the element's label. Colours may be
                              specified by name (e.g. red), hex (e.g. #ff0000 or
                              #f00), RGB (e.g. rgb(255, 0, 0)), or HSL (e.g.
                              hsl(0, 100%, 50%)).
                          text-opacity:
                            type: number
                            description: >-
                              The opacity of the label text, including its
                              outline.
                            minimum: 0
                            maximum: 1
                          font-family:
                            type: string
                            description: >-
                              A comma-separated list of font names to use on the
                              label text.
                          font-size:
                            type: string
                            description: The size of the label text.
                          font-style:
                            type: string
                            description: A CSS font style to be applied to the label text.
                          font-weight:
                            type: string
                            description: A CSS font weight to be applied to the label text.
                          text-transform:
                            type: string
                            description: A transformation to apply to the label text
                            enum:
                              - none
                              - uppercase
                              - lowercase
                          opacity:
                            type: number
                            description: >-
                              The opacity of the element, ranging from 0 to 1.
                              Note that the opacity of a compound node parent
                              affects the effective opacity of its children.See
                              https://js.cytoscape.org/#style/visibility
                            minimum: 0
                            maximum: 1
                          z-index:
                            type: integer
                            description: >-
                              An integer value that affects the relative draw
                              order of elements. In general, an element with a
                              higher z-index will be drawn on top of an element
                              with a lower z-index. Note that edges are under
                              nodes despite z-index.
                          label:
                            type: string
                            description: >-
                              The text to display for an element’s label. Can
                              give a path, e.g. data(id) will label with the
                              elements id
                        $comment: Extension point for additional styles
                    x-oapi-codegen-extra-tags:
                      yaml: styles
                      json: styles
              selectors:
                x-oapi-codegen-extra-tags:
                  gorm: type:bytes;serializer:json
                type: array
                description: >-
                  Selectors are organized as an array, with each item containing
                  a distinct set of selectors that share a common functionality.
                  This structure allows for flexibility in defining
                  relationships, even when different components are involved.
                $comment: >-
                  Sets of selectors are interpreted as a logical UNION.
                  Properties within a selector `allow` and `deny` are
                  interpreted as logical AND, while 'from' and 'to' represents a
                  UNION of set of combinatorial pairs.
                items:
                  type: object
                  description: >-
                    Optional selectors used to match Components. Absence of a
                    selector means that it is applied to all Components.
                  additionalProperties: false
                  required:
                    - allow
                  properties:
                    deny:
                      description: >-
                        Optional selectors used to define relationships which
                        should not be created / is restricted.
                      type: object
                      required:
                        - to
                        - from
                      properties:
                        from:
                          description: >-
                            Describes the component(s) which are involved in the
                            relationship along with a set of actions to perform
                            upon selection match.
                          type: array
                          items:
                            type: object
                            additionalProperties: false
                            properties:
                              kind:
                                type: string
                                x-oapi-codegen-extra-tags:
                                  yaml: kind
                                  json: kind
                              model:
                                description: >-
                                  Name of the model implicated by this selector.
                                  Learn more at
                                  https://docs.meshery.io/concepts/models
                                $id: https://schemas.meshery.io/model.json
                                $schema: http://json-schema.org/draft-07/schema#
                                additionalProperties: false
                                type: object
                                properties:
                                  id:
                                    description: >-
                                      Uniquely identifies the entity (i.e.
                                      component) as defined in a declaration
                                      (i.e. design).
                                    type: string
                                    format: uuid
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  schemaVersion:
                                    description: >-
                                      Specifies the version of the schema used
                                      for the definition.
                                    x-oapi-codegen-extra-tags:
                                      yaml: schemaVersion
                                      json: schemaVersion
                                    type: string
                                    minLength: 2
                                    maxLength: 100
                                    pattern: >-
                                      ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                    example:
                                      - v1
                                      - v1alpha1
                                      - v2beta3
                                      - v1.custom-suffix
                                  version:
                                    description: Version of the model definition.
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: version
                                      json: version
                                    minLength: 5
                                    maxLength: 100
                                    pattern: >-
                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  name:
                                    description: >-
                                      The unique name for the model within the
                                      scope of a registrant.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: name
                                      json: name
                                  displayName:
                                    description: Human-readable name for the model.
                                    minLength: 1
                                    maxLength: 100
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                    x-oapi-codegen-extra-tags:
                                      yaml: displayName
                                      json: displayName
                                  description:
                                    type: string
                                    description: Description of the model.
                                    minLength: 1
                                    maxLength: 1000
                                    x-oapi-codegen-extra-tags:
                                      yaml: description
                                      json: description
                                  status:
                                    type: string
                                    description: >-
                                      Status of model, including:

                                      - duplicate: this component is a duplicate
                                      of another. The component that is to be
                                      the canonical reference and that is
                                      duplicated by other components should not
                                      be assigned the 'duplicate' status.

                                      - maintenance: model is unavailable for a
                                      period of time.

                                      - enabled: model is available for use for
                                      all users of this Meshery Server.

                                      - ignored: model is unavailable for use
                                      for all users of this Meshery Server.
                                    enum:
                                      - ignored
                                      - enabled
                                      - duplicate
                                    x-oapi-codegen-extra-tags:
                                      yaml: status
                                      json: status
                                  registrant:
                                    x-oapi-codegen-extra-tags:
                                      yaml: registrant
                                      json: registrant
                                      gorm: foreignKey:RegistrantId;references:Id
                                    $id: https://schemas.meshery.io/component.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    description: >-
                                      Meshery Connections are managed and
                                      unmanaged resources that either through
                                      discovery or manual entry are tracked by
                                      Meshery. Learn more at
                                      https://docs.meshery.io/concepts/logical/connections
                                    additionalProperties: false
                                    type: object
                                    required:
                                      - kind
                                      - type
                                      - status
                                    properties:
                                      id:
                                        description: ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      name:
                                        x-oapi-codegen-extra-tags:
                                          db: name
                                          yaml: name
                                          json: name
                                        type: string
                                        description: Connection Name
                                      credential_id:
                                        x-go-name: CredentialId
                                        x-oapi-codegen-extra-tags:
                                          db: credential_id
                                          yaml: credential_id
                                          json: credential_id
                                        description: Credential ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                      type:
                                        x-oapi-codegen-extra-tags:
                                          db: type
                                          yaml: type
                                          json: type
                                        type: string
                                        description: Connection Type
                                      sub_type:
                                        x-oapi-codegen-extra-tags:
                                          db: sub_type
                                          yaml: sub_type
                                          json: sub_type
                                        type: string
                                        description: Connection Subtype
                                      kind:
                                        x-oapi-codegen-extra-tags:
                                          db: kind
                                          yaml: kind
                                          json: kind
                                        type: string
                                        description: Connection Kind
                                      metadata:
                                        x-oapi-codegen-extra-tags:
                                          db: metadata
                                          yaml: metadata
                                          json: metadata
                                        type: object
                                      status:
                                        x-oapi-codegen-extra-tags:
                                          db: status
                                          yaml: status
                                          json: status
                                        description: Connection Status
                                        type: string
                                        enum:
                                          - discovered
                                          - registered
                                          - connected
                                          - ignored
                                          - maintenance
                                          - disconnected
                                          - deleted
                                          - not found
                                      user_id:
                                        x-go-name: UserID
                                        x-oapi-codegen-extra-tags:
                                          yaml: user_id
                                          json: user_id
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                      created_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: created_at
                                          json: created_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      updated_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: updated_at
                                          json: updated_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      deleted_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: deleted_at
                                          json: deleted_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                  category:
                                    type: object
                                    description: Category of the model.
                                    properties:
                                      id:
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      name:
                                        type: string
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      metadata:
                                        type: object
                                        x-oapi-codegen-extra-tags:
                                          yaml: metadata
                                          json: metadata
                                    x-oapi-codegen-extra-tags:
                                      yaml: category
                                      json: category
                                      gorm: foreignKey:CategoryId;references:Id
                                  subCategory:
                                    type: string
                                    description: Sub-category of the model.
                                    minLength: 1
                                    maxLength: 100
                                    x-oapi-codegen-extra-tags:
                                      yaml: subCategory
                                      json: subCategory
                                  metadata:
                                    type: object
                                    description: >-
                                      Metadata containing additional information
                                      associated with the model.
                                    properties:
                                      capabilities:
                                        type: array
                                        description: Capabilities associated with the model
                                        items:
                                          $id: >-
                                            https://schemas.meshery.io/capability.json
                                          $schema: http://json-schema.org/draft-07/schema#
                                          description: >-
                                            Meshery manages entities in accordance
                                            with their specific capabilities. This
                                            field explicitly identifies those
                                            capabilities largely by what actions a
                                            given component supports; e.g.
                                            metric-scrape, sub-interface, and so on.
                                            This field is extensible. Entities may
                                            define a broad array of capabilities,
                                            which are in-turn dynamically
                                            interpretted by Meshery for full
                                            lifecycle management.
                                          additionalProperties: false
                                          type: object
                                          required:
                                            - schemaVersion
                                            - version
                                            - displayName
                                            - kind
                                            - type
                                            - entityState
                                            - status
                                          x-oapi-codegen-extra-tags:
                                            gorm: type:bytes;serializer:json
                                          properties:
                                            schemaVersion:
                                              description: >-
                                                Specifies the version of the schema to
                                                which the capability definition
                                                conforms.
                                              type: string
                                              minLength: 2
                                              maxLength: 100
                                              pattern: >-
                                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                              example:
                                                - v1
                                                - v1alpha1
                                                - v2beta3
                                                - v1.custom-suffix
                                              x-oapi-codegen-extra-tags:
                                                yaml: schemaVersion
                                                json: schemaVersion
                                            version:
                                              description: Version of the capability definition.
                                              type: string
                                              minLength: 5
                                              maxLength: 100
                                              pattern: >-
                                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              x-oapi-codegen-extra-tags:
                                                yaml: version
                                                json: version
                                            displayName:
                                              description: >-
                                                Name of the capability in human-readible
                                                format.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: displayName
                                                json: displayName
                                            description:
                                              type: string
                                              description: >-
                                                A written representation of the purpose
                                                and characteristics of the capability.
                                              x-oapi-codegen-extra-tags:
                                                yaml: description
                                                json: description
                                            kind:
                                              description: >-
                                                Top-level categorization of the
                                                capability
                                              additionalProperties: false
                                              anyOf:
                                                - const: action
                                                  description: >-
                                                    For capabilities related to executing
                                                    actions on entities. Example: initiate
                                                    log streaming on a Pod. Example:
                                                    initiate deployment of a component.
                                                - const: mutate
                                                  description: >-
                                                    For capabilities related to mutating an
                                                    entity. Example: the ability to change
                                                    the configuration of a component.
                                                - const: view
                                                  description: >-
                                                    For capabilities related to viewing an
                                                    entity. Example: the ability to view a
                                                    components configuration.
                                                - const: interaction
                                                  description: >-
                                                    Catch all for capabilities related to
                                                    interaction with entities. Example: the
                                                    ability for a component to be dragged
                                                    and dropped. Example: supports event
                                                    bubbling to parent components. 
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: kind
                                                json: kind
                                            type:
                                              description: >-
                                                Classification of capabilities. Used to
                                                group capabilities similar in nature.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: type
                                                json: type
                                            subType:
                                              description: >-
                                                Most granular unit of capability
                                                classification. The combination of Kind,
                                                Type and SubType together uniquely
                                                identify a Capability.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: subType
                                                json: subType
                                            key:
                                              description: Key that backs the capability.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: key
                                                json: key
                                            entityState:
                                              description: >-
                                                State of the entity in which the
                                                capability is applicable.
                                              type: array
                                              items:
                                                type: string
                                                enum:
                                                  - declaration
                                                  - instance
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                description: >-
                                                  A string starting with an alphanumeric
                                                  character. Spaces and hyphens allowed.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: entityState
                                                  json: entityState
                                            status:
                                              type: string
                                              description: Status of the capability
                                              default: enabled
                                              enum:
                                                - enabled
                                                - disabled
                                              x-oapi-codegen-extra-tags:
                                                yaml: status
                                                json: status
                                            metadata:
                                              type: object
                                              description: >-
                                                Metadata contains additional information
                                                associated with the capability.
                                                Extension point.
                                              additionalProperties: true
                                              x-oapi-codegen-extra-tags:
                                                yaml: metadata
                                                json: metadata
                                      isAnnotation:
                                        type: boolean
                                        description: >-
                                          Indicates whether the model and its
                                          entities should be treated as deployable
                                          entities or as logical representations.
                                        x-oapi-codegen-extra-tags:
                                          yaml: isAnnotation
                                          json: isAnnotation
                                      primaryColor:
                                        type: string
                                        description: Primary color associated with the model.
                                        minLength: 1
                                        maxLength: 50
                                        x-oapi-codegen-extra-tags:
                                          yaml: primaryColor
                                          json: primaryColor
                                      secondaryColor:
                                        type: string
                                        description: >-
                                          Secondary color associated with the
                                          model.
                                        minLength: 1
                                        maxLength: 50
                                        x-oapi-codegen-extra-tags:
                                          yaml: secondaryColor
                                          json: secondaryColor
                                      svgWhite:
                                        type: string
                                        description: >-
                                          SVG representation of the model in white
                                          color.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgWhite
                                          json: svgWhite
                                      svgColor:
                                        type: string
                                        description: >-
                                          SVG representation of the model in
                                          colored format.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgColor
                                          json: svgColor
                                      svgComplete:
                                        type: string
                                        description: >-
                                          SVG representation of the complete
                                          model.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgComplete
                                          json: svgComplete
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                    additionalProperties: true
                                  model:
                                    type: object
                                    description: >-
                                      Registrant-defined data associated with
                                      the model. Properties pertain to the
                                      software being managed (e.g. Kubernetes
                                      v1.31)
                                    required:
                                      - version
                                    properties:
                                      version:
                                        description: >-
                                          Version of the model as defined by the
                                          registrant.
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        type: string
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                required:
                                  - name
                                  - version
                                  - registrant
                                  - category
                              id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entites in Meshery. The UUID
                                  core defintion is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                x-oapi-codegen-extra-tags:
                                  yaml: id
                                  json: id
                              match:
                                type: object
                                additionalProperties: false
                                oneOf:
                                  - type: array
                                    items:
                                      type: array
                                      items:
                                        type: string
                                  - properties:
                                      from:
                                        $comment: >-
                                          Type is array so that mutliple bindings
                                          can be supported between 2 nodes
                                        type: array
                                        items:
                                          type: object
                                          allOf:
                                            - properties:
                                                kind:
                                                  type: string
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                      to:
                                        $comment: >-
                                          Type is array so that mutliple bindings
                                          can be supported between 2 nodes
                                        type: array
                                        items:
                                          type: object
                                          allOf:
                                            - properties:
                                                kind:
                                                  type: string
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                x-oapi-codegen-extra-tags:
                                  yaml: match
                                  json: match
                              patch:
                                allOf:
                                  - properties:
                                      patchStrategy:
                                        description: >-
                                          patchStrategy allows you to make
                                          specific changes to a resource using a
                                          standard JSON Patch format (RFC 6902). 


                                          add: Inserts a value into an array or
                                          adds a member to an object.

                                          replace: Replaces a value.

                                          merge: Combines the values of the target
                                          location with the values from the patch.
                                          If the target location doesn't exist, it
                                          is created.

                                          strategic:specific to Kubernetes and
                                          understands the structure of Kubernetes
                                          objects. It can handle complex changes
                                          like updating lists and maps, as well as
                                          preserving default values. However, it's
                                          not supported for custom resources. For
                                          custom resources, only JSON Patch and
                                          Merge Patch are typically supported.

                                          remove: Removes a value.

                                          copy: Copies a value from one location
                                          to another.

                                          move: Moves a value from one location to
                                          another.

                                          test: Tests that a value at the target
                                          location is equal to a specified value.
                                        $comment: >-
                                          Array Indexing: When working with
                                          arrays, be aware that Kubernetes uses
                                          zero-based indexing in JSON patch paths.

                                          Merge Patch vs. JSON Patch: Merge
                                          patches are less flexible than JSON
                                          patches and do not support all the same
                                          operations.

                                          Strategic Merge Patch: For some
                                          Kubernetes resources, you can also use
                                          the strategic type for a strategic merge
                                          patch, which understands the structure
                                          of Kubernetes objects and can handle
                                          complex operations.
                                        type: string
                                        enum:
                                          - merge
                                          - strategic
                                          - add
                                          - remove
                                          - copy
                                          - move
                                          - test
                                        default: copy
                                  - oneOf:
                                      - properties:
                                          mutatorRef:
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                The sequence of mutatorRef and
                                                mutatedRef must match. eg: mutatorRef:
                                                [[config, url], [config, name]],
                                                mutatedRef: [[configPatch, value],
                                                [name]]. The value [config, url] will be
                                                patched at [configPatch, value].
                                                Similarly [config,name] will be patched
                                                at [name].
                                            description: >-
                                              JSON ref to value from where patch
                                              should be applied.
                                      - properties:
                                          mutatedRef:
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                JSONPath
                                                (https://en.wikipedia.org/wiki/JSONPath)
                                                to property to be patched.
                                x-oapi-codegen-extra-tags:
                                  yaml: patch
                                  json: patch
                            description: >-
                              Optional fields that are a part of the `from`
                              selector. Absence of a field has an implied *
                              meaning.
                        to:
                          description: >-
                            Describes the component(s) which are involved in the
                            relationship along with a set of actions to perform
                            upon selection match.
                          type: array
                          items:
                            type: object
                            additionalProperties: false
                            properties:
                              kind:
                                type: string
                                x-oapi-codegen-extra-tags:
                                  yaml: kind
                                  json: kind
                              model:
                                description: >-
                                  Name of the model implicated by this selector.
                                  Learn more at
                                  https://docs.meshery.io/concepts/models
                                $id: https://schemas.meshery.io/model.json
                                $schema: http://json-schema.org/draft-07/schema#
                                additionalProperties: false
                                type: object
                                properties:
                                  id:
                                    description: >-
                                      Uniquely identifies the entity (i.e.
                                      component) as defined in a declaration
                                      (i.e. design).
                                    type: string
                                    format: uuid
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  schemaVersion:
                                    description: >-
                                      Specifies the version of the schema used
                                      for the definition.
                                    x-oapi-codegen-extra-tags:
                                      yaml: schemaVersion
                                      json: schemaVersion
                                    type: string
                                    minLength: 2
                                    maxLength: 100
                                    pattern: >-
                                      ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                    example:
                                      - v1
                                      - v1alpha1
                                      - v2beta3
                                      - v1.custom-suffix
                                  version:
                                    description: Version of the model definition.
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: version
                                      json: version
                                    minLength: 5
                                    maxLength: 100
                                    pattern: >-
                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  name:
                                    description: >-
                                      The unique name for the model within the
                                      scope of a registrant.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: name
                                      json: name
                                  displayName:
                                    description: Human-readable name for the model.
                                    minLength: 1
                                    maxLength: 100
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                    x-oapi-codegen-extra-tags:
                                      yaml: displayName
                                      json: displayName
                                  description:
                                    type: string
                                    description: Description of the model.
                                    minLength: 1
                                    maxLength: 1000
                                    x-oapi-codegen-extra-tags:
                                      yaml: description
                                      json: description
                                  status:
                                    type: string
                                    description: >-
                                      Status of model, including:

                                      - duplicate: this component is a duplicate
                                      of another. The component that is to be
                                      the canonical reference and that is
                                      duplicated by other components should not
                                      be assigned the 'duplicate' status.

                                      - maintenance: model is unavailable for a
                                      period of time.

                                      - enabled: model is available for use for
                                      all users of this Meshery Server.

                                      - ignored: model is unavailable for use
                                      for all users of this Meshery Server.
                                    enum:
                                      - ignored
                                      - enabled
                                      - duplicate
                                    x-oapi-codegen-extra-tags:
                                      yaml: status
                                      json: status
                                  registrant:
                                    x-oapi-codegen-extra-tags:
                                      yaml: registrant
                                      json: registrant
                                      gorm: foreignKey:RegistrantId;references:Id
                                    $id: https://schemas.meshery.io/component.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    description: >-
                                      Meshery Connections are managed and
                                      unmanaged resources that either through
                                      discovery or manual entry are tracked by
                                      Meshery. Learn more at
                                      https://docs.meshery.io/concepts/logical/connections
                                    additionalProperties: false
                                    type: object
                                    required:
                                      - kind
                                      - type
                                      - status
                                    properties:
                                      id:
                                        description: ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      name:
                                        x-oapi-codegen-extra-tags:
                                          db: name
                                          yaml: name
                                          json: name
                                        type: string
                                        description: Connection Name
                                      credential_id:
                                        x-go-name: CredentialId
                                        x-oapi-codegen-extra-tags:
                                          db: credential_id
                                          yaml: credential_id
                                          json: credential_id
                                        description: Credential ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                      type:
                                        x-oapi-codegen-extra-tags:
                                          db: type
                                          yaml: type
                                          json: type
                                        type: string
                                        description: Connection Type
                                      sub_type:
                                        x-oapi-codegen-extra-tags:
                                          db: sub_type
                                          yaml: sub_type
                                          json: sub_type
                                        type: string
                                        description: Connection Subtype
                                      kind:
                                        x-oapi-codegen-extra-tags:
                                          db: kind
                                          yaml: kind
                                          json: kind
                                        type: string
                                        description: Connection Kind
                                      metadata:
                                        x-oapi-codegen-extra-tags:
                                          db: metadata
                                          yaml: metadata
                                          json: metadata
                                        type: object
                                      status:
                                        x-oapi-codegen-extra-tags:
                                          db: status
                                          yaml: status
                                          json: status
                                        description: Connection Status
                                        type: string
                                        enum:
                                          - discovered
                                          - registered
                                          - connected
                                          - ignored
                                          - maintenance
                                          - disconnected
                                          - deleted
                                          - not found
                                      user_id:
                                        x-go-name: UserID
                                        x-oapi-codegen-extra-tags:
                                          yaml: user_id
                                          json: user_id
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                      created_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: created_at
                                          json: created_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      updated_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: updated_at
                                          json: updated_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      deleted_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: deleted_at
                                          json: deleted_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                  category:
                                    type: object
                                    description: Category of the model.
                                    properties:
                                      id:
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      name:
                                        type: string
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      metadata:
                                        type: object
                                        x-oapi-codegen-extra-tags:
                                          yaml: metadata
                                          json: metadata
                                    x-oapi-codegen-extra-tags:
                                      yaml: category
                                      json: category
                                      gorm: foreignKey:CategoryId;references:Id
                                  subCategory:
                                    type: string
                                    description: Sub-category of the model.
                                    minLength: 1
                                    maxLength: 100
                                    x-oapi-codegen-extra-tags:
                                      yaml: subCategory
                                      json: subCategory
                                  metadata:
                                    type: object
                                    description: >-
                                      Metadata containing additional information
                                      associated with the model.
                                    properties:
                                      capabilities:
                                        type: array
                                        description: Capabilities associated with the model
                                        items:
                                          $id: >-
                                            https://schemas.meshery.io/capability.json
                                          $schema: http://json-schema.org/draft-07/schema#
                                          description: >-
                                            Meshery manages entities in accordance
                                            with their specific capabilities. This
                                            field explicitly identifies those
                                            capabilities largely by what actions a
                                            given component supports; e.g.
                                            metric-scrape, sub-interface, and so on.
                                            This field is extensible. Entities may
                                            define a broad array of capabilities,
                                            which are in-turn dynamically
                                            interpretted by Meshery for full
                                            lifecycle management.
                                          additionalProperties: false
                                          type: object
                                          required:
                                            - schemaVersion
                                            - version
                                            - displayName
                                            - kind
                                            - type
                                            - entityState
                                            - status
                                          x-oapi-codegen-extra-tags:
                                            gorm: type:bytes;serializer:json
                                          properties:
                                            schemaVersion:
                                              description: >-
                                                Specifies the version of the schema to
                                                which the capability definition
                                                conforms.
                                              type: string
                                              minLength: 2
                                              maxLength: 100
                                              pattern: >-
                                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                              example:
                                                - v1
                                                - v1alpha1
                                                - v2beta3
                                                - v1.custom-suffix
                                              x-oapi-codegen-extra-tags:
                                                yaml: schemaVersion
                                                json: schemaVersion
                                            version:
                                              description: Version of the capability definition.
                                              type: string
                                              minLength: 5
                                              maxLength: 100
                                              pattern: >-
                                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              x-oapi-codegen-extra-tags:
                                                yaml: version
                                                json: version
                                            displayName:
                                              description: >-
                                                Name of the capability in human-readible
                                                format.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: displayName
                                                json: displayName
                                            description:
                                              type: string
                                              description: >-
                                                A written representation of the purpose
                                                and characteristics of the capability.
                                              x-oapi-codegen-extra-tags:
                                                yaml: description
                                                json: description
                                            kind:
                                              description: >-
                                                Top-level categorization of the
                                                capability
                                              additionalProperties: false
                                              anyOf:
                                                - const: action
                                                  description: >-
                                                    For capabilities related to executing
                                                    actions on entities. Example: initiate
                                                    log streaming on a Pod. Example:
                                                    initiate deployment of a component.
                                                - const: mutate
                                                  description: >-
                                                    For capabilities related to mutating an
                                                    entity. Example: the ability to change
                                                    the configuration of a component.
                                                - const: view
                                                  description: >-
                                                    For capabilities related to viewing an
                                                    entity. Example: the ability to view a
                                                    components configuration.
                                                - const: interaction
                                                  description: >-
                                                    Catch all for capabilities related to
                                                    interaction with entities. Example: the
                                                    ability for a component to be dragged
                                                    and dropped. Example: supports event
                                                    bubbling to parent components. 
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: kind
                                                json: kind
                                            type:
                                              description: >-
                                                Classification of capabilities. Used to
                                                group capabilities similar in nature.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: type
                                                json: type
                                            subType:
                                              description: >-
                                                Most granular unit of capability
                                                classification. The combination of Kind,
                                                Type and SubType together uniquely
                                                identify a Capability.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: subType
                                                json: subType
                                            key:
                                              description: Key that backs the capability.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: key
                                                json: key
                                            entityState:
                                              description: >-
                                                State of the entity in which the
                                                capability is applicable.
                                              type: array
                                              items:
                                                type: string
                                                enum:
                                                  - declaration
                                                  - instance
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                description: >-
                                                  A string starting with an alphanumeric
                                                  character. Spaces and hyphens allowed.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: entityState
                                                  json: entityState
                                            status:
                                              type: string
                                              description: Status of the capability
                                              default: enabled
                                              enum:
                                                - enabled
                                                - disabled
                                              x-oapi-codegen-extra-tags:
                                                yaml: status
                                                json: status
                                            metadata:
                                              type: object
                                              description: >-
                                                Metadata contains additional information
                                                associated with the capability.
                                                Extension point.
                                              additionalProperties: true
                                              x-oapi-codegen-extra-tags:
                                                yaml: metadata
                                                json: metadata
                                      isAnnotation:
                                        type: boolean
                                        description: >-
                                          Indicates whether the model and its
                                          entities should be treated as deployable
                                          entities or as logical representations.
                                        x-oapi-codegen-extra-tags:
                                          yaml: isAnnotation
                                          json: isAnnotation
                                      primaryColor:
                                        type: string
                                        description: Primary color associated with the model.
                                        minLength: 1
                                        maxLength: 50
                                        x-oapi-codegen-extra-tags:
                                          yaml: primaryColor
                                          json: primaryColor
                                      secondaryColor:
                                        type: string
                                        description: >-
                                          Secondary color associated with the
                                          model.
                                        minLength: 1
                                        maxLength: 50
                                        x-oapi-codegen-extra-tags:
                                          yaml: secondaryColor
                                          json: secondaryColor
                                      svgWhite:
                                        type: string
                                        description: >-
                                          SVG representation of the model in white
                                          color.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgWhite
                                          json: svgWhite
                                      svgColor:
                                        type: string
                                        description: >-
                                          SVG representation of the model in
                                          colored format.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgColor
                                          json: svgColor
                                      svgComplete:
                                        type: string
                                        description: >-
                                          SVG representation of the complete
                                          model.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgComplete
                                          json: svgComplete
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                    additionalProperties: true
                                  model:
                                    type: object
                                    description: >-
                                      Registrant-defined data associated with
                                      the model. Properties pertain to the
                                      software being managed (e.g. Kubernetes
                                      v1.31)
                                    required:
                                      - version
                                    properties:
                                      version:
                                        description: >-
                                          Version of the model as defined by the
                                          registrant.
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        type: string
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                required:
                                  - name
                                  - version
                                  - registrant
                                  - category
                              id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entites in Meshery. The UUID
                                  core defintion is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                x-oapi-codegen-extra-tags:
                                  yaml: id
                                  json: id
                              match:
                                type: object
                                additionalProperties: false
                                oneOf:
                                  - type: array
                                    items:
                                      type: array
                                      items:
                                        type: string
                                  - properties:
                                      from:
                                        $comment: >-
                                          Type is array so that mutliple bindings
                                          can be supported between 2 nodes
                                        type: array
                                        items:
                                          type: object
                                          allOf:
                                            - properties:
                                                kind:
                                                  type: string
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                      to:
                                        $comment: >-
                                          Type is array so that mutliple bindings
                                          can be supported between 2 nodes
                                        type: array
                                        items:
                                          type: object
                                          allOf:
                                            - properties:
                                                kind:
                                                  type: string
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                x-oapi-codegen-extra-tags:
                                  yaml: match
                                  json: match
                              patch:
                                allOf:
                                  - properties:
                                      patchStrategy:
                                        description: >-
                                          patchStrategy allows you to make
                                          specific changes to a resource using a
                                          standard JSON Patch format (RFC 6902). 


                                          add: Inserts a value into an array or
                                          adds a member to an object.

                                          replace: Replaces a value.

                                          merge: Combines the values of the target
                                          location with the values from the patch.
                                          If the target location doesn't exist, it
                                          is created.

                                          strategic:specific to Kubernetes and
                                          understands the structure of Kubernetes
                                          objects. It can handle complex changes
                                          like updating lists and maps, as well as
                                          preserving default values. However, it's
                                          not supported for custom resources. For
                                          custom resources, only JSON Patch and
                                          Merge Patch are typically supported.

                                          remove: Removes a value.

                                          copy: Copies a value from one location
                                          to another.

                                          move: Moves a value from one location to
                                          another.

                                          test: Tests that a value at the target
                                          location is equal to a specified value.
                                        $comment: >-
                                          Array Indexing: When working with
                                          arrays, be aware that Kubernetes uses
                                          zero-based indexing in JSON patch paths.

                                          Merge Patch vs. JSON Patch: Merge
                                          patches are less flexible than JSON
                                          patches and do not support all the same
                                          operations.

                                          Strategic Merge Patch: For some
                                          Kubernetes resources, you can also use
                                          the strategic type for a strategic merge
                                          patch, which understands the structure
                                          of Kubernetes objects and can handle
                                          complex operations.
                                        type: string
                                        enum:
                                          - merge
                                          - strategic
                                          - add
                                          - remove
                                          - copy
                                          - move
                                          - test
                                        default: copy
                                  - oneOf:
                                      - properties:
                                          mutatorRef:
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                The sequence of mutatorRef and
                                                mutatedRef must match. eg: mutatorRef:
                                                [[config, url], [config, name]],
                                                mutatedRef: [[configPatch, value],
                                                [name]]. The value [config, url] will be
                                                patched at [configPatch, value].
                                                Similarly [config,name] will be patched
                                                at [name].
                                            description: >-
                                              JSON ref to value from where patch
                                              should be applied.
                                      - properties:
                                          mutatedRef:
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                JSONPath
                                                (https://en.wikipedia.org/wiki/JSONPath)
                                                to property to be patched.
                                x-oapi-codegen-extra-tags:
                                  yaml: patch
                                  json: patch
                            description: >-
                              Optional fields that are a part of the `from`
                              selector. Absence of a field has an implied *
                              meaning.
                    allow:
                      description: >-
                        Selectors used to define relationships which are
                        allowed.
                      type: object
                      required:
                        - to
                        - from
                      properties:
                        from:
                          description: >-
                            Describes the component(s) which are involved in the
                            relationship along with a set of actions to perform
                            upon selection match.
                          type: array
                          items:
                            type: object
                            additionalProperties: false
                            properties:
                              kind:
                                type: string
                                x-oapi-codegen-extra-tags:
                                  yaml: kind
                                  json: kind
                              match_strategy_matrix:
                                description: >-
                                  Strategy criterion for determing how to match
                                  the values at mutator/mutated paths
                                type: array
                                items:
                                  type: array
                                  items:
                                    type: string
                              model:
                                description: >-
                                  Name of the model implicated by this selector.
                                  Learn more at
                                  https://docs.meshery.io/concepts/models
                                $id: https://schemas.meshery.io/model.json
                                $schema: http://json-schema.org/draft-07/schema#
                                additionalProperties: false
                                type: object
                                properties:
                                  id:
                                    description: >-
                                      Uniquely identifies the entity (i.e.
                                      component) as defined in a declaration
                                      (i.e. design).
                                    type: string
                                    format: uuid
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  schemaVersion:
                                    description: >-
                                      Specifies the version of the schema used
                                      for the definition.
                                    x-oapi-codegen-extra-tags:
                                      yaml: schemaVersion
                                      json: schemaVersion
                                    type: string
                                    minLength: 2
                                    maxLength: 100
                                    pattern: >-
                                      ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                    example:
                                      - v1
                                      - v1alpha1
                                      - v2beta3
                                      - v1.custom-suffix
                                  version:
                                    description: Version of the model definition.
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: version
                                      json: version
                                    minLength: 5
                                    maxLength: 100
                                    pattern: >-
                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  name:
                                    description: >-
                                      The unique name for the model within the
                                      scope of a registrant.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: name
                                      json: name
                                  displayName:
                                    description: Human-readable name for the model.
                                    minLength: 1
                                    maxLength: 100
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                    x-oapi-codegen-extra-tags:
                                      yaml: displayName
                                      json: displayName
                                  description:
                                    type: string
                                    description: Description of the model.
                                    minLength: 1
                                    maxLength: 1000
                                    x-oapi-codegen-extra-tags:
                                      yaml: description
                                      json: description
                                  status:
                                    type: string
                                    description: >-
                                      Status of model, including:

                                      - duplicate: this component is a duplicate
                                      of another. The component that is to be
                                      the canonical reference and that is
                                      duplicated by other components should not
                                      be assigned the 'duplicate' status.

                                      - maintenance: model is unavailable for a
                                      period of time.

                                      - enabled: model is available for use for
                                      all users of this Meshery Server.

                                      - ignored: model is unavailable for use
                                      for all users of this Meshery Server.
                                    enum:
                                      - ignored
                                      - enabled
                                      - duplicate
                                    x-oapi-codegen-extra-tags:
                                      yaml: status
                                      json: status
                                  registrant:
                                    x-oapi-codegen-extra-tags:
                                      yaml: registrant
                                      json: registrant
                                      gorm: foreignKey:RegistrantId;references:Id
                                    $id: https://schemas.meshery.io/component.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    description: >-
                                      Meshery Connections are managed and
                                      unmanaged resources that either through
                                      discovery or manual entry are tracked by
                                      Meshery. Learn more at
                                      https://docs.meshery.io/concepts/logical/connections
                                    additionalProperties: false
                                    type: object
                                    required:
                                      - kind
                                      - type
                                      - status
                                    properties:
                                      id:
                                        description: ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      name:
                                        x-oapi-codegen-extra-tags:
                                          db: name
                                          yaml: name
                                          json: name
                                        type: string
                                        description: Connection Name
                                      credential_id:
                                        x-go-name: CredentialId
                                        x-oapi-codegen-extra-tags:
                                          db: credential_id
                                          yaml: credential_id
                                          json: credential_id
                                        description: Credential ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                      type:
                                        x-oapi-codegen-extra-tags:
                                          db: type
                                          yaml: type
                                          json: type
                                        type: string
                                        description: Connection Type
                                      sub_type:
                                        x-oapi-codegen-extra-tags:
                                          db: sub_type
                                          yaml: sub_type
                                          json: sub_type
                                        type: string
                                        description: Connection Subtype
                                      kind:
                                        x-oapi-codegen-extra-tags:
                                          db: kind
                                          yaml: kind
                                          json: kind
                                        type: string
                                        description: Connection Kind
                                      metadata:
                                        x-oapi-codegen-extra-tags:
                                          db: metadata
                                          yaml: metadata
                                          json: metadata
                                        type: object
                                      status:
                                        x-oapi-codegen-extra-tags:
                                          db: status
                                          yaml: status
                                          json: status
                                        description: Connection Status
                                        type: string
                                        enum:
                                          - discovered
                                          - registered
                                          - connected
                                          - ignored
                                          - maintenance
                                          - disconnected
                                          - deleted
                                          - not found
                                      user_id:
                                        x-go-name: UserID
                                        x-oapi-codegen-extra-tags:
                                          yaml: user_id
                                          json: user_id
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                      created_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: created_at
                                          json: created_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      updated_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: updated_at
                                          json: updated_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      deleted_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: deleted_at
                                          json: deleted_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                  category:
                                    type: object
                                    description: Category of the model.
                                    properties:
                                      id:
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      name:
                                        type: string
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      metadata:
                                        type: object
                                        x-oapi-codegen-extra-tags:
                                          yaml: metadata
                                          json: metadata
                                    x-oapi-codegen-extra-tags:
                                      yaml: category
                                      json: category
                                      gorm: foreignKey:CategoryId;references:Id
                                  subCategory:
                                    type: string
                                    description: Sub-category of the model.
                                    minLength: 1
                                    maxLength: 100
                                    x-oapi-codegen-extra-tags:
                                      yaml: subCategory
                                      json: subCategory
                                  metadata:
                                    type: object
                                    description: >-
                                      Metadata containing additional information
                                      associated with the model.
                                    properties:
                                      capabilities:
                                        type: array
                                        description: Capabilities associated with the model
                                        items:
                                          $id: >-
                                            https://schemas.meshery.io/capability.json
                                          $schema: http://json-schema.org/draft-07/schema#
                                          description: >-
                                            Meshery manages entities in accordance
                                            with their specific capabilities. This
                                            field explicitly identifies those
                                            capabilities largely by what actions a
                                            given component supports; e.g.
                                            metric-scrape, sub-interface, and so on.
                                            This field is extensible. Entities may
                                            define a broad array of capabilities,
                                            which are in-turn dynamically
                                            interpretted by Meshery for full
                                            lifecycle management.
                                          additionalProperties: false
                                          type: object
                                          required:
                                            - schemaVersion
                                            - version
                                            - displayName
                                            - kind
                                            - type
                                            - entityState
                                            - status
                                          x-oapi-codegen-extra-tags:
                                            gorm: type:bytes;serializer:json
                                          properties:
                                            schemaVersion:
                                              description: >-
                                                Specifies the version of the schema to
                                                which the capability definition
                                                conforms.
                                              type: string
                                              minLength: 2
                                              maxLength: 100
                                              pattern: >-
                                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                              example:
                                                - v1
                                                - v1alpha1
                                                - v2beta3
                                                - v1.custom-suffix
                                              x-oapi-codegen-extra-tags:
                                                yaml: schemaVersion
                                                json: schemaVersion
                                            version:
                                              description: Version of the capability definition.
                                              type: string
                                              minLength: 5
                                              maxLength: 100
                                              pattern: >-
                                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              x-oapi-codegen-extra-tags:
                                                yaml: version
                                                json: version
                                            displayName:
                                              description: >-
                                                Name of the capability in human-readible
                                                format.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: displayName
                                                json: displayName
                                            description:
                                              type: string
                                              description: >-
                                                A written representation of the purpose
                                                and characteristics of the capability.
                                              x-oapi-codegen-extra-tags:
                                                yaml: description
                                                json: description
                                            kind:
                                              description: >-
                                                Top-level categorization of the
                                                capability
                                              additionalProperties: false
                                              anyOf:
                                                - const: action
                                                  description: >-
                                                    For capabilities related to executing
                                                    actions on entities. Example: initiate
                                                    log streaming on a Pod. Example:
                                                    initiate deployment of a component.
                                                - const: mutate
                                                  description: >-
                                                    For capabilities related to mutating an
                                                    entity. Example: the ability to change
                                                    the configuration of a component.
                                                - const: view
                                                  description: >-
                                                    For capabilities related to viewing an
                                                    entity. Example: the ability to view a
                                                    components configuration.
                                                - const: interaction
                                                  description: >-
                                                    Catch all for capabilities related to
                                                    interaction with entities. Example: the
                                                    ability for a component to be dragged
                                                    and dropped. Example: supports event
                                                    bubbling to parent components. 
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: kind
                                                json: kind
                                            type:
                                              description: >-
                                                Classification of capabilities. Used to
                                                group capabilities similar in nature.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: type
                                                json: type
                                            subType:
                                              description: >-
                                                Most granular unit of capability
                                                classification. The combination of Kind,
                                                Type and SubType together uniquely
                                                identify a Capability.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: subType
                                                json: subType
                                            key:
                                              description: Key that backs the capability.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: key
                                                json: key
                                            entityState:
                                              description: >-
                                                State of the entity in which the
                                                capability is applicable.
                                              type: array
                                              items:
                                                type: string
                                                enum:
                                                  - declaration
                                                  - instance
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                description: >-
                                                  A string starting with an alphanumeric
                                                  character. Spaces and hyphens allowed.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: entityState
                                                  json: entityState
                                            status:
                                              type: string
                                              description: Status of the capability
                                              default: enabled
                                              enum:
                                                - enabled
                                                - disabled
                                              x-oapi-codegen-extra-tags:
                                                yaml: status
                                                json: status
                                            metadata:
                                              type: object
                                              description: >-
                                                Metadata contains additional information
                                                associated with the capability.
                                                Extension point.
                                              additionalProperties: true
                                              x-oapi-codegen-extra-tags:
                                                yaml: metadata
                                                json: metadata
                                      isAnnotation:
                                        type: boolean
                                        description: >-
                                          Indicates whether the model and its
                                          entities should be treated as deployable
                                          entities or as logical representations.
                                        x-oapi-codegen-extra-tags:
                                          yaml: isAnnotation
                                          json: isAnnotation
                                      primaryColor:
                                        type: string
                                        description: Primary color associated with the model.
                                        minLength: 1
                                        maxLength: 50
                                        x-oapi-codegen-extra-tags:
                                          yaml: primaryColor
                                          json: primaryColor
                                      secondaryColor:
                                        type: string
                                        description: >-
                                          Secondary color associated with the
                                          model.
                                        minLength: 1
                                        maxLength: 50
                                        x-oapi-codegen-extra-tags:
                                          yaml: secondaryColor
                                          json: secondaryColor
                                      svgWhite:
                                        type: string
                                        description: >-
                                          SVG representation of the model in white
                                          color.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgWhite
                                          json: svgWhite
                                      svgColor:
                                        type: string
                                        description: >-
                                          SVG representation of the model in
                                          colored format.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgColor
                                          json: svgColor
                                      svgComplete:
                                        type: string
                                        description: >-
                                          SVG representation of the complete
                                          model.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgComplete
                                          json: svgComplete
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                    additionalProperties: true
                                  model:
                                    type: object
                                    description: >-
                                      Registrant-defined data associated with
                                      the model. Properties pertain to the
                                      software being managed (e.g. Kubernetes
                                      v1.31)
                                    required:
                                      - version
                                    properties:
                                      version:
                                        description: >-
                                          Version of the model as defined by the
                                          registrant.
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        type: string
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                required:
                                  - name
                                  - version
                                  - registrant
                                  - category
                              id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entites in Meshery. The UUID
                                  core defintion is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                x-oapi-codegen-extra-tags:
                                  yaml: id
                                  json: id
                              match:
                                type: object
                                additionalProperties: false
                                oneOf:
                                  - type: array
                                    items:
                                      type: array
                                      items:
                                        type: string
                                  - properties:
                                      from:
                                        $comment: >-
                                          Type is array so that mutliple bindings
                                          can be supported between 2 nodes
                                        type: array
                                        items:
                                          type: object
                                          allOf:
                                            - properties:
                                                kind:
                                                  type: string
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                      to:
                                        $comment: >-
                                          Type is array so that mutliple bindings
                                          can be supported between 2 nodes
                                        type: array
                                        items:
                                          type: object
                                          allOf:
                                            - properties:
                                                kind:
                                                  type: string
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                x-oapi-codegen-extra-tags:
                                  yaml: match
                                  json: match
                              patch:
                                allOf:
                                  - properties:
                                      patchStrategy:
                                        description: >-
                                          patchStrategy allows you to make
                                          specific changes to a resource using a
                                          standard JSON Patch format (RFC 6902). 


                                          add: Inserts a value into an array or
                                          adds a member to an object.

                                          replace: Replaces a value.

                                          merge: Combines the values of the target
                                          location with the values from the patch.
                                          If the target location doesn't exist, it
                                          is created.

                                          strategic:specific to Kubernetes and
                                          understands the structure of Kubernetes
                                          objects. It can handle complex changes
                                          like updating lists and maps, as well as
                                          preserving default values. However, it's
                                          not supported for custom resources. For
                                          custom resources, only JSON Patch and
                                          Merge Patch are typically supported.

                                          remove: Removes a value.

                                          copy: Copies a value from one location
                                          to another.

                                          move: Moves a value from one location to
                                          another.

                                          test: Tests that a value at the target
                                          location is equal to a specified value.
                                        $comment: >-
                                          Array Indexing: When working with
                                          arrays, be aware that Kubernetes uses
                                          zero-based indexing in JSON patch paths.

                                          Merge Patch vs. JSON Patch: Merge
                                          patches are less flexible than JSON
                                          patches and do not support all the same
                                          operations.

                                          Strategic Merge Patch: For some
                                          Kubernetes resources, you can also use
                                          the strategic type for a strategic merge
                                          patch, which understands the structure
                                          of Kubernetes objects and can handle
                                          complex operations.
                                        type: string
                                        enum:
                                          - merge
                                          - strategic
                                          - add
                                          - remove
                                          - copy
                                          - move
                                          - test
                                        default: copy
                                  - oneOf:
                                      - properties:
                                          mutatorRef:
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                The sequence of mutatorRef and
                                                mutatedRef must match. eg: mutatorRef:
                                                [[config, url], [config, name]],
                                                mutatedRef: [[configPatch, value],
                                                [name]]. The value [config, url] will be
                                                patched at [configPatch, value].
                                                Similarly [config,name] will be patched
                                                at [name].
                                            description: >-
                                              JSON ref to value from where patch
                                              should be applied.
                                      - properties:
                                          mutatedRef:
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                JSONPath
                                                (https://en.wikipedia.org/wiki/JSONPath)
                                                to property to be patched.
                                x-oapi-codegen-extra-tags:
                                  yaml: patch
                                  json: patch
                            description: >-
                              Optional fields that are a part of the `from`
                              selector. Absence of a field has an implied *
                              meaning.
                        to:
                          description: >-
                            Describes the component(s) which are involved in the
                            relationship along with a set of actions to perform
                            upon selection match.
                          type: array
                          items:
                            type: object
                            additionalProperties: false
                            properties:
                              kind:
                                type: string
                                x-oapi-codegen-extra-tags:
                                  yaml: kind
                                  json: kind
                              model:
                                description: >-
                                  Name of the model implicated by this selector.
                                  Learn more at
                                  https://docs.meshery.io/concepts/models
                                $id: https://schemas.meshery.io/model.json
                                $schema: http://json-schema.org/draft-07/schema#
                                additionalProperties: false
                                type: object
                                properties:
                                  id:
                                    description: >-
                                      Uniquely identifies the entity (i.e.
                                      component) as defined in a declaration
                                      (i.e. design).
                                    type: string
                                    format: uuid
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  schemaVersion:
                                    description: >-
                                      Specifies the version of the schema used
                                      for the definition.
                                    x-oapi-codegen-extra-tags:
                                      yaml: schemaVersion
                                      json: schemaVersion
                                    type: string
                                    minLength: 2
                                    maxLength: 100
                                    pattern: >-
                                      ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                    example:
                                      - v1
                                      - v1alpha1
                                      - v2beta3
                                      - v1.custom-suffix
                                  version:
                                    description: Version of the model definition.
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: version
                                      json: version
                                    minLength: 5
                                    maxLength: 100
                                    pattern: >-
                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  name:
                                    description: >-
                                      The unique name for the model within the
                                      scope of a registrant.
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    x-oapi-codegen-extra-tags:
                                      yaml: name
                                      json: name
                                  displayName:
                                    description: Human-readable name for the model.
                                    minLength: 1
                                    maxLength: 100
                                    type: string
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                    x-oapi-codegen-extra-tags:
                                      yaml: displayName
                                      json: displayName
                                  description:
                                    type: string
                                    description: Description of the model.
                                    minLength: 1
                                    maxLength: 1000
                                    x-oapi-codegen-extra-tags:
                                      yaml: description
                                      json: description
                                  status:
                                    type: string
                                    description: >-
                                      Status of model, including:

                                      - duplicate: this component is a duplicate
                                      of another. The component that is to be
                                      the canonical reference and that is
                                      duplicated by other components should not
                                      be assigned the 'duplicate' status.

                                      - maintenance: model is unavailable for a
                                      period of time.

                                      - enabled: model is available for use for
                                      all users of this Meshery Server.

                                      - ignored: model is unavailable for use
                                      for all users of this Meshery Server.
                                    enum:
                                      - ignored
                                      - enabled
                                      - duplicate
                                    x-oapi-codegen-extra-tags:
                                      yaml: status
                                      json: status
                                  registrant:
                                    x-oapi-codegen-extra-tags:
                                      yaml: registrant
                                      json: registrant
                                      gorm: foreignKey:RegistrantId;references:Id
                                    $id: https://schemas.meshery.io/component.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    description: >-
                                      Meshery Connections are managed and
                                      unmanaged resources that either through
                                      discovery or manual entry are tracked by
                                      Meshery. Learn more at
                                      https://docs.meshery.io/concepts/logical/connections
                                    additionalProperties: false
                                    type: object
                                    required:
                                      - kind
                                      - type
                                      - status
                                    properties:
                                      id:
                                        description: ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      name:
                                        x-oapi-codegen-extra-tags:
                                          db: name
                                          yaml: name
                                          json: name
                                        type: string
                                        description: Connection Name
                                      credential_id:
                                        x-go-name: CredentialId
                                        x-oapi-codegen-extra-tags:
                                          db: credential_id
                                          yaml: credential_id
                                          json: credential_id
                                        description: Credential ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                      type:
                                        x-oapi-codegen-extra-tags:
                                          db: type
                                          yaml: type
                                          json: type
                                        type: string
                                        description: Connection Type
                                      sub_type:
                                        x-oapi-codegen-extra-tags:
                                          db: sub_type
                                          yaml: sub_type
                                          json: sub_type
                                        type: string
                                        description: Connection Subtype
                                      kind:
                                        x-oapi-codegen-extra-tags:
                                          db: kind
                                          yaml: kind
                                          json: kind
                                        type: string
                                        description: Connection Kind
                                      metadata:
                                        x-oapi-codegen-extra-tags:
                                          db: metadata
                                          yaml: metadata
                                          json: metadata
                                        type: object
                                      status:
                                        x-oapi-codegen-extra-tags:
                                          db: status
                                          yaml: status
                                          json: status
                                        description: Connection Status
                                        type: string
                                        enum:
                                          - discovered
                                          - registered
                                          - connected
                                          - ignored
                                          - maintenance
                                          - disconnected
                                          - deleted
                                          - not found
                                      user_id:
                                        x-go-name: UserID
                                        x-oapi-codegen-extra-tags:
                                          yaml: user_id
                                          json: user_id
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                      created_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: created_at
                                          json: created_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      updated_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: updated_at
                                          json: updated_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      deleted_at:
                                        x-oapi-codegen-extra-tags:
                                          yaml: deleted_at
                                          json: deleted_at
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                  category:
                                    type: object
                                    description: Category of the model.
                                    properties:
                                      id:
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      name:
                                        type: string
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      metadata:
                                        type: object
                                        x-oapi-codegen-extra-tags:
                                          yaml: metadata
                                          json: metadata
                                    x-oapi-codegen-extra-tags:
                                      yaml: category
                                      json: category
                                      gorm: foreignKey:CategoryId;references:Id
                                  subCategory:
                                    type: string
                                    description: Sub-category of the model.
                                    minLength: 1
                                    maxLength: 100
                                    x-oapi-codegen-extra-tags:
                                      yaml: subCategory
                                      json: subCategory
                                  metadata:
                                    type: object
                                    description: >-
                                      Metadata containing additional information
                                      associated with the model.
                                    properties:
                                      capabilities:
                                        type: array
                                        description: Capabilities associated with the model
                                        items:
                                          $id: >-
                                            https://schemas.meshery.io/capability.json
                                          $schema: http://json-schema.org/draft-07/schema#
                                          description: >-
                                            Meshery manages entities in accordance
                                            with their specific capabilities. This
                                            field explicitly identifies those
                                            capabilities largely by what actions a
                                            given component supports; e.g.
                                            metric-scrape, sub-interface, and so on.
                                            This field is extensible. Entities may
                                            define a broad array of capabilities,
                                            which are in-turn dynamically
                                            interpretted by Meshery for full
                                            lifecycle management.
                                          additionalProperties: false
                                          type: object
                                          required:
                                            - schemaVersion
                                            - version
                                            - displayName
                                            - kind
                                            - type
                                            - entityState
                                            - status
                                          x-oapi-codegen-extra-tags:
                                            gorm: type:bytes;serializer:json
                                          properties:
                                            schemaVersion:
                                              description: >-
                                                Specifies the version of the schema to
                                                which the capability definition
                                                conforms.
                                              type: string
                                              minLength: 2
                                              maxLength: 100
                                              pattern: >-
                                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                              example:
                                                - v1
                                                - v1alpha1
                                                - v2beta3
                                                - v1.custom-suffix
                                              x-oapi-codegen-extra-tags:
                                                yaml: schemaVersion
                                                json: schemaVersion
                                            version:
                                              description: Version of the capability definition.
                                              type: string
                                              minLength: 5
                                              maxLength: 100
                                              pattern: >-
                                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              x-oapi-codegen-extra-tags:
                                                yaml: version
                                                json: version
                                            displayName:
                                              description: >-
                                                Name of the capability in human-readible
                                                format.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: displayName
                                                json: displayName
                                            description:
                                              type: string
                                              description: >-
                                                A written representation of the purpose
                                                and characteristics of the capability.
                                              x-oapi-codegen-extra-tags:
                                                yaml: description
                                                json: description
                                            kind:
                                              description: >-
                                                Top-level categorization of the
                                                capability
                                              additionalProperties: false
                                              anyOf:
                                                - const: action
                                                  description: >-
                                                    For capabilities related to executing
                                                    actions on entities. Example: initiate
                                                    log streaming on a Pod. Example:
                                                    initiate deployment of a component.
                                                - const: mutate
                                                  description: >-
                                                    For capabilities related to mutating an
                                                    entity. Example: the ability to change
                                                    the configuration of a component.
                                                - const: view
                                                  description: >-
                                                    For capabilities related to viewing an
                                                    entity. Example: the ability to view a
                                                    components configuration.
                                                - const: interaction
                                                  description: >-
                                                    Catch all for capabilities related to
                                                    interaction with entities. Example: the
                                                    ability for a component to be dragged
                                                    and dropped. Example: supports event
                                                    bubbling to parent components. 
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: kind
                                                json: kind
                                            type:
                                              description: >-
                                                Classification of capabilities. Used to
                                                group capabilities similar in nature.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: type
                                                json: type
                                            subType:
                                              description: >-
                                                Most granular unit of capability
                                                classification. The combination of Kind,
                                                Type and SubType together uniquely
                                                identify a Capability.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: subType
                                                json: subType
                                            key:
                                              description: Key that backs the capability.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: key
                                                json: key
                                            entityState:
                                              description: >-
                                                State of the entity in which the
                                                capability is applicable.
                                              type: array
                                              items:
                                                type: string
                                                enum:
                                                  - declaration
                                                  - instance
                                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                description: >-
                                                  A string starting with an alphanumeric
                                                  character. Spaces and hyphens allowed.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: entityState
                                                  json: entityState
                                            status:
                                              type: string
                                              description: Status of the capability
                                              default: enabled
                                              enum:
                                                - enabled
                                                - disabled
                                              x-oapi-codegen-extra-tags:
                                                yaml: status
                                                json: status
                                            metadata:
                                              type: object
                                              description: >-
                                                Metadata contains additional information
                                                associated with the capability.
                                                Extension point.
                                              additionalProperties: true
                                              x-oapi-codegen-extra-tags:
                                                yaml: metadata
                                                json: metadata
                                      isAnnotation:
                                        type: boolean
                                        description: >-
                                          Indicates whether the model and its
                                          entities should be treated as deployable
                                          entities or as logical representations.
                                        x-oapi-codegen-extra-tags:
                                          yaml: isAnnotation
                                          json: isAnnotation
                                      primaryColor:
                                        type: string
                                        description: Primary color associated with the model.
                                        minLength: 1
                                        maxLength: 50
                                        x-oapi-codegen-extra-tags:
                                          yaml: primaryColor
                                          json: primaryColor
                                      secondaryColor:
                                        type: string
                                        description: >-
                                          Secondary color associated with the
                                          model.
                                        minLength: 1
                                        maxLength: 50
                                        x-oapi-codegen-extra-tags:
                                          yaml: secondaryColor
                                          json: secondaryColor
                                      svgWhite:
                                        type: string
                                        description: >-
                                          SVG representation of the model in white
                                          color.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgWhite
                                          json: svgWhite
                                      svgColor:
                                        type: string
                                        description: >-
                                          SVG representation of the model in
                                          colored format.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgColor
                                          json: svgColor
                                      svgComplete:
                                        type: string
                                        description: >-
                                          SVG representation of the complete
                                          model.
                                        minLength: 1
                                        x-oapi-codegen-extra-tags:
                                          yaml: svgComplete
                                          json: svgComplete
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                    additionalProperties: true
                                  model:
                                    type: object
                                    description: >-
                                      Registrant-defined data associated with
                                      the model. Properties pertain to the
                                      software being managed (e.g. Kubernetes
                                      v1.31)
                                    required:
                                      - version
                                    properties:
                                      version:
                                        description: >-
                                          Version of the model as defined by the
                                          registrant.
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        type: string
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                required:
                                  - name
                                  - version
                                  - registrant
                                  - category
                              id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entites in Meshery. The UUID
                                  core defintion is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                x-oapi-codegen-extra-tags:
                                  yaml: id
                                  json: id
                              match:
                                type: object
                                additionalProperties: false
                                oneOf:
                                  - type: array
                                    items:
                                      type: array
                                      items:
                                        type: string
                                  - properties:
                                      from:
                                        $comment: >-
                                          Type is array so that mutliple bindings
                                          can be supported between 2 nodes
                                        type: array
                                        items:
                                          type: object
                                          allOf:
                                            - properties:
                                                kind:
                                                  type: string
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                      to:
                                        $comment: >-
                                          Type is array so that mutliple bindings
                                          can be supported between 2 nodes
                                        type: array
                                        items:
                                          type: object
                                          allOf:
                                            - properties:
                                                kind:
                                                  type: string
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                x-oapi-codegen-extra-tags:
                                  yaml: match
                                  json: match
                              patch:
                                allOf:
                                  - properties:
                                      patchStrategy:
                                        description: >-
                                          patchStrategy allows you to make
                                          specific changes to a resource using a
                                          standard JSON Patch format (RFC 6902). 


                                          add: Inserts a value into an array or
                                          adds a member to an object.

                                          replace: Replaces a value.

                                          merge: Combines the values of the target
                                          location with the values from the patch.
                                          If the target location doesn't exist, it
                                          is created.

                                          strategic:specific to Kubernetes and
                                          understands the structure of Kubernetes
                                          objects. It can handle complex changes
                                          like updating lists and maps, as well as
                                          preserving default values. However, it's
                                          not supported for custom resources. For
                                          custom resources, only JSON Patch and
                                          Merge Patch are typically supported.

                                          remove: Removes a value.

                                          copy: Copies a value from one location
                                          to another.

                                          move: Moves a value from one location to
                                          another.

                                          test: Tests that a value at the target
                                          location is equal to a specified value.
                                        $comment: >-
                                          Array Indexing: When working with
                                          arrays, be aware that Kubernetes uses
                                          zero-based indexing in JSON patch paths.

                                          Merge Patch vs. JSON Patch: Merge
                                          patches are less flexible than JSON
                                          patches and do not support all the same
                                          operations.

                                          Strategic Merge Patch: For some
                                          Kubernetes resources, you can also use
                                          the strategic type for a strategic merge
                                          patch, which understands the structure
                                          of Kubernetes objects and can handle
                                          complex operations.
                                        type: string
                                        enum:
                                          - merge
                                          - strategic
                                          - add
                                          - remove
                                          - copy
                                          - move
                                          - test
                                        default: copy
                                  - oneOf:
                                      - properties:
                                          mutatorRef:
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                The sequence of mutatorRef and
                                                mutatedRef must match. eg: mutatorRef:
                                                [[config, url], [config, name]],
                                                mutatedRef: [[configPatch, value],
                                                [name]]. The value [config, url] will be
                                                patched at [configPatch, value].
                                                Similarly [config,name] will be patched
                                                at [name].
                                            description: >-
                                              JSON ref to value from where patch
                                              should be applied.
                                      - properties:
                                          mutatedRef:
                                            type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                              description: >-
                                                JSONPath
                                                (https://en.wikipedia.org/wiki/JSONPath)
                                                to property to be patched.
                                x-oapi-codegen-extra-tags:
                                  yaml: patch
                                  json: patch
                            description: >-
                              Optional fields that are a part of the `from`
                              selector. Absence of a field has an implied *
                              meaning.
      required:
        - id
        - name
        - schemaVersion
        - version
        - components
        - relationships
    design_MesheryPattern:
      type: object
      properties:
        catalog_data:
          x-go-type: catalog.CatalogData
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1alpha2/catalog
          type: object
          properties:
            publishedVersion:
              description: >-
                Tracks the specific content version that has been made available
                in the Catalog.
              type: string
            class:
              description: >-
                Published content is classifed by its support level. Content
                classes help you understand the origin and expected support
                level for each piece of content. It is important to note that
                the level of support may vary within each class, and you should
                exercise discretion when using community-contributed content.
                Content produced and fully supported by Meshery maintainers.
                This represents the highest level of support and is considered
                the most reliable. Content produced by partners and verified by
                Meshery maintainers. While not directly maintained by Meshery,
                it has undergone a verification process to ensure quality and
                compatibility. Content produced and supported by the respective
                project or organization responsible for the specific technology.
                This class offers a level of support from the project
                maintainers themselves. Content produced and shared by Meshery
                users. This includes a wide range of content, such as
                performance profiles, test results, filters, patterns, and
                applications. Community content may have varying levels of
                support and reliability.
              type: string
              oneOf:
                - const: official
                  description: >-
                    Content produced and fully supported by Meshery maintainers.
                    This represents the highest level of support and is
                    considered the most reliable.
                - const: verified
                  description: >-
                    Content produced by partners and verified by Meshery
                    maintainers. While not directly maintained by Meshery, it
                    has undergone a verification process to ensure quality and
                    compatibility.
                - const: reference architecture
                  description: >-
                    Content produced and shared by Meshery users. This includes
                    a wide range of content, such as performance profiles, test
                    results, filters, patterns, and applications. Reference
                    architecture content may have varying levels of support and
                    reliability.
            compatibility:
              type: array
              title: Model
              items:
                enum:
                  - kubernetes
                type: string
              uniqueItems: true
              minItems: 1
              description: >-
                One or more models associated with this catalog item. For
                designs, a list of one or more models implicated by components
                within the design. For models, this is self-referential.
            pattern_caveats:
              type: string
              title: Caveats and Considerations
              description: >-
                Specific stipulations to consider and known behaviors to be
                aware of when using this design.
            pattern_info:
              type: string
              title: Description
              minLength: 1
              description: >-
                Purpose of the design along with its intended and unintended
                uses.
            type:
              type: string
              title: Type
              enum:
                - Deployment
                - Observability
                - Resiliency
                - Scaling
                - Security
                - Traffic-management
                - Troubleshooting
                - Workloads
              default: Deployment
              description: >-
                Categorization of the type of design or operational flow
                depicted in this design.
            snapshotURL:
              type: array
              items:
                type: string
                format: uri
                pattern: ^(https?|http?|oci)://
              description: >-
                Contains reference to the dark and light mode snapshots of the
                design.
          required:
            - compatibility
            - pattern_caveats
            - pattern_info
            - type
        created_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        user_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-go-type-skip-optional-pointer: true
        location:
          type: object
          additionalProperties:
            type: string
          x-go-type-skip-optional-pointer: true
        name:
          type: string
          x-go-type-skip-optional-pointer: true
        pattern_file:
          x-go-type: PatternFile
          $schema: http://json-schema.org/draft-07/schema#
          title: Design Schema
          description: >-
            Designs are your primary tool for collaborative authorship of your
            infrastructure, workflow, and processes.
          type: object
          properties:
            id:
              x-order: 1
              type: string
              format: uuid
              description: >-
                A Universally Unique Identifier used to uniquely identify
                entites in Meshery. The UUID core defintion is used across
                different schemas.
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            name:
              type: string
              description: >-
                Name of the design; a descriptive, but concise title for the
                design document.
              x-order: 2
            schemaVersion:
              description: >-
                Specifies the version of the schema to which the design
                conforms.
              x-order: 3
              type: string
              minLength: 2
              maxLength: 100
              pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
              example:
                - v1
                - v1alpha1
                - v2beta3
                - v1.custom-suffix
            version:
              default: v0.0.1
              x-order: 4
              description: >-
                Revision of the design as expressed by an auto-incremented,
                SemVer-compliant version number. May be manually set by a user
                or third-party system, but will always be required to be of
                version number higher than the previously defined version
                number.
              minLength: 1
              maxLength: 50
              type: string
              pattern: >-
                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
            metadata:
              type: object
              x-order: 5
              additionalProperties: true
              properties:
                resolvedAliases:
                  description: Map of resolved aliases present in the design
                  type: object
                  x-go-type: map[string]core.ResolvedAlias
                  x-go-type-import:
                    path: github.com/meshery/schemas/models/v1alpha1/core
                  additionalProperties:
                    description: >-
                      An resolved alias is an component that acts as an
                      ref/pointer to a field in another component, resolvedAlias
                      are aware of there immediate parents and completely
                      resolved parents also
                    allOf:
                      - description: >-
                          An alias is an component that acts as an ref/pointer
                          to a field in another component, nonResolvedAlias are
                          not aware of there immediate parents
                        type: object
                        properties:
                          relationship_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          alias_component_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          immediate_parent_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          immediate_ref_field_path:
                            type: array
                            items:
                              type: string
                        required:
                          - relationship_id
                          - alias_component_id
                          - immediate_parent_id
                          - immediate_ref_field_path
                      - type: object
                        properties:
                          resolved_parent_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          resolved_ref_field_path:
                            type: array
                            items:
                              type: string
                        required:
                          - resolved_parent_id
                          - resolved_ref_field_path
            components:
              description: A list of one or more component declarations.
              minItems: 0
              x-order: 6
              type: array
              items:
                x-go-type: '*component.ComponentDefinition'
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1beta1/component
                $id: https://schemas.meshery.io/component.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Components are reusable building blocks for depicting
                  capabilities defined within models. Learn more at
                  https://docs.meshery.io/concepts/components
                additionalProperties: false
                type: object
                properties:
                  id:
                    description: >-
                      Uniquely identifies the entity (i.e. component) as defined
                      in a declaration (i.e. design).
                    x-order: 1
                    x-oapi-codegen-extra-tags:
                      yaml: id
                      json: id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  schemaVersion:
                    x-order: 2
                    description: >-
                      Specifies the version of the schema to which the component
                      definition conforms.
                    x-oapi-codegen-extra-tags:
                      yaml: schemaVersion
                      json: schemaVersion
                    default: components.meshery.io/v1beta1
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                  version:
                    x-order: 3
                    description: Version of the component definition.
                    minLength: 1
                    maxLength: 50
                    x-oapi-codegen-extra-tags:
                      yaml: version
                      json: version
                    type: string
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    default: v0.0.1
                  displayName:
                    x-order: 4
                    description: Name of the component in human-readible format.
                    x-oapi-codegen-extra-tags:
                      yaml: displayName
                      json: displayName
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  description:
                    x-order: 5
                    type: string
                    description: >-
                      A written representation of the purpose and
                      characteristics of the component.
                    x-oapi-codegen-extra-tags:
                      yaml: description
                      json: description
                  format:
                    x-order: 6
                    type: string
                    enum:
                      - JSON
                      - CUE
                    default: JSON
                    description: >-
                      Format specifies the format used in the `component.schema`
                      field. JSON is the default.
                    x-oapi-codegen-extra-tags:
                      yaml: format
                      json: format
                  model:
                    x-go-type: model.ModelDefinition
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1beta1/model
                    x-order: 7
                    description: >-
                      Reference to the specific registered model to which the
                      component belongs and from which model version, category,
                      and other properties may be referenced. Learn more at
                      https://docs.meshery.io/concepts/models
                    x-oapi-codegen-extra-tags:
                      gorm: foreignKey:ModelId;references:Id
                    $id: https://schemas.meshery.io/model.json
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: false
                    type: object
                    properties:
                      id:
                        description: >-
                          Uniquely identifies the entity (i.e. component) as
                          defined in a declaration (i.e. design).
                        x-order: 1
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema used for the
                          definition.
                        x-order: 2
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          json: schemaVersion
                        default: models.meshery.io/v1beta1
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        description: Version of the model definition.
                        type: string
                        x-order: 3
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        default: v0.0.1
                      name:
                        type: string
                        description: >-
                          The unique name for the model within the scope of a
                          registrant.
                        helperText: >-
                          Model name should be in lowercase with hyphens, not
                          whitespaces.
                        pattern: ^[a-z0-9-]+$
                        examples:
                          - cert-manager
                        x-order: 4
                        x-oapi-codegen-extra-tags:
                          yaml: name
                          json: name
                        default: untitled-model
                      displayName:
                        description: Human-readable name for the model.
                        helperText: >-
                          Model display name may include letters, numbers, and
                          spaces. Special characters are not allowed.
                        minLength: 1
                        maxLength: 100
                        type: string
                        pattern: ^[a-zA-Z0-9 ]+$
                        examples:
                          - Cert Manager
                        x-order: 5
                        x-oapi-codegen-extra-tags:
                          yaml: displayName
                          json: displayName
                        default: Untitled Model
                      description:
                        type: string
                        default: A new Meshery model.
                        description: Description of the model.
                        minLength: 1
                        maxLength: 1000
                        x-order: 6
                        x-oapi-codegen-extra-tags:
                          yaml: description,omitempty
                          json: description,omitempty
                      status:
                        type: string
                        description: >-
                          Status of model, including:

                          - duplicate: this component is a duplicate of another.
                          The component that is to be the canonical reference
                          and that is duplicated by other components should not
                          be assigned the 'duplicate' status.

                          - maintenance: model is unavailable for a period of
                          time.

                          - enabled: model is available for use for all users of
                          this Meshery Server.

                          - ignored: model is unavailable for use for all users
                          of this Meshery Server.
                        enum:
                          - ignored
                          - enabled
                          - duplicate
                        x-order: 7
                        x-oapi-codegen-extra-tags:
                          yaml: status
                          json: status
                        default: enabled
                      registrant:
                        x-oapi-codegen-extra-tags:
                          yaml: registrant
                          json: registrant
                          gorm: foreignKey:RegistrantId;references:ID
                        x-order: 8
                        x-go-type: connection.Connection
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1beta1/connection
                        $id: https://schemas.meshery.io/component.json
                        $schema: http://json-schema.org/draft-07/schema#
                        description: >-
                          Meshery Connections are managed and unmanaged
                          resources that either through discovery or manual
                          entry are tracked by Meshery. Learn more at
                          https://docs.meshery.io/concepts/logical/connections
                        additionalProperties: false
                        type: object
                        required:
                          - id
                          - schemaVersion
                          - name
                          - type
                          - sub_type
                          - kind
                          - status
                        properties:
                          id:
                            description: ID
                            x-order: 1
                            x-go-name: ID
                            x-oapi-codegen-extra-tags:
                              db: id
                              yaml: id
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          name:
                            x-oapi-codegen-extra-tags:
                              db: name
                              yaml: name
                            x-order: 2
                            type: string
                            description: Connection Name
                          credential_id:
                            x-go-name: CredentialID
                            x-oapi-codegen-extra-tags:
                              db: credential_id
                              yaml: credential_id
                            x-order: 3
                            description: Credential ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          type:
                            x-oapi-codegen-extra-tags:
                              db: type
                              yaml: type
                            x-order: 4
                            type: string
                            description: Connection Type
                          sub_type:
                            x-oapi-codegen-extra-tags:
                              db: sub_type
                              yaml: sub_type
                            x-order: 5
                            type: string
                            description: Connection Subtype
                          kind:
                            x-oapi-codegen-extra-tags:
                              db: kind
                              yaml: kind
                            x-order: 6
                            type: string
                            description: Connection Kind
                          metadata:
                            x-oapi-codegen-extra-tags:
                              db: metadata
                              yaml: metadata
                            x-order: 7
                            x-go-type: core.Map
                            x-go-type-skip-optional-pointer: true
                            type: object
                          status:
                            x-oapi-codegen-extra-tags:
                              db: status
                              yaml: status
                            x-order: 8
                            description: Connection Status
                            type: string
                            enum:
                              - discovered
                              - registered
                              - connected
                              - ignored
                              - maintenance
                              - disconnected
                              - deleted
                              - not found
                          user_id:
                            x-go-name: UserID
                            x-oapi-codegen-extra-tags:
                              db: user_id
                              yaml: user_id
                            x-order: 9
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          created_at:
                            x-oapi-codegen-extra-tags:
                              db: created_at
                              yaml: created_at
                            x-order: 10
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          updated_at:
                            x-oapi-codegen-extra-tags:
                              db: updated_at
                              yaml: updated_at
                            x-order: 11
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          deleted_at:
                            x-oapi-codegen-extra-tags:
                              db: deleted_at
                              yaml: deleted_at
                            x-go-type: core.NullTime
                            x-order: 12
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          environments:
                            type: array
                            items:
                              x-go-type: '*environment.Environment'
                              $id: https://schemas.meshery.io/environment.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery Environments allow you to logically
                                group related Connections and their associated
                                Credentials.. Learn more at
                                https://docs.meshery.io/concepts/logical/environments
                              additionalProperties: false
                              type: object
                              required:
                                - id
                                - name
                                - description
                                - organization_id
                              properties:
                                id:
                                  description: ID
                                  x-order: 1
                                  x-go-name: ID
                                  x-oapi-codegen-extra-tags:
                                    db: id
                                    yaml: id
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                name:
                                  x-oapi-codegen-extra-tags:
                                    db: name
                                    yaml: name
                                  x-order: 2
                                  type: string
                                  description: Environment name
                                description:
                                  x-oapi-codegen-extra-tags:
                                    db: description
                                    yaml: description
                                  x-order: 3
                                  type: string
                                  description: Environment description
                                organization_id:
                                  x-go-name: OrganizationID
                                  x-oapi-codegen-extra-tags:
                                    db: organization_id
                                    yaml: organization_id
                                  x-order: 4
                                  description: Environment organization ID
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                owner:
                                  x-oapi-codegen-extra-tags:
                                    db: owner
                                    yaml: owner
                                  x-order: 5
                                  description: Environment owner
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                created_at:
                                  x-oapi-codegen-extra-tags:
                                    db: created_at
                                    yaml: created_at
                                  x-order: 6
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                metadata:
                                  x-oapi-codegen-extra-tags:
                                    db: metadata
                                    yaml: metadata
                                  x-order: 7
                                  x-go-type: core.Map
                                  x-go-type-skip-optional-pointer: true
                                  type: object
                                updated_at:
                                  x-oapi-codegen-extra-tags:
                                    db: updated_at
                                    yaml: updated_at
                                  x-order: 8
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                deleted_at:
                                  x-oapi-codegen-extra-tags:
                                    db: deleted_at
                                    yaml: deleted_at
                                  x-go-type: core.NullTime
                                  x-go-import: database/sql
                                  x-order: 9
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                            x-oapi-codegen-extra-tags:
                              db: '-'
                              yaml: environments
                              gorm: '-'
                            x-go-type-skip-optional-pointer: true
                            x-order: 13
                          schemaVersion:
                            description: >-
                              Specifies the version of the schema used for the
                              definition.
                            x-order: 14
                            x-oapi-codegen-extra-tags:
                              yaml: schemaVersion
                              db: '-'
                              gorm: '-'
                            default: connections.meshery.io/v1beta1
                            type: string
                            minLength: 2
                            maxLength: 100
                            pattern: >-
                              ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                            example:
                              - v1
                              - v1alpha1
                              - v2beta3
                              - v1.custom-suffix
                      registrantId:
                        description: ID of the registrant.
                        x-oapi-codegen-extra-tags:
                          yaml: connection_id
                          json: connection_id
                          gorm: column:connection_id
                        x-order: 8
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      categoryId:
                        description: ID of the category.
                        x-oapi-codegen-extra-tags:
                          yaml: '-'
                          json: '-'
                          gorm: categoryID
                        x-order: 8
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      category:
                        x-order: 9
                        x-oapi-codegen-extra-tags:
                          yaml: category
                          json: category
                          gorm: foreignKey:CategoryId;references:Id
                        x-go-type: category.CategoryDefinition
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1beta1/category
                        $id: https://schemas.meshery.io/category.json
                        $schema: http://json-schema.org/draft-07/schema#
                        type: object
                        description: Category of the model.
                        required:
                          - id
                          - name
                          - metadata
                        properties:
                          id:
                            x-order: 1
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          name:
                            type: string
                            minLength: 1
                            maxLength: 100
                            x-oapi-codegen-extra-tags:
                              yaml: name
                              json: name
                              gorm: name
                            default: Uncategorized
                            description: >-
                              The category of the model that determines the main
                              grouping.
                            enum:
                              - Analytics
                              - App Definition and Development
                              - Cloud Native Network
                              - Cloud Native Storage
                              - Database
                              - Machine Learning
                              - Observability and Analysis
                              - Orchestration & Management
                              - Platform
                              - Provisioning
                              - Runtime
                              - Security & Compliance
                              - Serverless
                              - Tools
                              - Uncategorized
                            x-order: 2
                          metadata:
                            type: object
                            x-oapi-codegen-extra-tags:
                              yaml: metadata,omitempty
                              json: metadata,omitempty
                              gorm: type:bytes;serializer:json
                            x-order: 3
                      subCategory:
                        x-order: 10
                        x-go-type: subcategory.SubCategoryDefinition
                        x-go-type-import:
                          path: >-
                            github.com/meshery/schemas/models/v1beta1/subcategory
                        $id: https://schemas.meshery.io/category.json
                        $schema: http://json-schema.org/draft-07/schema#
                        type: string
                        title: SubCategory
                        description: >-
                          Sub category of the model determines the secondary
                          grouping.
                        default: Uncategorized
                        enum:
                          - API Gateway
                          - API Integration
                          - Application Definition & Image Build
                          - Automation & Configuration
                          - Certified Kubernetes - Distribution
                          - Chaos Engineering
                          - Cloud Native Storage
                          - Cloud Provider
                          - CNI
                          - Compute
                          - Container Registry
                          - Container Runtime
                          - Container Security
                          - Container
                          - Content Delivery Network
                          - Continuous Integration & Delivery
                          - Coordination & Service Discovery
                          - Database
                          - Flowchart
                          - Framework
                          - Installable Platform
                          - Key Management
                          - Key Management Service
                          - Kubernetes
                          - Logging
                          - Machine Learning
                          - Management Governance
                          - Metrics
                          - Monitoring
                          - Networking Content Delivery
                          - Operating System
                          - Query
                          - Remote Procedure Call
                          - Scheduling & Orchestration
                          - Secrets Management
                          - Security Identity & Compliance
                          - Service Mesh
                          - Service Proxy
                          - Source Version Control
                          - Storage
                          - Specifications
                          - Streaming & Messaging
                          - Tools
                          - Tracing
                          - Uncategorized
                          - Video Conferencing
                        minLength: 1
                        maxLength: 100
                        x-oapi-codegen-extra-tags:
                          yaml: subCategory
                          json: subCategory
                      metadata:
                        type: object
                        description: >-
                          Metadata containing additional information associated
                          with the model.
                        required:
                          - svgWhite
                          - svgColor
                        properties:
                          capabilities:
                            type: array
                            description: Capabilities associated with the model
                            items:
                              x-go-type: capability.Capability
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1alpha1/capability
                              $id: https://schemas.meshery.io/capability.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery manages entities in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. Entities may define a broad
                                array of capabilities, which are in-turn
                                dynamically interpretted by Meshery for full
                                lifecycle management.
                              additionalProperties: false
                              type: object
                              required:
                                - description
                                - schemaVersion
                                - version
                                - displayName
                                - kind
                                - type
                                - subType
                                - entityState
                                - key
                                - status
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              properties:
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema to which
                                    the capability definition conforms.
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                version:
                                  description: Version of the capability definition.
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  default: v0.0.1
                                displayName:
                                  description: >-
                                    Name of the capability in human-readible
                                    format.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                description:
                                  type: string
                                  description: >-
                                    A written representation of the purpose and
                                    characteristics of the capability.
                                kind:
                                  description: Top-level categorization of the capability
                                  additionalProperties: false
                                  anyOf:
                                    - const: action
                                      description: >-
                                        For capabilities related to executing
                                        actions on entities. Example: initiate
                                        log streaming on a Pod. Example:
                                        initiate deployment of a component.
                                    - const: mutate
                                      description: >-
                                        For capabilities related to mutating an
                                        entity. Example: the ability to change
                                        the configuration of a component.
                                    - const: view
                                      description: >-
                                        For capabilities related to viewing an
                                        entity. Example: the ability to view a
                                        components configuration.
                                    - const: interaction
                                      description: >-
                                        Catch all for capabilities related to
                                        interaction with entities. Example: the
                                        ability for a component to be dragged
                                        and dropped. Example: supports event
                                        bubbling to parent components. 
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                type:
                                  description: >-
                                    Classification of capabilities. Used to
                                    group capabilities similar in nature.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                subType:
                                  description: >-
                                    Most granular unit of capability
                                    classification. The combination of Kind,
                                    Type and SubType together uniquely identify
                                    a Capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                key:
                                  description: Key that backs the capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                entityState:
                                  description: >-
                                    State of the entity in which the capability
                                    is applicable.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - declaration
                                      - instance
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description: >-
                                      A string starting with an alphanumeric
                                      character. Spaces and hyphens allowed.
                                status:
                                  type: string
                                  description: Status of the capability
                                  default: enabled
                                  enum:
                                    - enabled
                                    - disabled
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata contains additional information
                                    associated with the capability. Extension
                                    point.
                                  additionalProperties: true
                              default:
                                - description: >-
                                    Configure the visual styles for the
                                    component
                                  displayName: Styling
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: ''
                                  type: style
                                  version: 0.7.0
                                - description: Change the shape of the component
                                  displayName: Change Shape
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: shape
                                  type: style
                                  version: 0.7.0
                                - description: >-
                                    Drag and Drop a component into a parent
                                    component in graph view
                                  displayName: Compound Drag And Drop
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: interaction
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: compoundDnd
                                  type: graph
                                  version: 0.7.0
                                - description: Add text to nodes body
                                  displayName: Body Text
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: body-text
                                  type: style
                                  version: 0.7.0
                            x-order: 1
                          isAnnotation:
                            type: boolean
                            description: >-
                              Indicates whether the model and its entities
                              should be treated as deployable entities or as
                              logical representations.
                            x-oapi-codegen-extra-tags:
                              yaml: isAnnotation
                              json: isAnnotation
                            x-order: 2
                            default: false
                          primaryColor:
                            type: string
                            description: Primary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            default: '#00b39f'
                            x-oapi-codegen-extra-tags:
                              yaml: primaryColor
                              json: primaryColor
                            x-order: 3
                          secondaryColor:
                            type: string
                            description: Secondary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            default: '#00D3A9'
                            x-oapi-codegen-extra-tags:
                              yaml: secondaryColor
                              json: secondaryColor
                            x-order: 4
                          svgWhite:
                            type: string
                            description: SVG representation of the model in white color.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgWhite
                              json: svgWhite
                            x-order: 5
                            default: >-
                              <svg width="32" height="32" viewBox="0 0 32 32"
                              fill="none"
                              xmlns="http://www.w3.org/2000/svg"><path
                              d="M16.405 8.732v6.57l5.694-3.297-5.694-3.273Zm0
                              7.942v6.602l5.747-3.285-5.747-3.317Z"
                              fill="#fff"/><path d="M15.586 15.256v-6.47l-5.622
                              3.225 5.622 3.245ZM4.307 23.252a13.809 13.809 0 0
                              0 4.362 4.39v-6.914l-4.362
                              2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z"
                              fill="#fff" fill-opacity=".8"/><path d="m9.49
                              27.23 5.707-3.263-5.707-3.3v6.563Z"
                              fill="#fff"/><path d="M22.54 27.265v-6.553l-5.699
                              3.259 5.7 3.294Zm5.58-4.773a13.697 13.697 0 0 0
                              1.612-5.895l-5.934 3.397 4.323 2.498Z" fill="#fff"
                              fill-opacity=".8"/><path d="m23.362 19.298
                              5.728-3.276-5.728-3.291v6.567Z" fill="#fff"/><path
                              d="M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                              7.955v-6.574l-5.685 3.292 5.685 3.281Z"
                              fill="#fff" fill-opacity=".8"/><path d="M9.49
                              12.684v6.622l5.728-3.316-5.728-3.306Z"
                              fill="#fff"/><path d="M15.586 2.25a13.69 13.69 0 0
                              0-6.037 1.595l6.037 3.463V2.25Z" fill="#fff"
                              fill-opacity=".8"/><path d="M9.49
                              4.756v6.583l5.732-3.288L9.49 4.756Z"
                              fill="#fff"/><path d="M8.669 4.356a13.83 13.83 0 0
                              0-4.362 4.39l4.362 2.518V4.356Z" fill="#fff"
                              fill-opacity=".8"/><path d="M22.504 3.88a13.695
                              13.695 0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25
                              16.483c.071 2.12.634 4.196 1.644
                              6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68
                              13.68 0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z"
                              fill="#fff"/><path d="M9.539 28.147a13.673 13.673
                              0 0 0 6.047 1.603v-5.062L9.54 28.147Z" fill="#fff"
                              fill-opacity=".8"/><path d="M27.697 8.768a13.83
                              13.83 0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362
                              27.62a13.851 13.851 0 0 0
                              4.351-4.417l-4.351-2.514v6.93Z" fill="#fff"/><path
                              d="M29.75 15.452a13.659 13.659 0 0
                              0-1.63-5.979l-4.381 2.53 6.011 3.45Z" fill="#fff"
                              fill-opacity=".8"/><path d="M16.405 29.75a13.673
                              13.673 0 0 0 6.036-1.595l-6.036-3.498v5.093Z"
                              fill="#fff"/><path d="M8.669 19.247v-6.494L3.03
                              15.986l5.639 3.261Z" fill="#fff"
                              fill-opacity=".8"/></svg>
                          svgColor:
                            type: string
                            description: SVG representation of the model in colored format.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgColor
                              json: svgColor
                            x-order: 6
                            default: >-
                              <svg xmlns="http://www.w3.org/2000/svg"
                              id="Layer_1" data-name="Layer 1" viewBox="0 0
                              134.95
                              135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                              points="69.49 31.82 69.49 64.07 97.44 47.89 69.49
                              31.82" class="cls-1"/><polygon points="69.49 70.81
                              69.49 103.22 97.7 87.09 69.49 70.81"
                              class="cls-1"/><polygon points="65.47 63.85 65.47
                              32.09 37.87 47.92 65.47 63.85"
                              class="cls-2"/><path
                              d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                              class="cls-2"/><polygon points="65.47 103.06 65.47
                              71.05 37.8 87.07 65.47 103.06"
                              class="cls-2"/><polygon points="35.54 122.63 63.56
                              106.61 35.54 90.41 35.54 122.63"
                              class="cls-1"/><polygon points="99.61 122.8 99.61
                              90.63 71.63 106.63 99.61 122.8"
                              class="cls-2"/><path
                              d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                              class="cls-2"/><polygon points="103.64 83.69
                              131.76 67.61 103.64 51.45 103.64 83.69"
                              class="cls-1"/><polygon points="99.61 44.5 99.61
                              12.52 71.76 28.49 99.61 44.5"
                              class="cls-2"/><polygon points="99.61 83.55 99.61
                              51.28 71.7 67.44 99.61 83.55"
                              class="cls-2"/><polygon points="67.48 135.02 67.49
                              135.02 67.48 135.02 67.48 135.02"
                              class="cls-2"/><polygon points="35.54 51.22 35.54
                              83.73 63.66 67.45 35.54 51.22"
                              class="cls-1"/><path
                              d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                              class="cls-2"/><polygon points="35.54 12.3 35.54
                              44.62 63.68 28.48 35.54 12.3" class="cls-1"/><path
                              d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                              class="cls-2"/><path
                              d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                              class="cls-1"/><path
                              d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                              class="cls-1"/><path
                              d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                              class="cls-1"/><path
                              d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                              class="cls-2"/><path
                              d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                              class="cls-1"/><path
                              d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                              class="cls-1"/><path
                              d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                              class="cls-2"/><path
                              d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                              class="cls-1"/><polygon points="31.51 83.44 31.51
                              51.56 3.83 67.43 31.51 83.44"
                              class="cls-2"/></svg>
                          svgComplete:
                            type: string
                            description: SVG representation of the complete model.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgComplete
                              json: svgComplete
                            x-order: 7
                          shape:
                            x-order: 8
                            type: string
                            description: >-
                              The shape of the node’s body. Note that each shape
                              fits within the specified width and height, and so
                              you may have to adjust width and height if you
                              desire an equilateral shape (i.e. width !== height
                              for several equilateral shapes)
                            default: circle
                            enum:
                              - circle
                              - ellipse
                              - triangle
                              - round-triangle
                              - rectangle
                              - round-rectangle
                              - bottom-round-rectangle
                              - cut-rectangle
                              - barrel
                              - rhomboid
                              - diamond
                              - round-diamond
                              - pentagon
                              - round-pentagon
                              - hexagon
                              - round-hexagon
                              - concave-hexagon
                              - heptagon
                              - round-heptagon
                              - octagon
                              - round-octagon
                              - star
                              - tag
                              - round-tag
                              - vee
                              - polygon
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                          json: metadata
                          yaml: metadata
                        x-order: 11
                        additionalProperties: true
                      model:
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        x-order: 12
                        type: object
                        description: >-
                          Registrant-defined data associated with the model.
                          Properties pertain to the software being managed (e.g.
                          Kubernetes v1.31).
                        required:
                          - version
                        properties:
                          version:
                            description: Version of the model as defined by the registrant.
                            allOf:
                              - type: string
                                minLength: 5
                                maxLength: 100
                                pattern: >-
                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                description: >-
                                  A valid semantic version string between 5 and
                                  256 characters. The pattern allows for a
                                  major.minor.patch version followed by an
                                  optional pre-release tag like '-alpha' or
                                  '-beta.2' and an optional build metadata tag
                                  like '+build.1.
                                default: v0.0.1
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            x-order: 1
                      relationships:
                        type: array
                        x-go-type: interface{}
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: relationships
                          yaml: relationships
                      components:
                        type: array
                        x-go-type: interface{}
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: components
                          yaml: components
                      componentsCount:
                        type: integer
                        description: Number of components associated with the model.
                        x-order: 13
                        x-oapi-codegen-extra-tags:
                          json: components_count
                          yaml: components_count
                          gorm: '-'
                        default: 0
                      relationshipsCount:
                        type: integer
                        description: Number of relationships associated with the model.
                        x-order: 13
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: relationships_count
                          yaml: relationships_count
                        default: 0
                    required:
                      - id
                      - schemaVersion
                      - displayName
                      - status
                      - subCategory
                      - model
                      - name
                      - description
                      - version
                      - registrant
                      - category
                      - categoryId
                      - registrantId
                      - relationshipsCount
                      - componentsCount
                      - components
                      - relationships
                  modelId:
                    description: >-
                      ModelId is the foreign key to the model to which the
                      component belongs.
                    x-oapi-codegen-extra-tags:
                      gorm: >-
                        index:idx_component_definition_dbs_model_id,column:model_id
                      yaml: '-'
                      json: '-'
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  styles:
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                      yaml: styles
                      json: styles
                    x-go-type: core.ComponentStyles
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1alpha1/core
                    x-order: 8
                    type: object
                    description: Visualization styles for a component
                    required:
                      - shape
                      - primaryColor
                      - svgColor
                      - svgWhite
                      - svgComplete
                    allOf:
                      - type: object
                        description: Common styles for all entities
                        additionalProperties: true
                        required:
                          - primaryColor
                          - svgColor
                          - svgWhite
                          - svgComplete
                        properties:
                          primaryColor:
                            type: string
                            description: >-
                              Primary color of the component used for UI
                              representation.
                          secondaryColor:
                            type: string
                            description: >-
                              Secondary color of the entity used for UI
                              representation.
                          svgWhite:
                            type: string
                            description: >-
                              White SVG of the entity used for UI representation
                              on dark background.
                          svgColor:
                            type: string
                            description: >-
                              Colored SVG of the entity used for UI
                              representation on light background.
                          svgComplete:
                            type: string
                            description: >-
                              Complete SVG of the entity used for UI
                              representation, often inclusive of background.
                          color:
                            type: string
                            description: >-
                              The color of the element's label. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          text-opacity:
                            type: number
                            description: >-
                              The opacity of the label text, including its
                              outline.
                            minimum: 0
                            maximum: 1
                          font-family:
                            type: string
                            description: >-
                              A comma-separated list of font names to use on the
                              label text.
                          font-size:
                            type: string
                            description: The size of the label text.
                          font-style:
                            type: string
                            description: A CSS font style to be applied to the label text.
                          font-weight:
                            type: string
                            description: A CSS font weight to be applied to the label text.
                          text-transform:
                            type: string
                            description: A transformation to apply to the label text
                            enum:
                              - none
                              - uppercase
                              - lowercase
                          opacity:
                            type: number
                            description: >-
                              The opacity of the element, ranging from 0 to 1.
                              Note that the opacity of a compound node parent
                              affects the effective opacity of its children.
                            minimum: 0
                            maximum: 1
                          z-index:
                            type: integer
                            description: >-
                              An integer value that affects the relative draw
                              order of elements. In general, an element with a
                              higher z-index will be drawn on top of an element
                              with a lower z-index. Note that edges are under
                              nodes despite z-index.
                          label:
                            type: string
                            description: >-
                              The text to display for an element's label. Can
                              give a path, e.g. data(id) will label with the
                              elements id
                          animation:
                            type: object
                            description: >-
                              The animation to apply to the element. example
                              ripple,bounce,etc
                      - type: object
                        properties:
                          shape:
                            type: string
                            description: >-
                              The shape of the node's body. Note that each shape
                              fits within the specified width and height, and so
                              you may have to adjust width and height if you
                              desire an equilateral shape (i.e. width !== height
                              for several equilateral shapes)
                            enum:
                              - ellipse
                              - triangle
                              - round-triangle
                              - rectangle
                              - round-rectangle
                              - bottom-round-rectangle
                              - cut-rectangle
                              - barrel
                              - rhomboid
                              - diamond
                              - round-diamond
                              - pentagon
                              - round-pentagon
                              - hexagon
                              - round-hexagon
                              - concave-hexagon
                              - heptagon
                              - round-heptagon
                              - octagon
                              - round-octagon
                              - star
                              - tag
                              - round-tag
                              - vee
                              - polygon
                          position:
                            type: object
                            additionalProperties: false
                            required:
                              - x
                              - 'y'
                            description: >-
                              The position of the node. If the position is set,
                              the node is drawn at that position in the given
                              dimensions. If the position is not set, the node
                              is drawn at a random position.
                            properties:
                              x:
                                type: number
                                description: The x-coordinate of the node.
                                x-go-type: float64
                              'y':
                                type: number
                                description: The y-coordinate of the node.
                                x-go-type: float64
                          body-text:
                            type: string
                            description: >-
                              The text to display for an element's body. Can
                              give a path, e.g. data(id) will label with the
                              elements id
                          body-text-wrap:
                            type: string
                            description: >-
                              How to wrap the text in the node. Can be 'none',
                              'wrap', or 'ellipsis'.
                          body-text-max-width:
                            type: string
                            description: The maximum width for wrapping text in the node.
                          body-text-opacity:
                            type: number
                            description: >-
                              The opacity of the node's body text, including its
                              outline.
                            minimum: 0
                            maximum: 1
                          body-text-background-color:
                            type: string
                            description: >-
                              The colour of the node's body text background.
                              Colours may be specified by name (e.g. red), hex
                              (e.g.
                          body-text-font-size:
                            type: number
                            description: The size of the node's body text.
                          body-text-color:
                            type: string
                            description: >-
                              The colour of the node's body text. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          body-text-font-weight:
                            type: string
                            description: >-
                              A CSS font weight to be applied to the node's body
                              text.
                          body-text-horizontal-align:
                            type: string
                            description: >-
                              A CSS horizontal alignment to be applied to the
                              node's body text.
                          body-text-decoration:
                            type: string
                            description: >-
                              A CSS text decoration to be applied to the node's
                              body text.
                          body-text-vertical-align:
                            type: string
                            description: >-
                              A CSS vertical alignment to be applied to the
                              node's body text.
                          width:
                            type: number
                            description: >-
                              The width of the node's body or the width of an
                              edge's line.
                          height:
                            type: number
                            description: The height of the node's body
                          background-image:
                            type: string
                            description: >-
                              The URL that points to the image to show in the
                              node.
                          background-color:
                            type: string
                            description: >-
                              The colour of the node's body. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          background-blacken:
                            type: number
                            description: >-
                              Blackens the node's body for values from 0 to 1;
                              whitens the node's body for values from 0 to -1.
                            maximum: 1
                            minimum: -1
                          background-opacity:
                            type: number
                            description: The opacity level of the node's background colour
                            maximum: 1
                            minimum: 0
                          background-position-x:
                            type: string
                            description: >-
                              The x position of the background image, measured
                              in percent (e.g. 50%) or pixels (e.g. 10px)
                          background-position-y:
                            type: string
                            description: >-
                              The y position of the background image, measured
                              in percent (e.g. 50%) or pixels (e.g. 10px)
                          background-offset-x:
                            type: string
                            description: >-
                              The x offset of the background image, measured in
                              percent (e.g. 50%) or pixels (e.g. 10px)
                          background-offset-y:
                            type: string
                            description: >-
                              The y offset of the background image, measured in
                              percent (e.g. 50%) or pixels (e.g. 10px)
                          background-fit:
                            type: string
                            description: >-
                              How the background image is fit to the node. Can
                              be 'none', 'contain', or 'cover'.
                          background-clip:
                            type: string
                            description: >-
                              How the background image is clipped to the node.
                              Can be 'none', 'node', or 'node-border'.
                          background-width-relative-to:
                            type: string
                            description: >-
                              How the background image's width is determined.
                              Can be 'none', 'inner', or 'outer'.
                          background-height-relative-to:
                            type: string
                            description: >-
                              How the background image's height is determined.
                              Can be 'none', 'inner', or 'outer'.
                          border-width:
                            type: number
                            description: The size of the node's border.
                            minimum: 0
                          border-style:
                            type: string
                            description: The style of the node's border
                            enum:
                              - solid
                              - dotted
                              - dashed
                              - double
                          border-color:
                            type: string
                            description: >-
                              The colour of the node's border. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          border-opacity:
                            type: number
                            description: The opacity of the node's border
                            minimum: 0
                            maximum: 1
                          padding:
                            type: number
                            description: >-
                              The amount of padding around all sides of the
                              node.
                            minimum: 0
                          text-halign:
                            type: string
                            description: The horizontal alignment of a node's label
                            enum:
                              - left
                              - center
                              - right
                          text-valign:
                            type: string
                            description: The vertical alignment of a node's label
                            enum:
                              - top
                              - center
                              - bottom
                          ghost:
                            type: string
                            description: >-
                              Whether to use the ghost effect, a semitransparent
                              duplicate of the element drawn at an offset.
                            default: 'no'
                            enum:
                              - 'yes'
                              - 'no'
                          active-bg-color:
                            type: string
                            description: >-
                              The colour of the indicator shown when the
                              background is grabbed by the user. Selector needs
                              to be *core*. Colours may be specified by name
                              (e.g. red), hex (e.g.
                          active-bg-opacity:
                            type: string
                            description: >-
                              The opacity of the active background indicator.
                              Selector needs to be *core*.
                          active-bg-size:
                            type: string
                            description: >-
                              The opacity of the active background indicator.
                              Selector needs to be *core*.
                          selection-box-color:
                            type: string
                            description: >-
                              The background colour of the selection box used
                              for drag selection. Selector needs to be *core*.
                              Colours may be specified by name (e.g. red), hex
                              (e.g.
                          selection-box-border-width:
                            type: number
                            description: >-
                              The size of the border on the selection box.
                              Selector needs to be *core*
                          selection-box-opacity:
                            type: number
                            description: >-
                              The opacity of the selection box. Selector needs
                              to be *core*
                            minimum: 0
                            maximum: 1
                          outside-texture-bg-color:
                            type: string
                            description: >-
                              The colour of the area outside the viewport
                              texture when initOptions.textureOnViewport ===
                              true. Selector needs to be *core*. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          outside-texture-bg-opacity:
                            type: number
                            description: >-
                              The opacity of the area outside the viewport
                              texture. Selector needs to be *core*
                            minimum: 0
                            maximum: 1
                          shape-polygon-points:
                            type: string
                            description: >-
                              An array (or a space-separated string) of numbers
                              ranging on [-1, 1], representing alternating x and
                              y values (i.e. x1 y1 x2 y2, x3 y3 ...). This
                              represents the points in the polygon for the
                              node's shape. The bounding box of the node is
                              given by (-1, -1), (1, -1), (1, 1), (-1, 1). The
                              node's position is the origin (0, 0 )
                          menu-background-color:
                            type: string
                            description: >-
                              The colour of the background of the component
                              menu. Colours may be specified by name (e.g. red),
                              hex (e.g.
                          menu-background-opacity:
                            type: number
                            description: >-
                              The opacity of the background of the component
                              menu.
                            minimum: 0
                            maximum: 1
                          menu-forground-color:
                            type: string
                            description: >-
                              The colour of the text or icons in the component
                              menu. Colours may be specified by name (e.g. red),
                              hex (e.g.
                  capabilities:
                    x-order: 9
                    type: array
                    description: >-
                      Meshery manages components in accordance with their
                      specific capabilities. This field explicitly identifies
                      those capabilities largely by what actions a given
                      component supports; e.g. metric-scrape, sub-interface, and
                      so on. This field is extensible. ComponentDefinitions may
                      define a broad array of capabilities, which are in-turn
                      dynamically interpretted by Meshery for full lifecycle
                      management.
                    items:
                      x-go-type: capability.Capability
                      x-go-type-import:
                        path: github.com/meshery/schemas/models/v1alpha1/capability
                      $id: https://schemas.meshery.io/capability.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Meshery manages entities in accordance with their
                        specific capabilities. This field explicitly identifies
                        those capabilities largely by what actions a given
                        component supports; e.g. metric-scrape, sub-interface,
                        and so on. This field is extensible. Entities may define
                        a broad array of capabilities, which are in-turn
                        dynamically interpretted by Meshery for full lifecycle
                        management.
                      additionalProperties: false
                      type: object
                      required:
                        - description
                        - schemaVersion
                        - version
                        - displayName
                        - kind
                        - type
                        - subType
                        - entityState
                        - key
                        - status
                      x-oapi-codegen-extra-tags:
                        gorm: type:bytes;serializer:json
                      properties:
                        schemaVersion:
                          description: >-
                            Specifies the version of the schema to which the
                            capability definition conforms.
                          type: string
                          minLength: 2
                          maxLength: 100
                          pattern: >-
                            ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                          example:
                            - v1
                            - v1alpha1
                            - v2beta3
                            - v1.custom-suffix
                        version:
                          description: Version of the capability definition.
                          type: string
                          minLength: 5
                          maxLength: 100
                          pattern: >-
                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          default: v0.0.1
                        displayName:
                          description: Name of the capability in human-readible format.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        description:
                          type: string
                          description: >-
                            A written representation of the purpose and
                            characteristics of the capability.
                        kind:
                          description: Top-level categorization of the capability
                          additionalProperties: false
                          anyOf:
                            - const: action
                              description: >-
                                For capabilities related to executing actions on
                                entities. Example: initiate log streaming on a
                                Pod. Example: initiate deployment of a
                                component.
                            - const: mutate
                              description: >-
                                For capabilities related to mutating an entity.
                                Example: the ability to change the configuration
                                of a component.
                            - const: view
                              description: >-
                                For capabilities related to viewing an entity.
                                Example: the ability to view a components
                                configuration.
                            - const: interaction
                              description: >-
                                Catch all for capabilities related to
                                interaction with entities. Example: the ability
                                for a component to be dragged and dropped.
                                Example: supports event bubbling to parent
                                components. 
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        type:
                          description: >-
                            Classification of capabilities. Used to group
                            capabilities similar in nature.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        subType:
                          description: >-
                            Most granular unit of capability classification. The
                            combination of Kind, Type and SubType together
                            uniquely identify a Capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        key:
                          description: Key that backs the capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        entityState:
                          description: >-
                            State of the entity in which the capability is
                            applicable.
                          type: array
                          items:
                            type: string
                            enum:
                              - declaration
                              - instance
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description: >-
                              A string starting with an alphanumeric character.
                              Spaces and hyphens allowed.
                        status:
                          type: string
                          description: Status of the capability
                          default: enabled
                          enum:
                            - enabled
                            - disabled
                        metadata:
                          type: object
                          description: >-
                            Metadata contains additional information associated
                            with the capability. Extension point.
                          additionalProperties: true
                      default:
                        - description: Configure the visual styles for the component
                          displayName: Styling
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: ''
                          type: style
                          version: 0.7.0
                        - description: Change the shape of the component
                          displayName: Change Shape
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: shape
                          type: style
                          version: 0.7.0
                        - description: >-
                            Drag and Drop a component into a parent component in
                            graph view
                          displayName: Compound Drag And Drop
                          entityState:
                            - declaration
                          key: ''
                          kind: interaction
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: compoundDnd
                          type: graph
                          version: 0.7.0
                        - description: Add text to nodes body
                          displayName: Body Text
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: body-text
                          type: style
                          version: 0.7.0
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                      yaml: capabilities
                      json: capabilities
                    default:
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Performance Test
                        description: >-
                          Initiate a performance test. Meshery will execute the
                          load generation, collect metrics, and present the
                          results.
                        kind: action
                        type: operator
                        subType: perf-test
                        key: ''
                        entityState:
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Workload Configuration
                        description: Configure the workload specific setting of a component
                        kind: mutate
                        type: configuration
                        subType: config
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Labels and Annotations Configuration
                        description: 'Configure Labels And Annotations for  the component '
                        kind: mutate
                        type: configuration
                        subType: labels-and-annotations
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Relationships
                        description: View relationships for the component
                        kind: view
                        type: configuration
                        subType: relationship
                        key: ''
                        entityState:
                          - declaration
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Json Schema
                        description: 'View Component Definition '
                        kind: view
                        type: configuration
                        subType: definition
                        key: ''
                        entityState:
                          - declaration
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Styling
                        description: Configure the visual styles for the component
                        kind: mutate
                        type: style
                        subType: ''
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Change Shape
                        description: Change the shape of the component
                        kind: mutate
                        type: style
                        subType: shape
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Compound Drag And Drop
                        description: >-
                          Drag and Drop a component into a parent component in
                          graph view
                        kind: interaction
                        type: graph
                        subType: compoundDnd
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                  status:
                    x-order: 10
                    type: string
                    description: >-
                      Status of component, including:

                      - duplicate: this component is a duplicate of another. The
                      component that is to be the canonical reference and that
                      is duplicated by other components should not be assigned
                      the 'duplicate' status.

                      - maintenance: model is unavailable for a period of time.

                      - enabled: model is available for use for all users of
                      this Meshery Server.

                      - ignored: model is unavailable for use for all users of
                      this Meshery Server.
                    default: enabled
                    enum:
                      - ignored
                      - enabled
                      - duplicate
                      - resolved
                      - open
                    x-oapi-codegen-extra-tags:
                      yaml: status
                      json: status
                  metadata:
                    x-order: 11
                    type: object
                    description: >-
                      Metadata contains additional information associated with
                      the component.
                    required:
                      - genealogy
                      - isAnnotation
                      - isNamespaced
                      - published
                      - instanceDetails
                      - configurationUISchema
                    properties:
                      genealogy:
                        x-order: 1
                        type: string
                        description: >-
                          Genealogy represents the various representational
                          states of the component.
                      isAnnotation:
                        x-order: 2
                        type: boolean
                        description: >-
                          Identifies whether the component is semantically
                          meaningful or not; identifies whether the component
                          should be treated as deployable entity or is for
                          purposes of logical representation.
                        default: false
                      isNamespaced:
                        x-order: 3
                        type: boolean
                        description: >-
                          Identifies whether the component is scoped to
                          namespace or clsuter wide.
                      published:
                        x-order: 4
                        type: boolean
                        description: >-
                          'published' controls whether the component should be
                          registered in Meshery Registry. When the same
                          'published' property in Models, is set to 'false', the
                          Model property takes precedence with all Entities in
                          the Model not being registered.
                      instanceDetails:
                        x-order: 5
                        type: object
                        description: >-
                          InstanceDetails contains information about the
                          instance of the component.
                      configurationUISchema:
                        x-order: 6
                        type: string
                        description: >-
                          Defines the UI schema for rendering the component's
                          configuration. For more details, visit:
                          https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                          .
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    additionalProperties: true
                  configuration:
                    x-order: 12
                    description: >-
                      The configuration of the component. The configuration is
                      based on the schema defined within the component
                      definition(component.schema).
                    type: object
                    $comment: >-
                      The configuration of the component. The configuration is
                      based on the schema defined within the component
                      definition(component.schema).
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                  component:
                    x-order: 13
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    x-go-type: Component
                    description: >-
                      data related to the third party capability that Component
                      Defintion wraps , this is herematicaly sealed an
                    type: object
                    properties:
                      version:
                        type: string
                        description: >-
                          Version of the component produced by the registrant.
                          Example: APIVersion of a Kubernetes Pod.
                        x-order: 1
                      kind:
                        type: string
                        description: >-
                          The unique identifier (name) assigned by the
                          registrant to this component. Example: A Kubernetes
                          Pod is of kind 'Pod'.
                        x-order: 2
                      schema:
                        type: string
                        description: >-
                          JSON schema of the object as defined by the
                          registrant.
                        x-order: 3
                    required:
                      - version
                      - kind
                      - schema
                required:
                  - id
                  - displayName
                  - description
                  - schemaVersion
                  - format
                  - version
                  - configuration
                  - metadata
                  - modelId
                  - model
                  - component
            preferences:
              type: object
              description: Design-level preferences
              x-order: 7
              properties:
                layers:
                  type: object
                  description: List of available layers
              required:
                - layers
            relationships:
              description: List of relationships between components
              type: array
              x-order: 8
              items:
                x-go-type: '*relationship.RelationshipDefinition'
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1alpha3/relationship
                $id: https://schemas.meshery.io/relationship.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Relationships define the nature of interaction between
                  interconnected components in Meshery. The combination of
                  relationship properties kind, type, and subtype characterize
                  various genealogical relations among and between components.
                  Relationships have selectors, selector sets, metadata, and
                  optional parameters. Learn more at
                  https://docs.meshery.io/concepts/logical/relationships.
                required:
                  - schemaVersion
                  - version
                  - model
                  - kind
                  - type
                  - subType
                additionalProperties: false
                type: object
                properties:
                  id:
                    description: >-
                      Uniquely identifies the entity (i.e. component) as defined
                      in a declaration (i.e. design).
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      yaml: id
                      json: id
                  schemaVersion:
                    description: >-
                      Specifies the version of the schema used for the
                      relationship definition.
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                    x-oapi-codegen-extra-tags:
                      yaml: schemaVersion
                      json: schemaVersion
                    default: relationships.meshery.io/v1alpha3
                  version:
                    type: string
                    minLength: 5
                    maxLength: 100
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    description: >-
                      A valid semantic version string between 5 and 256
                      characters. The pattern allows for a major.minor.patch
                      version followed by an optional pre-release tag like
                      '-alpha' or '-beta.2' and an optional build metadata tag
                      like '+build.1.
                    default: v0.0.1
                    x-oapi-codegen-extra-tags:
                      yaml: version
                      json: version
                  model:
                    description: Name of the model in which this relationship is packaged.
                    $id: https://schemas.meshery.io/model.json
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: false
                    type: object
                    properties:
                      id:
                        description: >-
                          Uniquely identifies the entity (i.e. component) as
                          defined in a declaration (i.e. design).
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema used for the
                          definition.
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          json: schemaVersion
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        description: Version of the model definition.
                        type: string
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                      name:
                        description: >-
                          The unique name for the model within the scope of a
                          registrant.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: name
                          json: name
                      displayName:
                        description: Human-readable name for the model.
                        minLength: 1
                        maxLength: 100
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                        x-oapi-codegen-extra-tags:
                          yaml: displayName
                          json: displayName
                      description:
                        type: string
                        description: Description of the model.
                        minLength: 1
                        maxLength: 1000
                        x-oapi-codegen-extra-tags:
                          yaml: description
                          json: description
                      status:
                        type: string
                        description: >-
                          Status of model, including:

                          - duplicate: this component is a duplicate of another.
                          The component that is to be the canonical reference
                          and that is duplicated by other components should not
                          be assigned the 'duplicate' status.

                          - maintenance: model is unavailable for a period of
                          time.

                          - enabled: model is available for use for all users of
                          this Meshery Server.

                          - ignored: model is unavailable for use for all users
                          of this Meshery Server.
                        enum:
                          - ignored
                          - enabled
                          - duplicate
                        x-oapi-codegen-extra-tags:
                          yaml: status
                          json: status
                      registrant:
                        x-oapi-codegen-extra-tags:
                          yaml: registrant
                          json: registrant
                          gorm: foreignKey:RegistrantId;references:Id
                        $id: https://schemas.meshery.io/component.json
                        $schema: http://json-schema.org/draft-07/schema#
                        description: >-
                          Meshery Connections are managed and unmanaged
                          resources that either through discovery or manual
                          entry are tracked by Meshery. Learn more at
                          https://docs.meshery.io/concepts/logical/connections
                        additionalProperties: false
                        type: object
                        required:
                          - kind
                          - type
                          - status
                        properties:
                          id:
                            description: ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                          name:
                            x-oapi-codegen-extra-tags:
                              db: name
                              yaml: name
                              json: name
                            type: string
                            description: Connection Name
                          credential_id:
                            x-go-name: CredentialId
                            x-oapi-codegen-extra-tags:
                              db: credential_id
                              yaml: credential_id
                              json: credential_id
                            description: Credential ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          type:
                            x-oapi-codegen-extra-tags:
                              db: type
                              yaml: type
                              json: type
                            type: string
                            description: Connection Type
                          sub_type:
                            x-oapi-codegen-extra-tags:
                              db: sub_type
                              yaml: sub_type
                              json: sub_type
                            type: string
                            description: Connection Subtype
                          kind:
                            x-oapi-codegen-extra-tags:
                              db: kind
                              yaml: kind
                              json: kind
                            type: string
                            description: Connection Kind
                          metadata:
                            x-oapi-codegen-extra-tags:
                              db: metadata
                              yaml: metadata
                              json: metadata
                            type: object
                          status:
                            x-oapi-codegen-extra-tags:
                              db: status
                              yaml: status
                              json: status
                            description: Connection Status
                            type: string
                            enum:
                              - discovered
                              - registered
                              - connected
                              - ignored
                              - maintenance
                              - disconnected
                              - deleted
                              - not found
                          user_id:
                            x-go-name: UserID
                            x-oapi-codegen-extra-tags:
                              yaml: user_id
                              json: user_id
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          created_at:
                            x-oapi-codegen-extra-tags:
                              yaml: created_at
                              json: created_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          updated_at:
                            x-oapi-codegen-extra-tags:
                              yaml: updated_at
                              json: updated_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          deleted_at:
                            x-oapi-codegen-extra-tags:
                              yaml: deleted_at
                              json: deleted_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                      category:
                        type: object
                        description: Category of the model.
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                          name:
                            type: string
                            minLength: 1
                            maxLength: 100
                            x-oapi-codegen-extra-tags:
                              yaml: name
                              json: name
                          metadata:
                            type: object
                            x-oapi-codegen-extra-tags:
                              yaml: metadata
                              json: metadata
                        x-oapi-codegen-extra-tags:
                          yaml: category
                          json: category
                          gorm: foreignKey:CategoryId;references:Id
                      subCategory:
                        type: string
                        description: Sub-category of the model.
                        minLength: 1
                        maxLength: 100
                        x-oapi-codegen-extra-tags:
                          yaml: subCategory
                          json: subCategory
                      metadata:
                        type: object
                        description: >-
                          Metadata containing additional information associated
                          with the model.
                        properties:
                          capabilities:
                            type: array
                            description: Capabilities associated with the model
                            items:
                              $id: https://schemas.meshery.io/capability.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery manages entities in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. Entities may define a broad
                                array of capabilities, which are in-turn
                                dynamically interpretted by Meshery for full
                                lifecycle management.
                              additionalProperties: false
                              type: object
                              required:
                                - schemaVersion
                                - version
                                - displayName
                                - kind
                                - type
                                - entityState
                                - status
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              properties:
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema to which
                                    the capability definition conforms.
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                  x-oapi-codegen-extra-tags:
                                    yaml: schemaVersion
                                    json: schemaVersion
                                version:
                                  description: Version of the capability definition.
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  x-oapi-codegen-extra-tags:
                                    yaml: version
                                    json: version
                                displayName:
                                  description: >-
                                    Name of the capability in human-readible
                                    format.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: displayName
                                    json: displayName
                                description:
                                  type: string
                                  description: >-
                                    A written representation of the purpose and
                                    characteristics of the capability.
                                  x-oapi-codegen-extra-tags:
                                    yaml: description
                                    json: description
                                kind:
                                  description: Top-level categorization of the capability
                                  additionalProperties: false
                                  anyOf:
                                    - const: action
                                      description: >-
                                        For capabilities related to executing
                                        actions on entities. Example: initiate
                                        log streaming on a Pod. Example:
                                        initiate deployment of a component.
                                    - const: mutate
                                      description: >-
                                        For capabilities related to mutating an
                                        entity. Example: the ability to change
                                        the configuration of a component.
                                    - const: view
                                      description: >-
                                        For capabilities related to viewing an
                                        entity. Example: the ability to view a
                                        components configuration.
                                    - const: interaction
                                      description: >-
                                        Catch all for capabilities related to
                                        interaction with entities. Example: the
                                        ability for a component to be dragged
                                        and dropped. Example: supports event
                                        bubbling to parent components. 
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: kind
                                    json: kind
                                type:
                                  description: >-
                                    Classification of capabilities. Used to
                                    group capabilities similar in nature.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: type
                                    json: type
                                subType:
                                  description: >-
                                    Most granular unit of capability
                                    classification. The combination of Kind,
                                    Type and SubType together uniquely identify
                                    a Relaationship.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  oneOf:
                                    - const: inventory
                                      description: >-
                                        A hierarchical inventory relationship in
                                        which the configuration of (parent)
                                        component is patched with the
                                        configuration of other (child)
                                        component. Eg: The configuration of the
                                        EnvoyFilter (parent) component is
                                        patched with the configuration as
                                        received from WASMFilter (child)
                                        component.
                                    - const: matchLabels
                                      description: >-
                                        Match label relationships offer a
                                        dynamic association between one or more
                                        components and are a flexible way to
                                        group and manage related components in
                                        Meshery.
                                    - const: permission
                                      description: >-
                                        A relationship that represents a set of
                                        security-centric bindings between
                                        components.
                                    - const: network
                                      description: >-
                                        A relationship that represents a line of
                                        communication between two or more
                                        components.
                                    - const: firewall
                                      description: >-
                                        A relationship that act as a
                                        network-based security boundary for
                                        ingress and egress traffic.
                                    - const: mount
                                      description: >-
                                        A relationship that represents volume
                                        mounts between components.
                                    - const: alias
                                      description: >-
                                        An alias for a field path in another
                                        component.
                                    - const: annotation
                                      description: >-
                                        A relationship that provide valuable
                                        context for users, controllers, and
                                        third-party tools within the Meshery
                                        ecosystem.
                                    - const: reference
                                      description: >-
                                        A reference relationship  is a
                                        declarative linkage where one resource
                                        identifies or depends on another
                                        resource by referencing its name, kind,
                                        API version, or some other property
                                  x-oapi-codegen-extra-tags:
                                    yaml: subType
                                    json: subType
                                key:
                                  description: Key that backs the capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: key
                                    json: key
                                entityState:
                                  description: >-
                                    State of the entity in which the capability
                                    is applicable.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - declaration
                                      - instance
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description: >-
                                      A string starting with an alphanumeric
                                      character. Spaces and hyphens allowed.
                                    x-oapi-codegen-extra-tags:
                                      yaml: entityState
                                      json: entityState
                                status:
                                  type: string
                                  description: Status of the capability
                                  default: enabled
                                  enum:
                                    - enabled
                                    - disabled
                                  x-oapi-codegen-extra-tags:
                                    yaml: status
                                    json: status
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata contains additional information
                                    associated with the capability. Extension
                                    point.
                                  additionalProperties: true
                                  x-oapi-codegen-extra-tags:
                                    yaml: metadata
                                    json: metadata
                          isAnnotation:
                            type: boolean
                            description: >-
                              Indicates whether the model and its entities
                              should be treated as deployable entities or as
                              logical representations.
                            x-oapi-codegen-extra-tags:
                              yaml: isAnnotation
                              json: isAnnotation
                          primaryColor:
                            type: string
                            description: Primary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            x-oapi-codegen-extra-tags:
                              yaml: primaryColor
                              json: primaryColor
                          secondaryColor:
                            type: string
                            description: Secondary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            x-oapi-codegen-extra-tags:
                              yaml: secondaryColor
                              json: secondaryColor
                          svgWhite:
                            type: string
                            description: SVG representation of the model in white color.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgWhite
                              json: svgWhite
                          svgColor:
                            type: string
                            description: SVG representation of the model in colored format.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgColor
                              json: svgColor
                          svgComplete:
                            type: string
                            description: SVG representation of the complete model.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgComplete
                              json: svgComplete
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        additionalProperties: true
                      model:
                        type: object
                        description: >-
                          Registrant-defined data associated with the model.
                          Properties pertain to the software being managed (e.g.
                          Kubernetes v1.31)
                        required:
                          - version
                        properties:
                          version:
                            description: Version of the model as defined by the registrant.
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            type: string
                            minLength: 5
                            maxLength: 100
                            pattern: >-
                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                    required:
                      - name
                      - version
                      - registrant
                      - category
                  kind:
                    description: >-
                      Kind of the Relationship. Learn more about relationships -
                      https://docs.meshery.io/concepts/logical/relationships.
                    enum:
                      - hierarchical
                      - edge
                      - sibling
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: kind
                      json: kind
                  type:
                    description: >-
                      Classification of relationships. Used to group
                      relationships similar in nature.
                    x-go-name: RelationshipType
                    gorm: column:type
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: type
                      json: type
                  subType:
                    description: >-
                      Most granular unit of relationship classification. The
                      combination of Kind, Type and SubType together uniquely
                      identify a Relationship.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: subType
                      json: subType
                  status:
                    type: string
                    description: Status of the relationship.
                    default: enabled
                    enum:
                      - pending
                      - approved
                      - ignored
                      - enabled
                      - deleted
                    x-oapi-codegen-extra-tags:
                      yaml: status
                      json: status
                  evaluationQuery:
                    description: >-
                      Optional. Assigns the policy to be used for the evaluation
                      of the relationship. Deprecation Notice: In the future,
                      this property is either to be removed or to it is to be an
                      array of optional policy $refs.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: evaluationQuery
                      json: evaluationQuery
                  capabilities:
                    type: array
                    description: Capabilities associated with the relationship.
                    items:
                      $id: https://schemas.meshery.io/capability.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Meshery manages entities in accordance with their
                        specific capabilities. This field explicitly identifies
                        those capabilities largely by what actions a given
                        component supports; e.g. metric-scrape, sub-interface,
                        and so on. This field is extensible. Entities may define
                        a broad array of capabilities, which are in-turn
                        dynamically interpretted by Meshery for full lifecycle
                        management.
                      additionalProperties: false
                      type: object
                      required:
                        - schemaVersion
                        - version
                        - displayName
                        - kind
                        - type
                        - entityState
                        - status
                      x-oapi-codegen-extra-tags:
                        gorm: type:bytes;serializer:json
                      properties:
                        schemaVersion:
                          description: >-
                            Specifies the version of the schema to which the
                            capability definition conforms.
                          type: string
                          minLength: 2
                          maxLength: 100
                          pattern: >-
                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                          example:
                            - v1
                            - v1alpha1
                            - v2beta3
                            - v1.custom-suffix
                          x-oapi-codegen-extra-tags:
                            yaml: schemaVersion
                            json: schemaVersion
                        version:
                          description: Version of the capability definition.
                          type: string
                          minLength: 5
                          maxLength: 100
                          pattern: >-
                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          x-oapi-codegen-extra-tags:
                            yaml: version
                            json: version
                        displayName:
                          description: Name of the capability in human-readible format.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: displayName
                            json: displayName
                        description:
                          type: string
                          description: >-
                            A written representation of the purpose and
                            characteristics of the capability.
                          x-oapi-codegen-extra-tags:
                            yaml: description
                            json: description
                        kind:
                          description: Top-level categorization of the capability
                          additionalProperties: false
                          anyOf:
                            - const: action
                              description: >-
                                For capabilities related to executing actions on
                                entities. Example: initiate log streaming on a
                                Pod. Example: initiate deployment of a
                                component.
                            - const: mutate
                              description: >-
                                For capabilities related to mutating an entity.
                                Example: the ability to change the configuration
                                of a component.
                            - const: view
                              description: >-
                                For capabilities related to viewing an entity.
                                Example: the ability to view a components
                                configuration.
                            - const: interaction
                              description: >-
                                Catch all for capabilities related to
                                interaction with entities. Example: the ability
                                for a component to be dragged and dropped.
                                Example: supports event bubbling to parent
                                components. 
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: kind
                            json: kind
                        type:
                          description: >-
                            Classification of capabilities. Used to group
                            capabilities similar in nature.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: type
                            json: type
                        subType:
                          description: >-
                            Most granular unit of capability classification. The
                            combination of Kind, Type and SubType together
                            uniquely identify a Capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: subType
                            json: subType
                        key:
                          description: Key that backs the capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: key
                            json: key
                        entityState:
                          description: >-
                            State of the entity in which the capability is
                            applicable.
                          type: array
                          items:
                            type: string
                            enum:
                              - declaration
                              - instance
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description: >-
                              A string starting with an alphanumeric character.
                              Spaces and hyphens allowed.
                            x-oapi-codegen-extra-tags:
                              yaml: entityState
                              json: entityState
                        status:
                          type: string
                          description: Status of the capability
                          default: enabled
                          enum:
                            - enabled
                            - disabled
                          x-oapi-codegen-extra-tags:
                            yaml: status
                            json: status
                        metadata:
                          type: object
                          description: >-
                            Metadata contains additional information associated
                            with the capability. Extension point.
                          additionalProperties: true
                          x-oapi-codegen-extra-tags:
                            yaml: metadata
                            json: metadata
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                  metadata:
                    type: object
                    description: >-
                      Metadata contains additional information associated with
                      the Relationship.
                    additionalProperties: true
                    x-oapi-codegen-extra-tags:
                      gorm: foreignKey:ModelId;references:Id
                    properties:
                      description:
                        description: >-
                          Characterization of the meaning of the relationship
                          and its relevance to both Meshery and entities under
                          management.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: description
                          json: description
                      isAnnotation:
                        type: boolean
                        description: >-
                          Indicates whether the relationship should be treated
                          as a logical representation only
                        x-oapi-codegen-extra-tags:
                          yaml: isAnnotation
                          json: isAnnotation
                        default: false
                      styles:
                        anyOf:
                          - type: object
                            description: Visualization styles for a relationship
                            allOf:
                              - type: object
                                description: Common styles for all entities
                                additionalProperties: false
                                required:
                                  - primaryColor
                                  - svgColor
                                  - svgWhite
                                properties:
                                  primaryColor:
                                    type: string
                                    description: >-
                                      Primary color of the component used for UI
                                      representation.
                                  secondaryColor:
                                    type: string
                                    description: >-
                                      Secondary color of the entity used for UI
                                      representation.
                                  svgWhite:
                                    type: string
                                    description: >-
                                      White SVG of the entity used for UI
                                      representation on dark background.
                                  svgColor:
                                    type: string
                                    description: >-
                                      Colored SVG of the entity used for UI
                                      representation on light background.
                                  svgComplete:
                                    type: string
                                    description: >-
                                      Complete SVG of the entity used for UI
                                      representation, often inclusive of
                                      background.
                                  color:
                                    type: string
                                    description: >-
                                      The color of the element's label. Colours
                                      may be specified by name (e.g. red), hex
                                      (e.g. #ff0000 or #f00), RGB (e.g. rgb(255,
                                      0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).
                                  text-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the label text, including
                                      its outline.
                                    minimum: 0
                                    maximum: 1
                                  font-family:
                                    type: string
                                    description: >-
                                      A comma-separated list of font names to
                                      use on the label text.
                                  font-size:
                                    type: string
                                    description: The size of the label text.
                                  font-style:
                                    type: string
                                    description: >-
                                      A CSS font style to be applied to the
                                      label text.
                                  font-weight:
                                    type: string
                                    description: >-
                                      A CSS font weight to be applied to the
                                      label text.
                                  text-transform:
                                    type: string
                                    description: >-
                                      A transformation to apply to the label
                                      text
                                    enum:
                                      - none
                                      - uppercase
                                      - lowercase
                                  opacity:
                                    type: number
                                    description: >-
                                      The opacity of the element, ranging from 0
                                      to 1. Note that the opacity of a compound
                                      node parent affects the effective opacity
                                      of its children.See
                                      https://js.cytoscape.org/#style/visibility
                                    minimum: 0
                                    maximum: 1
                                  z-index:
                                    type: integer
                                    description: >-
                                      An integer value that affects the relative
                                      draw order of elements. In general, an
                                      element with a higher z-index will be
                                      drawn on top of an element with a lower
                                      z-index. Note that edges are under nodes
                                      despite z-index.
                                  label:
                                    type: string
                                    description: >-
                                      The text to display for an element’s
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                              - properties:
                                  edge-animation:
                                    type: string
                                    description: >-
                                      The animation to use for the edge. Can be
                                      like 'marching-ants' , 'blink' ,
                                      'moving-gradient',etc .
                                  curve-style:
                                    type: string
                                    description: >-
                                      The curving method used to separate two or
                                      more edges between two nodes; may be
                                      haystack (very fast, bundled straight
                                      edges for which loops and compounds are
                                      unsupported), straight (straight edges
                                      with all arrows supported), bezier
                                      (bundled curved edges), unbundled-bezier
                                      (curved edges for use with manual control
                                      points), segments (a series of straight
                                      lines), taxi (right-angled lines,
                                      hierarchically bundled). Note that
                                      haystack edges work best with ellipse,
                                      rectangle, or similar nodes. Smaller node
                                      shapes, like triangle, will not be as
                                      aesthetically pleasing. Also note that
                                      edge endpoint arrows are unsupported for
                                      haystack edges.
                                    default: straight
                                    enum:
                                      - straight
                                      - haystack
                                      - bezier
                                      - unbundled-bezier
                                      - segments
                                      - taxi
                                  line-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s line. Colours may
                                      be specified by name (e.g. red), hex (e.g.
                                      #ff0000 or #f00), RGB (e.g. rgb(255, 0,
                                      0)), or HSL (e.g. hsl(0, 100%, 50%)).
                                  line-style:
                                    type: string
                                    description: The style of the edge’s line.
                                    enum:
                                      - solid
                                      - dotted
                                      - dashed
                                  line-cap:
                                    type: string
                                    description: >-
                                      The cap style of the edge’s line; may be
                                      butt (default), round, or square. The cap
                                      may or may not be visible, depending on
                                      the shape of the node and the relative
                                      size of the node and edge. Caps other than
                                      butt extend beyond the specified endpoint
                                      of the edge.
                                    enum:
                                      - butt
                                      - round
                                      - square
                                    default: butt
                                  line-opacity:
                                    type: number
                                    minimum: 0
                                    maximum: 1
                                    default: 1
                                    description: >-
                                      The opacity of the edge’s line and arrow.
                                      Useful if you wish to have a separate
                                      opacity for the edge label versus the edge
                                      line. Note that the opacity value of the
                                      edge element affects the effective opacity
                                      of its line and label subcomponents.
                                  target-arrow-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s source arrow.
                                      Colours may be specified by name (e.g.
                                      red), hex (e.g. #ff0000 or #f00), RGB
                                      (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                      100%, 50%)).
                                  target-arrow-shape:
                                    type: string
                                    description: The shape of the edge’s source arrow
                                    enum:
                                      - triangle
                                      - triangle-tee
                                      - circle-triangle
                                      - triangle-cross
                                      - triangle-backcurve
                                      - vee
                                      - tee
                                      - square
                                      - circle
                                      - diamond
                                      - chevron
                                      - none
                                  target-arrow-fill:
                                    type: string
                                    description: The fill state of the edge’s source arrow
                                    enum:
                                      - filled
                                      - hollow
                                  mid-target-arrow-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s source arrow.
                                      Colours may be specified by name (e.g.
                                      red), hex (e.g. #ff0000 or #f00), RGB
                                      (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                      100%, 50%)).
                                  mid-target-arrow-shape:
                                    type: string
                                    description: The shape of the edge’s source arrow
                                    enum:
                                      - triangle
                                      - triangle-tee
                                      - circle-triangle
                                      - triangle-cross
                                      - triangle-backcurve
                                      - vee
                                      - tee
                                      - square
                                      - circle
                                      - diamond
                                      - chevron
                                      - none
                                  mid-target-arrow-fill:
                                    type: string
                                    description: The fill state of the edge’s source arrow
                                    enum:
                                      - filled
                                      - hollow
                                  arrow-scale:
                                    type: number
                                    description: Scaling for the arrow size.
                                    minimum: 0
                                  source-label:
                                    type: string
                                    description: >-
                                      The text to display for an edge’s source
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                                  target-label:
                                    type: string
                                    description: >-
                                      The text to display for an edge’s target
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                          - type: object
                            description: Common styles for all entities
                            additionalProperties: false
                            required:
                              - primaryColor
                              - svgColor
                              - svgWhite
                            properties:
                              primaryColor:
                                type: string
                                description: >-
                                  Primary color of the component used for UI
                                  representation.
                              secondaryColor:
                                type: string
                                description: >-
                                  Secondary color of the entity used for UI
                                  representation.
                              svgWhite:
                                type: string
                                description: >-
                                  White SVG of the entity used for UI
                                  representation on dark background.
                              svgColor:
                                type: string
                                description: >-
                                  Colored SVG of the entity used for UI
                                  representation on light background.
                              svgComplete:
                                type: string
                                description: >-
                                  Complete SVG of the entity used for UI
                                  representation, often inclusive of background.
                              color:
                                type: string
                                description: >-
                                  The color of the element's label. Colours may
                                  be specified by name (e.g. red), hex (e.g.
                                  #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)),
                                  or HSL (e.g. hsl(0, 100%, 50%)).
                              text-opacity:
                                type: number
                                description: >-
                                  The opacity of the label text, including its
                                  outline.
                                minimum: 0
                                maximum: 1
                              font-family:
                                type: string
                                description: >-
                                  A comma-separated list of font names to use on
                                  the label text.
                              font-size:
                                type: string
                                description: The size of the label text.
                              font-style:
                                type: string
                                description: >-
                                  A CSS font style to be applied to the label
                                  text.
                              font-weight:
                                type: string
                                description: >-
                                  A CSS font weight to be applied to the label
                                  text.
                              text-transform:
                                type: string
                                description: A transformation to apply to the label text
                                enum:
                                  - none
                                  - uppercase
                                  - lowercase
                              opacity:
                                type: number
                                description: >-
                                  The opacity of the element, ranging from 0 to
                                  1. Note that the opacity of a compound node
                                  parent affects the effective opacity of its
                                  children.See
                                  https://js.cytoscape.org/#style/visibility
                                minimum: 0
                                maximum: 1
                              z-index:
                                type: integer
                                description: >-
                                  An integer value that affects the relative
                                  draw order of elements. In general, an element
                                  with a higher z-index will be drawn on top of
                                  an element with a lower z-index. Note that
                                  edges are under nodes despite z-index.
                              label:
                                type: string
                                description: >-
                                  The text to display for an element’s label.
                                  Can give a path, e.g. data(id) will label with
                                  the elements id
                            $comment: Extension point for additional styles
                        x-oapi-codegen-extra-tags:
                          yaml: styles
                          json: styles
                  selectors:
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    type: array
                    description: >-
                      Selectors are organized as an array, with each item
                      containing a distinct set of selectors that share a common
                      functionality. This structure allows for flexibility in
                      defining relationships, even when different components are
                      involved.
                    $comment: >-
                      Sets of selectors are interpreted as a logical UNION.
                      Properties within a selector `allow` and `deny` are
                      interpreted as logical AND, while 'from' and 'to'
                      represents a UNION of set of combinatorial pairs.
                    items:
                      type: object
                      description: >-
                        Optional selectors used to match Components. Absence of
                        a selector means that it is applied to all Components.
                      additionalProperties: false
                      required:
                        - allow
                      properties:
                        deny:
                          description: >-
                            Optional selectors used to define relationships
                            which should not be created / is restricted.
                          type: object
                          required:
                            - to
                            - from
                          properties:
                            from:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                            to:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                        allow:
                          description: >-
                            Selectors used to define relationships which are
                            allowed.
                          type: object
                          required:
                            - to
                            - from
                          properties:
                            from:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  match_strategy_matrix:
                                    description: >-
                                      Strategy criterion for determing how to
                                      match the values at mutator/mutated paths
                                    type: array
                                    items:
                                      type: array
                                      items:
                                        type: string
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                            to:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
          required:
            - id
            - name
            - schemaVersion
            - version
            - components
            - relationships
        updated_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-go-type-skip-optional-pointer: true
        visibility:
          type: string
          x-go-type-skip-optional-pointer: true
    design_MesheryPatternPage:
      type: object
      properties:
        page:
          type: integer
        page_size:
          type: integer
        patterns:
          type: array
          items:
            x-go-type: MesheryPattern
            type: object
            properties:
              catalog_data:
                x-go-type: catalog.CatalogData
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1alpha2/catalog
                type: object
                properties:
                  publishedVersion:
                    description: >-
                      Tracks the specific content version that has been made
                      available in the Catalog.
                    type: string
                  class:
                    description: >-
                      Published content is classifed by its support level.
                      Content classes help you understand the origin and
                      expected support level for each piece of content. It is
                      important to note that the level of support may vary
                      within each class, and you should exercise discretion when
                      using community-contributed content. Content produced and
                      fully supported by Meshery maintainers. This represents
                      the highest level of support and is considered the most
                      reliable. Content produced by partners and verified by
                      Meshery maintainers. While not directly maintained by
                      Meshery, it has undergone a verification process to ensure
                      quality and compatibility. Content produced and supported
                      by the respective project or organization responsible for
                      the specific technology. This class offers a level of
                      support from the project maintainers themselves. Content
                      produced and shared by Meshery users. This includes a wide
                      range of content, such as performance profiles, test
                      results, filters, patterns, and applications. Community
                      content may have varying levels of support and
                      reliability.
                    type: string
                    oneOf:
                      - const: official
                        description: >-
                          Content produced and fully supported by Meshery
                          maintainers. This represents the highest level of
                          support and is considered the most reliable.
                      - const: verified
                        description: >-
                          Content produced by partners and verified by Meshery
                          maintainers. While not directly maintained by Meshery,
                          it has undergone a verification process to ensure
                          quality and compatibility.
                      - const: reference architecture
                        description: >-
                          Content produced and shared by Meshery users. This
                          includes a wide range of content, such as performance
                          profiles, test results, filters, patterns, and
                          applications. Reference architecture content may have
                          varying levels of support and reliability.
                  compatibility:
                    type: array
                    title: Model
                    items:
                      enum:
                        - kubernetes
                      type: string
                    uniqueItems: true
                    minItems: 1
                    description: >-
                      One or more models associated with this catalog item. For
                      designs, a list of one or more models implicated by
                      components within the design. For models, this is
                      self-referential.
                  pattern_caveats:
                    type: string
                    title: Caveats and Considerations
                    description: >-
                      Specific stipulations to consider and known behaviors to
                      be aware of when using this design.
                  pattern_info:
                    type: string
                    title: Description
                    minLength: 1
                    description: >-
                      Purpose of the design along with its intended and
                      unintended uses.
                  type:
                    type: string
                    title: Type
                    enum:
                      - Deployment
                      - Observability
                      - Resiliency
                      - Scaling
                      - Security
                      - Traffic-management
                      - Troubleshooting
                      - Workloads
                    default: Deployment
                    description: >-
                      Categorization of the type of design or operational flow
                      depicted in this design.
                  snapshotURL:
                    type: array
                    items:
                      type: string
                      format: uri
                      pattern: ^(https?|http?|oci)://
                    description: >-
                      Contains reference to the dark and light mode snapshots of
                      the design.
                required:
                  - compatibility
                  - pattern_caveats
                  - pattern_info
                  - type
              created_at:
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              user_id:
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                x-go-type-skip-optional-pointer: true
              location:
                type: object
                additionalProperties:
                  type: string
                x-go-type-skip-optional-pointer: true
              name:
                type: string
                x-go-type-skip-optional-pointer: true
              pattern_file:
                x-go-type: PatternFile
                $schema: http://json-schema.org/draft-07/schema#
                title: Design Schema
                description: >-
                  Designs are your primary tool for collaborative authorship of
                  your infrastructure, workflow, and processes.
                type: object
                properties:
                  id:
                    x-order: 1
                    type: string
                    format: uuid
                    description: >-
                      A Universally Unique Identifier used to uniquely identify
                      entites in Meshery. The UUID core defintion is used across
                      different schemas.
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  name:
                    type: string
                    description: >-
                      Name of the design; a descriptive, but concise title for
                      the design document.
                    x-order: 2
                  schemaVersion:
                    description: >-
                      Specifies the version of the schema to which the design
                      conforms.
                    x-order: 3
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                  version:
                    default: v0.0.1
                    x-order: 4
                    description: >-
                      Revision of the design as expressed by an
                      auto-incremented, SemVer-compliant version number. May be
                      manually set by a user or third-party system, but will
                      always be required to be of version number higher than the
                      previously defined version number.
                    minLength: 1
                    maxLength: 50
                    type: string
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                  metadata:
                    type: object
                    x-order: 5
                    additionalProperties: true
                    properties:
                      resolvedAliases:
                        description: Map of resolved aliases present in the design
                        type: object
                        x-go-type: map[string]core.ResolvedAlias
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1alpha1/core
                        additionalProperties:
                          description: >-
                            An resolved alias is an component that acts as an
                            ref/pointer to a field in another component,
                            resolvedAlias are aware of there immediate parents
                            and completely resolved parents also
                          allOf:
                            - description: >-
                                An alias is an component that acts as an
                                ref/pointer to a field in another component,
                                nonResolvedAlias are not aware of there
                                immediate parents
                              type: object
                              properties:
                                relationship_id:
                                  type: string
                                  format: uuid
                                  description: >-
                                    A Universally Unique Identifier used to
                                    uniquely identify entities in Meshery. The
                                    UUID core definition is used across
                                    different schemas.
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                alias_component_id:
                                  type: string
                                  format: uuid
                                  description: >-
                                    A Universally Unique Identifier used to
                                    uniquely identify entities in Meshery. The
                                    UUID core definition is used across
                                    different schemas.
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                immediate_parent_id:
                                  type: string
                                  format: uuid
                                  description: >-
                                    A Universally Unique Identifier used to
                                    uniquely identify entities in Meshery. The
                                    UUID core definition is used across
                                    different schemas.
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                immediate_ref_field_path:
                                  type: array
                                  items:
                                    type: string
                              required:
                                - relationship_id
                                - alias_component_id
                                - immediate_parent_id
                                - immediate_ref_field_path
                            - type: object
                              properties:
                                resolved_parent_id:
                                  type: string
                                  format: uuid
                                  description: >-
                                    A Universally Unique Identifier used to
                                    uniquely identify entities in Meshery. The
                                    UUID core definition is used across
                                    different schemas.
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                resolved_ref_field_path:
                                  type: array
                                  items:
                                    type: string
                              required:
                                - resolved_parent_id
                                - resolved_ref_field_path
                  components:
                    description: A list of one or more component declarations.
                    minItems: 0
                    x-order: 6
                    type: array
                    items:
                      x-go-type: '*component.ComponentDefinition'
                      x-go-type-import:
                        path: github.com/meshery/schemas/models/v1beta1/component
                      $id: https://schemas.meshery.io/component.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Components are reusable building blocks for depicting
                        capabilities defined within models. Learn more at
                        https://docs.meshery.io/concepts/components
                      additionalProperties: false
                      type: object
                      properties:
                        id:
                          description: >-
                            Uniquely identifies the entity (i.e. component) as
                            defined in a declaration (i.e. design).
                          x-order: 1
                          x-oapi-codegen-extra-tags:
                            yaml: id
                            json: id
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                          default: 00000000-0000-0000-0000-000000000000
                        schemaVersion:
                          x-order: 2
                          description: >-
                            Specifies the version of the schema to which the
                            component definition conforms.
                          x-oapi-codegen-extra-tags:
                            yaml: schemaVersion
                            json: schemaVersion
                          default: components.meshery.io/v1beta1
                          type: string
                          minLength: 2
                          maxLength: 100
                          pattern: >-
                            ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                          example:
                            - v1
                            - v1alpha1
                            - v2beta3
                            - v1.custom-suffix
                        version:
                          x-order: 3
                          description: Version of the component definition.
                          minLength: 1
                          maxLength: 50
                          x-oapi-codegen-extra-tags:
                            yaml: version
                            json: version
                          type: string
                          pattern: >-
                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          default: v0.0.1
                        displayName:
                          x-order: 4
                          description: Name of the component in human-readible format.
                          x-oapi-codegen-extra-tags:
                            yaml: displayName
                            json: displayName
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        description:
                          x-order: 5
                          type: string
                          description: >-
                            A written representation of the purpose and
                            characteristics of the component.
                          x-oapi-codegen-extra-tags:
                            yaml: description
                            json: description
                        format:
                          x-order: 6
                          type: string
                          enum:
                            - JSON
                            - CUE
                          default: JSON
                          description: >-
                            Format specifies the format used in the
                            `component.schema` field. JSON is the default.
                          x-oapi-codegen-extra-tags:
                            yaml: format
                            json: format
                        model:
                          x-go-type: model.ModelDefinition
                          x-go-type-import:
                            path: github.com/meshery/schemas/models/v1beta1/model
                          x-order: 7
                          description: >-
                            Reference to the specific registered model to which
                            the component belongs and from which model version,
                            category, and other properties may be referenced.
                            Learn more at
                            https://docs.meshery.io/concepts/models
                          x-oapi-codegen-extra-tags:
                            gorm: foreignKey:ModelId;references:Id
                          $id: https://schemas.meshery.io/model.json
                          $schema: http://json-schema.org/draft-07/schema#
                          additionalProperties: false
                          type: object
                          properties:
                            id:
                              description: >-
                                Uniquely identifies the entity (i.e. component)
                                as defined in a declaration (i.e. design).
                              x-order: 1
                              x-oapi-codegen-extra-tags:
                                yaml: id
                                json: id
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              default: 00000000-0000-0000-0000-000000000000
                            schemaVersion:
                              description: >-
                                Specifies the version of the schema used for the
                                definition.
                              x-order: 2
                              x-oapi-codegen-extra-tags:
                                yaml: schemaVersion
                                json: schemaVersion
                              default: models.meshery.io/v1beta1
                              type: string
                              minLength: 2
                              maxLength: 100
                              pattern: >-
                                ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                              example:
                                - v1
                                - v1alpha1
                                - v2beta3
                                - v1.custom-suffix
                            version:
                              description: Version of the model definition.
                              type: string
                              x-order: 3
                              x-oapi-codegen-extra-tags:
                                yaml: version
                                json: version
                              minLength: 5
                              maxLength: 100
                              pattern: >-
                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              default: v0.0.1
                            name:
                              type: string
                              description: >-
                                The unique name for the model within the scope
                                of a registrant.
                              helperText: >-
                                Model name should be in lowercase with hyphens,
                                not whitespaces.
                              pattern: ^[a-z0-9-]+$
                              examples:
                                - cert-manager
                              x-order: 4
                              x-oapi-codegen-extra-tags:
                                yaml: name
                                json: name
                              default: untitled-model
                            displayName:
                              description: Human-readable name for the model.
                              helperText: >-
                                Model display name may include letters, numbers,
                                and spaces. Special characters are not allowed.
                              minLength: 1
                              maxLength: 100
                              type: string
                              pattern: ^[a-zA-Z0-9 ]+$
                              examples:
                                - Cert Manager
                              x-order: 5
                              x-oapi-codegen-extra-tags:
                                yaml: displayName
                                json: displayName
                              default: Untitled Model
                            description:
                              type: string
                              default: A new Meshery model.
                              description: Description of the model.
                              minLength: 1
                              maxLength: 1000
                              x-order: 6
                              x-oapi-codegen-extra-tags:
                                yaml: description,omitempty
                                json: description,omitempty
                            status:
                              type: string
                              description: >-
                                Status of model, including:

                                - duplicate: this component is a duplicate of
                                another. The component that is to be the
                                canonical reference and that is duplicated by
                                other components should not be assigned the
                                'duplicate' status.

                                - maintenance: model is unavailable for a period
                                of time.

                                - enabled: model is available for use for all
                                users of this Meshery Server.

                                - ignored: model is unavailable for use for all
                                users of this Meshery Server.
                              enum:
                                - ignored
                                - enabled
                                - duplicate
                              x-order: 7
                              x-oapi-codegen-extra-tags:
                                yaml: status
                                json: status
                              default: enabled
                            registrant:
                              x-oapi-codegen-extra-tags:
                                yaml: registrant
                                json: registrant
                                gorm: foreignKey:RegistrantId;references:ID
                              x-order: 8
                              x-go-type: connection.Connection
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1beta1/connection
                              $id: https://schemas.meshery.io/component.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery Connections are managed and unmanaged
                                resources that either through discovery or
                                manual entry are tracked by Meshery. Learn more
                                at
                                https://docs.meshery.io/concepts/logical/connections
                              additionalProperties: false
                              type: object
                              required:
                                - id
                                - schemaVersion
                                - name
                                - type
                                - sub_type
                                - kind
                                - status
                              properties:
                                id:
                                  description: ID
                                  x-order: 1
                                  x-go-name: ID
                                  x-oapi-codegen-extra-tags:
                                    db: id
                                    yaml: id
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                name:
                                  x-oapi-codegen-extra-tags:
                                    db: name
                                    yaml: name
                                  x-order: 2
                                  type: string
                                  description: Connection Name
                                credential_id:
                                  x-go-name: CredentialID
                                  x-oapi-codegen-extra-tags:
                                    db: credential_id
                                    yaml: credential_id
                                  x-order: 3
                                  description: Credential ID
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                type:
                                  x-oapi-codegen-extra-tags:
                                    db: type
                                    yaml: type
                                  x-order: 4
                                  type: string
                                  description: Connection Type
                                sub_type:
                                  x-oapi-codegen-extra-tags:
                                    db: sub_type
                                    yaml: sub_type
                                  x-order: 5
                                  type: string
                                  description: Connection Subtype
                                kind:
                                  x-oapi-codegen-extra-tags:
                                    db: kind
                                    yaml: kind
                                  x-order: 6
                                  type: string
                                  description: Connection Kind
                                metadata:
                                  x-oapi-codegen-extra-tags:
                                    db: metadata
                                    yaml: metadata
                                  x-order: 7
                                  x-go-type: core.Map
                                  x-go-type-skip-optional-pointer: true
                                  type: object
                                status:
                                  x-oapi-codegen-extra-tags:
                                    db: status
                                    yaml: status
                                  x-order: 8
                                  description: Connection Status
                                  type: string
                                  enum:
                                    - discovered
                                    - registered
                                    - connected
                                    - ignored
                                    - maintenance
                                    - disconnected
                                    - deleted
                                    - not found
                                user_id:
                                  x-go-name: UserID
                                  x-oapi-codegen-extra-tags:
                                    db: user_id
                                    yaml: user_id
                                  x-order: 9
                                  type: string
                                  format: uuid
                                  description: >-
                                    A Universally Unique Identifier used to
                                    uniquely identify entites in Meshery. The
                                    UUID core defintion is used across different
                                    schemas.
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                created_at:
                                  x-oapi-codegen-extra-tags:
                                    db: created_at
                                    yaml: created_at
                                  x-order: 10
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                updated_at:
                                  x-oapi-codegen-extra-tags:
                                    db: updated_at
                                    yaml: updated_at
                                  x-order: 11
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                deleted_at:
                                  x-oapi-codegen-extra-tags:
                                    db: deleted_at
                                    yaml: deleted_at
                                  x-go-type: core.NullTime
                                  x-order: 12
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                environments:
                                  type: array
                                  items:
                                    x-go-type: '*environment.Environment'
                                    $id: >-
                                      https://schemas.meshery.io/environment.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    description: >-
                                      Meshery Environments allow you to
                                      logically group related Connections and
                                      their associated Credentials.. Learn more
                                      at
                                      https://docs.meshery.io/concepts/logical/environments
                                    additionalProperties: false
                                    type: object
                                    required:
                                      - id
                                      - name
                                      - description
                                      - organization_id
                                    properties:
                                      id:
                                        description: ID
                                        x-order: 1
                                        x-go-name: ID
                                        x-oapi-codegen-extra-tags:
                                          db: id
                                          yaml: id
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        default: 00000000-0000-0000-0000-000000000000
                                      name:
                                        x-oapi-codegen-extra-tags:
                                          db: name
                                          yaml: name
                                        x-order: 2
                                        type: string
                                        description: Environment name
                                      description:
                                        x-oapi-codegen-extra-tags:
                                          db: description
                                          yaml: description
                                        x-order: 3
                                        type: string
                                        description: Environment description
                                      organization_id:
                                        x-go-name: OrganizationID
                                        x-oapi-codegen-extra-tags:
                                          db: organization_id
                                          yaml: organization_id
                                        x-order: 4
                                        description: Environment organization ID
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        default: 00000000-0000-0000-0000-000000000000
                                      owner:
                                        x-oapi-codegen-extra-tags:
                                          db: owner
                                          yaml: owner
                                        x-order: 5
                                        description: Environment owner
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        default: 00000000-0000-0000-0000-000000000000
                                      created_at:
                                        x-oapi-codegen-extra-tags:
                                          db: created_at
                                          yaml: created_at
                                        x-order: 6
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      metadata:
                                        x-oapi-codegen-extra-tags:
                                          db: metadata
                                          yaml: metadata
                                        x-order: 7
                                        x-go-type: core.Map
                                        x-go-type-skip-optional-pointer: true
                                        type: object
                                      updated_at:
                                        x-oapi-codegen-extra-tags:
                                          db: updated_at
                                          yaml: updated_at
                                        x-order: 8
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                      deleted_at:
                                        x-oapi-codegen-extra-tags:
                                          db: deleted_at
                                          yaml: deleted_at
                                        x-go-type: core.NullTime
                                        x-go-import: database/sql
                                        x-order: 9
                                        type: string
                                        format: date-time
                                        x-go-type-skip-optional-pointer: true
                                  x-oapi-codegen-extra-tags:
                                    db: '-'
                                    yaml: environments
                                    gorm: '-'
                                  x-go-type-skip-optional-pointer: true
                                  x-order: 13
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema used for
                                    the definition.
                                  x-order: 14
                                  x-oapi-codegen-extra-tags:
                                    yaml: schemaVersion
                                    db: '-'
                                    gorm: '-'
                                  default: connections.meshery.io/v1beta1
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                            registrantId:
                              description: ID of the registrant.
                              x-oapi-codegen-extra-tags:
                                yaml: connection_id
                                json: connection_id
                                gorm: column:connection_id
                              x-order: 8
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              default: 00000000-0000-0000-0000-000000000000
                            categoryId:
                              description: ID of the category.
                              x-oapi-codegen-extra-tags:
                                yaml: '-'
                                json: '-'
                                gorm: categoryID
                              x-order: 8
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              default: 00000000-0000-0000-0000-000000000000
                            category:
                              x-order: 9
                              x-oapi-codegen-extra-tags:
                                yaml: category
                                json: category
                                gorm: foreignKey:CategoryId;references:Id
                              x-go-type: category.CategoryDefinition
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1beta1/category
                              $id: https://schemas.meshery.io/category.json
                              $schema: http://json-schema.org/draft-07/schema#
                              type: object
                              description: Category of the model.
                              required:
                                - id
                                - name
                                - metadata
                              properties:
                                id:
                                  x-order: 1
                                  type: string
                                  format: uuid
                                  description: >-
                                    A Universally Unique Identifier used to
                                    uniquely identify entites in Meshery. The
                                    UUID core defintion is used across different
                                    schemas.
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                name:
                                  type: string
                                  minLength: 1
                                  maxLength: 100
                                  x-oapi-codegen-extra-tags:
                                    yaml: name
                                    json: name
                                    gorm: name
                                  default: Uncategorized
                                  description: >-
                                    The category of the model that determines
                                    the main grouping.
                                  enum:
                                    - Analytics
                                    - App Definition and Development
                                    - Cloud Native Network
                                    - Cloud Native Storage
                                    - Database
                                    - Machine Learning
                                    - Observability and Analysis
                                    - Orchestration & Management
                                    - Platform
                                    - Provisioning
                                    - Runtime
                                    - Security & Compliance
                                    - Serverless
                                    - Tools
                                    - Uncategorized
                                  x-order: 2
                                metadata:
                                  type: object
                                  x-oapi-codegen-extra-tags:
                                    yaml: metadata,omitempty
                                    json: metadata,omitempty
                                    gorm: type:bytes;serializer:json
                                  x-order: 3
                            subCategory:
                              x-order: 10
                              x-go-type: subcategory.SubCategoryDefinition
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1beta1/subcategory
                              $id: https://schemas.meshery.io/category.json
                              $schema: http://json-schema.org/draft-07/schema#
                              type: string
                              title: SubCategory
                              description: >-
                                Sub category of the model determines the
                                secondary grouping.
                              default: Uncategorized
                              enum:
                                - API Gateway
                                - API Integration
                                - Application Definition & Image Build
                                - Automation & Configuration
                                - Certified Kubernetes - Distribution
                                - Chaos Engineering
                                - Cloud Native Storage
                                - Cloud Provider
                                - CNI
                                - Compute
                                - Container Registry
                                - Container Runtime
                                - Container Security
                                - Container
                                - Content Delivery Network
                                - Continuous Integration & Delivery
                                - Coordination & Service Discovery
                                - Database
                                - Flowchart
                                - Framework
                                - Installable Platform
                                - Key Management
                                - Key Management Service
                                - Kubernetes
                                - Logging
                                - Machine Learning
                                - Management Governance
                                - Metrics
                                - Monitoring
                                - Networking Content Delivery
                                - Operating System
                                - Query
                                - Remote Procedure Call
                                - Scheduling & Orchestration
                                - Secrets Management
                                - Security Identity & Compliance
                                - Service Mesh
                                - Service Proxy
                                - Source Version Control
                                - Storage
                                - Specifications
                                - Streaming & Messaging
                                - Tools
                                - Tracing
                                - Uncategorized
                                - Video Conferencing
                              minLength: 1
                              maxLength: 100
                              x-oapi-codegen-extra-tags:
                                yaml: subCategory
                                json: subCategory
                            metadata:
                              type: object
                              description: >-
                                Metadata containing additional information
                                associated with the model.
                              required:
                                - svgWhite
                                - svgColor
                              properties:
                                capabilities:
                                  type: array
                                  description: Capabilities associated with the model
                                  items:
                                    x-go-type: capability.Capability
                                    x-go-type-import:
                                      path: >-
                                        github.com/meshery/schemas/models/v1alpha1/capability
                                    $id: https://schemas.meshery.io/capability.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    description: >-
                                      Meshery manages entities in accordance
                                      with their specific capabilities. This
                                      field explicitly identifies those
                                      capabilities largely by what actions a
                                      given component supports; e.g.
                                      metric-scrape, sub-interface, and so on.
                                      This field is extensible. Entities may
                                      define a broad array of capabilities,
                                      which are in-turn dynamically interpretted
                                      by Meshery for full lifecycle management.
                                    additionalProperties: false
                                    type: object
                                    required:
                                      - description
                                      - schemaVersion
                                      - version
                                      - displayName
                                      - kind
                                      - type
                                      - subType
                                      - entityState
                                      - key
                                      - status
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                    properties:
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema to
                                          which the capability definition
                                          conforms.
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the capability definition.
                                        type: string
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        default: v0.0.1
                                      displayName:
                                        description: >-
                                          Name of the capability in human-readible
                                          format.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      description:
                                        type: string
                                        description: >-
                                          A written representation of the purpose
                                          and characteristics of the capability.
                                      kind:
                                        description: >-
                                          Top-level categorization of the
                                          capability
                                        additionalProperties: false
                                        anyOf:
                                          - const: action
                                            description: >-
                                              For capabilities related to executing
                                              actions on entities. Example: initiate
                                              log streaming on a Pod. Example:
                                              initiate deployment of a component.
                                          - const: mutate
                                            description: >-
                                              For capabilities related to mutating an
                                              entity. Example: the ability to change
                                              the configuration of a component.
                                          - const: view
                                            description: >-
                                              For capabilities related to viewing an
                                              entity. Example: the ability to view a
                                              components configuration.
                                          - const: interaction
                                            description: >-
                                              Catch all for capabilities related to
                                              interaction with entities. Example: the
                                              ability for a component to be dragged
                                              and dropped. Example: supports event
                                              bubbling to parent components. 
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      type:
                                        description: >-
                                          Classification of capabilities. Used to
                                          group capabilities similar in nature.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      subType:
                                        description: >-
                                          Most granular unit of capability
                                          classification. The combination of Kind,
                                          Type and SubType together uniquely
                                          identify a Capability.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      key:
                                        description: Key that backs the capability.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      entityState:
                                        description: >-
                                          State of the entity in which the
                                          capability is applicable.
                                        type: array
                                        items:
                                          type: string
                                          enum:
                                            - declaration
                                            - instance
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          description: >-
                                            A string starting with an alphanumeric
                                            character. Spaces and hyphens allowed.
                                      status:
                                        type: string
                                        description: Status of the capability
                                        default: enabled
                                        enum:
                                          - enabled
                                          - disabled
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata contains additional information
                                          associated with the capability.
                                          Extension point.
                                        additionalProperties: true
                                    default:
                                      - description: >-
                                          Configure the visual styles for the
                                          component
                                        displayName: Styling
                                        entityState:
                                          - declaration
                                        key: ''
                                        kind: mutate
                                        schemaVersion: capability.meshery.io/v1alpha1
                                        status: enabled
                                        subType: ''
                                        type: style
                                        version: 0.7.0
                                      - description: Change the shape of the component
                                        displayName: Change Shape
                                        entityState:
                                          - declaration
                                        key: ''
                                        kind: mutate
                                        schemaVersion: capability.meshery.io/v1alpha1
                                        status: enabled
                                        subType: shape
                                        type: style
                                        version: 0.7.0
                                      - description: >-
                                          Drag and Drop a component into a parent
                                          component in graph view
                                        displayName: Compound Drag And Drop
                                        entityState:
                                          - declaration
                                        key: ''
                                        kind: interaction
                                        schemaVersion: capability.meshery.io/v1alpha1
                                        status: enabled
                                        subType: compoundDnd
                                        type: graph
                                        version: 0.7.0
                                      - description: Add text to nodes body
                                        displayName: Body Text
                                        entityState:
                                          - declaration
                                        key: ''
                                        kind: mutate
                                        schemaVersion: capability.meshery.io/v1alpha1
                                        status: enabled
                                        subType: body-text
                                        type: style
                                        version: 0.7.0
                                  x-order: 1
                                isAnnotation:
                                  type: boolean
                                  description: >-
                                    Indicates whether the model and its entities
                                    should be treated as deployable entities or
                                    as logical representations.
                                  x-oapi-codegen-extra-tags:
                                    yaml: isAnnotation
                                    json: isAnnotation
                                  x-order: 2
                                  default: false
                                primaryColor:
                                  type: string
                                  description: Primary color associated with the model.
                                  minLength: 1
                                  maxLength: 50
                                  default: '#00b39f'
                                  x-oapi-codegen-extra-tags:
                                    yaml: primaryColor
                                    json: primaryColor
                                  x-order: 3
                                secondaryColor:
                                  type: string
                                  description: Secondary color associated with the model.
                                  minLength: 1
                                  maxLength: 50
                                  default: '#00D3A9'
                                  x-oapi-codegen-extra-tags:
                                    yaml: secondaryColor
                                    json: secondaryColor
                                  x-order: 4
                                svgWhite:
                                  type: string
                                  description: >-
                                    SVG representation of the model in white
                                    color.
                                  minLength: 1
                                  x-oapi-codegen-extra-tags:
                                    yaml: svgWhite
                                    json: svgWhite
                                  x-order: 5
                                  default: >-
                                    <svg width="32" height="32" viewBox="0 0 32
                                    32" fill="none"
                                    xmlns="http://www.w3.org/2000/svg"><path
                                    d="M16.405
                                    8.732v6.57l5.694-3.297-5.694-3.273Zm0
                                    7.942v6.602l5.747-3.285-5.747-3.317Z"
                                    fill="#fff"/><path d="M15.586
                                    15.256v-6.47l-5.622 3.225 5.622 3.245ZM4.307
                                    23.252a13.809 13.809 0 0 0 4.362
                                    4.39v-6.914l-4.362
                                    2.524Zm11.279-.008v-6.52L9.95 19.985l5.636
                                    3.258Z" fill="#fff" fill-opacity=".8"/><path
                                    d="m9.49 27.23 5.707-3.263-5.707-3.3v6.563Z"
                                    fill="#fff"/><path d="M22.54
                                    27.265v-6.553l-5.699 3.259 5.7
                                    3.294Zm5.58-4.773a13.697 13.697 0 0 0
                                    1.612-5.895l-5.934 3.397 4.323 2.498Z"
                                    fill="#fff" fill-opacity=".8"/><path
                                    d="m23.362 19.298
                                    5.728-3.276-5.728-3.291v6.567Z"
                                    fill="#fff"/><path d="M22.541
                                    11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                                    7.955v-6.574l-5.685 3.292 5.685 3.281Z"
                                    fill="#fff" fill-opacity=".8"/><path
                                    d="M9.49
                                    12.684v6.622l5.728-3.316-5.728-3.306Z"
                                    fill="#fff"/><path d="M15.586 2.25a13.69
                                    13.69 0 0 0-6.037 1.595l6.037 3.463V2.25Z"
                                    fill="#fff" fill-opacity=".8"/><path
                                    d="M9.49 4.756v6.583l5.732-3.288L9.49
                                    4.756Z" fill="#fff"/><path d="M8.669
                                    4.356a13.83 13.83 0 0 0-4.362 4.39l4.362
                                    2.518V4.356Z" fill="#fff"
                                    fill-opacity=".8"/><path d="M22.504
                                    3.88a13.695 13.695 0 0
                                    0-6.099-1.63v5.123l6.1-3.493ZM2.25
                                    16.483c.071 2.12.634 4.196 1.644
                                    6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68
                                    13.68 0 0 0-1.644
                                    6.036l6.068-3.482-4.424-2.554Z"
                                    fill="#fff"/><path d="M9.539 28.147a13.673
                                    13.673 0 0 0 6.047 1.603v-5.062L9.54
                                    28.147Z" fill="#fff"
                                    fill-opacity=".8"/><path d="M27.697
                                    8.768a13.83 13.83 0 0
                                    0-4.335-4.383v6.889l4.335-2.506ZM23.362
                                    27.62a13.851 13.851 0 0 0
                                    4.351-4.417l-4.351-2.514v6.93Z"
                                    fill="#fff"/><path d="M29.75 15.452a13.659
                                    13.659 0 0 0-1.63-5.979l-4.381 2.53 6.011
                                    3.45Z" fill="#fff" fill-opacity=".8"/><path
                                    d="M16.405 29.75a13.673 13.673 0 0 0
                                    6.036-1.595l-6.036-3.498v5.093Z"
                                    fill="#fff"/><path d="M8.669
                                    19.247v-6.494L3.03 15.986l5.639 3.261Z"
                                    fill="#fff" fill-opacity=".8"/></svg>
                                svgColor:
                                  type: string
                                  description: >-
                                    SVG representation of the model in colored
                                    format.
                                  minLength: 1
                                  x-oapi-codegen-extra-tags:
                                    yaml: svgColor
                                    json: svgColor
                                  x-order: 6
                                  default: >-
                                    <svg xmlns="http://www.w3.org/2000/svg"
                                    id="Layer_1" data-name="Layer 1" viewBox="0
                                    0 134.95
                                    135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                                    points="69.49 31.82 69.49 64.07 97.44 47.89
                                    69.49 31.82" class="cls-1"/><polygon
                                    points="69.49 70.81 69.49 103.22 97.7 87.09
                                    69.49 70.81" class="cls-1"/><polygon
                                    points="65.47 63.85 65.47 32.09 37.87 47.92
                                    65.47 63.85" class="cls-2"/><path
                                    d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                                    class="cls-2"/><polygon points="65.47 103.06
                                    65.47 71.05 37.8 87.07 65.47 103.06"
                                    class="cls-2"/><polygon points="35.54 122.63
                                    63.56 106.61 35.54 90.41 35.54 122.63"
                                    class="cls-1"/><polygon points="99.61 122.8
                                    99.61 90.63 71.63 106.63 99.61 122.8"
                                    class="cls-2"/><path
                                    d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                                    class="cls-2"/><polygon points="103.64 83.69
                                    131.76 67.61 103.64 51.45 103.64 83.69"
                                    class="cls-1"/><polygon points="99.61 44.5
                                    99.61 12.52 71.76 28.49 99.61 44.5"
                                    class="cls-2"/><polygon points="99.61 83.55
                                    99.61 51.28 71.7 67.44 99.61 83.55"
                                    class="cls-2"/><polygon points="67.48 135.02
                                    67.49 135.02 67.48 135.02 67.48 135.02"
                                    class="cls-2"/><polygon points="35.54 51.22
                                    35.54 83.73 63.66 67.45 35.54 51.22"
                                    class="cls-1"/><path
                                    d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                                    class="cls-2"/><polygon points="35.54 12.3
                                    35.54 44.62 63.68 28.48 35.54 12.3"
                                    class="cls-1"/><path
                                    d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                                    class="cls-2"/><path
                                    d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                                    class="cls-1"/><path
                                    d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                                    class="cls-1"/><path
                                    d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                                    class="cls-1"/><path
                                    d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                                    class="cls-2"/><path
                                    d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                                    class="cls-1"/><path
                                    d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                                    class="cls-1"/><path
                                    d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                                    class="cls-2"/><path
                                    d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                                    class="cls-1"/><polygon points="31.51 83.44
                                    31.51 51.56 3.83 67.43 31.51 83.44"
                                    class="cls-2"/></svg>
                                svgComplete:
                                  type: string
                                  description: SVG representation of the complete model.
                                  minLength: 1
                                  x-oapi-codegen-extra-tags:
                                    yaml: svgComplete
                                    json: svgComplete
                                  x-order: 7
                                shape:
                                  x-order: 8
                                  type: string
                                  description: >-
                                    The shape of the node’s body. Note that each
                                    shape fits within the specified width and
                                    height, and so you may have to adjust width
                                    and height if you desire an equilateral
                                    shape (i.e. width !== height for several
                                    equilateral shapes)
                                  default: circle
                                  enum:
                                    - circle
                                    - ellipse
                                    - triangle
                                    - round-triangle
                                    - rectangle
                                    - round-rectangle
                                    - bottom-round-rectangle
                                    - cut-rectangle
                                    - barrel
                                    - rhomboid
                                    - diamond
                                    - round-diamond
                                    - pentagon
                                    - round-pentagon
                                    - hexagon
                                    - round-hexagon
                                    - concave-hexagon
                                    - heptagon
                                    - round-heptagon
                                    - octagon
                                    - round-octagon
                                    - star
                                    - tag
                                    - round-tag
                                    - vee
                                    - polygon
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                                json: metadata
                                yaml: metadata
                              x-order: 11
                              additionalProperties: true
                            model:
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              x-order: 12
                              type: object
                              description: >-
                                Registrant-defined data associated with the
                                model. Properties pertain to the software being
                                managed (e.g. Kubernetes v1.31).
                              required:
                                - version
                              properties:
                                version:
                                  description: >-
                                    Version of the model as defined by the
                                    registrant.
                                  allOf:
                                    - type: string
                                      minLength: 5
                                      maxLength: 100
                                      pattern: >-
                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      description: >-
                                        A valid semantic version string between
                                        5 and 256 characters. The pattern allows
                                        for a major.minor.patch version followed
                                        by an optional pre-release tag like
                                        '-alpha' or '-beta.2' and an optional
                                        build metadata tag like '+build.1.
                                      default: v0.0.1
                                  x-oapi-codegen-extra-tags:
                                    yaml: version
                                    json: version
                                  x-order: 1
                            relationships:
                              type: array
                              x-go-type: interface{}
                              x-oapi-codegen-extra-tags:
                                gorm: '-'
                                json: relationships
                                yaml: relationships
                            components:
                              type: array
                              x-go-type: interface{}
                              x-oapi-codegen-extra-tags:
                                gorm: '-'
                                json: components
                                yaml: components
                            componentsCount:
                              type: integer
                              description: Number of components associated with the model.
                              x-order: 13
                              x-oapi-codegen-extra-tags:
                                json: components_count
                                yaml: components_count
                                gorm: '-'
                              default: 0
                            relationshipsCount:
                              type: integer
                              description: >-
                                Number of relationships associated with the
                                model.
                              x-order: 13
                              x-oapi-codegen-extra-tags:
                                gorm: '-'
                                json: relationships_count
                                yaml: relationships_count
                              default: 0
                          required:
                            - id
                            - schemaVersion
                            - displayName
                            - status
                            - subCategory
                            - model
                            - name
                            - description
                            - version
                            - registrant
                            - category
                            - categoryId
                            - registrantId
                            - relationshipsCount
                            - componentsCount
                            - components
                            - relationships
                        modelId:
                          description: >-
                            ModelId is the foreign key to the model to which the
                            component belongs.
                          x-oapi-codegen-extra-tags:
                            gorm: >-
                              index:idx_component_definition_dbs_model_id,column:model_id
                            yaml: '-'
                            json: '-'
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                          default: 00000000-0000-0000-0000-000000000000
                        styles:
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                            yaml: styles
                            json: styles
                          x-go-type: core.ComponentStyles
                          x-go-type-import:
                            path: github.com/meshery/schemas/models/v1alpha1/core
                          x-order: 8
                          type: object
                          description: Visualization styles for a component
                          required:
                            - shape
                            - primaryColor
                            - svgColor
                            - svgWhite
                            - svgComplete
                          allOf:
                            - type: object
                              description: Common styles for all entities
                              additionalProperties: true
                              required:
                                - primaryColor
                                - svgColor
                                - svgWhite
                                - svgComplete
                              properties:
                                primaryColor:
                                  type: string
                                  description: >-
                                    Primary color of the component used for UI
                                    representation.
                                secondaryColor:
                                  type: string
                                  description: >-
                                    Secondary color of the entity used for UI
                                    representation.
                                svgWhite:
                                  type: string
                                  description: >-
                                    White SVG of the entity used for UI
                                    representation on dark background.
                                svgColor:
                                  type: string
                                  description: >-
                                    Colored SVG of the entity used for UI
                                    representation on light background.
                                svgComplete:
                                  type: string
                                  description: >-
                                    Complete SVG of the entity used for UI
                                    representation, often inclusive of
                                    background.
                                color:
                                  type: string
                                  description: >-
                                    The color of the element's label. Colours
                                    may be specified by name (e.g. red), hex
                                    (e.g.
                                text-opacity:
                                  type: number
                                  description: >-
                                    The opacity of the label text, including its
                                    outline.
                                  minimum: 0
                                  maximum: 1
                                font-family:
                                  type: string
                                  description: >-
                                    A comma-separated list of font names to use
                                    on the label text.
                                font-size:
                                  type: string
                                  description: The size of the label text.
                                font-style:
                                  type: string
                                  description: >-
                                    A CSS font style to be applied to the label
                                    text.
                                font-weight:
                                  type: string
                                  description: >-
                                    A CSS font weight to be applied to the label
                                    text.
                                text-transform:
                                  type: string
                                  description: A transformation to apply to the label text
                                  enum:
                                    - none
                                    - uppercase
                                    - lowercase
                                opacity:
                                  type: number
                                  description: >-
                                    The opacity of the element, ranging from 0
                                    to 1. Note that the opacity of a compound
                                    node parent affects the effective opacity of
                                    its children.
                                  minimum: 0
                                  maximum: 1
                                z-index:
                                  type: integer
                                  description: >-
                                    An integer value that affects the relative
                                    draw order of elements. In general, an
                                    element with a higher z-index will be drawn
                                    on top of an element with a lower z-index.
                                    Note that edges are under nodes despite
                                    z-index.
                                label:
                                  type: string
                                  description: >-
                                    The text to display for an element's label.
                                    Can give a path, e.g. data(id) will label
                                    with the elements id
                                animation:
                                  type: object
                                  description: >-
                                    The animation to apply to the element.
                                    example ripple,bounce,etc
                            - type: object
                              properties:
                                shape:
                                  type: string
                                  description: >-
                                    The shape of the node's body. Note that each
                                    shape fits within the specified width and
                                    height, and so you may have to adjust width
                                    and height if you desire an equilateral
                                    shape (i.e. width !== height for several
                                    equilateral shapes)
                                  enum:
                                    - ellipse
                                    - triangle
                                    - round-triangle
                                    - rectangle
                                    - round-rectangle
                                    - bottom-round-rectangle
                                    - cut-rectangle
                                    - barrel
                                    - rhomboid
                                    - diamond
                                    - round-diamond
                                    - pentagon
                                    - round-pentagon
                                    - hexagon
                                    - round-hexagon
                                    - concave-hexagon
                                    - heptagon
                                    - round-heptagon
                                    - octagon
                                    - round-octagon
                                    - star
                                    - tag
                                    - round-tag
                                    - vee
                                    - polygon
                                position:
                                  type: object
                                  additionalProperties: false
                                  required:
                                    - x
                                    - 'y'
                                  description: >-
                                    The position of the node. If the position is
                                    set, the node is drawn at that position in
                                    the given dimensions. If the position is not
                                    set, the node is drawn at a random position.
                                  properties:
                                    x:
                                      type: number
                                      description: The x-coordinate of the node.
                                      x-go-type: float64
                                    'y':
                                      type: number
                                      description: The y-coordinate of the node.
                                      x-go-type: float64
                                body-text:
                                  type: string
                                  description: >-
                                    The text to display for an element's body.
                                    Can give a path, e.g. data(id) will label
                                    with the elements id
                                body-text-wrap:
                                  type: string
                                  description: >-
                                    How to wrap the text in the node. Can be
                                    'none', 'wrap', or 'ellipsis'.
                                body-text-max-width:
                                  type: string
                                  description: >-
                                    The maximum width for wrapping text in the
                                    node.
                                body-text-opacity:
                                  type: number
                                  description: >-
                                    The opacity of the node's body text,
                                    including its outline.
                                  minimum: 0
                                  maximum: 1
                                body-text-background-color:
                                  type: string
                                  description: >-
                                    The colour of the node's body text
                                    background. Colours may be specified by name
                                    (e.g. red), hex (e.g.
                                body-text-font-size:
                                  type: number
                                  description: The size of the node's body text.
                                body-text-color:
                                  type: string
                                  description: >-
                                    The colour of the node's body text. Colours
                                    may be specified by name (e.g. red), hex
                                    (e.g.
                                body-text-font-weight:
                                  type: string
                                  description: >-
                                    A CSS font weight to be applied to the
                                    node's body text.
                                body-text-horizontal-align:
                                  type: string
                                  description: >-
                                    A CSS horizontal alignment to be applied to
                                    the node's body text.
                                body-text-decoration:
                                  type: string
                                  description: >-
                                    A CSS text decoration to be applied to the
                                    node's body text.
                                body-text-vertical-align:
                                  type: string
                                  description: >-
                                    A CSS vertical alignment to be applied to
                                    the node's body text.
                                width:
                                  type: number
                                  description: >-
                                    The width of the node's body or the width of
                                    an edge's line.
                                height:
                                  type: number
                                  description: The height of the node's body
                                background-image:
                                  type: string
                                  description: >-
                                    The URL that points to the image to show in
                                    the node.
                                background-color:
                                  type: string
                                  description: >-
                                    The colour of the node's body. Colours may
                                    be specified by name (e.g. red), hex (e.g.
                                background-blacken:
                                  type: number
                                  description: >-
                                    Blackens the node's body for values from 0
                                    to 1; whitens the node's body for values
                                    from 0 to -1.
                                  maximum: 1
                                  minimum: -1
                                background-opacity:
                                  type: number
                                  description: >-
                                    The opacity level of the node's background
                                    colour
                                  maximum: 1
                                  minimum: 0
                                background-position-x:
                                  type: string
                                  description: >-
                                    The x position of the background image,
                                    measured in percent (e.g. 50%) or pixels
                                    (e.g. 10px)
                                background-position-y:
                                  type: string
                                  description: >-
                                    The y position of the background image,
                                    measured in percent (e.g. 50%) or pixels
                                    (e.g. 10px)
                                background-offset-x:
                                  type: string
                                  description: >-
                                    The x offset of the background image,
                                    measured in percent (e.g. 50%) or pixels
                                    (e.g. 10px)
                                background-offset-y:
                                  type: string
                                  description: >-
                                    The y offset of the background image,
                                    measured in percent (e.g. 50%) or pixels
                                    (e.g. 10px)
                                background-fit:
                                  type: string
                                  description: >-
                                    How the background image is fit to the node.
                                    Can be 'none', 'contain', or 'cover'.
                                background-clip:
                                  type: string
                                  description: >-
                                    How the background image is clipped to the
                                    node. Can be 'none', 'node', or
                                    'node-border'.
                                background-width-relative-to:
                                  type: string
                                  description: >-
                                    How the background image's width is
                                    determined. Can be 'none', 'inner', or
                                    'outer'.
                                background-height-relative-to:
                                  type: string
                                  description: >-
                                    How the background image's height is
                                    determined. Can be 'none', 'inner', or
                                    'outer'.
                                border-width:
                                  type: number
                                  description: The size of the node's border.
                                  minimum: 0
                                border-style:
                                  type: string
                                  description: The style of the node's border
                                  enum:
                                    - solid
                                    - dotted
                                    - dashed
                                    - double
                                border-color:
                                  type: string
                                  description: >-
                                    The colour of the node's border. Colours may
                                    be specified by name (e.g. red), hex (e.g.
                                border-opacity:
                                  type: number
                                  description: The opacity of the node's border
                                  minimum: 0
                                  maximum: 1
                                padding:
                                  type: number
                                  description: >-
                                    The amount of padding around all sides of
                                    the node.
                                  minimum: 0
                                text-halign:
                                  type: string
                                  description: The horizontal alignment of a node's label
                                  enum:
                                    - left
                                    - center
                                    - right
                                text-valign:
                                  type: string
                                  description: The vertical alignment of a node's label
                                  enum:
                                    - top
                                    - center
                                    - bottom
                                ghost:
                                  type: string
                                  description: >-
                                    Whether to use the ghost effect, a
                                    semitransparent duplicate of the element
                                    drawn at an offset.
                                  default: 'no'
                                  enum:
                                    - 'yes'
                                    - 'no'
                                active-bg-color:
                                  type: string
                                  description: >-
                                    The colour of the indicator shown when the
                                    background is grabbed by the user. Selector
                                    needs to be *core*. Colours may be specified
                                    by name (e.g. red), hex (e.g.
                                active-bg-opacity:
                                  type: string
                                  description: >-
                                    The opacity of the active background
                                    indicator. Selector needs to be *core*.
                                active-bg-size:
                                  type: string
                                  description: >-
                                    The opacity of the active background
                                    indicator. Selector needs to be *core*.
                                selection-box-color:
                                  type: string
                                  description: >-
                                    The background colour of the selection box
                                    used for drag selection. Selector needs to
                                    be *core*. Colours may be specified by name
                                    (e.g. red), hex (e.g.
                                selection-box-border-width:
                                  type: number
                                  description: >-
                                    The size of the border on the selection box.
                                    Selector needs to be *core*
                                selection-box-opacity:
                                  type: number
                                  description: >-
                                    The opacity of the selection box. Selector
                                    needs to be *core*
                                  minimum: 0
                                  maximum: 1
                                outside-texture-bg-color:
                                  type: string
                                  description: >-
                                    The colour of the area outside the viewport
                                    texture when initOptions.textureOnViewport
                                    === true. Selector needs to be *core*.
                                    Colours may be specified by name (e.g. red),
                                    hex (e.g.
                                outside-texture-bg-opacity:
                                  type: number
                                  description: >-
                                    The opacity of the area outside the viewport
                                    texture. Selector needs to be *core*
                                  minimum: 0
                                  maximum: 1
                                shape-polygon-points:
                                  type: string
                                  description: >-
                                    An array (or a space-separated string) of
                                    numbers ranging on [-1, 1], representing
                                    alternating x and y values (i.e. x1 y1 x2
                                    y2, x3 y3 ...). This represents the points
                                    in the polygon for the node's shape. The
                                    bounding box of the node is given by (-1,
                                    -1), (1, -1), (1, 1), (-1, 1). The node's
                                    position is the origin (0, 0 )
                                menu-background-color:
                                  type: string
                                  description: >-
                                    The colour of the background of the
                                    component menu. Colours may be specified by
                                    name (e.g. red), hex (e.g.
                                menu-background-opacity:
                                  type: number
                                  description: >-
                                    The opacity of the background of the
                                    component menu.
                                  minimum: 0
                                  maximum: 1
                                menu-forground-color:
                                  type: string
                                  description: >-
                                    The colour of the text or icons in the
                                    component menu. Colours may be specified by
                                    name (e.g. red), hex (e.g.
                        capabilities:
                          x-order: 9
                          type: array
                          description: >-
                            Meshery manages components in accordance with their
                            specific capabilities. This field explicitly
                            identifies those capabilities largely by what
                            actions a given component supports; e.g.
                            metric-scrape, sub-interface, and so on. This field
                            is extensible. ComponentDefinitions may define a
                            broad array of capabilities, which are in-turn
                            dynamically interpretted by Meshery for full
                            lifecycle management.
                          items:
                            x-go-type: capability.Capability
                            x-go-type-import:
                              path: >-
                                github.com/meshery/schemas/models/v1alpha1/capability
                            $id: https://schemas.meshery.io/capability.json
                            $schema: http://json-schema.org/draft-07/schema#
                            description: >-
                              Meshery manages entities in accordance with their
                              specific capabilities. This field explicitly
                              identifies those capabilities largely by what
                              actions a given component supports; e.g.
                              metric-scrape, sub-interface, and so on. This
                              field is extensible. Entities may define a broad
                              array of capabilities, which are in-turn
                              dynamically interpretted by Meshery for full
                              lifecycle management.
                            additionalProperties: false
                            type: object
                            required:
                              - description
                              - schemaVersion
                              - version
                              - displayName
                              - kind
                              - type
                              - subType
                              - entityState
                              - key
                              - status
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                            properties:
                              schemaVersion:
                                description: >-
                                  Specifies the version of the schema to which
                                  the capability definition conforms.
                                type: string
                                minLength: 2
                                maxLength: 100
                                pattern: >-
                                  ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                example:
                                  - v1
                                  - v1alpha1
                                  - v2beta3
                                  - v1.custom-suffix
                              version:
                                description: Version of the capability definition.
                                type: string
                                minLength: 5
                                maxLength: 100
                                pattern: >-
                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                default: v0.0.1
                              displayName:
                                description: >-
                                  Name of the capability in human-readible
                                  format.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              description:
                                type: string
                                description: >-
                                  A written representation of the purpose and
                                  characteristics of the capability.
                              kind:
                                description: Top-level categorization of the capability
                                additionalProperties: false
                                anyOf:
                                  - const: action
                                    description: >-
                                      For capabilities related to executing
                                      actions on entities. Example: initiate log
                                      streaming on a Pod. Example: initiate
                                      deployment of a component.
                                  - const: mutate
                                    description: >-
                                      For capabilities related to mutating an
                                      entity. Example: the ability to change the
                                      configuration of a component.
                                  - const: view
                                    description: >-
                                      For capabilities related to viewing an
                                      entity. Example: the ability to view a
                                      components configuration.
                                  - const: interaction
                                    description: >-
                                      Catch all for capabilities related to
                                      interaction with entities. Example: the
                                      ability for a component to be dragged and
                                      dropped. Example: supports event bubbling
                                      to parent components. 
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              type:
                                description: >-
                                  Classification of capabilities. Used to group
                                  capabilities similar in nature.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              subType:
                                description: >-
                                  Most granular unit of capability
                                  classification. The combination of Kind, Type
                                  and SubType together uniquely identify a
                                  Capability.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              key:
                                description: Key that backs the capability.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              entityState:
                                description: >-
                                  State of the entity in which the capability is
                                  applicable.
                                type: array
                                items:
                                  type: string
                                  enum:
                                    - declaration
                                    - instance
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  description: >-
                                    A string starting with an alphanumeric
                                    character. Spaces and hyphens allowed.
                              status:
                                type: string
                                description: Status of the capability
                                default: enabled
                                enum:
                                  - enabled
                                  - disabled
                              metadata:
                                type: object
                                description: >-
                                  Metadata contains additional information
                                  associated with the capability. Extension
                                  point.
                                additionalProperties: true
                            default:
                              - description: Configure the visual styles for the component
                                displayName: Styling
                                entityState:
                                  - declaration
                                key: ''
                                kind: mutate
                                schemaVersion: capability.meshery.io/v1alpha1
                                status: enabled
                                subType: ''
                                type: style
                                version: 0.7.0
                              - description: Change the shape of the component
                                displayName: Change Shape
                                entityState:
                                  - declaration
                                key: ''
                                kind: mutate
                                schemaVersion: capability.meshery.io/v1alpha1
                                status: enabled
                                subType: shape
                                type: style
                                version: 0.7.0
                              - description: >-
                                  Drag and Drop a component into a parent
                                  component in graph view
                                displayName: Compound Drag And Drop
                                entityState:
                                  - declaration
                                key: ''
                                kind: interaction
                                schemaVersion: capability.meshery.io/v1alpha1
                                status: enabled
                                subType: compoundDnd
                                type: graph
                                version: 0.7.0
                              - description: Add text to nodes body
                                displayName: Body Text
                                entityState:
                                  - declaration
                                key: ''
                                kind: mutate
                                schemaVersion: capability.meshery.io/v1alpha1
                                status: enabled
                                subType: body-text
                                type: style
                                version: 0.7.0
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                            yaml: capabilities
                            json: capabilities
                          default:
                            - schemaVersion: capability.meshery.io/v1alpha1
                              version: 0.7.0
                              displayName: Performance Test
                              description: >-
                                Initiate a performance test. Meshery will
                                execute the load generation, collect metrics,
                                and present the results.
                              kind: action
                              type: operator
                              subType: perf-test
                              key: ''
                              entityState:
                                - instance
                              status: enabled
                              metadata: null
                            - schemaVersion: capability.meshery.io/v1alpha1
                              version: 0.7.0
                              displayName: Workload Configuration
                              description: >-
                                Configure the workload specific setting of a
                                component
                              kind: mutate
                              type: configuration
                              subType: config
                              key: ''
                              entityState:
                                - declaration
                              status: enabled
                              metadata: null
                            - schemaVersion: capability.meshery.io/v1alpha1
                              version: 0.7.0
                              displayName: Labels and Annotations Configuration
                              description: >-
                                Configure Labels And Annotations for  the
                                component 
                              kind: mutate
                              type: configuration
                              subType: labels-and-annotations
                              key: ''
                              entityState:
                                - declaration
                              status: enabled
                              metadata: null
                            - schemaVersion: capability.meshery.io/v1alpha1
                              version: 0.7.0
                              displayName: Relationships
                              description: View relationships for the component
                              kind: view
                              type: configuration
                              subType: relationship
                              key: ''
                              entityState:
                                - declaration
                                - instance
                              status: enabled
                              metadata: null
                            - schemaVersion: capability.meshery.io/v1alpha1
                              version: 0.7.0
                              displayName: Json Schema
                              description: 'View Component Definition '
                              kind: view
                              type: configuration
                              subType: definition
                              key: ''
                              entityState:
                                - declaration
                                - instance
                              status: enabled
                              metadata: null
                            - schemaVersion: capability.meshery.io/v1alpha1
                              version: 0.7.0
                              displayName: Styling
                              description: Configure the visual styles for the component
                              kind: mutate
                              type: style
                              subType: ''
                              key: ''
                              entityState:
                                - declaration
                              status: enabled
                              metadata: null
                            - schemaVersion: capability.meshery.io/v1alpha1
                              version: 0.7.0
                              displayName: Change Shape
                              description: Change the shape of the component
                              kind: mutate
                              type: style
                              subType: shape
                              key: ''
                              entityState:
                                - declaration
                              status: enabled
                              metadata: null
                            - schemaVersion: capability.meshery.io/v1alpha1
                              version: 0.7.0
                              displayName: Compound Drag And Drop
                              description: >-
                                Drag and Drop a component into a parent
                                component in graph view
                              kind: interaction
                              type: graph
                              subType: compoundDnd
                              key: ''
                              entityState:
                                - declaration
                              status: enabled
                              metadata: null
                        status:
                          x-order: 10
                          type: string
                          description: >-
                            Status of component, including:

                            - duplicate: this component is a duplicate of
                            another. The component that is to be the canonical
                            reference and that is duplicated by other components
                            should not be assigned the 'duplicate' status.

                            - maintenance: model is unavailable for a period of
                            time.

                            - enabled: model is available for use for all users
                            of this Meshery Server.

                            - ignored: model is unavailable for use for all
                            users of this Meshery Server.
                          default: enabled
                          enum:
                            - ignored
                            - enabled
                            - duplicate
                            - resolved
                            - open
                          x-oapi-codegen-extra-tags:
                            yaml: status
                            json: status
                        metadata:
                          x-order: 11
                          type: object
                          description: >-
                            Metadata contains additional information associated
                            with the component.
                          required:
                            - genealogy
                            - isAnnotation
                            - isNamespaced
                            - published
                            - instanceDetails
                            - configurationUISchema
                          properties:
                            genealogy:
                              x-order: 1
                              type: string
                              description: >-
                                Genealogy represents the various
                                representational states of the component.
                            isAnnotation:
                              x-order: 2
                              type: boolean
                              description: >-
                                Identifies whether the component is semantically
                                meaningful or not; identifies whether the
                                component should be treated as deployable entity
                                or is for purposes of logical representation.
                              default: false
                            isNamespaced:
                              x-order: 3
                              type: boolean
                              description: >-
                                Identifies whether the component is scoped to
                                namespace or clsuter wide.
                            published:
                              x-order: 4
                              type: boolean
                              description: >-
                                'published' controls whether the component
                                should be registered in Meshery Registry. When
                                the same 'published' property in Models, is set
                                to 'false', the Model property takes precedence
                                with all Entities in the Model not being
                                registered.
                            instanceDetails:
                              x-order: 5
                              type: object
                              description: >-
                                InstanceDetails contains information about the
                                instance of the component.
                            configurationUISchema:
                              x-order: 6
                              type: string
                              description: >-
                                Defines the UI schema for rendering the
                                component's configuration. For more details,
                                visit:
                                https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                                .
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                          additionalProperties: true
                        configuration:
                          x-order: 12
                          description: >-
                            The configuration of the component. The
                            configuration is based on the schema defined within
                            the component definition(component.schema).
                          type: object
                          $comment: >-
                            The configuration of the component. The
                            configuration is based on the schema defined within
                            the component definition(component.schema).
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                        component:
                          x-order: 13
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                          x-go-type: Component
                          description: >-
                            data related to the third party capability that
                            Component Defintion wraps , this is herematicaly
                            sealed an
                          type: object
                          properties:
                            version:
                              type: string
                              description: >-
                                Version of the component produced by the
                                registrant. Example: APIVersion of a Kubernetes
                                Pod.
                              x-order: 1
                            kind:
                              type: string
                              description: >-
                                The unique identifier (name) assigned by the
                                registrant to this component. Example: A
                                Kubernetes Pod is of kind 'Pod'.
                              x-order: 2
                            schema:
                              type: string
                              description: >-
                                JSON schema of the object as defined by the
                                registrant.
                              x-order: 3
                          required:
                            - version
                            - kind
                            - schema
                      required:
                        - id
                        - displayName
                        - description
                        - schemaVersion
                        - format
                        - version
                        - configuration
                        - metadata
                        - modelId
                        - model
                        - component
                  preferences:
                    type: object
                    description: Design-level preferences
                    x-order: 7
                    properties:
                      layers:
                        type: object
                        description: List of available layers
                    required:
                      - layers
                  relationships:
                    description: List of relationships between components
                    type: array
                    x-order: 8
                    items:
                      x-go-type: '*relationship.RelationshipDefinition'
                      x-go-type-import:
                        path: >-
                          github.com/meshery/schemas/models/v1alpha3/relationship
                      $id: https://schemas.meshery.io/relationship.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Relationships define the nature of interaction between
                        interconnected components in Meshery. The combination of
                        relationship properties kind, type, and subtype
                        characterize various genealogical relations among and
                        between components. Relationships have selectors,
                        selector sets, metadata, and optional parameters. Learn
                        more at
                        https://docs.meshery.io/concepts/logical/relationships.
                      required:
                        - schemaVersion
                        - version
                        - model
                        - kind
                        - type
                        - subType
                      additionalProperties: false
                      type: object
                      properties:
                        id:
                          description: >-
                            Uniquely identifies the entity (i.e. component) as
                            defined in a declaration (i.e. design).
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                          x-oapi-codegen-extra-tags:
                            yaml: id
                            json: id
                        schemaVersion:
                          description: >-
                            Specifies the version of the schema used for the
                            relationship definition.
                          type: string
                          minLength: 2
                          maxLength: 100
                          pattern: >-
                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                          example:
                            - v1
                            - v1alpha1
                            - v2beta3
                            - v1.custom-suffix
                          x-oapi-codegen-extra-tags:
                            yaml: schemaVersion
                            json: schemaVersion
                          default: relationships.meshery.io/v1alpha3
                        version:
                          type: string
                          minLength: 5
                          maxLength: 100
                          pattern: >-
                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          description: >-
                            A valid semantic version string between 5 and 256
                            characters. The pattern allows for a
                            major.minor.patch version followed by an optional
                            pre-release tag like '-alpha' or '-beta.2' and an
                            optional build metadata tag like '+build.1.
                          default: v0.0.1
                          x-oapi-codegen-extra-tags:
                            yaml: version
                            json: version
                        model:
                          description: >-
                            Name of the model in which this relationship is
                            packaged.
                          $id: https://schemas.meshery.io/model.json
                          $schema: http://json-schema.org/draft-07/schema#
                          additionalProperties: false
                          type: object
                          properties:
                            id:
                              description: >-
                                Uniquely identifies the entity (i.e. component)
                                as defined in a declaration (i.e. design).
                              type: string
                              format: uuid
                              x-go-type: uuid.UUID
                              x-go-type-import:
                                path: github.com/gofrs/uuid
                              x-oapi-codegen-extra-tags:
                                yaml: id
                                json: id
                            schemaVersion:
                              description: >-
                                Specifies the version of the schema used for the
                                definition.
                              x-oapi-codegen-extra-tags:
                                yaml: schemaVersion
                                json: schemaVersion
                              type: string
                              minLength: 2
                              maxLength: 100
                              pattern: >-
                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                              example:
                                - v1
                                - v1alpha1
                                - v2beta3
                                - v1.custom-suffix
                            version:
                              description: Version of the model definition.
                              type: string
                              x-oapi-codegen-extra-tags:
                                yaml: version
                                json: version
                              minLength: 5
                              maxLength: 100
                              pattern: >-
                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                            name:
                              description: >-
                                The unique name for the model within the scope
                                of a registrant.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: name
                                json: name
                            displayName:
                              description: Human-readable name for the model.
                              minLength: 1
                              maxLength: 100
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                              x-oapi-codegen-extra-tags:
                                yaml: displayName
                                json: displayName
                            description:
                              type: string
                              description: Description of the model.
                              minLength: 1
                              maxLength: 1000
                              x-oapi-codegen-extra-tags:
                                yaml: description
                                json: description
                            status:
                              type: string
                              description: >-
                                Status of model, including:

                                - duplicate: this component is a duplicate of
                                another. The component that is to be the
                                canonical reference and that is duplicated by
                                other components should not be assigned the
                                'duplicate' status.

                                - maintenance: model is unavailable for a period
                                of time.

                                - enabled: model is available for use for all
                                users of this Meshery Server.

                                - ignored: model is unavailable for use for all
                                users of this Meshery Server.
                              enum:
                                - ignored
                                - enabled
                                - duplicate
                              x-oapi-codegen-extra-tags:
                                yaml: status
                                json: status
                            registrant:
                              x-oapi-codegen-extra-tags:
                                yaml: registrant
                                json: registrant
                                gorm: foreignKey:RegistrantId;references:Id
                              $id: https://schemas.meshery.io/component.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery Connections are managed and unmanaged
                                resources that either through discovery or
                                manual entry are tracked by Meshery. Learn more
                                at
                                https://docs.meshery.io/concepts/logical/connections
                              additionalProperties: false
                              type: object
                              required:
                                - kind
                                - type
                                - status
                              properties:
                                id:
                                  description: ID
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  x-oapi-codegen-extra-tags:
                                    yaml: id
                                    json: id
                                name:
                                  x-oapi-codegen-extra-tags:
                                    db: name
                                    yaml: name
                                    json: name
                                  type: string
                                  description: Connection Name
                                credential_id:
                                  x-go-name: CredentialId
                                  x-oapi-codegen-extra-tags:
                                    db: credential_id
                                    yaml: credential_id
                                    json: credential_id
                                  description: Credential ID
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                type:
                                  x-oapi-codegen-extra-tags:
                                    db: type
                                    yaml: type
                                    json: type
                                  type: string
                                  description: Connection Type
                                sub_type:
                                  x-oapi-codegen-extra-tags:
                                    db: sub_type
                                    yaml: sub_type
                                    json: sub_type
                                  type: string
                                  description: Connection Subtype
                                kind:
                                  x-oapi-codegen-extra-tags:
                                    db: kind
                                    yaml: kind
                                    json: kind
                                  type: string
                                  description: Connection Kind
                                metadata:
                                  x-oapi-codegen-extra-tags:
                                    db: metadata
                                    yaml: metadata
                                    json: metadata
                                  type: object
                                status:
                                  x-oapi-codegen-extra-tags:
                                    db: status
                                    yaml: status
                                    json: status
                                  description: Connection Status
                                  type: string
                                  enum:
                                    - discovered
                                    - registered
                                    - connected
                                    - ignored
                                    - maintenance
                                    - disconnected
                                    - deleted
                                    - not found
                                user_id:
                                  x-go-name: UserID
                                  x-oapi-codegen-extra-tags:
                                    yaml: user_id
                                    json: user_id
                                  type: string
                                  format: uuid
                                  description: >-
                                    A Universally Unique Identifier used to
                                    uniquely identify entites in Meshery. The
                                    UUID core defintion is used across different
                                    schemas.
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                created_at:
                                  x-oapi-codegen-extra-tags:
                                    yaml: created_at
                                    json: created_at
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                updated_at:
                                  x-oapi-codegen-extra-tags:
                                    yaml: updated_at
                                    json: updated_at
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                deleted_at:
                                  x-oapi-codegen-extra-tags:
                                    yaml: deleted_at
                                    json: deleted_at
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                            category:
                              type: object
                              description: Category of the model.
                              properties:
                                id:
                                  type: string
                                  format: uuid
                                  description: >-
                                    A Universally Unique Identifier used to
                                    uniquely identify entites in Meshery. The
                                    UUID core defintion is used across different
                                    schemas.
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  x-oapi-codegen-extra-tags:
                                    yaml: id
                                    json: id
                                name:
                                  type: string
                                  minLength: 1
                                  maxLength: 100
                                  x-oapi-codegen-extra-tags:
                                    yaml: name
                                    json: name
                                metadata:
                                  type: object
                                  x-oapi-codegen-extra-tags:
                                    yaml: metadata
                                    json: metadata
                              x-oapi-codegen-extra-tags:
                                yaml: category
                                json: category
                                gorm: foreignKey:CategoryId;references:Id
                            subCategory:
                              type: string
                              description: Sub-category of the model.
                              minLength: 1
                              maxLength: 100
                              x-oapi-codegen-extra-tags:
                                yaml: subCategory
                                json: subCategory
                            metadata:
                              type: object
                              description: >-
                                Metadata containing additional information
                                associated with the model.
                              properties:
                                capabilities:
                                  type: array
                                  description: Capabilities associated with the model
                                  items:
                                    $id: https://schemas.meshery.io/capability.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    description: >-
                                      Meshery manages entities in accordance
                                      with their specific capabilities. This
                                      field explicitly identifies those
                                      capabilities largely by what actions a
                                      given component supports; e.g.
                                      metric-scrape, sub-interface, and so on.
                                      This field is extensible. Entities may
                                      define a broad array of capabilities,
                                      which are in-turn dynamically interpretted
                                      by Meshery for full lifecycle management.
                                    additionalProperties: false
                                    type: object
                                    required:
                                      - schemaVersion
                                      - version
                                      - displayName
                                      - kind
                                      - type
                                      - entityState
                                      - status
                                    x-oapi-codegen-extra-tags:
                                      gorm: type:bytes;serializer:json
                                    properties:
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema to
                                          which the capability definition
                                          conforms.
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                      version:
                                        description: Version of the capability definition.
                                        type: string
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                      displayName:
                                        description: >-
                                          Name of the capability in human-readible
                                          format.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: >-
                                          A written representation of the purpose
                                          and characteristics of the capability.
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      kind:
                                        description: >-
                                          Top-level categorization of the
                                          capability
                                        additionalProperties: false
                                        anyOf:
                                          - const: action
                                            description: >-
                                              For capabilities related to executing
                                              actions on entities. Example: initiate
                                              log streaming on a Pod. Example:
                                              initiate deployment of a component.
                                          - const: mutate
                                            description: >-
                                              For capabilities related to mutating an
                                              entity. Example: the ability to change
                                              the configuration of a component.
                                          - const: view
                                            description: >-
                                              For capabilities related to viewing an
                                              entity. Example: the ability to view a
                                              components configuration.
                                          - const: interaction
                                            description: >-
                                              Catch all for capabilities related to
                                              interaction with entities. Example: the
                                              ability for a component to be dragged
                                              and dropped. Example: supports event
                                              bubbling to parent components. 
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: kind
                                          json: kind
                                      type:
                                        description: >-
                                          Classification of capabilities. Used to
                                          group capabilities similar in nature.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: type
                                          json: type
                                      subType:
                                        description: >-
                                          Most granular unit of capability
                                          classification. The combination of Kind,
                                          Type and SubType together uniquely
                                          identify a Relaationship.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        oneOf:
                                          - const: inventory
                                            description: >-
                                              A hierarchical inventory relationship in
                                              which the configuration of (parent)
                                              component is patched with the
                                              configuration of other (child)
                                              component. Eg: The configuration of the
                                              EnvoyFilter (parent) component is
                                              patched with the configuration as
                                              received from WASMFilter (child)
                                              component.
                                          - const: matchLabels
                                            description: >-
                                              Match label relationships offer a
                                              dynamic association between one or more
                                              components and are a flexible way to
                                              group and manage related components in
                                              Meshery.
                                          - const: permission
                                            description: >-
                                              A relationship that represents a set of
                                              security-centric bindings between
                                              components.
                                          - const: network
                                            description: >-
                                              A relationship that represents a line of
                                              communication between two or more
                                              components.
                                          - const: firewall
                                            description: >-
                                              A relationship that act as a
                                              network-based security boundary for
                                              ingress and egress traffic.
                                          - const: mount
                                            description: >-
                                              A relationship that represents volume
                                              mounts between components.
                                          - const: alias
                                            description: >-
                                              An alias for a field path in another
                                              component.
                                          - const: annotation
                                            description: >-
                                              A relationship that provide valuable
                                              context for users, controllers, and
                                              third-party tools within the Meshery
                                              ecosystem.
                                          - const: reference
                                            description: >-
                                              A reference relationship  is a
                                              declarative linkage where one resource
                                              identifies or depends on another
                                              resource by referencing its name, kind,
                                              API version, or some other property
                                        x-oapi-codegen-extra-tags:
                                          yaml: subType
                                          json: subType
                                      key:
                                        description: Key that backs the capability.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: key
                                          json: key
                                      entityState:
                                        description: >-
                                          State of the entity in which the
                                          capability is applicable.
                                        type: array
                                        items:
                                          type: string
                                          enum:
                                            - declaration
                                            - instance
                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                          description: >-
                                            A string starting with an alphanumeric
                                            character. Spaces and hyphens allowed.
                                          x-oapi-codegen-extra-tags:
                                            yaml: entityState
                                            json: entityState
                                      status:
                                        type: string
                                        description: Status of the capability
                                        default: enabled
                                        enum:
                                          - enabled
                                          - disabled
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata contains additional information
                                          associated with the capability.
                                          Extension point.
                                        additionalProperties: true
                                        x-oapi-codegen-extra-tags:
                                          yaml: metadata
                                          json: metadata
                                isAnnotation:
                                  type: boolean
                                  description: >-
                                    Indicates whether the model and its entities
                                    should be treated as deployable entities or
                                    as logical representations.
                                  x-oapi-codegen-extra-tags:
                                    yaml: isAnnotation
                                    json: isAnnotation
                                primaryColor:
                                  type: string
                                  description: Primary color associated with the model.
                                  minLength: 1
                                  maxLength: 50
                                  x-oapi-codegen-extra-tags:
                                    yaml: primaryColor
                                    json: primaryColor
                                secondaryColor:
                                  type: string
                                  description: Secondary color associated with the model.
                                  minLength: 1
                                  maxLength: 50
                                  x-oapi-codegen-extra-tags:
                                    yaml: secondaryColor
                                    json: secondaryColor
                                svgWhite:
                                  type: string
                                  description: >-
                                    SVG representation of the model in white
                                    color.
                                  minLength: 1
                                  x-oapi-codegen-extra-tags:
                                    yaml: svgWhite
                                    json: svgWhite
                                svgColor:
                                  type: string
                                  description: >-
                                    SVG representation of the model in colored
                                    format.
                                  minLength: 1
                                  x-oapi-codegen-extra-tags:
                                    yaml: svgColor
                                    json: svgColor
                                svgComplete:
                                  type: string
                                  description: SVG representation of the complete model.
                                  minLength: 1
                                  x-oapi-codegen-extra-tags:
                                    yaml: svgComplete
                                    json: svgComplete
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              additionalProperties: true
                            model:
                              type: object
                              description: >-
                                Registrant-defined data associated with the
                                model. Properties pertain to the software being
                                managed (e.g. Kubernetes v1.31)
                              required:
                                - version
                              properties:
                                version:
                                  description: >-
                                    Version of the model as defined by the
                                    registrant.
                                  x-oapi-codegen-extra-tags:
                                    yaml: version
                                    json: version
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                          required:
                            - name
                            - version
                            - registrant
                            - category
                        kind:
                          description: >-
                            Kind of the Relationship. Learn more about
                            relationships -
                            https://docs.meshery.io/concepts/logical/relationships.
                          enum:
                            - hierarchical
                            - edge
                            - sibling
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: kind
                            json: kind
                        type:
                          description: >-
                            Classification of relationships. Used to group
                            relationships similar in nature.
                          x-go-name: RelationshipType
                          gorm: column:type
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: type
                            json: type
                        subType:
                          description: >-
                            Most granular unit of relationship classification.
                            The combination of Kind, Type and SubType together
                            uniquely identify a Relationship.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: subType
                            json: subType
                        status:
                          type: string
                          description: Status of the relationship.
                          default: enabled
                          enum:
                            - pending
                            - approved
                            - ignored
                            - enabled
                            - deleted
                          x-oapi-codegen-extra-tags:
                            yaml: status
                            json: status
                        evaluationQuery:
                          description: >-
                            Optional. Assigns the policy to be used for the
                            evaluation of the relationship. Deprecation Notice:
                            In the future, this property is either to be removed
                            or to it is to be an array of optional policy $refs.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: evaluationQuery
                            json: evaluationQuery
                        capabilities:
                          type: array
                          description: Capabilities associated with the relationship.
                          items:
                            $id: https://schemas.meshery.io/capability.json
                            $schema: http://json-schema.org/draft-07/schema#
                            description: >-
                              Meshery manages entities in accordance with their
                              specific capabilities. This field explicitly
                              identifies those capabilities largely by what
                              actions a given component supports; e.g.
                              metric-scrape, sub-interface, and so on. This
                              field is extensible. Entities may define a broad
                              array of capabilities, which are in-turn
                              dynamically interpretted by Meshery for full
                              lifecycle management.
                            additionalProperties: false
                            type: object
                            required:
                              - schemaVersion
                              - version
                              - displayName
                              - kind
                              - type
                              - entityState
                              - status
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                            properties:
                              schemaVersion:
                                description: >-
                                  Specifies the version of the schema to which
                                  the capability definition conforms.
                                type: string
                                minLength: 2
                                maxLength: 100
                                pattern: >-
                                  ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                example:
                                  - v1
                                  - v1alpha1
                                  - v2beta3
                                  - v1.custom-suffix
                                x-oapi-codegen-extra-tags:
                                  yaml: schemaVersion
                                  json: schemaVersion
                              version:
                                description: Version of the capability definition.
                                type: string
                                minLength: 5
                                maxLength: 100
                                pattern: >-
                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                x-oapi-codegen-extra-tags:
                                  yaml: version
                                  json: version
                              displayName:
                                description: >-
                                  Name of the capability in human-readible
                                  format.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                x-oapi-codegen-extra-tags:
                                  yaml: displayName
                                  json: displayName
                              description:
                                type: string
                                description: >-
                                  A written representation of the purpose and
                                  characteristics of the capability.
                                x-oapi-codegen-extra-tags:
                                  yaml: description
                                  json: description
                              kind:
                                description: Top-level categorization of the capability
                                additionalProperties: false
                                anyOf:
                                  - const: action
                                    description: >-
                                      For capabilities related to executing
                                      actions on entities. Example: initiate log
                                      streaming on a Pod. Example: initiate
                                      deployment of a component.
                                  - const: mutate
                                    description: >-
                                      For capabilities related to mutating an
                                      entity. Example: the ability to change the
                                      configuration of a component.
                                  - const: view
                                    description: >-
                                      For capabilities related to viewing an
                                      entity. Example: the ability to view a
                                      components configuration.
                                  - const: interaction
                                    description: >-
                                      Catch all for capabilities related to
                                      interaction with entities. Example: the
                                      ability for a component to be dragged and
                                      dropped. Example: supports event bubbling
                                      to parent components. 
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                x-oapi-codegen-extra-tags:
                                  yaml: kind
                                  json: kind
                              type:
                                description: >-
                                  Classification of capabilities. Used to group
                                  capabilities similar in nature.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                x-oapi-codegen-extra-tags:
                                  yaml: type
                                  json: type
                              subType:
                                description: >-
                                  Most granular unit of capability
                                  classification. The combination of Kind, Type
                                  and SubType together uniquely identify a
                                  Capability.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                x-oapi-codegen-extra-tags:
                                  yaml: subType
                                  json: subType
                              key:
                                description: Key that backs the capability.
                                type: string
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                x-oapi-codegen-extra-tags:
                                  yaml: key
                                  json: key
                              entityState:
                                description: >-
                                  State of the entity in which the capability is
                                  applicable.
                                type: array
                                items:
                                  type: string
                                  enum:
                                    - declaration
                                    - instance
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  description: >-
                                    A string starting with an alphanumeric
                                    character. Spaces and hyphens allowed.
                                  x-oapi-codegen-extra-tags:
                                    yaml: entityState
                                    json: entityState
                              status:
                                type: string
                                description: Status of the capability
                                default: enabled
                                enum:
                                  - enabled
                                  - disabled
                                x-oapi-codegen-extra-tags:
                                  yaml: status
                                  json: status
                              metadata:
                                type: object
                                description: >-
                                  Metadata contains additional information
                                  associated with the capability. Extension
                                  point.
                                additionalProperties: true
                                x-oapi-codegen-extra-tags:
                                  yaml: metadata
                                  json: metadata
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                        metadata:
                          type: object
                          description: >-
                            Metadata contains additional information associated
                            with the Relationship.
                          additionalProperties: true
                          x-oapi-codegen-extra-tags:
                            gorm: foreignKey:ModelId;references:Id
                          properties:
                            description:
                              description: >-
                                Characterization of the meaning of the
                                relationship and its relevance to both Meshery
                                and entities under management.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: description
                                json: description
                            isAnnotation:
                              type: boolean
                              description: >-
                                Indicates whether the relationship should be
                                treated as a logical representation only
                              x-oapi-codegen-extra-tags:
                                yaml: isAnnotation
                                json: isAnnotation
                              default: false
                            styles:
                              anyOf:
                                - type: object
                                  description: Visualization styles for a relationship
                                  allOf:
                                    - type: object
                                      description: Common styles for all entities
                                      additionalProperties: false
                                      required:
                                        - primaryColor
                                        - svgColor
                                        - svgWhite
                                      properties:
                                        primaryColor:
                                          type: string
                                          description: >-
                                            Primary color of the component used for
                                            UI representation.
                                        secondaryColor:
                                          type: string
                                          description: >-
                                            Secondary color of the entity used for
                                            UI representation.
                                        svgWhite:
                                          type: string
                                          description: >-
                                            White SVG of the entity used for UI
                                            representation on dark background.
                                        svgColor:
                                          type: string
                                          description: >-
                                            Colored SVG of the entity used for UI
                                            representation on light background.
                                        svgComplete:
                                          type: string
                                          description: >-
                                            Complete SVG of the entity used for UI
                                            representation, often inclusive of
                                            background.
                                        color:
                                          type: string
                                          description: >-
                                            The color of the element's label.
                                            Colours may be specified by name (e.g.
                                            red), hex (e.g. #ff0000 or #f00), RGB
                                            (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                            hsl(0, 100%, 50%)).
                                        text-opacity:
                                          type: number
                                          description: >-
                                            The opacity of the label text, including
                                            its outline.
                                          minimum: 0
                                          maximum: 1
                                        font-family:
                                          type: string
                                          description: >-
                                            A comma-separated list of font names to
                                            use on the label text.
                                        font-size:
                                          type: string
                                          description: The size of the label text.
                                        font-style:
                                          type: string
                                          description: >-
                                            A CSS font style to be applied to the
                                            label text.
                                        font-weight:
                                          type: string
                                          description: >-
                                            A CSS font weight to be applied to the
                                            label text.
                                        text-transform:
                                          type: string
                                          description: >-
                                            A transformation to apply to the label
                                            text
                                          enum:
                                            - none
                                            - uppercase
                                            - lowercase
                                        opacity:
                                          type: number
                                          description: >-
                                            The opacity of the element, ranging from
                                            0 to 1. Note that the opacity of a
                                            compound node parent affects the
                                            effective opacity of its children.See
                                            https://js.cytoscape.org/#style/visibility
                                          minimum: 0
                                          maximum: 1
                                        z-index:
                                          type: integer
                                          description: >-
                                            An integer value that affects the
                                            relative draw order of elements. In
                                            general, an element with a higher
                                            z-index will be drawn on top of an
                                            element with a lower z-index. Note that
                                            edges are under nodes despite z-index.
                                        label:
                                          type: string
                                          description: >-
                                            The text to display for an element’s
                                            label. Can give a path, e.g. data(id)
                                            will label with the elements id
                                    - properties:
                                        edge-animation:
                                          type: string
                                          description: >-
                                            The animation to use for the edge. Can
                                            be like 'marching-ants' , 'blink' ,
                                            'moving-gradient',etc .
                                        curve-style:
                                          type: string
                                          description: >-
                                            The curving method used to separate two
                                            or more edges between two nodes; may be
                                            haystack (very fast, bundled straight
                                            edges for which loops and compounds are
                                            unsupported), straight (straight edges
                                            with all arrows supported), bezier
                                            (bundled curved edges), unbundled-bezier
                                            (curved edges for use with manual
                                            control points), segments (a series of
                                            straight lines), taxi (right-angled
                                            lines, hierarchically bundled). Note
                                            that haystack edges work best with
                                            ellipse, rectangle, or similar nodes.
                                            Smaller node shapes, like triangle, will
                                            not be as aesthetically pleasing. Also
                                            note that edge endpoint arrows are
                                            unsupported for haystack edges.
                                          default: straight
                                          enum:
                                            - straight
                                            - haystack
                                            - bezier
                                            - unbundled-bezier
                                            - segments
                                            - taxi
                                        line-color:
                                          type: string
                                          description: >-
                                            The colour of the edge’s line. Colours
                                            may be specified by name (e.g. red), hex
                                            (e.g. #ff0000 or #f00), RGB (e.g.
                                            rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                            100%, 50%)).
                                        line-style:
                                          type: string
                                          description: The style of the edge’s line.
                                          enum:
                                            - solid
                                            - dotted
                                            - dashed
                                        line-cap:
                                          type: string
                                          description: >-
                                            The cap style of the edge’s line; may be
                                            butt (default), round, or square. The
                                            cap may or may not be visible, depending
                                            on the shape of the node and the
                                            relative size of the node and edge. Caps
                                            other than butt extend beyond the
                                            specified endpoint of the edge.
                                          enum:
                                            - butt
                                            - round
                                            - square
                                          default: butt
                                        line-opacity:
                                          type: number
                                          minimum: 0
                                          maximum: 1
                                          default: 1
                                          description: >-
                                            The opacity of the edge’s line and
                                            arrow. Useful if you wish to have a
                                            separate opacity for the edge label
                                            versus the edge line. Note that the
                                            opacity value of the edge element
                                            affects the effective opacity of its
                                            line and label subcomponents.
                                        target-arrow-color:
                                          type: string
                                          description: >-
                                            The colour of the edge’s source arrow.
                                            Colours may be specified by name (e.g.
                                            red), hex (e.g. #ff0000 or #f00), RGB
                                            (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                            hsl(0, 100%, 50%)).
                                        target-arrow-shape:
                                          type: string
                                          description: The shape of the edge’s source arrow
                                          enum:
                                            - triangle
                                            - triangle-tee
                                            - circle-triangle
                                            - triangle-cross
                                            - triangle-backcurve
                                            - vee
                                            - tee
                                            - square
                                            - circle
                                            - diamond
                                            - chevron
                                            - none
                                        target-arrow-fill:
                                          type: string
                                          description: >-
                                            The fill state of the edge’s source
                                            arrow
                                          enum:
                                            - filled
                                            - hollow
                                        mid-target-arrow-color:
                                          type: string
                                          description: >-
                                            The colour of the edge’s source arrow.
                                            Colours may be specified by name (e.g.
                                            red), hex (e.g. #ff0000 or #f00), RGB
                                            (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                            hsl(0, 100%, 50%)).
                                        mid-target-arrow-shape:
                                          type: string
                                          description: The shape of the edge’s source arrow
                                          enum:
                                            - triangle
                                            - triangle-tee
                                            - circle-triangle
                                            - triangle-cross
                                            - triangle-backcurve
                                            - vee
                                            - tee
                                            - square
                                            - circle
                                            - diamond
                                            - chevron
                                            - none
                                        mid-target-arrow-fill:
                                          type: string
                                          description: >-
                                            The fill state of the edge’s source
                                            arrow
                                          enum:
                                            - filled
                                            - hollow
                                        arrow-scale:
                                          type: number
                                          description: Scaling for the arrow size.
                                          minimum: 0
                                        source-label:
                                          type: string
                                          description: >-
                                            The text to display for an edge’s source
                                            label. Can give a path, e.g. data(id)
                                            will label with the elements id
                                        target-label:
                                          type: string
                                          description: >-
                                            The text to display for an edge’s target
                                            label. Can give a path, e.g. data(id)
                                            will label with the elements id
                                - type: object
                                  description: Common styles for all entities
                                  additionalProperties: false
                                  required:
                                    - primaryColor
                                    - svgColor
                                    - svgWhite
                                  properties:
                                    primaryColor:
                                      type: string
                                      description: >-
                                        Primary color of the component used for
                                        UI representation.
                                    secondaryColor:
                                      type: string
                                      description: >-
                                        Secondary color of the entity used for
                                        UI representation.
                                    svgWhite:
                                      type: string
                                      description: >-
                                        White SVG of the entity used for UI
                                        representation on dark background.
                                    svgColor:
                                      type: string
                                      description: >-
                                        Colored SVG of the entity used for UI
                                        representation on light background.
                                    svgComplete:
                                      type: string
                                      description: >-
                                        Complete SVG of the entity used for UI
                                        representation, often inclusive of
                                        background.
                                    color:
                                      type: string
                                      description: >-
                                        The color of the element's label.
                                        Colours may be specified by name (e.g.
                                        red), hex (e.g. #ff0000 or #f00), RGB
                                        (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                        hsl(0, 100%, 50%)).
                                    text-opacity:
                                      type: number
                                      description: >-
                                        The opacity of the label text, including
                                        its outline.
                                      minimum: 0
                                      maximum: 1
                                    font-family:
                                      type: string
                                      description: >-
                                        A comma-separated list of font names to
                                        use on the label text.
                                    font-size:
                                      type: string
                                      description: The size of the label text.
                                    font-style:
                                      type: string
                                      description: >-
                                        A CSS font style to be applied to the
                                        label text.
                                    font-weight:
                                      type: string
                                      description: >-
                                        A CSS font weight to be applied to the
                                        label text.
                                    text-transform:
                                      type: string
                                      description: >-
                                        A transformation to apply to the label
                                        text
                                      enum:
                                        - none
                                        - uppercase
                                        - lowercase
                                    opacity:
                                      type: number
                                      description: >-
                                        The opacity of the element, ranging from
                                        0 to 1. Note that the opacity of a
                                        compound node parent affects the
                                        effective opacity of its children.See
                                        https://js.cytoscape.org/#style/visibility
                                      minimum: 0
                                      maximum: 1
                                    z-index:
                                      type: integer
                                      description: >-
                                        An integer value that affects the
                                        relative draw order of elements. In
                                        general, an element with a higher
                                        z-index will be drawn on top of an
                                        element with a lower z-index. Note that
                                        edges are under nodes despite z-index.
                                    label:
                                      type: string
                                      description: >-
                                        The text to display for an element’s
                                        label. Can give a path, e.g. data(id)
                                        will label with the elements id
                                  $comment: Extension point for additional styles
                              x-oapi-codegen-extra-tags:
                                yaml: styles
                                json: styles
                        selectors:
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                          type: array
                          description: >-
                            Selectors are organized as an array, with each item
                            containing a distinct set of selectors that share a
                            common functionality. This structure allows for
                            flexibility in defining relationships, even when
                            different components are involved.
                          $comment: >-
                            Sets of selectors are interpreted as a logical
                            UNION. Properties within a selector `allow` and
                            `deny` are interpreted as logical AND, while 'from'
                            and 'to' represents a UNION of set of combinatorial
                            pairs.
                          items:
                            type: object
                            description: >-
                              Optional selectors used to match Components.
                              Absence of a selector means that it is applied to
                              all Components.
                            additionalProperties: false
                            required:
                              - allow
                            properties:
                              deny:
                                description: >-
                                  Optional selectors used to define
                                  relationships which should not be created / is
                                  restricted.
                                type: object
                                required:
                                  - to
                                  - from
                                properties:
                                  from:
                                    description: >-
                                      Describes the component(s) which are
                                      involved in the relationship along with a
                                      set of actions to perform upon selection
                                      match.
                                    type: array
                                    items:
                                      type: object
                                      additionalProperties: false
                                      properties:
                                        kind:
                                          type: string
                                          x-oapi-codegen-extra-tags:
                                            yaml: kind
                                            json: kind
                                        model:
                                          description: >-
                                            Name of the model implicated by this
                                            selector. Learn more at
                                            https://docs.meshery.io/concepts/models
                                          $id: https://schemas.meshery.io/model.json
                                          $schema: http://json-schema.org/draft-07/schema#
                                          additionalProperties: false
                                          type: object
                                          properties:
                                            id:
                                              description: >-
                                                Uniquely identifies the entity (i.e.
                                                component) as defined in a declaration
                                                (i.e. design).
                                              type: string
                                              format: uuid
                                              x-go-type: uuid.UUID
                                              x-go-type-import:
                                                path: github.com/gofrs/uuid
                                              x-oapi-codegen-extra-tags:
                                                yaml: id
                                                json: id
                                            schemaVersion:
                                              description: >-
                                                Specifies the version of the schema used
                                                for the definition.
                                              x-oapi-codegen-extra-tags:
                                                yaml: schemaVersion
                                                json: schemaVersion
                                              type: string
                                              minLength: 2
                                              maxLength: 100
                                              pattern: >-
                                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                              example:
                                                - v1
                                                - v1alpha1
                                                - v2beta3
                                                - v1.custom-suffix
                                            version:
                                              description: Version of the model definition.
                                              type: string
                                              x-oapi-codegen-extra-tags:
                                                yaml: version
                                                json: version
                                              minLength: 5
                                              maxLength: 100
                                              pattern: >-
                                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            name:
                                              description: >-
                                                The unique name for the model within the
                                                scope of a registrant.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: name
                                                json: name
                                            displayName:
                                              description: Human-readable name for the model.
                                              minLength: 1
                                              maxLength: 100
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                              x-oapi-codegen-extra-tags:
                                                yaml: displayName
                                                json: displayName
                                            description:
                                              type: string
                                              description: Description of the model.
                                              minLength: 1
                                              maxLength: 1000
                                              x-oapi-codegen-extra-tags:
                                                yaml: description
                                                json: description
                                            status:
                                              type: string
                                              description: >-
                                                Status of model, including:

                                                - duplicate: this component is a
                                                duplicate of another. The component that
                                                is to be the canonical reference and
                                                that is duplicated by other components
                                                should not be assigned the 'duplicate'
                                                status.

                                                - maintenance: model is unavailable for
                                                a period of time.

                                                - enabled: model is available for use
                                                for all users of this Meshery Server.

                                                - ignored: model is unavailable for use
                                                for all users of this Meshery Server.
                                              enum:
                                                - ignored
                                                - enabled
                                                - duplicate
                                              x-oapi-codegen-extra-tags:
                                                yaml: status
                                                json: status
                                            registrant:
                                              x-oapi-codegen-extra-tags:
                                                yaml: registrant
                                                json: registrant
                                                gorm: foreignKey:RegistrantId;references:Id
                                              $id: >-
                                                https://schemas.meshery.io/component.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery Connections are managed and
                                                unmanaged resources that either through
                                                discovery or manual entry are tracked by
                                                Meshery. Learn more at
                                                https://docs.meshery.io/concepts/logical/connections
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - kind
                                                - type
                                                - status
                                              properties:
                                                id:
                                                  description: ID
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                name:
                                                  x-oapi-codegen-extra-tags:
                                                    db: name
                                                    yaml: name
                                                    json: name
                                                  type: string
                                                  description: Connection Name
                                                credential_id:
                                                  x-go-name: CredentialId
                                                  x-oapi-codegen-extra-tags:
                                                    db: credential_id
                                                    yaml: credential_id
                                                    json: credential_id
                                                  description: Credential ID
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                type:
                                                  x-oapi-codegen-extra-tags:
                                                    db: type
                                                    yaml: type
                                                    json: type
                                                  type: string
                                                  description: Connection Type
                                                sub_type:
                                                  x-oapi-codegen-extra-tags:
                                                    db: sub_type
                                                    yaml: sub_type
                                                    json: sub_type
                                                  type: string
                                                  description: Connection Subtype
                                                kind:
                                                  x-oapi-codegen-extra-tags:
                                                    db: kind
                                                    yaml: kind
                                                    json: kind
                                                  type: string
                                                  description: Connection Kind
                                                metadata:
                                                  x-oapi-codegen-extra-tags:
                                                    db: metadata
                                                    yaml: metadata
                                                    json: metadata
                                                  type: object
                                                status:
                                                  x-oapi-codegen-extra-tags:
                                                    db: status
                                                    yaml: status
                                                    json: status
                                                  description: Connection Status
                                                  type: string
                                                  enum:
                                                    - discovered
                                                    - registered
                                                    - connected
                                                    - ignored
                                                    - maintenance
                                                    - disconnected
                                                    - deleted
                                                    - not found
                                                user_id:
                                                  x-go-name: UserID
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: user_id
                                                    json: user_id
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                created_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: created_at
                                                    json: created_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                                updated_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: updated_at
                                                    json: updated_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                                deleted_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: deleted_at
                                                    json: deleted_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                            category:
                                              type: object
                                              description: Category of the model.
                                              properties:
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                name:
                                                  type: string
                                                  minLength: 1
                                                  maxLength: 100
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: name
                                                    json: name
                                                metadata:
                                                  type: object
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                              x-oapi-codegen-extra-tags:
                                                yaml: category
                                                json: category
                                                gorm: foreignKey:CategoryId;references:Id
                                            subCategory:
                                              type: string
                                              description: Sub-category of the model.
                                              minLength: 1
                                              maxLength: 100
                                              x-oapi-codegen-extra-tags:
                                                yaml: subCategory
                                                json: subCategory
                                            metadata:
                                              type: object
                                              description: >-
                                                Metadata containing additional
                                                information associated with the model.
                                              properties:
                                                capabilities:
                                                  type: array
                                                  description: Capabilities associated with the model
                                                  items:
                                                    $id: >-
                                                      https://schemas.meshery.io/capability.json
                                                    $schema: http://json-schema.org/draft-07/schema#
                                                    description: >-
                                                      Meshery manages entities in accordance
                                                      with their specific capabilities. This
                                                      field explicitly identifies those
                                                      capabilities largely by what actions a
                                                      given component supports; e.g.
                                                      metric-scrape, sub-interface, and so on.
                                                      This field is extensible. Entities may
                                                      define a broad array of capabilities,
                                                      which are in-turn dynamically
                                                      interpretted by Meshery for full
                                                      lifecycle management.
                                                    additionalProperties: false
                                                    type: object
                                                    required:
                                                      - schemaVersion
                                                      - version
                                                      - displayName
                                                      - kind
                                                      - type
                                                      - entityState
                                                      - status
                                                    x-oapi-codegen-extra-tags:
                                                      gorm: type:bytes;serializer:json
                                                    properties:
                                                      schemaVersion:
                                                        description: >-
                                                          Specifies the version of the schema to
                                                          which the capability definition
                                                          conforms.
                                                        type: string
                                                        minLength: 2
                                                        maxLength: 100
                                                        pattern: >-
                                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                        example:
                                                          - v1
                                                          - v1alpha1
                                                          - v2beta3
                                                          - v1.custom-suffix
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: schemaVersion
                                                          json: schemaVersion
                                                      version:
                                                        description: Version of the capability definition.
                                                        type: string
                                                        minLength: 5
                                                        maxLength: 100
                                                        pattern: >-
                                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: version
                                                          json: version
                                                      displayName:
                                                        description: >-
                                                          Name of the capability in human-readible
                                                          format.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: displayName
                                                          json: displayName
                                                      description:
                                                        type: string
                                                        description: >-
                                                          A written representation of the purpose
                                                          and characteristics of the capability.
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: description
                                                          json: description
                                                      kind:
                                                        description: >-
                                                          Top-level categorization of the
                                                          capability
                                                        additionalProperties: false
                                                        anyOf:
                                                          - const: action
                                                            description: >-
                                                              For capabilities related to executing
                                                              actions on entities. Example: initiate
                                                              log streaming on a Pod. Example:
                                                              initiate deployment of a component.
                                                          - const: mutate
                                                            description: >-
                                                              For capabilities related to mutating an
                                                              entity. Example: the ability to change
                                                              the configuration of a component.
                                                          - const: view
                                                            description: >-
                                                              For capabilities related to viewing an
                                                              entity. Example: the ability to view a
                                                              components configuration.
                                                          - const: interaction
                                                            description: >-
                                                              Catch all for capabilities related to
                                                              interaction with entities. Example: the
                                                              ability for a component to be dragged
                                                              and dropped. Example: supports event
                                                              bubbling to parent components. 
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: kind
                                                          json: kind
                                                      type:
                                                        description: >-
                                                          Classification of capabilities. Used to
                                                          group capabilities similar in nature.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: type
                                                          json: type
                                                      subType:
                                                        description: >-
                                                          Most granular unit of capability
                                                          classification. The combination of Kind,
                                                          Type and SubType together uniquely
                                                          identify a Capability.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: subType
                                                          json: subType
                                                      key:
                                                        description: Key that backs the capability.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: key
                                                          json: key
                                                      entityState:
                                                        description: >-
                                                          State of the entity in which the
                                                          capability is applicable.
                                                        type: array
                                                        items:
                                                          type: string
                                                          enum:
                                                            - declaration
                                                            - instance
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          description: >-
                                                            A string starting with an alphanumeric
                                                            character. Spaces and hyphens allowed.
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: entityState
                                                            json: entityState
                                                      status:
                                                        type: string
                                                        description: Status of the capability
                                                        default: enabled
                                                        enum:
                                                          - enabled
                                                          - disabled
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: status
                                                          json: status
                                                      metadata:
                                                        type: object
                                                        description: >-
                                                          Metadata contains additional information
                                                          associated with the capability.
                                                          Extension point.
                                                        additionalProperties: true
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: metadata
                                                          json: metadata
                                                isAnnotation:
                                                  type: boolean
                                                  description: >-
                                                    Indicates whether the model and its
                                                    entities should be treated as deployable
                                                    entities or as logical representations.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: isAnnotation
                                                    json: isAnnotation
                                                primaryColor:
                                                  type: string
                                                  description: Primary color associated with the model.
                                                  minLength: 1
                                                  maxLength: 50
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: primaryColor
                                                    json: primaryColor
                                                secondaryColor:
                                                  type: string
                                                  description: >-
                                                    Secondary color associated with the
                                                    model.
                                                  minLength: 1
                                                  maxLength: 50
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: secondaryColor
                                                    json: secondaryColor
                                                svgWhite:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the model in white
                                                    color.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgWhite
                                                    json: svgWhite
                                                svgColor:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the model in
                                                    colored format.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgColor
                                                    json: svgColor
                                                svgComplete:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the complete
                                                    model.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgComplete
                                                    json: svgComplete
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              additionalProperties: true
                                            model:
                                              type: object
                                              description: >-
                                                Registrant-defined data associated with
                                                the model. Properties pertain to the
                                                software being managed (e.g. Kubernetes
                                                v1.31)
                                              required:
                                                - version
                                              properties:
                                                version:
                                                  description: >-
                                                    Version of the model as defined by the
                                                    registrant.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                          required:
                                            - name
                                            - version
                                            - registrant
                                            - category
                                        id:
                                          type: string
                                          format: uuid
                                          description: >-
                                            A Universally Unique Identifier used to
                                            uniquely identify entites in Meshery.
                                            The UUID core defintion is used across
                                            different schemas.
                                          x-go-type: uuid.UUID
                                          x-go-type-import:
                                            path: github.com/gofrs/uuid
                                          x-oapi-codegen-extra-tags:
                                            yaml: id
                                            json: id
                                        match:
                                          type: object
                                          additionalProperties: false
                                          oneOf:
                                            - type: array
                                              items:
                                                type: array
                                                items:
                                                  type: string
                                            - properties:
                                                from:
                                                  $comment: >-
                                                    Type is array so that mutliple bindings
                                                    can be supported between 2 nodes
                                                  type: array
                                                  items:
                                                    type: object
                                                    allOf:
                                                      - properties:
                                                          kind:
                                                            type: string
                                                          id:
                                                            type: string
                                                            format: uuid
                                                            description: >-
                                                              A Universally Unique Identifier used to
                                                              uniquely identify entites in Meshery.
                                                              The UUID core defintion is used across
                                                              different schemas.
                                                            x-go-type: uuid.UUID
                                                            x-go-type-import:
                                                              path: github.com/gofrs/uuid
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: id
                                                              json: id
                                                      - oneOf:
                                                          - properties:
                                                              mutatorRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    The sequence of mutatorRef and
                                                                    mutatedRef must match. eg: mutatorRef:
                                                                    [[config, url], [config, name]],
                                                                    mutatedRef: [[configPatch, value],
                                                                    [name]]. The value [config, url] will be
                                                                    patched at [configPatch, value].
                                                                    Similarly [config,name] will be patched
                                                                    at [name].
                                                                description: >-
                                                                  JSON ref to value from where patch
                                                                  should be applied.
                                                          - properties:
                                                              mutatedRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    JSONPath
                                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                                    to property to be patched.
                                                to:
                                                  $comment: >-
                                                    Type is array so that mutliple bindings
                                                    can be supported between 2 nodes
                                                  type: array
                                                  items:
                                                    type: object
                                                    allOf:
                                                      - properties:
                                                          kind:
                                                            type: string
                                                          id:
                                                            type: string
                                                            format: uuid
                                                            description: >-
                                                              A Universally Unique Identifier used to
                                                              uniquely identify entites in Meshery.
                                                              The UUID core defintion is used across
                                                              different schemas.
                                                            x-go-type: uuid.UUID
                                                            x-go-type-import:
                                                              path: github.com/gofrs/uuid
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: id
                                                              json: id
                                                      - oneOf:
                                                          - properties:
                                                              mutatorRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    The sequence of mutatorRef and
                                                                    mutatedRef must match. eg: mutatorRef:
                                                                    [[config, url], [config, name]],
                                                                    mutatedRef: [[configPatch, value],
                                                                    [name]]. The value [config, url] will be
                                                                    patched at [configPatch, value].
                                                                    Similarly [config,name] will be patched
                                                                    at [name].
                                                                description: >-
                                                                  JSON ref to value from where patch
                                                                  should be applied.
                                                          - properties:
                                                              mutatedRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    JSONPath
                                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                                    to property to be patched.
                                          x-oapi-codegen-extra-tags:
                                            yaml: match
                                            json: match
                                        patch:
                                          allOf:
                                            - properties:
                                                patchStrategy:
                                                  description: >-
                                                    patchStrategy allows you to make
                                                    specific changes to a resource using a
                                                    standard JSON Patch format (RFC 6902). 


                                                    add: Inserts a value into an array or
                                                    adds a member to an object.

                                                    replace: Replaces a value.

                                                    merge: Combines the values of the target
                                                    location with the values from the patch.
                                                    If the target location doesn't exist, it
                                                    is created.

                                                    strategic:specific to Kubernetes and
                                                    understands the structure of Kubernetes
                                                    objects. It can handle complex changes
                                                    like updating lists and maps, as well as
                                                    preserving default values. However, it's
                                                    not supported for custom resources. For
                                                    custom resources, only JSON Patch and
                                                    Merge Patch are typically supported.

                                                    remove: Removes a value.

                                                    copy: Copies a value from one location
                                                    to another.

                                                    move: Moves a value from one location to
                                                    another.

                                                    test: Tests that a value at the target
                                                    location is equal to a specified value.
                                                  $comment: >-
                                                    Array Indexing: When working with
                                                    arrays, be aware that Kubernetes uses
                                                    zero-based indexing in JSON patch paths.

                                                    Merge Patch vs. JSON Patch: Merge
                                                    patches are less flexible than JSON
                                                    patches and do not support all the same
                                                    operations.

                                                    Strategic Merge Patch: For some
                                                    Kubernetes resources, you can also use
                                                    the strategic type for a strategic merge
                                                    patch, which understands the structure
                                                    of Kubernetes objects and can handle
                                                    complex operations.
                                                  type: string
                                                  enum:
                                                    - merge
                                                    - strategic
                                                    - add
                                                    - remove
                                                    - copy
                                                    - move
                                                    - test
                                                  default: copy
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                          x-oapi-codegen-extra-tags:
                                            yaml: patch
                                            json: patch
                                      description: >-
                                        Optional fields that are a part of the
                                        `from` selector. Absence of a field has
                                        an implied * meaning.
                                  to:
                                    description: >-
                                      Describes the component(s) which are
                                      involved in the relationship along with a
                                      set of actions to perform upon selection
                                      match.
                                    type: array
                                    items:
                                      type: object
                                      additionalProperties: false
                                      properties:
                                        kind:
                                          type: string
                                          x-oapi-codegen-extra-tags:
                                            yaml: kind
                                            json: kind
                                        model:
                                          description: >-
                                            Name of the model implicated by this
                                            selector. Learn more at
                                            https://docs.meshery.io/concepts/models
                                          $id: https://schemas.meshery.io/model.json
                                          $schema: http://json-schema.org/draft-07/schema#
                                          additionalProperties: false
                                          type: object
                                          properties:
                                            id:
                                              description: >-
                                                Uniquely identifies the entity (i.e.
                                                component) as defined in a declaration
                                                (i.e. design).
                                              type: string
                                              format: uuid
                                              x-go-type: uuid.UUID
                                              x-go-type-import:
                                                path: github.com/gofrs/uuid
                                              x-oapi-codegen-extra-tags:
                                                yaml: id
                                                json: id
                                            schemaVersion:
                                              description: >-
                                                Specifies the version of the schema used
                                                for the definition.
                                              x-oapi-codegen-extra-tags:
                                                yaml: schemaVersion
                                                json: schemaVersion
                                              type: string
                                              minLength: 2
                                              maxLength: 100
                                              pattern: >-
                                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                              example:
                                                - v1
                                                - v1alpha1
                                                - v2beta3
                                                - v1.custom-suffix
                                            version:
                                              description: Version of the model definition.
                                              type: string
                                              x-oapi-codegen-extra-tags:
                                                yaml: version
                                                json: version
                                              minLength: 5
                                              maxLength: 100
                                              pattern: >-
                                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            name:
                                              description: >-
                                                The unique name for the model within the
                                                scope of a registrant.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: name
                                                json: name
                                            displayName:
                                              description: Human-readable name for the model.
                                              minLength: 1
                                              maxLength: 100
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                              x-oapi-codegen-extra-tags:
                                                yaml: displayName
                                                json: displayName
                                            description:
                                              type: string
                                              description: Description of the model.
                                              minLength: 1
                                              maxLength: 1000
                                              x-oapi-codegen-extra-tags:
                                                yaml: description
                                                json: description
                                            status:
                                              type: string
                                              description: >-
                                                Status of model, including:

                                                - duplicate: this component is a
                                                duplicate of another. The component that
                                                is to be the canonical reference and
                                                that is duplicated by other components
                                                should not be assigned the 'duplicate'
                                                status.

                                                - maintenance: model is unavailable for
                                                a period of time.

                                                - enabled: model is available for use
                                                for all users of this Meshery Server.

                                                - ignored: model is unavailable for use
                                                for all users of this Meshery Server.
                                              enum:
                                                - ignored
                                                - enabled
                                                - duplicate
                                              x-oapi-codegen-extra-tags:
                                                yaml: status
                                                json: status
                                            registrant:
                                              x-oapi-codegen-extra-tags:
                                                yaml: registrant
                                                json: registrant
                                                gorm: foreignKey:RegistrantId;references:Id
                                              $id: >-
                                                https://schemas.meshery.io/component.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery Connections are managed and
                                                unmanaged resources that either through
                                                discovery or manual entry are tracked by
                                                Meshery. Learn more at
                                                https://docs.meshery.io/concepts/logical/connections
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - kind
                                                - type
                                                - status
                                              properties:
                                                id:
                                                  description: ID
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                name:
                                                  x-oapi-codegen-extra-tags:
                                                    db: name
                                                    yaml: name
                                                    json: name
                                                  type: string
                                                  description: Connection Name
                                                credential_id:
                                                  x-go-name: CredentialId
                                                  x-oapi-codegen-extra-tags:
                                                    db: credential_id
                                                    yaml: credential_id
                                                    json: credential_id
                                                  description: Credential ID
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                type:
                                                  x-oapi-codegen-extra-tags:
                                                    db: type
                                                    yaml: type
                                                    json: type
                                                  type: string
                                                  description: Connection Type
                                                sub_type:
                                                  x-oapi-codegen-extra-tags:
                                                    db: sub_type
                                                    yaml: sub_type
                                                    json: sub_type
                                                  type: string
                                                  description: Connection Subtype
                                                kind:
                                                  x-oapi-codegen-extra-tags:
                                                    db: kind
                                                    yaml: kind
                                                    json: kind
                                                  type: string
                                                  description: Connection Kind
                                                metadata:
                                                  x-oapi-codegen-extra-tags:
                                                    db: metadata
                                                    yaml: metadata
                                                    json: metadata
                                                  type: object
                                                status:
                                                  x-oapi-codegen-extra-tags:
                                                    db: status
                                                    yaml: status
                                                    json: status
                                                  description: Connection Status
                                                  type: string
                                                  enum:
                                                    - discovered
                                                    - registered
                                                    - connected
                                                    - ignored
                                                    - maintenance
                                                    - disconnected
                                                    - deleted
                                                    - not found
                                                user_id:
                                                  x-go-name: UserID
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: user_id
                                                    json: user_id
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                created_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: created_at
                                                    json: created_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                                updated_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: updated_at
                                                    json: updated_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                                deleted_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: deleted_at
                                                    json: deleted_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                            category:
                                              type: object
                                              description: Category of the model.
                                              properties:
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                name:
                                                  type: string
                                                  minLength: 1
                                                  maxLength: 100
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: name
                                                    json: name
                                                metadata:
                                                  type: object
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                              x-oapi-codegen-extra-tags:
                                                yaml: category
                                                json: category
                                                gorm: foreignKey:CategoryId;references:Id
                                            subCategory:
                                              type: string
                                              description: Sub-category of the model.
                                              minLength: 1
                                              maxLength: 100
                                              x-oapi-codegen-extra-tags:
                                                yaml: subCategory
                                                json: subCategory
                                            metadata:
                                              type: object
                                              description: >-
                                                Metadata containing additional
                                                information associated with the model.
                                              properties:
                                                capabilities:
                                                  type: array
                                                  description: Capabilities associated with the model
                                                  items:
                                                    $id: >-
                                                      https://schemas.meshery.io/capability.json
                                                    $schema: http://json-schema.org/draft-07/schema#
                                                    description: >-
                                                      Meshery manages entities in accordance
                                                      with their specific capabilities. This
                                                      field explicitly identifies those
                                                      capabilities largely by what actions a
                                                      given component supports; e.g.
                                                      metric-scrape, sub-interface, and so on.
                                                      This field is extensible. Entities may
                                                      define a broad array of capabilities,
                                                      which are in-turn dynamically
                                                      interpretted by Meshery for full
                                                      lifecycle management.
                                                    additionalProperties: false
                                                    type: object
                                                    required:
                                                      - schemaVersion
                                                      - version
                                                      - displayName
                                                      - kind
                                                      - type
                                                      - entityState
                                                      - status
                                                    x-oapi-codegen-extra-tags:
                                                      gorm: type:bytes;serializer:json
                                                    properties:
                                                      schemaVersion:
                                                        description: >-
                                                          Specifies the version of the schema to
                                                          which the capability definition
                                                          conforms.
                                                        type: string
                                                        minLength: 2
                                                        maxLength: 100
                                                        pattern: >-
                                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                        example:
                                                          - v1
                                                          - v1alpha1
                                                          - v2beta3
                                                          - v1.custom-suffix
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: schemaVersion
                                                          json: schemaVersion
                                                      version:
                                                        description: Version of the capability definition.
                                                        type: string
                                                        minLength: 5
                                                        maxLength: 100
                                                        pattern: >-
                                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: version
                                                          json: version
                                                      displayName:
                                                        description: >-
                                                          Name of the capability in human-readible
                                                          format.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: displayName
                                                          json: displayName
                                                      description:
                                                        type: string
                                                        description: >-
                                                          A written representation of the purpose
                                                          and characteristics of the capability.
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: description
                                                          json: description
                                                      kind:
                                                        description: >-
                                                          Top-level categorization of the
                                                          capability
                                                        additionalProperties: false
                                                        anyOf:
                                                          - const: action
                                                            description: >-
                                                              For capabilities related to executing
                                                              actions on entities. Example: initiate
                                                              log streaming on a Pod. Example:
                                                              initiate deployment of a component.
                                                          - const: mutate
                                                            description: >-
                                                              For capabilities related to mutating an
                                                              entity. Example: the ability to change
                                                              the configuration of a component.
                                                          - const: view
                                                            description: >-
                                                              For capabilities related to viewing an
                                                              entity. Example: the ability to view a
                                                              components configuration.
                                                          - const: interaction
                                                            description: >-
                                                              Catch all for capabilities related to
                                                              interaction with entities. Example: the
                                                              ability for a component to be dragged
                                                              and dropped. Example: supports event
                                                              bubbling to parent components. 
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: kind
                                                          json: kind
                                                      type:
                                                        description: >-
                                                          Classification of capabilities. Used to
                                                          group capabilities similar in nature.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: type
                                                          json: type
                                                      subType:
                                                        description: >-
                                                          Most granular unit of capability
                                                          classification. The combination of Kind,
                                                          Type and SubType together uniquely
                                                          identify a Capability.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: subType
                                                          json: subType
                                                      key:
                                                        description: Key that backs the capability.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: key
                                                          json: key
                                                      entityState:
                                                        description: >-
                                                          State of the entity in which the
                                                          capability is applicable.
                                                        type: array
                                                        items:
                                                          type: string
                                                          enum:
                                                            - declaration
                                                            - instance
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          description: >-
                                                            A string starting with an alphanumeric
                                                            character. Spaces and hyphens allowed.
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: entityState
                                                            json: entityState
                                                      status:
                                                        type: string
                                                        description: Status of the capability
                                                        default: enabled
                                                        enum:
                                                          - enabled
                                                          - disabled
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: status
                                                          json: status
                                                      metadata:
                                                        type: object
                                                        description: >-
                                                          Metadata contains additional information
                                                          associated with the capability.
                                                          Extension point.
                                                        additionalProperties: true
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: metadata
                                                          json: metadata
                                                isAnnotation:
                                                  type: boolean
                                                  description: >-
                                                    Indicates whether the model and its
                                                    entities should be treated as deployable
                                                    entities or as logical representations.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: isAnnotation
                                                    json: isAnnotation
                                                primaryColor:
                                                  type: string
                                                  description: Primary color associated with the model.
                                                  minLength: 1
                                                  maxLength: 50
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: primaryColor
                                                    json: primaryColor
                                                secondaryColor:
                                                  type: string
                                                  description: >-
                                                    Secondary color associated with the
                                                    model.
                                                  minLength: 1
                                                  maxLength: 50
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: secondaryColor
                                                    json: secondaryColor
                                                svgWhite:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the model in white
                                                    color.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgWhite
                                                    json: svgWhite
                                                svgColor:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the model in
                                                    colored format.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgColor
                                                    json: svgColor
                                                svgComplete:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the complete
                                                    model.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgComplete
                                                    json: svgComplete
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              additionalProperties: true
                                            model:
                                              type: object
                                              description: >-
                                                Registrant-defined data associated with
                                                the model. Properties pertain to the
                                                software being managed (e.g. Kubernetes
                                                v1.31)
                                              required:
                                                - version
                                              properties:
                                                version:
                                                  description: >-
                                                    Version of the model as defined by the
                                                    registrant.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                          required:
                                            - name
                                            - version
                                            - registrant
                                            - category
                                        id:
                                          type: string
                                          format: uuid
                                          description: >-
                                            A Universally Unique Identifier used to
                                            uniquely identify entites in Meshery.
                                            The UUID core defintion is used across
                                            different schemas.
                                          x-go-type: uuid.UUID
                                          x-go-type-import:
                                            path: github.com/gofrs/uuid
                                          x-oapi-codegen-extra-tags:
                                            yaml: id
                                            json: id
                                        match:
                                          type: object
                                          additionalProperties: false
                                          oneOf:
                                            - type: array
                                              items:
                                                type: array
                                                items:
                                                  type: string
                                            - properties:
                                                from:
                                                  $comment: >-
                                                    Type is array so that mutliple bindings
                                                    can be supported between 2 nodes
                                                  type: array
                                                  items:
                                                    type: object
                                                    allOf:
                                                      - properties:
                                                          kind:
                                                            type: string
                                                          id:
                                                            type: string
                                                            format: uuid
                                                            description: >-
                                                              A Universally Unique Identifier used to
                                                              uniquely identify entites in Meshery.
                                                              The UUID core defintion is used across
                                                              different schemas.
                                                            x-go-type: uuid.UUID
                                                            x-go-type-import:
                                                              path: github.com/gofrs/uuid
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: id
                                                              json: id
                                                      - oneOf:
                                                          - properties:
                                                              mutatorRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    The sequence of mutatorRef and
                                                                    mutatedRef must match. eg: mutatorRef:
                                                                    [[config, url], [config, name]],
                                                                    mutatedRef: [[configPatch, value],
                                                                    [name]]. The value [config, url] will be
                                                                    patched at [configPatch, value].
                                                                    Similarly [config,name] will be patched
                                                                    at [name].
                                                                description: >-
                                                                  JSON ref to value from where patch
                                                                  should be applied.
                                                          - properties:
                                                              mutatedRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    JSONPath
                                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                                    to property to be patched.
                                                to:
                                                  $comment: >-
                                                    Type is array so that mutliple bindings
                                                    can be supported between 2 nodes
                                                  type: array
                                                  items:
                                                    type: object
                                                    allOf:
                                                      - properties:
                                                          kind:
                                                            type: string
                                                          id:
                                                            type: string
                                                            format: uuid
                                                            description: >-
                                                              A Universally Unique Identifier used to
                                                              uniquely identify entites in Meshery.
                                                              The UUID core defintion is used across
                                                              different schemas.
                                                            x-go-type: uuid.UUID
                                                            x-go-type-import:
                                                              path: github.com/gofrs/uuid
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: id
                                                              json: id
                                                      - oneOf:
                                                          - properties:
                                                              mutatorRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    The sequence of mutatorRef and
                                                                    mutatedRef must match. eg: mutatorRef:
                                                                    [[config, url], [config, name]],
                                                                    mutatedRef: [[configPatch, value],
                                                                    [name]]. The value [config, url] will be
                                                                    patched at [configPatch, value].
                                                                    Similarly [config,name] will be patched
                                                                    at [name].
                                                                description: >-
                                                                  JSON ref to value from where patch
                                                                  should be applied.
                                                          - properties:
                                                              mutatedRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    JSONPath
                                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                                    to property to be patched.
                                          x-oapi-codegen-extra-tags:
                                            yaml: match
                                            json: match
                                        patch:
                                          allOf:
                                            - properties:
                                                patchStrategy:
                                                  description: >-
                                                    patchStrategy allows you to make
                                                    specific changes to a resource using a
                                                    standard JSON Patch format (RFC 6902). 


                                                    add: Inserts a value into an array or
                                                    adds a member to an object.

                                                    replace: Replaces a value.

                                                    merge: Combines the values of the target
                                                    location with the values from the patch.
                                                    If the target location doesn't exist, it
                                                    is created.

                                                    strategic:specific to Kubernetes and
                                                    understands the structure of Kubernetes
                                                    objects. It can handle complex changes
                                                    like updating lists and maps, as well as
                                                    preserving default values. However, it's
                                                    not supported for custom resources. For
                                                    custom resources, only JSON Patch and
                                                    Merge Patch are typically supported.

                                                    remove: Removes a value.

                                                    copy: Copies a value from one location
                                                    to another.

                                                    move: Moves a value from one location to
                                                    another.

                                                    test: Tests that a value at the target
                                                    location is equal to a specified value.
                                                  $comment: >-
                                                    Array Indexing: When working with
                                                    arrays, be aware that Kubernetes uses
                                                    zero-based indexing in JSON patch paths.

                                                    Merge Patch vs. JSON Patch: Merge
                                                    patches are less flexible than JSON
                                                    patches and do not support all the same
                                                    operations.

                                                    Strategic Merge Patch: For some
                                                    Kubernetes resources, you can also use
                                                    the strategic type for a strategic merge
                                                    patch, which understands the structure
                                                    of Kubernetes objects and can handle
                                                    complex operations.
                                                  type: string
                                                  enum:
                                                    - merge
                                                    - strategic
                                                    - add
                                                    - remove
                                                    - copy
                                                    - move
                                                    - test
                                                  default: copy
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                          x-oapi-codegen-extra-tags:
                                            yaml: patch
                                            json: patch
                                      description: >-
                                        Optional fields that are a part of the
                                        `from` selector. Absence of a field has
                                        an implied * meaning.
                              allow:
                                description: >-
                                  Selectors used to define relationships which
                                  are allowed.
                                type: object
                                required:
                                  - to
                                  - from
                                properties:
                                  from:
                                    description: >-
                                      Describes the component(s) which are
                                      involved in the relationship along with a
                                      set of actions to perform upon selection
                                      match.
                                    type: array
                                    items:
                                      type: object
                                      additionalProperties: false
                                      properties:
                                        kind:
                                          type: string
                                          x-oapi-codegen-extra-tags:
                                            yaml: kind
                                            json: kind
                                        match_strategy_matrix:
                                          description: >-
                                            Strategy criterion for determing how to
                                            match the values at mutator/mutated
                                            paths
                                          type: array
                                          items:
                                            type: array
                                            items:
                                              type: string
                                        model:
                                          description: >-
                                            Name of the model implicated by this
                                            selector. Learn more at
                                            https://docs.meshery.io/concepts/models
                                          $id: https://schemas.meshery.io/model.json
                                          $schema: http://json-schema.org/draft-07/schema#
                                          additionalProperties: false
                                          type: object
                                          properties:
                                            id:
                                              description: >-
                                                Uniquely identifies the entity (i.e.
                                                component) as defined in a declaration
                                                (i.e. design).
                                              type: string
                                              format: uuid
                                              x-go-type: uuid.UUID
                                              x-go-type-import:
                                                path: github.com/gofrs/uuid
                                              x-oapi-codegen-extra-tags:
                                                yaml: id
                                                json: id
                                            schemaVersion:
                                              description: >-
                                                Specifies the version of the schema used
                                                for the definition.
                                              x-oapi-codegen-extra-tags:
                                                yaml: schemaVersion
                                                json: schemaVersion
                                              type: string
                                              minLength: 2
                                              maxLength: 100
                                              pattern: >-
                                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                              example:
                                                - v1
                                                - v1alpha1
                                                - v2beta3
                                                - v1.custom-suffix
                                            version:
                                              description: Version of the model definition.
                                              type: string
                                              x-oapi-codegen-extra-tags:
                                                yaml: version
                                                json: version
                                              minLength: 5
                                              maxLength: 100
                                              pattern: >-
                                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            name:
                                              description: >-
                                                The unique name for the model within the
                                                scope of a registrant.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: name
                                                json: name
                                            displayName:
                                              description: Human-readable name for the model.
                                              minLength: 1
                                              maxLength: 100
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                              x-oapi-codegen-extra-tags:
                                                yaml: displayName
                                                json: displayName
                                            description:
                                              type: string
                                              description: Description of the model.
                                              minLength: 1
                                              maxLength: 1000
                                              x-oapi-codegen-extra-tags:
                                                yaml: description
                                                json: description
                                            status:
                                              type: string
                                              description: >-
                                                Status of model, including:

                                                - duplicate: this component is a
                                                duplicate of another. The component that
                                                is to be the canonical reference and
                                                that is duplicated by other components
                                                should not be assigned the 'duplicate'
                                                status.

                                                - maintenance: model is unavailable for
                                                a period of time.

                                                - enabled: model is available for use
                                                for all users of this Meshery Server.

                                                - ignored: model is unavailable for use
                                                for all users of this Meshery Server.
                                              enum:
                                                - ignored
                                                - enabled
                                                - duplicate
                                              x-oapi-codegen-extra-tags:
                                                yaml: status
                                                json: status
                                            registrant:
                                              x-oapi-codegen-extra-tags:
                                                yaml: registrant
                                                json: registrant
                                                gorm: foreignKey:RegistrantId;references:Id
                                              $id: >-
                                                https://schemas.meshery.io/component.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery Connections are managed and
                                                unmanaged resources that either through
                                                discovery or manual entry are tracked by
                                                Meshery. Learn more at
                                                https://docs.meshery.io/concepts/logical/connections
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - kind
                                                - type
                                                - status
                                              properties:
                                                id:
                                                  description: ID
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                name:
                                                  x-oapi-codegen-extra-tags:
                                                    db: name
                                                    yaml: name
                                                    json: name
                                                  type: string
                                                  description: Connection Name
                                                credential_id:
                                                  x-go-name: CredentialId
                                                  x-oapi-codegen-extra-tags:
                                                    db: credential_id
                                                    yaml: credential_id
                                                    json: credential_id
                                                  description: Credential ID
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                type:
                                                  x-oapi-codegen-extra-tags:
                                                    db: type
                                                    yaml: type
                                                    json: type
                                                  type: string
                                                  description: Connection Type
                                                sub_type:
                                                  x-oapi-codegen-extra-tags:
                                                    db: sub_type
                                                    yaml: sub_type
                                                    json: sub_type
                                                  type: string
                                                  description: Connection Subtype
                                                kind:
                                                  x-oapi-codegen-extra-tags:
                                                    db: kind
                                                    yaml: kind
                                                    json: kind
                                                  type: string
                                                  description: Connection Kind
                                                metadata:
                                                  x-oapi-codegen-extra-tags:
                                                    db: metadata
                                                    yaml: metadata
                                                    json: metadata
                                                  type: object
                                                status:
                                                  x-oapi-codegen-extra-tags:
                                                    db: status
                                                    yaml: status
                                                    json: status
                                                  description: Connection Status
                                                  type: string
                                                  enum:
                                                    - discovered
                                                    - registered
                                                    - connected
                                                    - ignored
                                                    - maintenance
                                                    - disconnected
                                                    - deleted
                                                    - not found
                                                user_id:
                                                  x-go-name: UserID
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: user_id
                                                    json: user_id
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                created_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: created_at
                                                    json: created_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                                updated_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: updated_at
                                                    json: updated_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                                deleted_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: deleted_at
                                                    json: deleted_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                            category:
                                              type: object
                                              description: Category of the model.
                                              properties:
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                name:
                                                  type: string
                                                  minLength: 1
                                                  maxLength: 100
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: name
                                                    json: name
                                                metadata:
                                                  type: object
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                              x-oapi-codegen-extra-tags:
                                                yaml: category
                                                json: category
                                                gorm: foreignKey:CategoryId;references:Id
                                            subCategory:
                                              type: string
                                              description: Sub-category of the model.
                                              minLength: 1
                                              maxLength: 100
                                              x-oapi-codegen-extra-tags:
                                                yaml: subCategory
                                                json: subCategory
                                            metadata:
                                              type: object
                                              description: >-
                                                Metadata containing additional
                                                information associated with the model.
                                              properties:
                                                capabilities:
                                                  type: array
                                                  description: Capabilities associated with the model
                                                  items:
                                                    $id: >-
                                                      https://schemas.meshery.io/capability.json
                                                    $schema: http://json-schema.org/draft-07/schema#
                                                    description: >-
                                                      Meshery manages entities in accordance
                                                      with their specific capabilities. This
                                                      field explicitly identifies those
                                                      capabilities largely by what actions a
                                                      given component supports; e.g.
                                                      metric-scrape, sub-interface, and so on.
                                                      This field is extensible. Entities may
                                                      define a broad array of capabilities,
                                                      which are in-turn dynamically
                                                      interpretted by Meshery for full
                                                      lifecycle management.
                                                    additionalProperties: false
                                                    type: object
                                                    required:
                                                      - schemaVersion
                                                      - version
                                                      - displayName
                                                      - kind
                                                      - type
                                                      - entityState
                                                      - status
                                                    x-oapi-codegen-extra-tags:
                                                      gorm: type:bytes;serializer:json
                                                    properties:
                                                      schemaVersion:
                                                        description: >-
                                                          Specifies the version of the schema to
                                                          which the capability definition
                                                          conforms.
                                                        type: string
                                                        minLength: 2
                                                        maxLength: 100
                                                        pattern: >-
                                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                        example:
                                                          - v1
                                                          - v1alpha1
                                                          - v2beta3
                                                          - v1.custom-suffix
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: schemaVersion
                                                          json: schemaVersion
                                                      version:
                                                        description: Version of the capability definition.
                                                        type: string
                                                        minLength: 5
                                                        maxLength: 100
                                                        pattern: >-
                                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: version
                                                          json: version
                                                      displayName:
                                                        description: >-
                                                          Name of the capability in human-readible
                                                          format.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: displayName
                                                          json: displayName
                                                      description:
                                                        type: string
                                                        description: >-
                                                          A written representation of the purpose
                                                          and characteristics of the capability.
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: description
                                                          json: description
                                                      kind:
                                                        description: >-
                                                          Top-level categorization of the
                                                          capability
                                                        additionalProperties: false
                                                        anyOf:
                                                          - const: action
                                                            description: >-
                                                              For capabilities related to executing
                                                              actions on entities. Example: initiate
                                                              log streaming on a Pod. Example:
                                                              initiate deployment of a component.
                                                          - const: mutate
                                                            description: >-
                                                              For capabilities related to mutating an
                                                              entity. Example: the ability to change
                                                              the configuration of a component.
                                                          - const: view
                                                            description: >-
                                                              For capabilities related to viewing an
                                                              entity. Example: the ability to view a
                                                              components configuration.
                                                          - const: interaction
                                                            description: >-
                                                              Catch all for capabilities related to
                                                              interaction with entities. Example: the
                                                              ability for a component to be dragged
                                                              and dropped. Example: supports event
                                                              bubbling to parent components. 
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: kind
                                                          json: kind
                                                      type:
                                                        description: >-
                                                          Classification of capabilities. Used to
                                                          group capabilities similar in nature.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: type
                                                          json: type
                                                      subType:
                                                        description: >-
                                                          Most granular unit of capability
                                                          classification. The combination of Kind,
                                                          Type and SubType together uniquely
                                                          identify a Capability.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: subType
                                                          json: subType
                                                      key:
                                                        description: Key that backs the capability.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: key
                                                          json: key
                                                      entityState:
                                                        description: >-
                                                          State of the entity in which the
                                                          capability is applicable.
                                                        type: array
                                                        items:
                                                          type: string
                                                          enum:
                                                            - declaration
                                                            - instance
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          description: >-
                                                            A string starting with an alphanumeric
                                                            character. Spaces and hyphens allowed.
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: entityState
                                                            json: entityState
                                                      status:
                                                        type: string
                                                        description: Status of the capability
                                                        default: enabled
                                                        enum:
                                                          - enabled
                                                          - disabled
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: status
                                                          json: status
                                                      metadata:
                                                        type: object
                                                        description: >-
                                                          Metadata contains additional information
                                                          associated with the capability.
                                                          Extension point.
                                                        additionalProperties: true
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: metadata
                                                          json: metadata
                                                isAnnotation:
                                                  type: boolean
                                                  description: >-
                                                    Indicates whether the model and its
                                                    entities should be treated as deployable
                                                    entities or as logical representations.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: isAnnotation
                                                    json: isAnnotation
                                                primaryColor:
                                                  type: string
                                                  description: Primary color associated with the model.
                                                  minLength: 1
                                                  maxLength: 50
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: primaryColor
                                                    json: primaryColor
                                                secondaryColor:
                                                  type: string
                                                  description: >-
                                                    Secondary color associated with the
                                                    model.
                                                  minLength: 1
                                                  maxLength: 50
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: secondaryColor
                                                    json: secondaryColor
                                                svgWhite:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the model in white
                                                    color.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgWhite
                                                    json: svgWhite
                                                svgColor:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the model in
                                                    colored format.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgColor
                                                    json: svgColor
                                                svgComplete:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the complete
                                                    model.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgComplete
                                                    json: svgComplete
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              additionalProperties: true
                                            model:
                                              type: object
                                              description: >-
                                                Registrant-defined data associated with
                                                the model. Properties pertain to the
                                                software being managed (e.g. Kubernetes
                                                v1.31)
                                              required:
                                                - version
                                              properties:
                                                version:
                                                  description: >-
                                                    Version of the model as defined by the
                                                    registrant.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                          required:
                                            - name
                                            - version
                                            - registrant
                                            - category
                                        id:
                                          type: string
                                          format: uuid
                                          description: >-
                                            A Universally Unique Identifier used to
                                            uniquely identify entites in Meshery.
                                            The UUID core defintion is used across
                                            different schemas.
                                          x-go-type: uuid.UUID
                                          x-go-type-import:
                                            path: github.com/gofrs/uuid
                                          x-oapi-codegen-extra-tags:
                                            yaml: id
                                            json: id
                                        match:
                                          type: object
                                          additionalProperties: false
                                          oneOf:
                                            - type: array
                                              items:
                                                type: array
                                                items:
                                                  type: string
                                            - properties:
                                                from:
                                                  $comment: >-
                                                    Type is array so that mutliple bindings
                                                    can be supported between 2 nodes
                                                  type: array
                                                  items:
                                                    type: object
                                                    allOf:
                                                      - properties:
                                                          kind:
                                                            type: string
                                                          id:
                                                            type: string
                                                            format: uuid
                                                            description: >-
                                                              A Universally Unique Identifier used to
                                                              uniquely identify entites in Meshery.
                                                              The UUID core defintion is used across
                                                              different schemas.
                                                            x-go-type: uuid.UUID
                                                            x-go-type-import:
                                                              path: github.com/gofrs/uuid
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: id
                                                              json: id
                                                      - oneOf:
                                                          - properties:
                                                              mutatorRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    The sequence of mutatorRef and
                                                                    mutatedRef must match. eg: mutatorRef:
                                                                    [[config, url], [config, name]],
                                                                    mutatedRef: [[configPatch, value],
                                                                    [name]]. The value [config, url] will be
                                                                    patched at [configPatch, value].
                                                                    Similarly [config,name] will be patched
                                                                    at [name].
                                                                description: >-
                                                                  JSON ref to value from where patch
                                                                  should be applied.
                                                          - properties:
                                                              mutatedRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    JSONPath
                                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                                    to property to be patched.
                                                to:
                                                  $comment: >-
                                                    Type is array so that mutliple bindings
                                                    can be supported between 2 nodes
                                                  type: array
                                                  items:
                                                    type: object
                                                    allOf:
                                                      - properties:
                                                          kind:
                                                            type: string
                                                          id:
                                                            type: string
                                                            format: uuid
                                                            description: >-
                                                              A Universally Unique Identifier used to
                                                              uniquely identify entites in Meshery.
                                                              The UUID core defintion is used across
                                                              different schemas.
                                                            x-go-type: uuid.UUID
                                                            x-go-type-import:
                                                              path: github.com/gofrs/uuid
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: id
                                                              json: id
                                                      - oneOf:
                                                          - properties:
                                                              mutatorRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    The sequence of mutatorRef and
                                                                    mutatedRef must match. eg: mutatorRef:
                                                                    [[config, url], [config, name]],
                                                                    mutatedRef: [[configPatch, value],
                                                                    [name]]. The value [config, url] will be
                                                                    patched at [configPatch, value].
                                                                    Similarly [config,name] will be patched
                                                                    at [name].
                                                                description: >-
                                                                  JSON ref to value from where patch
                                                                  should be applied.
                                                          - properties:
                                                              mutatedRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    JSONPath
                                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                                    to property to be patched.
                                          x-oapi-codegen-extra-tags:
                                            yaml: match
                                            json: match
                                        patch:
                                          allOf:
                                            - properties:
                                                patchStrategy:
                                                  description: >-
                                                    patchStrategy allows you to make
                                                    specific changes to a resource using a
                                                    standard JSON Patch format (RFC 6902). 


                                                    add: Inserts a value into an array or
                                                    adds a member to an object.

                                                    replace: Replaces a value.

                                                    merge: Combines the values of the target
                                                    location with the values from the patch.
                                                    If the target location doesn't exist, it
                                                    is created.

                                                    strategic:specific to Kubernetes and
                                                    understands the structure of Kubernetes
                                                    objects. It can handle complex changes
                                                    like updating lists and maps, as well as
                                                    preserving default values. However, it's
                                                    not supported for custom resources. For
                                                    custom resources, only JSON Patch and
                                                    Merge Patch are typically supported.

                                                    remove: Removes a value.

                                                    copy: Copies a value from one location
                                                    to another.

                                                    move: Moves a value from one location to
                                                    another.

                                                    test: Tests that a value at the target
                                                    location is equal to a specified value.
                                                  $comment: >-
                                                    Array Indexing: When working with
                                                    arrays, be aware that Kubernetes uses
                                                    zero-based indexing in JSON patch paths.

                                                    Merge Patch vs. JSON Patch: Merge
                                                    patches are less flexible than JSON
                                                    patches and do not support all the same
                                                    operations.

                                                    Strategic Merge Patch: For some
                                                    Kubernetes resources, you can also use
                                                    the strategic type for a strategic merge
                                                    patch, which understands the structure
                                                    of Kubernetes objects and can handle
                                                    complex operations.
                                                  type: string
                                                  enum:
                                                    - merge
                                                    - strategic
                                                    - add
                                                    - remove
                                                    - copy
                                                    - move
                                                    - test
                                                  default: copy
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                          x-oapi-codegen-extra-tags:
                                            yaml: patch
                                            json: patch
                                      description: >-
                                        Optional fields that are a part of the
                                        `from` selector. Absence of a field has
                                        an implied * meaning.
                                  to:
                                    description: >-
                                      Describes the component(s) which are
                                      involved in the relationship along with a
                                      set of actions to perform upon selection
                                      match.
                                    type: array
                                    items:
                                      type: object
                                      additionalProperties: false
                                      properties:
                                        kind:
                                          type: string
                                          x-oapi-codegen-extra-tags:
                                            yaml: kind
                                            json: kind
                                        model:
                                          description: >-
                                            Name of the model implicated by this
                                            selector. Learn more at
                                            https://docs.meshery.io/concepts/models
                                          $id: https://schemas.meshery.io/model.json
                                          $schema: http://json-schema.org/draft-07/schema#
                                          additionalProperties: false
                                          type: object
                                          properties:
                                            id:
                                              description: >-
                                                Uniquely identifies the entity (i.e.
                                                component) as defined in a declaration
                                                (i.e. design).
                                              type: string
                                              format: uuid
                                              x-go-type: uuid.UUID
                                              x-go-type-import:
                                                path: github.com/gofrs/uuid
                                              x-oapi-codegen-extra-tags:
                                                yaml: id
                                                json: id
                                            schemaVersion:
                                              description: >-
                                                Specifies the version of the schema used
                                                for the definition.
                                              x-oapi-codegen-extra-tags:
                                                yaml: schemaVersion
                                                json: schemaVersion
                                              type: string
                                              minLength: 2
                                              maxLength: 100
                                              pattern: >-
                                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                              example:
                                                - v1
                                                - v1alpha1
                                                - v2beta3
                                                - v1.custom-suffix
                                            version:
                                              description: Version of the model definition.
                                              type: string
                                              x-oapi-codegen-extra-tags:
                                                yaml: version
                                                json: version
                                              minLength: 5
                                              maxLength: 100
                                              pattern: >-
                                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            name:
                                              description: >-
                                                The unique name for the model within the
                                                scope of a registrant.
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                              x-oapi-codegen-extra-tags:
                                                yaml: name
                                                json: name
                                            displayName:
                                              description: Human-readable name for the model.
                                              minLength: 1
                                              maxLength: 100
                                              type: string
                                              pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                              x-oapi-codegen-extra-tags:
                                                yaml: displayName
                                                json: displayName
                                            description:
                                              type: string
                                              description: Description of the model.
                                              minLength: 1
                                              maxLength: 1000
                                              x-oapi-codegen-extra-tags:
                                                yaml: description
                                                json: description
                                            status:
                                              type: string
                                              description: >-
                                                Status of model, including:

                                                - duplicate: this component is a
                                                duplicate of another. The component that
                                                is to be the canonical reference and
                                                that is duplicated by other components
                                                should not be assigned the 'duplicate'
                                                status.

                                                - maintenance: model is unavailable for
                                                a period of time.

                                                - enabled: model is available for use
                                                for all users of this Meshery Server.

                                                - ignored: model is unavailable for use
                                                for all users of this Meshery Server.
                                              enum:
                                                - ignored
                                                - enabled
                                                - duplicate
                                              x-oapi-codegen-extra-tags:
                                                yaml: status
                                                json: status
                                            registrant:
                                              x-oapi-codegen-extra-tags:
                                                yaml: registrant
                                                json: registrant
                                                gorm: foreignKey:RegistrantId;references:Id
                                              $id: >-
                                                https://schemas.meshery.io/component.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery Connections are managed and
                                                unmanaged resources that either through
                                                discovery or manual entry are tracked by
                                                Meshery. Learn more at
                                                https://docs.meshery.io/concepts/logical/connections
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - kind
                                                - type
                                                - status
                                              properties:
                                                id:
                                                  description: ID
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                name:
                                                  x-oapi-codegen-extra-tags:
                                                    db: name
                                                    yaml: name
                                                    json: name
                                                  type: string
                                                  description: Connection Name
                                                credential_id:
                                                  x-go-name: CredentialId
                                                  x-oapi-codegen-extra-tags:
                                                    db: credential_id
                                                    yaml: credential_id
                                                    json: credential_id
                                                  description: Credential ID
                                                  type: string
                                                  format: uuid
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                type:
                                                  x-oapi-codegen-extra-tags:
                                                    db: type
                                                    yaml: type
                                                    json: type
                                                  type: string
                                                  description: Connection Type
                                                sub_type:
                                                  x-oapi-codegen-extra-tags:
                                                    db: sub_type
                                                    yaml: sub_type
                                                    json: sub_type
                                                  type: string
                                                  description: Connection Subtype
                                                kind:
                                                  x-oapi-codegen-extra-tags:
                                                    db: kind
                                                    yaml: kind
                                                    json: kind
                                                  type: string
                                                  description: Connection Kind
                                                metadata:
                                                  x-oapi-codegen-extra-tags:
                                                    db: metadata
                                                    yaml: metadata
                                                    json: metadata
                                                  type: object
                                                status:
                                                  x-oapi-codegen-extra-tags:
                                                    db: status
                                                    yaml: status
                                                    json: status
                                                  description: Connection Status
                                                  type: string
                                                  enum:
                                                    - discovered
                                                    - registered
                                                    - connected
                                                    - ignored
                                                    - maintenance
                                                    - disconnected
                                                    - deleted
                                                    - not found
                                                user_id:
                                                  x-go-name: UserID
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: user_id
                                                    json: user_id
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                created_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: created_at
                                                    json: created_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                                updated_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: updated_at
                                                    json: updated_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                                deleted_at:
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: deleted_at
                                                    json: deleted_at
                                                  type: string
                                                  format: date-time
                                                  x-go-type-skip-optional-pointer: true
                                            category:
                                              type: object
                                              description: Category of the model.
                                              properties:
                                                id:
                                                  type: string
                                                  format: uuid
                                                  description: >-
                                                    A Universally Unique Identifier used to
                                                    uniquely identify entites in Meshery.
                                                    The UUID core defintion is used across
                                                    different schemas.
                                                  x-go-type: uuid.UUID
                                                  x-go-type-import:
                                                    path: github.com/gofrs/uuid
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: id
                                                    json: id
                                                name:
                                                  type: string
                                                  minLength: 1
                                                  maxLength: 100
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: name
                                                    json: name
                                                metadata:
                                                  type: object
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                              x-oapi-codegen-extra-tags:
                                                yaml: category
                                                json: category
                                                gorm: foreignKey:CategoryId;references:Id
                                            subCategory:
                                              type: string
                                              description: Sub-category of the model.
                                              minLength: 1
                                              maxLength: 100
                                              x-oapi-codegen-extra-tags:
                                                yaml: subCategory
                                                json: subCategory
                                            metadata:
                                              type: object
                                              description: >-
                                                Metadata containing additional
                                                information associated with the model.
                                              properties:
                                                capabilities:
                                                  type: array
                                                  description: Capabilities associated with the model
                                                  items:
                                                    $id: >-
                                                      https://schemas.meshery.io/capability.json
                                                    $schema: http://json-schema.org/draft-07/schema#
                                                    description: >-
                                                      Meshery manages entities in accordance
                                                      with their specific capabilities. This
                                                      field explicitly identifies those
                                                      capabilities largely by what actions a
                                                      given component supports; e.g.
                                                      metric-scrape, sub-interface, and so on.
                                                      This field is extensible. Entities may
                                                      define a broad array of capabilities,
                                                      which are in-turn dynamically
                                                      interpretted by Meshery for full
                                                      lifecycle management.
                                                    additionalProperties: false
                                                    type: object
                                                    required:
                                                      - schemaVersion
                                                      - version
                                                      - displayName
                                                      - kind
                                                      - type
                                                      - entityState
                                                      - status
                                                    x-oapi-codegen-extra-tags:
                                                      gorm: type:bytes;serializer:json
                                                    properties:
                                                      schemaVersion:
                                                        description: >-
                                                          Specifies the version of the schema to
                                                          which the capability definition
                                                          conforms.
                                                        type: string
                                                        minLength: 2
                                                        maxLength: 100
                                                        pattern: >-
                                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                        example:
                                                          - v1
                                                          - v1alpha1
                                                          - v2beta3
                                                          - v1.custom-suffix
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: schemaVersion
                                                          json: schemaVersion
                                                      version:
                                                        description: Version of the capability definition.
                                                        type: string
                                                        minLength: 5
                                                        maxLength: 100
                                                        pattern: >-
                                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: version
                                                          json: version
                                                      displayName:
                                                        description: >-
                                                          Name of the capability in human-readible
                                                          format.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: displayName
                                                          json: displayName
                                                      description:
                                                        type: string
                                                        description: >-
                                                          A written representation of the purpose
                                                          and characteristics of the capability.
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: description
                                                          json: description
                                                      kind:
                                                        description: >-
                                                          Top-level categorization of the
                                                          capability
                                                        additionalProperties: false
                                                        anyOf:
                                                          - const: action
                                                            description: >-
                                                              For capabilities related to executing
                                                              actions on entities. Example: initiate
                                                              log streaming on a Pod. Example:
                                                              initiate deployment of a component.
                                                          - const: mutate
                                                            description: >-
                                                              For capabilities related to mutating an
                                                              entity. Example: the ability to change
                                                              the configuration of a component.
                                                          - const: view
                                                            description: >-
                                                              For capabilities related to viewing an
                                                              entity. Example: the ability to view a
                                                              components configuration.
                                                          - const: interaction
                                                            description: >-
                                                              Catch all for capabilities related to
                                                              interaction with entities. Example: the
                                                              ability for a component to be dragged
                                                              and dropped. Example: supports event
                                                              bubbling to parent components. 
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: kind
                                                          json: kind
                                                      type:
                                                        description: >-
                                                          Classification of capabilities. Used to
                                                          group capabilities similar in nature.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: type
                                                          json: type
                                                      subType:
                                                        description: >-
                                                          Most granular unit of capability
                                                          classification. The combination of Kind,
                                                          Type and SubType together uniquely
                                                          identify a Capability.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: subType
                                                          json: subType
                                                      key:
                                                        description: Key that backs the capability.
                                                        type: string
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: key
                                                          json: key
                                                      entityState:
                                                        description: >-
                                                          State of the entity in which the
                                                          capability is applicable.
                                                        type: array
                                                        items:
                                                          type: string
                                                          enum:
                                                            - declaration
                                                            - instance
                                                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                          description: >-
                                                            A string starting with an alphanumeric
                                                            character. Spaces and hyphens allowed.
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: entityState
                                                            json: entityState
                                                      status:
                                                        type: string
                                                        description: Status of the capability
                                                        default: enabled
                                                        enum:
                                                          - enabled
                                                          - disabled
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: status
                                                          json: status
                                                      metadata:
                                                        type: object
                                                        description: >-
                                                          Metadata contains additional information
                                                          associated with the capability.
                                                          Extension point.
                                                        additionalProperties: true
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: metadata
                                                          json: metadata
                                                isAnnotation:
                                                  type: boolean
                                                  description: >-
                                                    Indicates whether the model and its
                                                    entities should be treated as deployable
                                                    entities or as logical representations.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: isAnnotation
                                                    json: isAnnotation
                                                primaryColor:
                                                  type: string
                                                  description: Primary color associated with the model.
                                                  minLength: 1
                                                  maxLength: 50
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: primaryColor
                                                    json: primaryColor
                                                secondaryColor:
                                                  type: string
                                                  description: >-
                                                    Secondary color associated with the
                                                    model.
                                                  minLength: 1
                                                  maxLength: 50
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: secondaryColor
                                                    json: secondaryColor
                                                svgWhite:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the model in white
                                                    color.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgWhite
                                                    json: svgWhite
                                                svgColor:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the model in
                                                    colored format.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgColor
                                                    json: svgColor
                                                svgComplete:
                                                  type: string
                                                  description: >-
                                                    SVG representation of the complete
                                                    model.
                                                  minLength: 1
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: svgComplete
                                                    json: svgComplete
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              additionalProperties: true
                                            model:
                                              type: object
                                              description: >-
                                                Registrant-defined data associated with
                                                the model. Properties pertain to the
                                                software being managed (e.g. Kubernetes
                                                v1.31)
                                              required:
                                                - version
                                              properties:
                                                version:
                                                  description: >-
                                                    Version of the model as defined by the
                                                    registrant.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                          required:
                                            - name
                                            - version
                                            - registrant
                                            - category
                                        id:
                                          type: string
                                          format: uuid
                                          description: >-
                                            A Universally Unique Identifier used to
                                            uniquely identify entites in Meshery.
                                            The UUID core defintion is used across
                                            different schemas.
                                          x-go-type: uuid.UUID
                                          x-go-type-import:
                                            path: github.com/gofrs/uuid
                                          x-oapi-codegen-extra-tags:
                                            yaml: id
                                            json: id
                                        match:
                                          type: object
                                          additionalProperties: false
                                          oneOf:
                                            - type: array
                                              items:
                                                type: array
                                                items:
                                                  type: string
                                            - properties:
                                                from:
                                                  $comment: >-
                                                    Type is array so that mutliple bindings
                                                    can be supported between 2 nodes
                                                  type: array
                                                  items:
                                                    type: object
                                                    allOf:
                                                      - properties:
                                                          kind:
                                                            type: string
                                                          id:
                                                            type: string
                                                            format: uuid
                                                            description: >-
                                                              A Universally Unique Identifier used to
                                                              uniquely identify entites in Meshery.
                                                              The UUID core defintion is used across
                                                              different schemas.
                                                            x-go-type: uuid.UUID
                                                            x-go-type-import:
                                                              path: github.com/gofrs/uuid
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: id
                                                              json: id
                                                      - oneOf:
                                                          - properties:
                                                              mutatorRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    The sequence of mutatorRef and
                                                                    mutatedRef must match. eg: mutatorRef:
                                                                    [[config, url], [config, name]],
                                                                    mutatedRef: [[configPatch, value],
                                                                    [name]]. The value [config, url] will be
                                                                    patched at [configPatch, value].
                                                                    Similarly [config,name] will be patched
                                                                    at [name].
                                                                description: >-
                                                                  JSON ref to value from where patch
                                                                  should be applied.
                                                          - properties:
                                                              mutatedRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    JSONPath
                                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                                    to property to be patched.
                                                to:
                                                  $comment: >-
                                                    Type is array so that mutliple bindings
                                                    can be supported between 2 nodes
                                                  type: array
                                                  items:
                                                    type: object
                                                    allOf:
                                                      - properties:
                                                          kind:
                                                            type: string
                                                          id:
                                                            type: string
                                                            format: uuid
                                                            description: >-
                                                              A Universally Unique Identifier used to
                                                              uniquely identify entites in Meshery.
                                                              The UUID core defintion is used across
                                                              different schemas.
                                                            x-go-type: uuid.UUID
                                                            x-go-type-import:
                                                              path: github.com/gofrs/uuid
                                                            x-oapi-codegen-extra-tags:
                                                              yaml: id
                                                              json: id
                                                      - oneOf:
                                                          - properties:
                                                              mutatorRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    The sequence of mutatorRef and
                                                                    mutatedRef must match. eg: mutatorRef:
                                                                    [[config, url], [config, name]],
                                                                    mutatedRef: [[configPatch, value],
                                                                    [name]]. The value [config, url] will be
                                                                    patched at [configPatch, value].
                                                                    Similarly [config,name] will be patched
                                                                    at [name].
                                                                description: >-
                                                                  JSON ref to value from where patch
                                                                  should be applied.
                                                          - properties:
                                                              mutatedRef:
                                                                type: array
                                                                items:
                                                                  type: array
                                                                  items:
                                                                    type: string
                                                                  description: >-
                                                                    JSONPath
                                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                                    to property to be patched.
                                          x-oapi-codegen-extra-tags:
                                            yaml: match
                                            json: match
                                        patch:
                                          allOf:
                                            - properties:
                                                patchStrategy:
                                                  description: >-
                                                    patchStrategy allows you to make
                                                    specific changes to a resource using a
                                                    standard JSON Patch format (RFC 6902). 


                                                    add: Inserts a value into an array or
                                                    adds a member to an object.

                                                    replace: Replaces a value.

                                                    merge: Combines the values of the target
                                                    location with the values from the patch.
                                                    If the target location doesn't exist, it
                                                    is created.

                                                    strategic:specific to Kubernetes and
                                                    understands the structure of Kubernetes
                                                    objects. It can handle complex changes
                                                    like updating lists and maps, as well as
                                                    preserving default values. However, it's
                                                    not supported for custom resources. For
                                                    custom resources, only JSON Patch and
                                                    Merge Patch are typically supported.

                                                    remove: Removes a value.

                                                    copy: Copies a value from one location
                                                    to another.

                                                    move: Moves a value from one location to
                                                    another.

                                                    test: Tests that a value at the target
                                                    location is equal to a specified value.
                                                  $comment: >-
                                                    Array Indexing: When working with
                                                    arrays, be aware that Kubernetes uses
                                                    zero-based indexing in JSON patch paths.

                                                    Merge Patch vs. JSON Patch: Merge
                                                    patches are less flexible than JSON
                                                    patches and do not support all the same
                                                    operations.

                                                    Strategic Merge Patch: For some
                                                    Kubernetes resources, you can also use
                                                    the strategic type for a strategic merge
                                                    patch, which understands the structure
                                                    of Kubernetes objects and can handle
                                                    complex operations.
                                                  type: string
                                                  enum:
                                                    - merge
                                                    - strategic
                                                    - add
                                                    - remove
                                                    - copy
                                                    - move
                                                    - test
                                                  default: copy
                                            - oneOf:
                                                - properties:
                                                    mutatorRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          The sequence of mutatorRef and
                                                          mutatedRef must match. eg: mutatorRef:
                                                          [[config, url], [config, name]],
                                                          mutatedRef: [[configPatch, value],
                                                          [name]]. The value [config, url] will be
                                                          patched at [configPatch, value].
                                                          Similarly [config,name] will be patched
                                                          at [name].
                                                      description: >-
                                                        JSON ref to value from where patch
                                                        should be applied.
                                                - properties:
                                                    mutatedRef:
                                                      type: array
                                                      items:
                                                        type: array
                                                        items:
                                                          type: string
                                                        description: >-
                                                          JSONPath
                                                          (https://en.wikipedia.org/wiki/JSONPath)
                                                          to property to be patched.
                                          x-oapi-codegen-extra-tags:
                                            yaml: patch
                                            json: patch
                                      description: >-
                                        Optional fields that are a part of the
                                        `from` selector. Absence of a field has
                                        an implied * meaning.
                required:
                  - id
                  - name
                  - schemaVersion
                  - version
                  - components
                  - relationships
              updated_at:
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              id:
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                x-go-type-skip-optional-pointer: true
              visibility:
                type: string
                x-go-type-skip-optional-pointer: true
        resultType:
          type: string
        total_count:
          type: integer
    design_MesheryPatternDeleteRequestBody:
      type: object
      properties:
        patterns:
          type: array
          items:
            x-go-type: DeletePatternModel
            type: object
            properties:
              id:
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                x-go-type-skip-optional-pointer: true
              name:
                type: string
                x-go-type-skip-optional-pointer: true
    design_MesheryPatternRequestBody:
      type: object
      properties:
        path:
          type: string
          x-go-type-skip-optional-pointer: true
        pattern_data:
          x-go-type: MesheryPattern
          type: object
          properties:
            catalog_data:
              x-go-type: catalog.CatalogData
              x-go-type-import:
                path: github.com/meshery/schemas/models/v1alpha2/catalog
              type: object
              properties:
                publishedVersion:
                  description: >-
                    Tracks the specific content version that has been made
                    available in the Catalog.
                  type: string
                class:
                  description: >-
                    Published content is classifed by its support level. Content
                    classes help you understand the origin and expected support
                    level for each piece of content. It is important to note
                    that the level of support may vary within each class, and
                    you should exercise discretion when using
                    community-contributed content. Content produced and fully
                    supported by Meshery maintainers. This represents the
                    highest level of support and is considered the most
                    reliable. Content produced by partners and verified by
                    Meshery maintainers. While not directly maintained by
                    Meshery, it has undergone a verification process to ensure
                    quality and compatibility. Content produced and supported by
                    the respective project or organization responsible for the
                    specific technology. This class offers a level of support
                    from the project maintainers themselves. Content produced
                    and shared by Meshery users. This includes a wide range of
                    content, such as performance profiles, test results,
                    filters, patterns, and applications. Community content may
                    have varying levels of support and reliability.
                  type: string
                  oneOf:
                    - const: official
                      description: >-
                        Content produced and fully supported by Meshery
                        maintainers. This represents the highest level of
                        support and is considered the most reliable.
                    - const: verified
                      description: >-
                        Content produced by partners and verified by Meshery
                        maintainers. While not directly maintained by Meshery,
                        it has undergone a verification process to ensure
                        quality and compatibility.
                    - const: reference architecture
                      description: >-
                        Content produced and shared by Meshery users. This
                        includes a wide range of content, such as performance
                        profiles, test results, filters, patterns, and
                        applications. Reference architecture content may have
                        varying levels of support and reliability.
                compatibility:
                  type: array
                  title: Model
                  items:
                    enum:
                      - kubernetes
                    type: string
                  uniqueItems: true
                  minItems: 1
                  description: >-
                    One or more models associated with this catalog item. For
                    designs, a list of one or more models implicated by
                    components within the design. For models, this is
                    self-referential.
                pattern_caveats:
                  type: string
                  title: Caveats and Considerations
                  description: >-
                    Specific stipulations to consider and known behaviors to be
                    aware of when using this design.
                pattern_info:
                  type: string
                  title: Description
                  minLength: 1
                  description: >-
                    Purpose of the design along with its intended and unintended
                    uses.
                type:
                  type: string
                  title: Type
                  enum:
                    - Deployment
                    - Observability
                    - Resiliency
                    - Scaling
                    - Security
                    - Traffic-management
                    - Troubleshooting
                    - Workloads
                  default: Deployment
                  description: >-
                    Categorization of the type of design or operational flow
                    depicted in this design.
                snapshotURL:
                  type: array
                  items:
                    type: string
                    format: uri
                    pattern: ^(https?|http?|oci)://
                  description: >-
                    Contains reference to the dark and light mode snapshots of
                    the design.
              required:
                - compatibility
                - pattern_caveats
                - pattern_info
                - type
            created_at:
              type: string
              format: date-time
              x-go-type-skip-optional-pointer: true
            user_id:
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              x-go-type-skip-optional-pointer: true
            location:
              type: object
              additionalProperties:
                type: string
              x-go-type-skip-optional-pointer: true
            name:
              type: string
              x-go-type-skip-optional-pointer: true
            pattern_file:
              x-go-type: PatternFile
              $schema: http://json-schema.org/draft-07/schema#
              title: Design Schema
              description: >-
                Designs are your primary tool for collaborative authorship of
                your infrastructure, workflow, and processes.
              type: object
              properties:
                id:
                  x-order: 1
                  type: string
                  format: uuid
                  description: >-
                    A Universally Unique Identifier used to uniquely identify
                    entites in Meshery. The UUID core defintion is used across
                    different schemas.
                  x-go-type: uuid.UUID
                  x-go-type-import:
                    path: github.com/gofrs/uuid
                  default: 00000000-0000-0000-0000-000000000000
                name:
                  type: string
                  description: >-
                    Name of the design; a descriptive, but concise title for the
                    design document.
                  x-order: 2
                schemaVersion:
                  description: >-
                    Specifies the version of the schema to which the design
                    conforms.
                  x-order: 3
                  type: string
                  minLength: 2
                  maxLength: 100
                  pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                  example:
                    - v1
                    - v1alpha1
                    - v2beta3
                    - v1.custom-suffix
                version:
                  default: v0.0.1
                  x-order: 4
                  description: >-
                    Revision of the design as expressed by an auto-incremented,
                    SemVer-compliant version number. May be manually set by a
                    user or third-party system, but will always be required to
                    be of version number higher than the previously defined
                    version number.
                  minLength: 1
                  maxLength: 50
                  type: string
                  pattern: >-
                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                metadata:
                  type: object
                  x-order: 5
                  additionalProperties: true
                  properties:
                    resolvedAliases:
                      description: Map of resolved aliases present in the design
                      type: object
                      x-go-type: map[string]core.ResolvedAlias
                      x-go-type-import:
                        path: github.com/meshery/schemas/models/v1alpha1/core
                      additionalProperties:
                        description: >-
                          An resolved alias is an component that acts as an
                          ref/pointer to a field in another component,
                          resolvedAlias are aware of there immediate parents and
                          completely resolved parents also
                        allOf:
                          - description: >-
                              An alias is an component that acts as an
                              ref/pointer to a field in another component,
                              nonResolvedAlias are not aware of there immediate
                              parents
                            type: object
                            properties:
                              relationship_id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entities in Meshery. The
                                  UUID core definition is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                              alias_component_id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entities in Meshery. The
                                  UUID core definition is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                              immediate_parent_id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entities in Meshery. The
                                  UUID core definition is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                              immediate_ref_field_path:
                                type: array
                                items:
                                  type: string
                            required:
                              - relationship_id
                              - alias_component_id
                              - immediate_parent_id
                              - immediate_ref_field_path
                          - type: object
                            properties:
                              resolved_parent_id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entities in Meshery. The
                                  UUID core definition is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                              resolved_ref_field_path:
                                type: array
                                items:
                                  type: string
                            required:
                              - resolved_parent_id
                              - resolved_ref_field_path
                components:
                  description: A list of one or more component declarations.
                  minItems: 0
                  x-order: 6
                  type: array
                  items:
                    x-go-type: '*component.ComponentDefinition'
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1beta1/component
                    $id: https://schemas.meshery.io/component.json
                    $schema: http://json-schema.org/draft-07/schema#
                    description: >-
                      Components are reusable building blocks for depicting
                      capabilities defined within models. Learn more at
                      https://docs.meshery.io/concepts/components
                    additionalProperties: false
                    type: object
                    properties:
                      id:
                        description: >-
                          Uniquely identifies the entity (i.e. component) as
                          defined in a declaration (i.e. design).
                        x-order: 1
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      schemaVersion:
                        x-order: 2
                        description: >-
                          Specifies the version of the schema to which the
                          component definition conforms.
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          json: schemaVersion
                        default: components.meshery.io/v1beta1
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        x-order: 3
                        description: Version of the component definition.
                        minLength: 1
                        maxLength: 50
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        type: string
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        default: v0.0.1
                      displayName:
                        x-order: 4
                        description: Name of the component in human-readible format.
                        x-oapi-codegen-extra-tags:
                          yaml: displayName
                          json: displayName
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      description:
                        x-order: 5
                        type: string
                        description: >-
                          A written representation of the purpose and
                          characteristics of the component.
                        x-oapi-codegen-extra-tags:
                          yaml: description
                          json: description
                      format:
                        x-order: 6
                        type: string
                        enum:
                          - JSON
                          - CUE
                        default: JSON
                        description: >-
                          Format specifies the format used in the
                          `component.schema` field. JSON is the default.
                        x-oapi-codegen-extra-tags:
                          yaml: format
                          json: format
                      model:
                        x-go-type: model.ModelDefinition
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1beta1/model
                        x-order: 7
                        description: >-
                          Reference to the specific registered model to which
                          the component belongs and from which model version,
                          category, and other properties may be referenced.
                          Learn more at https://docs.meshery.io/concepts/models
                        x-oapi-codegen-extra-tags:
                          gorm: foreignKey:ModelId;references:Id
                        $id: https://schemas.meshery.io/model.json
                        $schema: http://json-schema.org/draft-07/schema#
                        additionalProperties: false
                        type: object
                        properties:
                          id:
                            description: >-
                              Uniquely identifies the entity (i.e. component) as
                              defined in a declaration (i.e. design).
                            x-order: 1
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          schemaVersion:
                            description: >-
                              Specifies the version of the schema used for the
                              definition.
                            x-order: 2
                            x-oapi-codegen-extra-tags:
                              yaml: schemaVersion
                              json: schemaVersion
                            default: models.meshery.io/v1beta1
                            type: string
                            minLength: 2
                            maxLength: 100
                            pattern: >-
                              ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                            example:
                              - v1
                              - v1alpha1
                              - v2beta3
                              - v1.custom-suffix
                          version:
                            description: Version of the model definition.
                            type: string
                            x-order: 3
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            minLength: 5
                            maxLength: 100
                            pattern: >-
                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                            default: v0.0.1
                          name:
                            type: string
                            description: >-
                              The unique name for the model within the scope of
                              a registrant.
                            helperText: >-
                              Model name should be in lowercase with hyphens,
                              not whitespaces.
                            pattern: ^[a-z0-9-]+$
                            examples:
                              - cert-manager
                            x-order: 4
                            x-oapi-codegen-extra-tags:
                              yaml: name
                              json: name
                            default: untitled-model
                          displayName:
                            description: Human-readable name for the model.
                            helperText: >-
                              Model display name may include letters, numbers,
                              and spaces. Special characters are not allowed.
                            minLength: 1
                            maxLength: 100
                            type: string
                            pattern: ^[a-zA-Z0-9 ]+$
                            examples:
                              - Cert Manager
                            x-order: 5
                            x-oapi-codegen-extra-tags:
                              yaml: displayName
                              json: displayName
                            default: Untitled Model
                          description:
                            type: string
                            default: A new Meshery model.
                            description: Description of the model.
                            minLength: 1
                            maxLength: 1000
                            x-order: 6
                            x-oapi-codegen-extra-tags:
                              yaml: description,omitempty
                              json: description,omitempty
                          status:
                            type: string
                            description: >-
                              Status of model, including:

                              - duplicate: this component is a duplicate of
                              another. The component that is to be the canonical
                              reference and that is duplicated by other
                              components should not be assigned the 'duplicate'
                              status.

                              - maintenance: model is unavailable for a period
                              of time.

                              - enabled: model is available for use for all
                              users of this Meshery Server.

                              - ignored: model is unavailable for use for all
                              users of this Meshery Server.
                            enum:
                              - ignored
                              - enabled
                              - duplicate
                            x-order: 7
                            x-oapi-codegen-extra-tags:
                              yaml: status
                              json: status
                            default: enabled
                          registrant:
                            x-oapi-codegen-extra-tags:
                              yaml: registrant
                              json: registrant
                              gorm: foreignKey:RegistrantId;references:ID
                            x-order: 8
                            x-go-type: connection.Connection
                            x-go-type-import:
                              path: >-
                                github.com/meshery/schemas/models/v1beta1/connection
                            $id: https://schemas.meshery.io/component.json
                            $schema: http://json-schema.org/draft-07/schema#
                            description: >-
                              Meshery Connections are managed and unmanaged
                              resources that either through discovery or manual
                              entry are tracked by Meshery. Learn more at
                              https://docs.meshery.io/concepts/logical/connections
                            additionalProperties: false
                            type: object
                            required:
                              - id
                              - schemaVersion
                              - name
                              - type
                              - sub_type
                              - kind
                              - status
                            properties:
                              id:
                                description: ID
                                x-order: 1
                                x-go-name: ID
                                x-oapi-codegen-extra-tags:
                                  db: id
                                  yaml: id
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                default: 00000000-0000-0000-0000-000000000000
                              name:
                                x-oapi-codegen-extra-tags:
                                  db: name
                                  yaml: name
                                x-order: 2
                                type: string
                                description: Connection Name
                              credential_id:
                                x-go-name: CredentialID
                                x-oapi-codegen-extra-tags:
                                  db: credential_id
                                  yaml: credential_id
                                x-order: 3
                                description: Credential ID
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                default: 00000000-0000-0000-0000-000000000000
                              type:
                                x-oapi-codegen-extra-tags:
                                  db: type
                                  yaml: type
                                x-order: 4
                                type: string
                                description: Connection Type
                              sub_type:
                                x-oapi-codegen-extra-tags:
                                  db: sub_type
                                  yaml: sub_type
                                x-order: 5
                                type: string
                                description: Connection Subtype
                              kind:
                                x-oapi-codegen-extra-tags:
                                  db: kind
                                  yaml: kind
                                x-order: 6
                                type: string
                                description: Connection Kind
                              metadata:
                                x-oapi-codegen-extra-tags:
                                  db: metadata
                                  yaml: metadata
                                x-order: 7
                                x-go-type: core.Map
                                x-go-type-skip-optional-pointer: true
                                type: object
                              status:
                                x-oapi-codegen-extra-tags:
                                  db: status
                                  yaml: status
                                x-order: 8
                                description: Connection Status
                                type: string
                                enum:
                                  - discovered
                                  - registered
                                  - connected
                                  - ignored
                                  - maintenance
                                  - disconnected
                                  - deleted
                                  - not found
                              user_id:
                                x-go-name: UserID
                                x-oapi-codegen-extra-tags:
                                  db: user_id
                                  yaml: user_id
                                x-order: 9
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entites in Meshery. The UUID
                                  core defintion is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                default: 00000000-0000-0000-0000-000000000000
                              created_at:
                                x-oapi-codegen-extra-tags:
                                  db: created_at
                                  yaml: created_at
                                x-order: 10
                                type: string
                                format: date-time
                                x-go-type-skip-optional-pointer: true
                              updated_at:
                                x-oapi-codegen-extra-tags:
                                  db: updated_at
                                  yaml: updated_at
                                x-order: 11
                                type: string
                                format: date-time
                                x-go-type-skip-optional-pointer: true
                              deleted_at:
                                x-oapi-codegen-extra-tags:
                                  db: deleted_at
                                  yaml: deleted_at
                                x-go-type: core.NullTime
                                x-order: 12
                                type: string
                                format: date-time
                                x-go-type-skip-optional-pointer: true
                              environments:
                                type: array
                                items:
                                  x-go-type: '*environment.Environment'
                                  $id: https://schemas.meshery.io/environment.json
                                  $schema: http://json-schema.org/draft-07/schema#
                                  description: >-
                                    Meshery Environments allow you to logically
                                    group related Connections and their
                                    associated Credentials.. Learn more at
                                    https://docs.meshery.io/concepts/logical/environments
                                  additionalProperties: false
                                  type: object
                                  required:
                                    - id
                                    - name
                                    - description
                                    - organization_id
                                  properties:
                                    id:
                                      description: ID
                                      x-order: 1
                                      x-go-name: ID
                                      x-oapi-codegen-extra-tags:
                                        db: id
                                        yaml: id
                                      type: string
                                      format: uuid
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      default: 00000000-0000-0000-0000-000000000000
                                    name:
                                      x-oapi-codegen-extra-tags:
                                        db: name
                                        yaml: name
                                      x-order: 2
                                      type: string
                                      description: Environment name
                                    description:
                                      x-oapi-codegen-extra-tags:
                                        db: description
                                        yaml: description
                                      x-order: 3
                                      type: string
                                      description: Environment description
                                    organization_id:
                                      x-go-name: OrganizationID
                                      x-oapi-codegen-extra-tags:
                                        db: organization_id
                                        yaml: organization_id
                                      x-order: 4
                                      description: Environment organization ID
                                      type: string
                                      format: uuid
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      default: 00000000-0000-0000-0000-000000000000
                                    owner:
                                      x-oapi-codegen-extra-tags:
                                        db: owner
                                        yaml: owner
                                      x-order: 5
                                      description: Environment owner
                                      type: string
                                      format: uuid
                                      x-go-type: uuid.UUID
                                      x-go-type-import:
                                        path: github.com/gofrs/uuid
                                      default: 00000000-0000-0000-0000-000000000000
                                    created_at:
                                      x-oapi-codegen-extra-tags:
                                        db: created_at
                                        yaml: created_at
                                      x-order: 6
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                    metadata:
                                      x-oapi-codegen-extra-tags:
                                        db: metadata
                                        yaml: metadata
                                      x-order: 7
                                      x-go-type: core.Map
                                      x-go-type-skip-optional-pointer: true
                                      type: object
                                    updated_at:
                                      x-oapi-codegen-extra-tags:
                                        db: updated_at
                                        yaml: updated_at
                                      x-order: 8
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                    deleted_at:
                                      x-oapi-codegen-extra-tags:
                                        db: deleted_at
                                        yaml: deleted_at
                                      x-go-type: core.NullTime
                                      x-go-import: database/sql
                                      x-order: 9
                                      type: string
                                      format: date-time
                                      x-go-type-skip-optional-pointer: true
                                x-oapi-codegen-extra-tags:
                                  db: '-'
                                  yaml: environments
                                  gorm: '-'
                                x-go-type-skip-optional-pointer: true
                                x-order: 13
                              schemaVersion:
                                description: >-
                                  Specifies the version of the schema used for
                                  the definition.
                                x-order: 14
                                x-oapi-codegen-extra-tags:
                                  yaml: schemaVersion
                                  db: '-'
                                  gorm: '-'
                                default: connections.meshery.io/v1beta1
                                type: string
                                minLength: 2
                                maxLength: 100
                                pattern: >-
                                  ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                example:
                                  - v1
                                  - v1alpha1
                                  - v2beta3
                                  - v1.custom-suffix
                          registrantId:
                            description: ID of the registrant.
                            x-oapi-codegen-extra-tags:
                              yaml: connection_id
                              json: connection_id
                              gorm: column:connection_id
                            x-order: 8
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          categoryId:
                            description: ID of the category.
                            x-oapi-codegen-extra-tags:
                              yaml: '-'
                              json: '-'
                              gorm: categoryID
                            x-order: 8
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          category:
                            x-order: 9
                            x-oapi-codegen-extra-tags:
                              yaml: category
                              json: category
                              gorm: foreignKey:CategoryId;references:Id
                            x-go-type: category.CategoryDefinition
                            x-go-type-import:
                              path: >-
                                github.com/meshery/schemas/models/v1beta1/category
                            $id: https://schemas.meshery.io/category.json
                            $schema: http://json-schema.org/draft-07/schema#
                            type: object
                            description: Category of the model.
                            required:
                              - id
                              - name
                              - metadata
                            properties:
                              id:
                                x-order: 1
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entites in Meshery. The UUID
                                  core defintion is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                default: 00000000-0000-0000-0000-000000000000
                              name:
                                type: string
                                minLength: 1
                                maxLength: 100
                                x-oapi-codegen-extra-tags:
                                  yaml: name
                                  json: name
                                  gorm: name
                                default: Uncategorized
                                description: >-
                                  The category of the model that determines the
                                  main grouping.
                                enum:
                                  - Analytics
                                  - App Definition and Development
                                  - Cloud Native Network
                                  - Cloud Native Storage
                                  - Database
                                  - Machine Learning
                                  - Observability and Analysis
                                  - Orchestration & Management
                                  - Platform
                                  - Provisioning
                                  - Runtime
                                  - Security & Compliance
                                  - Serverless
                                  - Tools
                                  - Uncategorized
                                x-order: 2
                              metadata:
                                type: object
                                x-oapi-codegen-extra-tags:
                                  yaml: metadata,omitempty
                                  json: metadata,omitempty
                                  gorm: type:bytes;serializer:json
                                x-order: 3
                          subCategory:
                            x-order: 10
                            x-go-type: subcategory.SubCategoryDefinition
                            x-go-type-import:
                              path: >-
                                github.com/meshery/schemas/models/v1beta1/subcategory
                            $id: https://schemas.meshery.io/category.json
                            $schema: http://json-schema.org/draft-07/schema#
                            type: string
                            title: SubCategory
                            description: >-
                              Sub category of the model determines the secondary
                              grouping.
                            default: Uncategorized
                            enum:
                              - API Gateway
                              - API Integration
                              - Application Definition & Image Build
                              - Automation & Configuration
                              - Certified Kubernetes - Distribution
                              - Chaos Engineering
                              - Cloud Native Storage
                              - Cloud Provider
                              - CNI
                              - Compute
                              - Container Registry
                              - Container Runtime
                              - Container Security
                              - Container
                              - Content Delivery Network
                              - Continuous Integration & Delivery
                              - Coordination & Service Discovery
                              - Database
                              - Flowchart
                              - Framework
                              - Installable Platform
                              - Key Management
                              - Key Management Service
                              - Kubernetes
                              - Logging
                              - Machine Learning
                              - Management Governance
                              - Metrics
                              - Monitoring
                              - Networking Content Delivery
                              - Operating System
                              - Query
                              - Remote Procedure Call
                              - Scheduling & Orchestration
                              - Secrets Management
                              - Security Identity & Compliance
                              - Service Mesh
                              - Service Proxy
                              - Source Version Control
                              - Storage
                              - Specifications
                              - Streaming & Messaging
                              - Tools
                              - Tracing
                              - Uncategorized
                              - Video Conferencing
                            minLength: 1
                            maxLength: 100
                            x-oapi-codegen-extra-tags:
                              yaml: subCategory
                              json: subCategory
                          metadata:
                            type: object
                            description: >-
                              Metadata containing additional information
                              associated with the model.
                            required:
                              - svgWhite
                              - svgColor
                            properties:
                              capabilities:
                                type: array
                                description: Capabilities associated with the model
                                items:
                                  x-go-type: capability.Capability
                                  x-go-type-import:
                                    path: >-
                                      github.com/meshery/schemas/models/v1alpha1/capability
                                  $id: https://schemas.meshery.io/capability.json
                                  $schema: http://json-schema.org/draft-07/schema#
                                  description: >-
                                    Meshery manages entities in accordance with
                                    their specific capabilities. This field
                                    explicitly identifies those capabilities
                                    largely by what actions a given component
                                    supports; e.g. metric-scrape, sub-interface,
                                    and so on. This field is extensible.
                                    Entities may define a broad array of
                                    capabilities, which are in-turn dynamically
                                    interpretted by Meshery for full lifecycle
                                    management.
                                  additionalProperties: false
                                  type: object
                                  required:
                                    - description
                                    - schemaVersion
                                    - version
                                    - displayName
                                    - kind
                                    - type
                                    - subType
                                    - entityState
                                    - key
                                    - status
                                  x-oapi-codegen-extra-tags:
                                    gorm: type:bytes;serializer:json
                                  properties:
                                    schemaVersion:
                                      description: >-
                                        Specifies the version of the schema to
                                        which the capability definition
                                        conforms.
                                      type: string
                                      minLength: 2
                                      maxLength: 100
                                      pattern: >-
                                        ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                      example:
                                        - v1
                                        - v1alpha1
                                        - v2beta3
                                        - v1.custom-suffix
                                    version:
                                      description: Version of the capability definition.
                                      type: string
                                      minLength: 5
                                      maxLength: 100
                                      pattern: >-
                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      default: v0.0.1
                                    displayName:
                                      description: >-
                                        Name of the capability in human-readible
                                        format.
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description:
                                      type: string
                                      description: >-
                                        A written representation of the purpose
                                        and characteristics of the capability.
                                    kind:
                                      description: >-
                                        Top-level categorization of the
                                        capability
                                      additionalProperties: false
                                      anyOf:
                                        - const: action
                                          description: >-
                                            For capabilities related to executing
                                            actions on entities. Example: initiate
                                            log streaming on a Pod. Example:
                                            initiate deployment of a component.
                                        - const: mutate
                                          description: >-
                                            For capabilities related to mutating an
                                            entity. Example: the ability to change
                                            the configuration of a component.
                                        - const: view
                                          description: >-
                                            For capabilities related to viewing an
                                            entity. Example: the ability to view a
                                            components configuration.
                                        - const: interaction
                                          description: >-
                                            Catch all for capabilities related to
                                            interaction with entities. Example: the
                                            ability for a component to be dragged
                                            and dropped. Example: supports event
                                            bubbling to parent components. 
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    type:
                                      description: >-
                                        Classification of capabilities. Used to
                                        group capabilities similar in nature.
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    subType:
                                      description: >-
                                        Most granular unit of capability
                                        classification. The combination of Kind,
                                        Type and SubType together uniquely
                                        identify a Capability.
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    key:
                                      description: Key that backs the capability.
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    entityState:
                                      description: >-
                                        State of the entity in which the
                                        capability is applicable.
                                      type: array
                                      items:
                                        type: string
                                        enum:
                                          - declaration
                                          - instance
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        description: >-
                                          A string starting with an alphanumeric
                                          character. Spaces and hyphens allowed.
                                    status:
                                      type: string
                                      description: Status of the capability
                                      default: enabled
                                      enum:
                                        - enabled
                                        - disabled
                                    metadata:
                                      type: object
                                      description: >-
                                        Metadata contains additional information
                                        associated with the capability.
                                        Extension point.
                                      additionalProperties: true
                                  default:
                                    - description: >-
                                        Configure the visual styles for the
                                        component
                                      displayName: Styling
                                      entityState:
                                        - declaration
                                      key: ''
                                      kind: mutate
                                      schemaVersion: capability.meshery.io/v1alpha1
                                      status: enabled
                                      subType: ''
                                      type: style
                                      version: 0.7.0
                                    - description: Change the shape of the component
                                      displayName: Change Shape
                                      entityState:
                                        - declaration
                                      key: ''
                                      kind: mutate
                                      schemaVersion: capability.meshery.io/v1alpha1
                                      status: enabled
                                      subType: shape
                                      type: style
                                      version: 0.7.0
                                    - description: >-
                                        Drag and Drop a component into a parent
                                        component in graph view
                                      displayName: Compound Drag And Drop
                                      entityState:
                                        - declaration
                                      key: ''
                                      kind: interaction
                                      schemaVersion: capability.meshery.io/v1alpha1
                                      status: enabled
                                      subType: compoundDnd
                                      type: graph
                                      version: 0.7.0
                                    - description: Add text to nodes body
                                      displayName: Body Text
                                      entityState:
                                        - declaration
                                      key: ''
                                      kind: mutate
                                      schemaVersion: capability.meshery.io/v1alpha1
                                      status: enabled
                                      subType: body-text
                                      type: style
                                      version: 0.7.0
                                x-order: 1
                              isAnnotation:
                                type: boolean
                                description: >-
                                  Indicates whether the model and its entities
                                  should be treated as deployable entities or as
                                  logical representations.
                                x-oapi-codegen-extra-tags:
                                  yaml: isAnnotation
                                  json: isAnnotation
                                x-order: 2
                                default: false
                              primaryColor:
                                type: string
                                description: Primary color associated with the model.
                                minLength: 1
                                maxLength: 50
                                default: '#00b39f'
                                x-oapi-codegen-extra-tags:
                                  yaml: primaryColor
                                  json: primaryColor
                                x-order: 3
                              secondaryColor:
                                type: string
                                description: Secondary color associated with the model.
                                minLength: 1
                                maxLength: 50
                                default: '#00D3A9'
                                x-oapi-codegen-extra-tags:
                                  yaml: secondaryColor
                                  json: secondaryColor
                                x-order: 4
                              svgWhite:
                                type: string
                                description: >-
                                  SVG representation of the model in white
                                  color.
                                minLength: 1
                                x-oapi-codegen-extra-tags:
                                  yaml: svgWhite
                                  json: svgWhite
                                x-order: 5
                                default: >-
                                  <svg width="32" height="32" viewBox="0 0 32
                                  32" fill="none"
                                  xmlns="http://www.w3.org/2000/svg"><path
                                  d="M16.405
                                  8.732v6.57l5.694-3.297-5.694-3.273Zm0
                                  7.942v6.602l5.747-3.285-5.747-3.317Z"
                                  fill="#fff"/><path d="M15.586
                                  15.256v-6.47l-5.622 3.225 5.622 3.245ZM4.307
                                  23.252a13.809 13.809 0 0 0 4.362
                                  4.39v-6.914l-4.362
                                  2.524Zm11.279-.008v-6.52L9.95 19.985l5.636
                                  3.258Z" fill="#fff" fill-opacity=".8"/><path
                                  d="m9.49 27.23 5.707-3.263-5.707-3.3v6.563Z"
                                  fill="#fff"/><path d="M22.54
                                  27.265v-6.553l-5.699 3.259 5.7
                                  3.294Zm5.58-4.773a13.697 13.697 0 0 0
                                  1.612-5.895l-5.934 3.397 4.323 2.498Z"
                                  fill="#fff" fill-opacity=".8"/><path
                                  d="m23.362 19.298
                                  5.728-3.276-5.728-3.291v6.567Z"
                                  fill="#fff"/><path d="M22.541
                                  11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                                  7.955v-6.574l-5.685 3.292 5.685 3.281Z"
                                  fill="#fff" fill-opacity=".8"/><path d="M9.49
                                  12.684v6.622l5.728-3.316-5.728-3.306Z"
                                  fill="#fff"/><path d="M15.586 2.25a13.69 13.69
                                  0 0 0-6.037 1.595l6.037 3.463V2.25Z"
                                  fill="#fff" fill-opacity=".8"/><path d="M9.49
                                  4.756v6.583l5.732-3.288L9.49 4.756Z"
                                  fill="#fff"/><path d="M8.669 4.356a13.83 13.83
                                  0 0 0-4.362 4.39l4.362 2.518V4.356Z"
                                  fill="#fff" fill-opacity=".8"/><path
                                  d="M22.504 3.88a13.695 13.695 0 0
                                  0-6.099-1.63v5.123l6.1-3.493ZM2.25 16.483c.071
                                  2.12.634 4.196 1.644
                                  6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68
                                  13.68 0 0 0-1.644
                                  6.036l6.068-3.482-4.424-2.554Z"
                                  fill="#fff"/><path d="M9.539 28.147a13.673
                                  13.673 0 0 0 6.047 1.603v-5.062L9.54 28.147Z"
                                  fill="#fff" fill-opacity=".8"/><path
                                  d="M27.697 8.768a13.83 13.83 0 0
                                  0-4.335-4.383v6.889l4.335-2.506ZM23.362
                                  27.62a13.851 13.851 0 0 0
                                  4.351-4.417l-4.351-2.514v6.93Z"
                                  fill="#fff"/><path d="M29.75 15.452a13.659
                                  13.659 0 0 0-1.63-5.979l-4.381 2.53 6.011
                                  3.45Z" fill="#fff" fill-opacity=".8"/><path
                                  d="M16.405 29.75a13.673 13.673 0 0 0
                                  6.036-1.595l-6.036-3.498v5.093Z"
                                  fill="#fff"/><path d="M8.669
                                  19.247v-6.494L3.03 15.986l5.639 3.261Z"
                                  fill="#fff" fill-opacity=".8"/></svg>
                              svgColor:
                                type: string
                                description: >-
                                  SVG representation of the model in colored
                                  format.
                                minLength: 1
                                x-oapi-codegen-extra-tags:
                                  yaml: svgColor
                                  json: svgColor
                                x-order: 6
                                default: >-
                                  <svg xmlns="http://www.w3.org/2000/svg"
                                  id="Layer_1" data-name="Layer 1" viewBox="0 0
                                  134.95
                                  135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                                  points="69.49 31.82 69.49 64.07 97.44 47.89
                                  69.49 31.82" class="cls-1"/><polygon
                                  points="69.49 70.81 69.49 103.22 97.7 87.09
                                  69.49 70.81" class="cls-1"/><polygon
                                  points="65.47 63.85 65.47 32.09 37.87 47.92
                                  65.47 63.85" class="cls-2"/><path
                                  d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                                  class="cls-2"/><polygon points="65.47 103.06
                                  65.47 71.05 37.8 87.07 65.47 103.06"
                                  class="cls-2"/><polygon points="35.54 122.63
                                  63.56 106.61 35.54 90.41 35.54 122.63"
                                  class="cls-1"/><polygon points="99.61 122.8
                                  99.61 90.63 71.63 106.63 99.61 122.8"
                                  class="cls-2"/><path
                                  d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                                  class="cls-2"/><polygon points="103.64 83.69
                                  131.76 67.61 103.64 51.45 103.64 83.69"
                                  class="cls-1"/><polygon points="99.61 44.5
                                  99.61 12.52 71.76 28.49 99.61 44.5"
                                  class="cls-2"/><polygon points="99.61 83.55
                                  99.61 51.28 71.7 67.44 99.61 83.55"
                                  class="cls-2"/><polygon points="67.48 135.02
                                  67.49 135.02 67.48 135.02 67.48 135.02"
                                  class="cls-2"/><polygon points="35.54 51.22
                                  35.54 83.73 63.66 67.45 35.54 51.22"
                                  class="cls-1"/><path
                                  d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                                  class="cls-2"/><polygon points="35.54 12.3
                                  35.54 44.62 63.68 28.48 35.54 12.3"
                                  class="cls-1"/><path
                                  d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                                  class="cls-2"/><path
                                  d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                                  class="cls-1"/><path
                                  d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                                  class="cls-1"/><path
                                  d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                                  class="cls-1"/><path
                                  d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                                  class="cls-2"/><path
                                  d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                                  class="cls-1"/><path
                                  d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                                  class="cls-1"/><path
                                  d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                                  class="cls-2"/><path
                                  d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                                  class="cls-1"/><polygon points="31.51 83.44
                                  31.51 51.56 3.83 67.43 31.51 83.44"
                                  class="cls-2"/></svg>
                              svgComplete:
                                type: string
                                description: SVG representation of the complete model.
                                minLength: 1
                                x-oapi-codegen-extra-tags:
                                  yaml: svgComplete
                                  json: svgComplete
                                x-order: 7
                              shape:
                                x-order: 8
                                type: string
                                description: >-
                                  The shape of the node’s body. Note that each
                                  shape fits within the specified width and
                                  height, and so you may have to adjust width
                                  and height if you desire an equilateral shape
                                  (i.e. width !== height for several equilateral
                                  shapes)
                                default: circle
                                enum:
                                  - circle
                                  - ellipse
                                  - triangle
                                  - round-triangle
                                  - rectangle
                                  - round-rectangle
                                  - bottom-round-rectangle
                                  - cut-rectangle
                                  - barrel
                                  - rhomboid
                                  - diamond
                                  - round-diamond
                                  - pentagon
                                  - round-pentagon
                                  - hexagon
                                  - round-hexagon
                                  - concave-hexagon
                                  - heptagon
                                  - round-heptagon
                                  - octagon
                                  - round-octagon
                                  - star
                                  - tag
                                  - round-tag
                                  - vee
                                  - polygon
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                              json: metadata
                              yaml: metadata
                            x-order: 11
                            additionalProperties: true
                          model:
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                            x-order: 12
                            type: object
                            description: >-
                              Registrant-defined data associated with the model.
                              Properties pertain to the software being managed
                              (e.g. Kubernetes v1.31).
                            required:
                              - version
                            properties:
                              version:
                                description: >-
                                  Version of the model as defined by the
                                  registrant.
                                allOf:
                                  - type: string
                                    minLength: 5
                                    maxLength: 100
                                    pattern: >-
                                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                    description: >-
                                      A valid semantic version string between 5
                                      and 256 characters. The pattern allows for
                                      a major.minor.patch version followed by an
                                      optional pre-release tag like '-alpha' or
                                      '-beta.2' and an optional build metadata
                                      tag like '+build.1.
                                    default: v0.0.1
                                x-oapi-codegen-extra-tags:
                                  yaml: version
                                  json: version
                                x-order: 1
                          relationships:
                            type: array
                            x-go-type: interface{}
                            x-oapi-codegen-extra-tags:
                              gorm: '-'
                              json: relationships
                              yaml: relationships
                          components:
                            type: array
                            x-go-type: interface{}
                            x-oapi-codegen-extra-tags:
                              gorm: '-'
                              json: components
                              yaml: components
                          componentsCount:
                            type: integer
                            description: Number of components associated with the model.
                            x-order: 13
                            x-oapi-codegen-extra-tags:
                              json: components_count
                              yaml: components_count
                              gorm: '-'
                            default: 0
                          relationshipsCount:
                            type: integer
                            description: Number of relationships associated with the model.
                            x-order: 13
                            x-oapi-codegen-extra-tags:
                              gorm: '-'
                              json: relationships_count
                              yaml: relationships_count
                            default: 0
                        required:
                          - id
                          - schemaVersion
                          - displayName
                          - status
                          - subCategory
                          - model
                          - name
                          - description
                          - version
                          - registrant
                          - category
                          - categoryId
                          - registrantId
                          - relationshipsCount
                          - componentsCount
                          - components
                          - relationships
                      modelId:
                        description: >-
                          ModelId is the foreign key to the model to which the
                          component belongs.
                        x-oapi-codegen-extra-tags:
                          gorm: >-
                            index:idx_component_definition_dbs_model_id,column:model_id
                          yaml: '-'
                          json: '-'
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      styles:
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                          yaml: styles
                          json: styles
                        x-go-type: core.ComponentStyles
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1alpha1/core
                        x-order: 8
                        type: object
                        description: Visualization styles for a component
                        required:
                          - shape
                          - primaryColor
                          - svgColor
                          - svgWhite
                          - svgComplete
                        allOf:
                          - type: object
                            description: Common styles for all entities
                            additionalProperties: true
                            required:
                              - primaryColor
                              - svgColor
                              - svgWhite
                              - svgComplete
                            properties:
                              primaryColor:
                                type: string
                                description: >-
                                  Primary color of the component used for UI
                                  representation.
                              secondaryColor:
                                type: string
                                description: >-
                                  Secondary color of the entity used for UI
                                  representation.
                              svgWhite:
                                type: string
                                description: >-
                                  White SVG of the entity used for UI
                                  representation on dark background.
                              svgColor:
                                type: string
                                description: >-
                                  Colored SVG of the entity used for UI
                                  representation on light background.
                              svgComplete:
                                type: string
                                description: >-
                                  Complete SVG of the entity used for UI
                                  representation, often inclusive of background.
                              color:
                                type: string
                                description: >-
                                  The color of the element's label. Colours may
                                  be specified by name (e.g. red), hex (e.g.
                              text-opacity:
                                type: number
                                description: >-
                                  The opacity of the label text, including its
                                  outline.
                                minimum: 0
                                maximum: 1
                              font-family:
                                type: string
                                description: >-
                                  A comma-separated list of font names to use on
                                  the label text.
                              font-size:
                                type: string
                                description: The size of the label text.
                              font-style:
                                type: string
                                description: >-
                                  A CSS font style to be applied to the label
                                  text.
                              font-weight:
                                type: string
                                description: >-
                                  A CSS font weight to be applied to the label
                                  text.
                              text-transform:
                                type: string
                                description: A transformation to apply to the label text
                                enum:
                                  - none
                                  - uppercase
                                  - lowercase
                              opacity:
                                type: number
                                description: >-
                                  The opacity of the element, ranging from 0 to
                                  1. Note that the opacity of a compound node
                                  parent affects the effective opacity of its
                                  children.
                                minimum: 0
                                maximum: 1
                              z-index:
                                type: integer
                                description: >-
                                  An integer value that affects the relative
                                  draw order of elements. In general, an element
                                  with a higher z-index will be drawn on top of
                                  an element with a lower z-index. Note that
                                  edges are under nodes despite z-index.
                              label:
                                type: string
                                description: >-
                                  The text to display for an element's label.
                                  Can give a path, e.g. data(id) will label with
                                  the elements id
                              animation:
                                type: object
                                description: >-
                                  The animation to apply to the element. example
                                  ripple,bounce,etc
                          - type: object
                            properties:
                              shape:
                                type: string
                                description: >-
                                  The shape of the node's body. Note that each
                                  shape fits within the specified width and
                                  height, and so you may have to adjust width
                                  and height if you desire an equilateral shape
                                  (i.e. width !== height for several equilateral
                                  shapes)
                                enum:
                                  - ellipse
                                  - triangle
                                  - round-triangle
                                  - rectangle
                                  - round-rectangle
                                  - bottom-round-rectangle
                                  - cut-rectangle
                                  - barrel
                                  - rhomboid
                                  - diamond
                                  - round-diamond
                                  - pentagon
                                  - round-pentagon
                                  - hexagon
                                  - round-hexagon
                                  - concave-hexagon
                                  - heptagon
                                  - round-heptagon
                                  - octagon
                                  - round-octagon
                                  - star
                                  - tag
                                  - round-tag
                                  - vee
                                  - polygon
                              position:
                                type: object
                                additionalProperties: false
                                required:
                                  - x
                                  - 'y'
                                description: >-
                                  The position of the node. If the position is
                                  set, the node is drawn at that position in the
                                  given dimensions. If the position is not set,
                                  the node is drawn at a random position.
                                properties:
                                  x:
                                    type: number
                                    description: The x-coordinate of the node.
                                    x-go-type: float64
                                  'y':
                                    type: number
                                    description: The y-coordinate of the node.
                                    x-go-type: float64
                              body-text:
                                type: string
                                description: >-
                                  The text to display for an element's body. Can
                                  give a path, e.g. data(id) will label with the
                                  elements id
                              body-text-wrap:
                                type: string
                                description: >-
                                  How to wrap the text in the node. Can be
                                  'none', 'wrap', or 'ellipsis'.
                              body-text-max-width:
                                type: string
                                description: >-
                                  The maximum width for wrapping text in the
                                  node.
                              body-text-opacity:
                                type: number
                                description: >-
                                  The opacity of the node's body text, including
                                  its outline.
                                minimum: 0
                                maximum: 1
                              body-text-background-color:
                                type: string
                                description: >-
                                  The colour of the node's body text background.
                                  Colours may be specified by name (e.g. red),
                                  hex (e.g.
                              body-text-font-size:
                                type: number
                                description: The size of the node's body text.
                              body-text-color:
                                type: string
                                description: >-
                                  The colour of the node's body text. Colours
                                  may be specified by name (e.g. red), hex (e.g.
                              body-text-font-weight:
                                type: string
                                description: >-
                                  A CSS font weight to be applied to the node's
                                  body text.
                              body-text-horizontal-align:
                                type: string
                                description: >-
                                  A CSS horizontal alignment to be applied to
                                  the node's body text.
                              body-text-decoration:
                                type: string
                                description: >-
                                  A CSS text decoration to be applied to the
                                  node's body text.
                              body-text-vertical-align:
                                type: string
                                description: >-
                                  A CSS vertical alignment to be applied to the
                                  node's body text.
                              width:
                                type: number
                                description: >-
                                  The width of the node's body or the width of
                                  an edge's line.
                              height:
                                type: number
                                description: The height of the node's body
                              background-image:
                                type: string
                                description: >-
                                  The URL that points to the image to show in
                                  the node.
                              background-color:
                                type: string
                                description: >-
                                  The colour of the node's body. Colours may be
                                  specified by name (e.g. red), hex (e.g.
                              background-blacken:
                                type: number
                                description: >-
                                  Blackens the node's body for values from 0 to
                                  1; whitens the node's body for values from 0
                                  to -1.
                                maximum: 1
                                minimum: -1
                              background-opacity:
                                type: number
                                description: >-
                                  The opacity level of the node's background
                                  colour
                                maximum: 1
                                minimum: 0
                              background-position-x:
                                type: string
                                description: >-
                                  The x position of the background image,
                                  measured in percent (e.g. 50%) or pixels (e.g.
                                  10px)
                              background-position-y:
                                type: string
                                description: >-
                                  The y position of the background image,
                                  measured in percent (e.g. 50%) or pixels (e.g.
                                  10px)
                              background-offset-x:
                                type: string
                                description: >-
                                  The x offset of the background image, measured
                                  in percent (e.g. 50%) or pixels (e.g. 10px)
                              background-offset-y:
                                type: string
                                description: >-
                                  The y offset of the background image, measured
                                  in percent (e.g. 50%) or pixels (e.g. 10px)
                              background-fit:
                                type: string
                                description: >-
                                  How the background image is fit to the node.
                                  Can be 'none', 'contain', or 'cover'.
                              background-clip:
                                type: string
                                description: >-
                                  How the background image is clipped to the
                                  node. Can be 'none', 'node', or 'node-border'.
                              background-width-relative-to:
                                type: string
                                description: >-
                                  How the background image's width is
                                  determined. Can be 'none', 'inner', or
                                  'outer'.
                              background-height-relative-to:
                                type: string
                                description: >-
                                  How the background image's height is
                                  determined. Can be 'none', 'inner', or
                                  'outer'.
                              border-width:
                                type: number
                                description: The size of the node's border.
                                minimum: 0
                              border-style:
                                type: string
                                description: The style of the node's border
                                enum:
                                  - solid
                                  - dotted
                                  - dashed
                                  - double
                              border-color:
                                type: string
                                description: >-
                                  The colour of the node's border. Colours may
                                  be specified by name (e.g. red), hex (e.g.
                              border-opacity:
                                type: number
                                description: The opacity of the node's border
                                minimum: 0
                                maximum: 1
                              padding:
                                type: number
                                description: >-
                                  The amount of padding around all sides of the
                                  node.
                                minimum: 0
                              text-halign:
                                type: string
                                description: The horizontal alignment of a node's label
                                enum:
                                  - left
                                  - center
                                  - right
                              text-valign:
                                type: string
                                description: The vertical alignment of a node's label
                                enum:
                                  - top
                                  - center
                                  - bottom
                              ghost:
                                type: string
                                description: >-
                                  Whether to use the ghost effect, a
                                  semitransparent duplicate of the element drawn
                                  at an offset.
                                default: 'no'
                                enum:
                                  - 'yes'
                                  - 'no'
                              active-bg-color:
                                type: string
                                description: >-
                                  The colour of the indicator shown when the
                                  background is grabbed by the user. Selector
                                  needs to be *core*. Colours may be specified
                                  by name (e.g. red), hex (e.g.
                              active-bg-opacity:
                                type: string
                                description: >-
                                  The opacity of the active background
                                  indicator. Selector needs to be *core*.
                              active-bg-size:
                                type: string
                                description: >-
                                  The opacity of the active background
                                  indicator. Selector needs to be *core*.
                              selection-box-color:
                                type: string
                                description: >-
                                  The background colour of the selection box
                                  used for drag selection. Selector needs to be
                                  *core*. Colours may be specified by name (e.g.
                                  red), hex (e.g.
                              selection-box-border-width:
                                type: number
                                description: >-
                                  The size of the border on the selection box.
                                  Selector needs to be *core*
                              selection-box-opacity:
                                type: number
                                description: >-
                                  The opacity of the selection box. Selector
                                  needs to be *core*
                                minimum: 0
                                maximum: 1
                              outside-texture-bg-color:
                                type: string
                                description: >-
                                  The colour of the area outside the viewport
                                  texture when initOptions.textureOnViewport ===
                                  true. Selector needs to be *core*. Colours may
                                  be specified by name (e.g. red), hex (e.g.
                              outside-texture-bg-opacity:
                                type: number
                                description: >-
                                  The opacity of the area outside the viewport
                                  texture. Selector needs to be *core*
                                minimum: 0
                                maximum: 1
                              shape-polygon-points:
                                type: string
                                description: >-
                                  An array (or a space-separated string) of
                                  numbers ranging on [-1, 1], representing
                                  alternating x and y values (i.e. x1 y1 x2 y2,
                                  x3 y3 ...). This represents the points in the
                                  polygon for the node's shape. The bounding box
                                  of the node is given by (-1, -1), (1, -1), (1,
                                  1), (-1, 1). The node's position is the origin
                                  (0, 0 )
                              menu-background-color:
                                type: string
                                description: >-
                                  The colour of the background of the component
                                  menu. Colours may be specified by name (e.g.
                                  red), hex (e.g.
                              menu-background-opacity:
                                type: number
                                description: >-
                                  The opacity of the background of the component
                                  menu.
                                minimum: 0
                                maximum: 1
                              menu-forground-color:
                                type: string
                                description: >-
                                  The colour of the text or icons in the
                                  component menu. Colours may be specified by
                                  name (e.g. red), hex (e.g.
                      capabilities:
                        x-order: 9
                        type: array
                        description: >-
                          Meshery manages components in accordance with their
                          specific capabilities. This field explicitly
                          identifies those capabilities largely by what actions
                          a given component supports; e.g. metric-scrape,
                          sub-interface, and so on. This field is extensible.
                          ComponentDefinitions may define a broad array of
                          capabilities, which are in-turn dynamically
                          interpretted by Meshery for full lifecycle management.
                        items:
                          x-go-type: capability.Capability
                          x-go-type-import:
                            path: >-
                              github.com/meshery/schemas/models/v1alpha1/capability
                          $id: https://schemas.meshery.io/capability.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: >-
                            Meshery manages entities in accordance with their
                            specific capabilities. This field explicitly
                            identifies those capabilities largely by what
                            actions a given component supports; e.g.
                            metric-scrape, sub-interface, and so on. This field
                            is extensible. Entities may define a broad array of
                            capabilities, which are in-turn dynamically
                            interpretted by Meshery for full lifecycle
                            management.
                          additionalProperties: false
                          type: object
                          required:
                            - description
                            - schemaVersion
                            - version
                            - displayName
                            - kind
                            - type
                            - subType
                            - entityState
                            - key
                            - status
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                          properties:
                            schemaVersion:
                              description: >-
                                Specifies the version of the schema to which the
                                capability definition conforms.
                              type: string
                              minLength: 2
                              maxLength: 100
                              pattern: >-
                                ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                              example:
                                - v1
                                - v1alpha1
                                - v2beta3
                                - v1.custom-suffix
                            version:
                              description: Version of the capability definition.
                              type: string
                              minLength: 5
                              maxLength: 100
                              pattern: >-
                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              default: v0.0.1
                            displayName:
                              description: Name of the capability in human-readible format.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description:
                              type: string
                              description: >-
                                A written representation of the purpose and
                                characteristics of the capability.
                            kind:
                              description: Top-level categorization of the capability
                              additionalProperties: false
                              anyOf:
                                - const: action
                                  description: >-
                                    For capabilities related to executing
                                    actions on entities. Example: initiate log
                                    streaming on a Pod. Example: initiate
                                    deployment of a component.
                                - const: mutate
                                  description: >-
                                    For capabilities related to mutating an
                                    entity. Example: the ability to change the
                                    configuration of a component.
                                - const: view
                                  description: >-
                                    For capabilities related to viewing an
                                    entity. Example: the ability to view a
                                    components configuration.
                                - const: interaction
                                  description: >-
                                    Catch all for capabilities related to
                                    interaction with entities. Example: the
                                    ability for a component to be dragged and
                                    dropped. Example: supports event bubbling to
                                    parent components. 
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            type:
                              description: >-
                                Classification of capabilities. Used to group
                                capabilities similar in nature.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            subType:
                              description: >-
                                Most granular unit of capability classification.
                                The combination of Kind, Type and SubType
                                together uniquely identify a Capability.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            key:
                              description: Key that backs the capability.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            entityState:
                              description: >-
                                State of the entity in which the capability is
                                applicable.
                              type: array
                              items:
                                type: string
                                enum:
                                  - declaration
                                  - instance
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                description: >-
                                  A string starting with an alphanumeric
                                  character. Spaces and hyphens allowed.
                            status:
                              type: string
                              description: Status of the capability
                              default: enabled
                              enum:
                                - enabled
                                - disabled
                            metadata:
                              type: object
                              description: >-
                                Metadata contains additional information
                                associated with the capability. Extension point.
                              additionalProperties: true
                          default:
                            - description: Configure the visual styles for the component
                              displayName: Styling
                              entityState:
                                - declaration
                              key: ''
                              kind: mutate
                              schemaVersion: capability.meshery.io/v1alpha1
                              status: enabled
                              subType: ''
                              type: style
                              version: 0.7.0
                            - description: Change the shape of the component
                              displayName: Change Shape
                              entityState:
                                - declaration
                              key: ''
                              kind: mutate
                              schemaVersion: capability.meshery.io/v1alpha1
                              status: enabled
                              subType: shape
                              type: style
                              version: 0.7.0
                            - description: >-
                                Drag and Drop a component into a parent
                                component in graph view
                              displayName: Compound Drag And Drop
                              entityState:
                                - declaration
                              key: ''
                              kind: interaction
                              schemaVersion: capability.meshery.io/v1alpha1
                              status: enabled
                              subType: compoundDnd
                              type: graph
                              version: 0.7.0
                            - description: Add text to nodes body
                              displayName: Body Text
                              entityState:
                                - declaration
                              key: ''
                              kind: mutate
                              schemaVersion: capability.meshery.io/v1alpha1
                              status: enabled
                              subType: body-text
                              type: style
                              version: 0.7.0
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                          yaml: capabilities
                          json: capabilities
                        default:
                          - schemaVersion: capability.meshery.io/v1alpha1
                            version: 0.7.0
                            displayName: Performance Test
                            description: >-
                              Initiate a performance test. Meshery will execute
                              the load generation, collect metrics, and present
                              the results.
                            kind: action
                            type: operator
                            subType: perf-test
                            key: ''
                            entityState:
                              - instance
                            status: enabled
                            metadata: null
                          - schemaVersion: capability.meshery.io/v1alpha1
                            version: 0.7.0
                            displayName: Workload Configuration
                            description: >-
                              Configure the workload specific setting of a
                              component
                            kind: mutate
                            type: configuration
                            subType: config
                            key: ''
                            entityState:
                              - declaration
                            status: enabled
                            metadata: null
                          - schemaVersion: capability.meshery.io/v1alpha1
                            version: 0.7.0
                            displayName: Labels and Annotations Configuration
                            description: >-
                              Configure Labels And Annotations for  the
                              component 
                            kind: mutate
                            type: configuration
                            subType: labels-and-annotations
                            key: ''
                            entityState:
                              - declaration
                            status: enabled
                            metadata: null
                          - schemaVersion: capability.meshery.io/v1alpha1
                            version: 0.7.0
                            displayName: Relationships
                            description: View relationships for the component
                            kind: view
                            type: configuration
                            subType: relationship
                            key: ''
                            entityState:
                              - declaration
                              - instance
                            status: enabled
                            metadata: null
                          - schemaVersion: capability.meshery.io/v1alpha1
                            version: 0.7.0
                            displayName: Json Schema
                            description: 'View Component Definition '
                            kind: view
                            type: configuration
                            subType: definition
                            key: ''
                            entityState:
                              - declaration
                              - instance
                            status: enabled
                            metadata: null
                          - schemaVersion: capability.meshery.io/v1alpha1
                            version: 0.7.0
                            displayName: Styling
                            description: Configure the visual styles for the component
                            kind: mutate
                            type: style
                            subType: ''
                            key: ''
                            entityState:
                              - declaration
                            status: enabled
                            metadata: null
                          - schemaVersion: capability.meshery.io/v1alpha1
                            version: 0.7.0
                            displayName: Change Shape
                            description: Change the shape of the component
                            kind: mutate
                            type: style
                            subType: shape
                            key: ''
                            entityState:
                              - declaration
                            status: enabled
                            metadata: null
                          - schemaVersion: capability.meshery.io/v1alpha1
                            version: 0.7.0
                            displayName: Compound Drag And Drop
                            description: >-
                              Drag and Drop a component into a parent component
                              in graph view
                            kind: interaction
                            type: graph
                            subType: compoundDnd
                            key: ''
                            entityState:
                              - declaration
                            status: enabled
                            metadata: null
                      status:
                        x-order: 10
                        type: string
                        description: >-
                          Status of component, including:

                          - duplicate: this component is a duplicate of another.
                          The component that is to be the canonical reference
                          and that is duplicated by other components should not
                          be assigned the 'duplicate' status.

                          - maintenance: model is unavailable for a period of
                          time.

                          - enabled: model is available for use for all users of
                          this Meshery Server.

                          - ignored: model is unavailable for use for all users
                          of this Meshery Server.
                        default: enabled
                        enum:
                          - ignored
                          - enabled
                          - duplicate
                          - resolved
                          - open
                        x-oapi-codegen-extra-tags:
                          yaml: status
                          json: status
                      metadata:
                        x-order: 11
                        type: object
                        description: >-
                          Metadata contains additional information associated
                          with the component.
                        required:
                          - genealogy
                          - isAnnotation
                          - isNamespaced
                          - published
                          - instanceDetails
                          - configurationUISchema
                        properties:
                          genealogy:
                            x-order: 1
                            type: string
                            description: >-
                              Genealogy represents the various representational
                              states of the component.
                          isAnnotation:
                            x-order: 2
                            type: boolean
                            description: >-
                              Identifies whether the component is semantically
                              meaningful or not; identifies whether the
                              component should be treated as deployable entity
                              or is for purposes of logical representation.
                            default: false
                          isNamespaced:
                            x-order: 3
                            type: boolean
                            description: >-
                              Identifies whether the component is scoped to
                              namespace or clsuter wide.
                          published:
                            x-order: 4
                            type: boolean
                            description: >-
                              'published' controls whether the component should
                              be registered in Meshery Registry. When the same
                              'published' property in Models, is set to 'false',
                              the Model property takes precedence with all
                              Entities in the Model not being registered.
                          instanceDetails:
                            x-order: 5
                            type: object
                            description: >-
                              InstanceDetails contains information about the
                              instance of the component.
                          configurationUISchema:
                            x-order: 6
                            type: string
                            description: >-
                              Defines the UI schema for rendering the
                              component's configuration. For more details,
                              visit:
                              https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                              .
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        additionalProperties: true
                      configuration:
                        x-order: 12
                        description: >-
                          The configuration of the component. The configuration
                          is based on the schema defined within the component
                          definition(component.schema).
                        type: object
                        $comment: >-
                          The configuration of the component. The configuration
                          is based on the schema defined within the component
                          definition(component.schema).
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                      component:
                        x-order: 13
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        x-go-type: Component
                        description: >-
                          data related to the third party capability that
                          Component Defintion wraps , this is herematicaly
                          sealed an
                        type: object
                        properties:
                          version:
                            type: string
                            description: >-
                              Version of the component produced by the
                              registrant. Example: APIVersion of a Kubernetes
                              Pod.
                            x-order: 1
                          kind:
                            type: string
                            description: >-
                              The unique identifier (name) assigned by the
                              registrant to this component. Example: A
                              Kubernetes Pod is of kind 'Pod'.
                            x-order: 2
                          schema:
                            type: string
                            description: >-
                              JSON schema of the object as defined by the
                              registrant.
                            x-order: 3
                        required:
                          - version
                          - kind
                          - schema
                    required:
                      - id
                      - displayName
                      - description
                      - schemaVersion
                      - format
                      - version
                      - configuration
                      - metadata
                      - modelId
                      - model
                      - component
                preferences:
                  type: object
                  description: Design-level preferences
                  x-order: 7
                  properties:
                    layers:
                      type: object
                      description: List of available layers
                  required:
                    - layers
                relationships:
                  description: List of relationships between components
                  type: array
                  x-order: 8
                  items:
                    x-go-type: '*relationship.RelationshipDefinition'
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1alpha3/relationship
                    $id: https://schemas.meshery.io/relationship.json
                    $schema: http://json-schema.org/draft-07/schema#
                    description: >-
                      Relationships define the nature of interaction between
                      interconnected components in Meshery. The combination of
                      relationship properties kind, type, and subtype
                      characterize various genealogical relations among and
                      between components. Relationships have selectors, selector
                      sets, metadata, and optional parameters. Learn more at
                      https://docs.meshery.io/concepts/logical/relationships.
                    required:
                      - schemaVersion
                      - version
                      - model
                      - kind
                      - type
                      - subType
                    additionalProperties: false
                    type: object
                    properties:
                      id:
                        description: >-
                          Uniquely identifies the entity (i.e. component) as
                          defined in a declaration (i.e. design).
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema used for the
                          relationship definition.
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          json: schemaVersion
                        default: relationships.meshery.io/v1alpha3
                      version:
                        type: string
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        description: >-
                          A valid semantic version string between 5 and 256
                          characters. The pattern allows for a major.minor.patch
                          version followed by an optional pre-release tag like
                          '-alpha' or '-beta.2' and an optional build metadata
                          tag like '+build.1.
                        default: v0.0.1
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                      model:
                        description: >-
                          Name of the model in which this relationship is
                          packaged.
                        $id: https://schemas.meshery.io/model.json
                        $schema: http://json-schema.org/draft-07/schema#
                        additionalProperties: false
                        type: object
                        properties:
                          id:
                            description: >-
                              Uniquely identifies the entity (i.e. component) as
                              defined in a declaration (i.e. design).
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                          schemaVersion:
                            description: >-
                              Specifies the version of the schema used for the
                              definition.
                            x-oapi-codegen-extra-tags:
                              yaml: schemaVersion
                              json: schemaVersion
                            type: string
                            minLength: 2
                            maxLength: 100
                            pattern: >-
                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                            example:
                              - v1
                              - v1alpha1
                              - v2beta3
                              - v1.custom-suffix
                          version:
                            description: Version of the model definition.
                            type: string
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            minLength: 5
                            maxLength: 100
                            pattern: >-
                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          name:
                            description: >-
                              The unique name for the model within the scope of
                              a registrant.
                            type: string
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            x-oapi-codegen-extra-tags:
                              yaml: name
                              json: name
                          displayName:
                            description: Human-readable name for the model.
                            minLength: 1
                            maxLength: 100
                            type: string
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                            x-oapi-codegen-extra-tags:
                              yaml: displayName
                              json: displayName
                          description:
                            type: string
                            description: Description of the model.
                            minLength: 1
                            maxLength: 1000
                            x-oapi-codegen-extra-tags:
                              yaml: description
                              json: description
                          status:
                            type: string
                            description: >-
                              Status of model, including:

                              - duplicate: this component is a duplicate of
                              another. The component that is to be the canonical
                              reference and that is duplicated by other
                              components should not be assigned the 'duplicate'
                              status.

                              - maintenance: model is unavailable for a period
                              of time.

                              - enabled: model is available for use for all
                              users of this Meshery Server.

                              - ignored: model is unavailable for use for all
                              users of this Meshery Server.
                            enum:
                              - ignored
                              - enabled
                              - duplicate
                            x-oapi-codegen-extra-tags:
                              yaml: status
                              json: status
                          registrant:
                            x-oapi-codegen-extra-tags:
                              yaml: registrant
                              json: registrant
                              gorm: foreignKey:RegistrantId;references:Id
                            $id: https://schemas.meshery.io/component.json
                            $schema: http://json-schema.org/draft-07/schema#
                            description: >-
                              Meshery Connections are managed and unmanaged
                              resources that either through discovery or manual
                              entry are tracked by Meshery. Learn more at
                              https://docs.meshery.io/concepts/logical/connections
                            additionalProperties: false
                            type: object
                            required:
                              - kind
                              - type
                              - status
                            properties:
                              id:
                                description: ID
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                x-oapi-codegen-extra-tags:
                                  yaml: id
                                  json: id
                              name:
                                x-oapi-codegen-extra-tags:
                                  db: name
                                  yaml: name
                                  json: name
                                type: string
                                description: Connection Name
                              credential_id:
                                x-go-name: CredentialId
                                x-oapi-codegen-extra-tags:
                                  db: credential_id
                                  yaml: credential_id
                                  json: credential_id
                                description: Credential ID
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                              type:
                                x-oapi-codegen-extra-tags:
                                  db: type
                                  yaml: type
                                  json: type
                                type: string
                                description: Connection Type
                              sub_type:
                                x-oapi-codegen-extra-tags:
                                  db: sub_type
                                  yaml: sub_type
                                  json: sub_type
                                type: string
                                description: Connection Subtype
                              kind:
                                x-oapi-codegen-extra-tags:
                                  db: kind
                                  yaml: kind
                                  json: kind
                                type: string
                                description: Connection Kind
                              metadata:
                                x-oapi-codegen-extra-tags:
                                  db: metadata
                                  yaml: metadata
                                  json: metadata
                                type: object
                              status:
                                x-oapi-codegen-extra-tags:
                                  db: status
                                  yaml: status
                                  json: status
                                description: Connection Status
                                type: string
                                enum:
                                  - discovered
                                  - registered
                                  - connected
                                  - ignored
                                  - maintenance
                                  - disconnected
                                  - deleted
                                  - not found
                              user_id:
                                x-go-name: UserID
                                x-oapi-codegen-extra-tags:
                                  yaml: user_id
                                  json: user_id
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entites in Meshery. The UUID
                                  core defintion is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                              created_at:
                                x-oapi-codegen-extra-tags:
                                  yaml: created_at
                                  json: created_at
                                type: string
                                format: date-time
                                x-go-type-skip-optional-pointer: true
                              updated_at:
                                x-oapi-codegen-extra-tags:
                                  yaml: updated_at
                                  json: updated_at
                                type: string
                                format: date-time
                                x-go-type-skip-optional-pointer: true
                              deleted_at:
                                x-oapi-codegen-extra-tags:
                                  yaml: deleted_at
                                  json: deleted_at
                                type: string
                                format: date-time
                                x-go-type-skip-optional-pointer: true
                          category:
                            type: object
                            description: Category of the model.
                            properties:
                              id:
                                type: string
                                format: uuid
                                description: >-
                                  A Universally Unique Identifier used to
                                  uniquely identify entites in Meshery. The UUID
                                  core defintion is used across different
                                  schemas.
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                                x-oapi-codegen-extra-tags:
                                  yaml: id
                                  json: id
                              name:
                                type: string
                                minLength: 1
                                maxLength: 100
                                x-oapi-codegen-extra-tags:
                                  yaml: name
                                  json: name
                              metadata:
                                type: object
                                x-oapi-codegen-extra-tags:
                                  yaml: metadata
                                  json: metadata
                            x-oapi-codegen-extra-tags:
                              yaml: category
                              json: category
                              gorm: foreignKey:CategoryId;references:Id
                          subCategory:
                            type: string
                            description: Sub-category of the model.
                            minLength: 1
                            maxLength: 100
                            x-oapi-codegen-extra-tags:
                              yaml: subCategory
                              json: subCategory
                          metadata:
                            type: object
                            description: >-
                              Metadata containing additional information
                              associated with the model.
                            properties:
                              capabilities:
                                type: array
                                description: Capabilities associated with the model
                                items:
                                  $id: https://schemas.meshery.io/capability.json
                                  $schema: http://json-schema.org/draft-07/schema#
                                  description: >-
                                    Meshery manages entities in accordance with
                                    their specific capabilities. This field
                                    explicitly identifies those capabilities
                                    largely by what actions a given component
                                    supports; e.g. metric-scrape, sub-interface,
                                    and so on. This field is extensible.
                                    Entities may define a broad array of
                                    capabilities, which are in-turn dynamically
                                    interpretted by Meshery for full lifecycle
                                    management.
                                  additionalProperties: false
                                  type: object
                                  required:
                                    - schemaVersion
                                    - version
                                    - displayName
                                    - kind
                                    - type
                                    - entityState
                                    - status
                                  x-oapi-codegen-extra-tags:
                                    gorm: type:bytes;serializer:json
                                  properties:
                                    schemaVersion:
                                      description: >-
                                        Specifies the version of the schema to
                                        which the capability definition
                                        conforms.
                                      type: string
                                      minLength: 2
                                      maxLength: 100
                                      pattern: >-
                                        ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                      example:
                                        - v1
                                        - v1alpha1
                                        - v2beta3
                                        - v1.custom-suffix
                                      x-oapi-codegen-extra-tags:
                                        yaml: schemaVersion
                                        json: schemaVersion
                                    version:
                                      description: Version of the capability definition.
                                      type: string
                                      minLength: 5
                                      maxLength: 100
                                      pattern: >-
                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      x-oapi-codegen-extra-tags:
                                        yaml: version
                                        json: version
                                    displayName:
                                      description: >-
                                        Name of the capability in human-readible
                                        format.
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      x-oapi-codegen-extra-tags:
                                        yaml: displayName
                                        json: displayName
                                    description:
                                      type: string
                                      description: >-
                                        A written representation of the purpose
                                        and characteristics of the capability.
                                      x-oapi-codegen-extra-tags:
                                        yaml: description
                                        json: description
                                    kind:
                                      description: >-
                                        Top-level categorization of the
                                        capability
                                      additionalProperties: false
                                      anyOf:
                                        - const: action
                                          description: >-
                                            For capabilities related to executing
                                            actions on entities. Example: initiate
                                            log streaming on a Pod. Example:
                                            initiate deployment of a component.
                                        - const: mutate
                                          description: >-
                                            For capabilities related to mutating an
                                            entity. Example: the ability to change
                                            the configuration of a component.
                                        - const: view
                                          description: >-
                                            For capabilities related to viewing an
                                            entity. Example: the ability to view a
                                            components configuration.
                                        - const: interaction
                                          description: >-
                                            Catch all for capabilities related to
                                            interaction with entities. Example: the
                                            ability for a component to be dragged
                                            and dropped. Example: supports event
                                            bubbling to parent components. 
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      x-oapi-codegen-extra-tags:
                                        yaml: kind
                                        json: kind
                                    type:
                                      description: >-
                                        Classification of capabilities. Used to
                                        group capabilities similar in nature.
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      x-oapi-codegen-extra-tags:
                                        yaml: type
                                        json: type
                                    subType:
                                      description: >-
                                        Most granular unit of capability
                                        classification. The combination of Kind,
                                        Type and SubType together uniquely
                                        identify a Relaationship.
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      oneOf:
                                        - const: inventory
                                          description: >-
                                            A hierarchical inventory relationship in
                                            which the configuration of (parent)
                                            component is patched with the
                                            configuration of other (child)
                                            component. Eg: The configuration of the
                                            EnvoyFilter (parent) component is
                                            patched with the configuration as
                                            received from WASMFilter (child)
                                            component.
                                        - const: matchLabels
                                          description: >-
                                            Match label relationships offer a
                                            dynamic association between one or more
                                            components and are a flexible way to
                                            group and manage related components in
                                            Meshery.
                                        - const: permission
                                          description: >-
                                            A relationship that represents a set of
                                            security-centric bindings between
                                            components.
                                        - const: network
                                          description: >-
                                            A relationship that represents a line of
                                            communication between two or more
                                            components.
                                        - const: firewall
                                          description: >-
                                            A relationship that act as a
                                            network-based security boundary for
                                            ingress and egress traffic.
                                        - const: mount
                                          description: >-
                                            A relationship that represents volume
                                            mounts between components.
                                        - const: alias
                                          description: >-
                                            An alias for a field path in another
                                            component.
                                        - const: annotation
                                          description: >-
                                            A relationship that provide valuable
                                            context for users, controllers, and
                                            third-party tools within the Meshery
                                            ecosystem.
                                        - const: reference
                                          description: >-
                                            A reference relationship  is a
                                            declarative linkage where one resource
                                            identifies or depends on another
                                            resource by referencing its name, kind,
                                            API version, or some other property
                                      x-oapi-codegen-extra-tags:
                                        yaml: subType
                                        json: subType
                                    key:
                                      description: Key that backs the capability.
                                      type: string
                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                      x-oapi-codegen-extra-tags:
                                        yaml: key
                                        json: key
                                    entityState:
                                      description: >-
                                        State of the entity in which the
                                        capability is applicable.
                                      type: array
                                      items:
                                        type: string
                                        enum:
                                          - declaration
                                          - instance
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        description: >-
                                          A string starting with an alphanumeric
                                          character. Spaces and hyphens allowed.
                                        x-oapi-codegen-extra-tags:
                                          yaml: entityState
                                          json: entityState
                                    status:
                                      type: string
                                      description: Status of the capability
                                      default: enabled
                                      enum:
                                        - enabled
                                        - disabled
                                      x-oapi-codegen-extra-tags:
                                        yaml: status
                                        json: status
                                    metadata:
                                      type: object
                                      description: >-
                                        Metadata contains additional information
                                        associated with the capability.
                                        Extension point.
                                      additionalProperties: true
                                      x-oapi-codegen-extra-tags:
                                        yaml: metadata
                                        json: metadata
                              isAnnotation:
                                type: boolean
                                description: >-
                                  Indicates whether the model and its entities
                                  should be treated as deployable entities or as
                                  logical representations.
                                x-oapi-codegen-extra-tags:
                                  yaml: isAnnotation
                                  json: isAnnotation
                              primaryColor:
                                type: string
                                description: Primary color associated with the model.
                                minLength: 1
                                maxLength: 50
                                x-oapi-codegen-extra-tags:
                                  yaml: primaryColor
                                  json: primaryColor
                              secondaryColor:
                                type: string
                                description: Secondary color associated with the model.
                                minLength: 1
                                maxLength: 50
                                x-oapi-codegen-extra-tags:
                                  yaml: secondaryColor
                                  json: secondaryColor
                              svgWhite:
                                type: string
                                description: >-
                                  SVG representation of the model in white
                                  color.
                                minLength: 1
                                x-oapi-codegen-extra-tags:
                                  yaml: svgWhite
                                  json: svgWhite
                              svgColor:
                                type: string
                                description: >-
                                  SVG representation of the model in colored
                                  format.
                                minLength: 1
                                x-oapi-codegen-extra-tags:
                                  yaml: svgColor
                                  json: svgColor
                              svgComplete:
                                type: string
                                description: SVG representation of the complete model.
                                minLength: 1
                                x-oapi-codegen-extra-tags:
                                  yaml: svgComplete
                                  json: svgComplete
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                            additionalProperties: true
                          model:
                            type: object
                            description: >-
                              Registrant-defined data associated with the model.
                              Properties pertain to the software being managed
                              (e.g. Kubernetes v1.31)
                            required:
                              - version
                            properties:
                              version:
                                description: >-
                                  Version of the model as defined by the
                                  registrant.
                                x-oapi-codegen-extra-tags:
                                  yaml: version
                                  json: version
                                type: string
                                minLength: 5
                                maxLength: 100
                                pattern: >-
                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                            x-oapi-codegen-extra-tags:
                              gorm: type:bytes;serializer:json
                        required:
                          - name
                          - version
                          - registrant
                          - category
                      kind:
                        description: >-
                          Kind of the Relationship. Learn more about
                          relationships -
                          https://docs.meshery.io/concepts/logical/relationships.
                        enum:
                          - hierarchical
                          - edge
                          - sibling
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: kind
                          json: kind
                      type:
                        description: >-
                          Classification of relationships. Used to group
                          relationships similar in nature.
                        x-go-name: RelationshipType
                        gorm: column:type
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: type
                          json: type
                      subType:
                        description: >-
                          Most granular unit of relationship classification. The
                          combination of Kind, Type and SubType together
                          uniquely identify a Relationship.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: subType
                          json: subType
                      status:
                        type: string
                        description: Status of the relationship.
                        default: enabled
                        enum:
                          - pending
                          - approved
                          - ignored
                          - enabled
                          - deleted
                        x-oapi-codegen-extra-tags:
                          yaml: status
                          json: status
                      evaluationQuery:
                        description: >-
                          Optional. Assigns the policy to be used for the
                          evaluation of the relationship. Deprecation Notice: In
                          the future, this property is either to be removed or
                          to it is to be an array of optional policy $refs.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: evaluationQuery
                          json: evaluationQuery
                      capabilities:
                        type: array
                        description: Capabilities associated with the relationship.
                        items:
                          $id: https://schemas.meshery.io/capability.json
                          $schema: http://json-schema.org/draft-07/schema#
                          description: >-
                            Meshery manages entities in accordance with their
                            specific capabilities. This field explicitly
                            identifies those capabilities largely by what
                            actions a given component supports; e.g.
                            metric-scrape, sub-interface, and so on. This field
                            is extensible. Entities may define a broad array of
                            capabilities, which are in-turn dynamically
                            interpretted by Meshery for full lifecycle
                            management.
                          additionalProperties: false
                          type: object
                          required:
                            - schemaVersion
                            - version
                            - displayName
                            - kind
                            - type
                            - entityState
                            - status
                          x-oapi-codegen-extra-tags:
                            gorm: type:bytes;serializer:json
                          properties:
                            schemaVersion:
                              description: >-
                                Specifies the version of the schema to which the
                                capability definition conforms.
                              type: string
                              minLength: 2
                              maxLength: 100
                              pattern: >-
                                ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                              example:
                                - v1
                                - v1alpha1
                                - v2beta3
                                - v1.custom-suffix
                              x-oapi-codegen-extra-tags:
                                yaml: schemaVersion
                                json: schemaVersion
                            version:
                              description: Version of the capability definition.
                              type: string
                              minLength: 5
                              maxLength: 100
                              pattern: >-
                                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                              x-oapi-codegen-extra-tags:
                                yaml: version
                                json: version
                            displayName:
                              description: Name of the capability in human-readible format.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: displayName
                                json: displayName
                            description:
                              type: string
                              description: >-
                                A written representation of the purpose and
                                characteristics of the capability.
                              x-oapi-codegen-extra-tags:
                                yaml: description
                                json: description
                            kind:
                              description: Top-level categorization of the capability
                              additionalProperties: false
                              anyOf:
                                - const: action
                                  description: >-
                                    For capabilities related to executing
                                    actions on entities. Example: initiate log
                                    streaming on a Pod. Example: initiate
                                    deployment of a component.
                                - const: mutate
                                  description: >-
                                    For capabilities related to mutating an
                                    entity. Example: the ability to change the
                                    configuration of a component.
                                - const: view
                                  description: >-
                                    For capabilities related to viewing an
                                    entity. Example: the ability to view a
                                    components configuration.
                                - const: interaction
                                  description: >-
                                    Catch all for capabilities related to
                                    interaction with entities. Example: the
                                    ability for a component to be dragged and
                                    dropped. Example: supports event bubbling to
                                    parent components. 
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: kind
                                json: kind
                            type:
                              description: >-
                                Classification of capabilities. Used to group
                                capabilities similar in nature.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: type
                                json: type
                            subType:
                              description: >-
                                Most granular unit of capability classification.
                                The combination of Kind, Type and SubType
                                together uniquely identify a Capability.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: subType
                                json: subType
                            key:
                              description: Key that backs the capability.
                              type: string
                              pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                              x-oapi-codegen-extra-tags:
                                yaml: key
                                json: key
                            entityState:
                              description: >-
                                State of the entity in which the capability is
                                applicable.
                              type: array
                              items:
                                type: string
                                enum:
                                  - declaration
                                  - instance
                                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                description: >-
                                  A string starting with an alphanumeric
                                  character. Spaces and hyphens allowed.
                                x-oapi-codegen-extra-tags:
                                  yaml: entityState
                                  json: entityState
                            status:
                              type: string
                              description: Status of the capability
                              default: enabled
                              enum:
                                - enabled
                                - disabled
                              x-oapi-codegen-extra-tags:
                                yaml: status
                                json: status
                            metadata:
                              type: object
                              description: >-
                                Metadata contains additional information
                                associated with the capability. Extension point.
                              additionalProperties: true
                              x-oapi-codegen-extra-tags:
                                yaml: metadata
                                json: metadata
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                      metadata:
                        type: object
                        description: >-
                          Metadata contains additional information associated
                          with the Relationship.
                        additionalProperties: true
                        x-oapi-codegen-extra-tags:
                          gorm: foreignKey:ModelId;references:Id
                        properties:
                          description:
                            description: >-
                              Characterization of the meaning of the
                              relationship and its relevance to both Meshery and
                              entities under management.
                            type: string
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            x-oapi-codegen-extra-tags:
                              yaml: description
                              json: description
                          isAnnotation:
                            type: boolean
                            description: >-
                              Indicates whether the relationship should be
                              treated as a logical representation only
                            x-oapi-codegen-extra-tags:
                              yaml: isAnnotation
                              json: isAnnotation
                            default: false
                          styles:
                            anyOf:
                              - type: object
                                description: Visualization styles for a relationship
                                allOf:
                                  - type: object
                                    description: Common styles for all entities
                                    additionalProperties: false
                                    required:
                                      - primaryColor
                                      - svgColor
                                      - svgWhite
                                    properties:
                                      primaryColor:
                                        type: string
                                        description: >-
                                          Primary color of the component used for
                                          UI representation.
                                      secondaryColor:
                                        type: string
                                        description: >-
                                          Secondary color of the entity used for
                                          UI representation.
                                      svgWhite:
                                        type: string
                                        description: >-
                                          White SVG of the entity used for UI
                                          representation on dark background.
                                      svgColor:
                                        type: string
                                        description: >-
                                          Colored SVG of the entity used for UI
                                          representation on light background.
                                      svgComplete:
                                        type: string
                                        description: >-
                                          Complete SVG of the entity used for UI
                                          representation, often inclusive of
                                          background.
                                      color:
                                        type: string
                                        description: >-
                                          The color of the element's label.
                                          Colours may be specified by name (e.g.
                                          red), hex (e.g. #ff0000 or #f00), RGB
                                          (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                          hsl(0, 100%, 50%)).
                                      text-opacity:
                                        type: number
                                        description: >-
                                          The opacity of the label text, including
                                          its outline.
                                        minimum: 0
                                        maximum: 1
                                      font-family:
                                        type: string
                                        description: >-
                                          A comma-separated list of font names to
                                          use on the label text.
                                      font-size:
                                        type: string
                                        description: The size of the label text.
                                      font-style:
                                        type: string
                                        description: >-
                                          A CSS font style to be applied to the
                                          label text.
                                      font-weight:
                                        type: string
                                        description: >-
                                          A CSS font weight to be applied to the
                                          label text.
                                      text-transform:
                                        type: string
                                        description: >-
                                          A transformation to apply to the label
                                          text
                                        enum:
                                          - none
                                          - uppercase
                                          - lowercase
                                      opacity:
                                        type: number
                                        description: >-
                                          The opacity of the element, ranging from
                                          0 to 1. Note that the opacity of a
                                          compound node parent affects the
                                          effective opacity of its children.See
                                          https://js.cytoscape.org/#style/visibility
                                        minimum: 0
                                        maximum: 1
                                      z-index:
                                        type: integer
                                        description: >-
                                          An integer value that affects the
                                          relative draw order of elements. In
                                          general, an element with a higher
                                          z-index will be drawn on top of an
                                          element with a lower z-index. Note that
                                          edges are under nodes despite z-index.
                                      label:
                                        type: string
                                        description: >-
                                          The text to display for an element’s
                                          label. Can give a path, e.g. data(id)
                                          will label with the elements id
                                  - properties:
                                      edge-animation:
                                        type: string
                                        description: >-
                                          The animation to use for the edge. Can
                                          be like 'marching-ants' , 'blink' ,
                                          'moving-gradient',etc .
                                      curve-style:
                                        type: string
                                        description: >-
                                          The curving method used to separate two
                                          or more edges between two nodes; may be
                                          haystack (very fast, bundled straight
                                          edges for which loops and compounds are
                                          unsupported), straight (straight edges
                                          with all arrows supported), bezier
                                          (bundled curved edges), unbundled-bezier
                                          (curved edges for use with manual
                                          control points), segments (a series of
                                          straight lines), taxi (right-angled
                                          lines, hierarchically bundled). Note
                                          that haystack edges work best with
                                          ellipse, rectangle, or similar nodes.
                                          Smaller node shapes, like triangle, will
                                          not be as aesthetically pleasing. Also
                                          note that edge endpoint arrows are
                                          unsupported for haystack edges.
                                        default: straight
                                        enum:
                                          - straight
                                          - haystack
                                          - bezier
                                          - unbundled-bezier
                                          - segments
                                          - taxi
                                      line-color:
                                        type: string
                                        description: >-
                                          The colour of the edge’s line. Colours
                                          may be specified by name (e.g. red), hex
                                          (e.g. #ff0000 or #f00), RGB (e.g.
                                          rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                          100%, 50%)).
                                      line-style:
                                        type: string
                                        description: The style of the edge’s line.
                                        enum:
                                          - solid
                                          - dotted
                                          - dashed
                                      line-cap:
                                        type: string
                                        description: >-
                                          The cap style of the edge’s line; may be
                                          butt (default), round, or square. The
                                          cap may or may not be visible, depending
                                          on the shape of the node and the
                                          relative size of the node and edge. Caps
                                          other than butt extend beyond the
                                          specified endpoint of the edge.
                                        enum:
                                          - butt
                                          - round
                                          - square
                                        default: butt
                                      line-opacity:
                                        type: number
                                        minimum: 0
                                        maximum: 1
                                        default: 1
                                        description: >-
                                          The opacity of the edge’s line and
                                          arrow. Useful if you wish to have a
                                          separate opacity for the edge label
                                          versus the edge line. Note that the
                                          opacity value of the edge element
                                          affects the effective opacity of its
                                          line and label subcomponents.
                                      target-arrow-color:
                                        type: string
                                        description: >-
                                          The colour of the edge’s source arrow.
                                          Colours may be specified by name (e.g.
                                          red), hex (e.g. #ff0000 or #f00), RGB
                                          (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                          hsl(0, 100%, 50%)).
                                      target-arrow-shape:
                                        type: string
                                        description: The shape of the edge’s source arrow
                                        enum:
                                          - triangle
                                          - triangle-tee
                                          - circle-triangle
                                          - triangle-cross
                                          - triangle-backcurve
                                          - vee
                                          - tee
                                          - square
                                          - circle
                                          - diamond
                                          - chevron
                                          - none
                                      target-arrow-fill:
                                        type: string
                                        description: >-
                                          The fill state of the edge’s source
                                          arrow
                                        enum:
                                          - filled
                                          - hollow
                                      mid-target-arrow-color:
                                        type: string
                                        description: >-
                                          The colour of the edge’s source arrow.
                                          Colours may be specified by name (e.g.
                                          red), hex (e.g. #ff0000 or #f00), RGB
                                          (e.g. rgb(255, 0, 0)), or HSL (e.g.
                                          hsl(0, 100%, 50%)).
                                      mid-target-arrow-shape:
                                        type: string
                                        description: The shape of the edge’s source arrow
                                        enum:
                                          - triangle
                                          - triangle-tee
                                          - circle-triangle
                                          - triangle-cross
                                          - triangle-backcurve
                                          - vee
                                          - tee
                                          - square
                                          - circle
                                          - diamond
                                          - chevron
                                          - none
                                      mid-target-arrow-fill:
                                        type: string
                                        description: >-
                                          The fill state of the edge’s source
                                          arrow
                                        enum:
                                          - filled
                                          - hollow
                                      arrow-scale:
                                        type: number
                                        description: Scaling for the arrow size.
                                        minimum: 0
                                      source-label:
                                        type: string
                                        description: >-
                                          The text to display for an edge’s source
                                          label. Can give a path, e.g. data(id)
                                          will label with the elements id
                                      target-label:
                                        type: string
                                        description: >-
                                          The text to display for an edge’s target
                                          label. Can give a path, e.g. data(id)
                                          will label with the elements id
                              - type: object
                                description: Common styles for all entities
                                additionalProperties: false
                                required:
                                  - primaryColor
                                  - svgColor
                                  - svgWhite
                                properties:
                                  primaryColor:
                                    type: string
                                    description: >-
                                      Primary color of the component used for UI
                                      representation.
                                  secondaryColor:
                                    type: string
                                    description: >-
                                      Secondary color of the entity used for UI
                                      representation.
                                  svgWhite:
                                    type: string
                                    description: >-
                                      White SVG of the entity used for UI
                                      representation on dark background.
                                  svgColor:
                                    type: string
                                    description: >-
                                      Colored SVG of the entity used for UI
                                      representation on light background.
                                  svgComplete:
                                    type: string
                                    description: >-
                                      Complete SVG of the entity used for UI
                                      representation, often inclusive of
                                      background.
                                  color:
                                    type: string
                                    description: >-
                                      The color of the element's label. Colours
                                      may be specified by name (e.g. red), hex
                                      (e.g. #ff0000 or #f00), RGB (e.g. rgb(255,
                                      0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).
                                  text-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the label text, including
                                      its outline.
                                    minimum: 0
                                    maximum: 1
                                  font-family:
                                    type: string
                                    description: >-
                                      A comma-separated list of font names to
                                      use on the label text.
                                  font-size:
                                    type: string
                                    description: The size of the label text.
                                  font-style:
                                    type: string
                                    description: >-
                                      A CSS font style to be applied to the
                                      label text.
                                  font-weight:
                                    type: string
                                    description: >-
                                      A CSS font weight to be applied to the
                                      label text.
                                  text-transform:
                                    type: string
                                    description: >-
                                      A transformation to apply to the label
                                      text
                                    enum:
                                      - none
                                      - uppercase
                                      - lowercase
                                  opacity:
                                    type: number
                                    description: >-
                                      The opacity of the element, ranging from 0
                                      to 1. Note that the opacity of a compound
                                      node parent affects the effective opacity
                                      of its children.See
                                      https://js.cytoscape.org/#style/visibility
                                    minimum: 0
                                    maximum: 1
                                  z-index:
                                    type: integer
                                    description: >-
                                      An integer value that affects the relative
                                      draw order of elements. In general, an
                                      element with a higher z-index will be
                                      drawn on top of an element with a lower
                                      z-index. Note that edges are under nodes
                                      despite z-index.
                                  label:
                                    type: string
                                    description: >-
                                      The text to display for an element’s
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                                $comment: Extension point for additional styles
                            x-oapi-codegen-extra-tags:
                              yaml: styles
                              json: styles
                      selectors:
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        type: array
                        description: >-
                          Selectors are organized as an array, with each item
                          containing a distinct set of selectors that share a
                          common functionality. This structure allows for
                          flexibility in defining relationships, even when
                          different components are involved.
                        $comment: >-
                          Sets of selectors are interpreted as a logical UNION.
                          Properties within a selector `allow` and `deny` are
                          interpreted as logical AND, while 'from' and 'to'
                          represents a UNION of set of combinatorial pairs.
                        items:
                          type: object
                          description: >-
                            Optional selectors used to match Components. Absence
                            of a selector means that it is applied to all
                            Components.
                          additionalProperties: false
                          required:
                            - allow
                          properties:
                            deny:
                              description: >-
                                Optional selectors used to define relationships
                                which should not be created / is restricted.
                              type: object
                              required:
                                - to
                                - from
                              properties:
                                from:
                                  description: >-
                                    Describes the component(s) which are
                                    involved in the relationship along with a
                                    set of actions to perform upon selection
                                    match.
                                  type: array
                                  items:
                                    type: object
                                    additionalProperties: false
                                    properties:
                                      kind:
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: kind
                                          json: kind
                                      model:
                                        description: >-
                                          Name of the model implicated by this
                                          selector. Learn more at
                                          https://docs.meshery.io/concepts/models
                                        $id: https://schemas.meshery.io/model.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        additionalProperties: false
                                        type: object
                                        properties:
                                          id:
                                            description: >-
                                              Uniquely identifies the entity (i.e.
                                              component) as defined in a declaration
                                              (i.e. design).
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          schemaVersion:
                                            description: >-
                                              Specifies the version of the schema used
                                              for the definition.
                                            x-oapi-codegen-extra-tags:
                                              yaml: schemaVersion
                                              json: schemaVersion
                                            type: string
                                            minLength: 2
                                            maxLength: 100
                                            pattern: >-
                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                            example:
                                              - v1
                                              - v1alpha1
                                              - v2beta3
                                              - v1.custom-suffix
                                          version:
                                            description: Version of the model definition.
                                            type: string
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                          name:
                                            description: >-
                                              The unique name for the model within the
                                              scope of a registrant.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          displayName:
                                            description: Human-readable name for the model.
                                            minLength: 1
                                            maxLength: 100
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                            x-oapi-codegen-extra-tags:
                                              yaml: displayName
                                              json: displayName
                                          description:
                                            type: string
                                            description: Description of the model.
                                            minLength: 1
                                            maxLength: 1000
                                            x-oapi-codegen-extra-tags:
                                              yaml: description
                                              json: description
                                          status:
                                            type: string
                                            description: >-
                                              Status of model, including:

                                              - duplicate: this component is a
                                              duplicate of another. The component that
                                              is to be the canonical reference and
                                              that is duplicated by other components
                                              should not be assigned the 'duplicate'
                                              status.

                                              - maintenance: model is unavailable for
                                              a period of time.

                                              - enabled: model is available for use
                                              for all users of this Meshery Server.

                                              - ignored: model is unavailable for use
                                              for all users of this Meshery Server.
                                            enum:
                                              - ignored
                                              - enabled
                                              - duplicate
                                            x-oapi-codegen-extra-tags:
                                              yaml: status
                                              json: status
                                          registrant:
                                            x-oapi-codegen-extra-tags:
                                              yaml: registrant
                                              json: registrant
                                              gorm: foreignKey:RegistrantId;references:Id
                                            $id: >-
                                              https://schemas.meshery.io/component.json
                                            $schema: http://json-schema.org/draft-07/schema#
                                            description: >-
                                              Meshery Connections are managed and
                                              unmanaged resources that either through
                                              discovery or manual entry are tracked by
                                              Meshery. Learn more at
                                              https://docs.meshery.io/concepts/logical/connections
                                            additionalProperties: false
                                            type: object
                                            required:
                                              - kind
                                              - type
                                              - status
                                            properties:
                                              id:
                                                description: ID
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              name:
                                                x-oapi-codegen-extra-tags:
                                                  db: name
                                                  yaml: name
                                                  json: name
                                                type: string
                                                description: Connection Name
                                              credential_id:
                                                x-go-name: CredentialId
                                                x-oapi-codegen-extra-tags:
                                                  db: credential_id
                                                  yaml: credential_id
                                                  json: credential_id
                                                description: Credential ID
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                              type:
                                                x-oapi-codegen-extra-tags:
                                                  db: type
                                                  yaml: type
                                                  json: type
                                                type: string
                                                description: Connection Type
                                              sub_type:
                                                x-oapi-codegen-extra-tags:
                                                  db: sub_type
                                                  yaml: sub_type
                                                  json: sub_type
                                                type: string
                                                description: Connection Subtype
                                              kind:
                                                x-oapi-codegen-extra-tags:
                                                  db: kind
                                                  yaml: kind
                                                  json: kind
                                                type: string
                                                description: Connection Kind
                                              metadata:
                                                x-oapi-codegen-extra-tags:
                                                  db: metadata
                                                  yaml: metadata
                                                  json: metadata
                                                type: object
                                              status:
                                                x-oapi-codegen-extra-tags:
                                                  db: status
                                                  yaml: status
                                                  json: status
                                                description: Connection Status
                                                type: string
                                                enum:
                                                  - discovered
                                                  - registered
                                                  - connected
                                                  - ignored
                                                  - maintenance
                                                  - disconnected
                                                  - deleted
                                                  - not found
                                              user_id:
                                                x-go-name: UserID
                                                x-oapi-codegen-extra-tags:
                                                  yaml: user_id
                                                  json: user_id
                                                type: string
                                                format: uuid
                                                description: >-
                                                  A Universally Unique Identifier used to
                                                  uniquely identify entites in Meshery.
                                                  The UUID core defintion is used across
                                                  different schemas.
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                              created_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: created_at
                                                  json: created_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                              updated_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: updated_at
                                                  json: updated_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                              deleted_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: deleted_at
                                                  json: deleted_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                          category:
                                            type: object
                                            description: Category of the model.
                                            properties:
                                              id:
                                                type: string
                                                format: uuid
                                                description: >-
                                                  A Universally Unique Identifier used to
                                                  uniquely identify entites in Meshery.
                                                  The UUID core defintion is used across
                                                  different schemas.
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              name:
                                                type: string
                                                minLength: 1
                                                maxLength: 100
                                                x-oapi-codegen-extra-tags:
                                                  yaml: name
                                                  json: name
                                              metadata:
                                                type: object
                                                x-oapi-codegen-extra-tags:
                                                  yaml: metadata
                                                  json: metadata
                                            x-oapi-codegen-extra-tags:
                                              yaml: category
                                              json: category
                                              gorm: foreignKey:CategoryId;references:Id
                                          subCategory:
                                            type: string
                                            description: Sub-category of the model.
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: subCategory
                                              json: subCategory
                                          metadata:
                                            type: object
                                            description: >-
                                              Metadata containing additional
                                              information associated with the model.
                                            properties:
                                              capabilities:
                                                type: array
                                                description: Capabilities associated with the model
                                                items:
                                                  $id: >-
                                                    https://schemas.meshery.io/capability.json
                                                  $schema: http://json-schema.org/draft-07/schema#
                                                  description: >-
                                                    Meshery manages entities in accordance
                                                    with their specific capabilities. This
                                                    field explicitly identifies those
                                                    capabilities largely by what actions a
                                                    given component supports; e.g.
                                                    metric-scrape, sub-interface, and so on.
                                                    This field is extensible. Entities may
                                                    define a broad array of capabilities,
                                                    which are in-turn dynamically
                                                    interpretted by Meshery for full
                                                    lifecycle management.
                                                  additionalProperties: false
                                                  type: object
                                                  required:
                                                    - schemaVersion
                                                    - version
                                                    - displayName
                                                    - kind
                                                    - type
                                                    - entityState
                                                    - status
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                                  properties:
                                                    schemaVersion:
                                                      description: >-
                                                        Specifies the version of the schema to
                                                        which the capability definition
                                                        conforms.
                                                      type: string
                                                      minLength: 2
                                                      maxLength: 100
                                                      pattern: >-
                                                        ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                      example:
                                                        - v1
                                                        - v1alpha1
                                                        - v2beta3
                                                        - v1.custom-suffix
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: schemaVersion
                                                        json: schemaVersion
                                                    version:
                                                      description: Version of the capability definition.
                                                      type: string
                                                      minLength: 5
                                                      maxLength: 100
                                                      pattern: >-
                                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: version
                                                        json: version
                                                    displayName:
                                                      description: >-
                                                        Name of the capability in human-readible
                                                        format.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: displayName
                                                        json: displayName
                                                    description:
                                                      type: string
                                                      description: >-
                                                        A written representation of the purpose
                                                        and characteristics of the capability.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: description
                                                        json: description
                                                    kind:
                                                      description: >-
                                                        Top-level categorization of the
                                                        capability
                                                      additionalProperties: false
                                                      anyOf:
                                                        - const: action
                                                          description: >-
                                                            For capabilities related to executing
                                                            actions on entities. Example: initiate
                                                            log streaming on a Pod. Example:
                                                            initiate deployment of a component.
                                                        - const: mutate
                                                          description: >-
                                                            For capabilities related to mutating an
                                                            entity. Example: the ability to change
                                                            the configuration of a component.
                                                        - const: view
                                                          description: >-
                                                            For capabilities related to viewing an
                                                            entity. Example: the ability to view a
                                                            components configuration.
                                                        - const: interaction
                                                          description: >-
                                                            Catch all for capabilities related to
                                                            interaction with entities. Example: the
                                                            ability for a component to be dragged
                                                            and dropped. Example: supports event
                                                            bubbling to parent components. 
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: kind
                                                        json: kind
                                                    type:
                                                      description: >-
                                                        Classification of capabilities. Used to
                                                        group capabilities similar in nature.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: type
                                                        json: type
                                                    subType:
                                                      description: >-
                                                        Most granular unit of capability
                                                        classification. The combination of Kind,
                                                        Type and SubType together uniquely
                                                        identify a Capability.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: subType
                                                        json: subType
                                                    key:
                                                      description: Key that backs the capability.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: key
                                                        json: key
                                                    entityState:
                                                      description: >-
                                                        State of the entity in which the
                                                        capability is applicable.
                                                      type: array
                                                      items:
                                                        type: string
                                                        enum:
                                                          - declaration
                                                          - instance
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        description: >-
                                                          A string starting with an alphanumeric
                                                          character. Spaces and hyphens allowed.
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: entityState
                                                          json: entityState
                                                    status:
                                                      type: string
                                                      description: Status of the capability
                                                      default: enabled
                                                      enum:
                                                        - enabled
                                                        - disabled
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: status
                                                        json: status
                                                    metadata:
                                                      type: object
                                                      description: >-
                                                        Metadata contains additional information
                                                        associated with the capability.
                                                        Extension point.
                                                      additionalProperties: true
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: metadata
                                                        json: metadata
                                              isAnnotation:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the model and its
                                                  entities should be treated as deployable
                                                  entities or as logical representations.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: isAnnotation
                                                  json: isAnnotation
                                              primaryColor:
                                                type: string
                                                description: Primary color associated with the model.
                                                minLength: 1
                                                maxLength: 50
                                                x-oapi-codegen-extra-tags:
                                                  yaml: primaryColor
                                                  json: primaryColor
                                              secondaryColor:
                                                type: string
                                                description: >-
                                                  Secondary color associated with the
                                                  model.
                                                minLength: 1
                                                maxLength: 50
                                                x-oapi-codegen-extra-tags:
                                                  yaml: secondaryColor
                                                  json: secondaryColor
                                              svgWhite:
                                                type: string
                                                description: >-
                                                  SVG representation of the model in white
                                                  color.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgWhite
                                                  json: svgWhite
                                              svgColor:
                                                type: string
                                                description: >-
                                                  SVG representation of the model in
                                                  colored format.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgColor
                                                  json: svgColor
                                              svgComplete:
                                                type: string
                                                description: >-
                                                  SVG representation of the complete
                                                  model.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgComplete
                                                  json: svgComplete
                                            x-oapi-codegen-extra-tags:
                                              gorm: type:bytes;serializer:json
                                            additionalProperties: true
                                          model:
                                            type: object
                                            description: >-
                                              Registrant-defined data associated with
                                              the model. Properties pertain to the
                                              software being managed (e.g. Kubernetes
                                              v1.31)
                                            required:
                                              - version
                                            properties:
                                              version:
                                                description: >-
                                                  Version of the model as defined by the
                                                  registrant.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: version
                                                  json: version
                                                type: string
                                                minLength: 5
                                                maxLength: 100
                                                pattern: >-
                                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            x-oapi-codegen-extra-tags:
                                              gorm: type:bytes;serializer:json
                                        required:
                                          - name
                                          - version
                                          - registrant
                                          - category
                                      id:
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      match:
                                        type: object
                                        additionalProperties: false
                                        oneOf:
                                          - type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                          - properties:
                                              from:
                                                $comment: >-
                                                  Type is array so that mutliple bindings
                                                  can be supported between 2 nodes
                                                type: array
                                                items:
                                                  type: object
                                                  allOf:
                                                    - properties:
                                                        kind:
                                                          type: string
                                                        id:
                                                          type: string
                                                          format: uuid
                                                          description: >-
                                                            A Universally Unique Identifier used to
                                                            uniquely identify entites in Meshery.
                                                            The UUID core defintion is used across
                                                            different schemas.
                                                          x-go-type: uuid.UUID
                                                          x-go-type-import:
                                                            path: github.com/gofrs/uuid
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: id
                                                            json: id
                                                    - oneOf:
                                                        - properties:
                                                            mutatorRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  The sequence of mutatorRef and
                                                                  mutatedRef must match. eg: mutatorRef:
                                                                  [[config, url], [config, name]],
                                                                  mutatedRef: [[configPatch, value],
                                                                  [name]]. The value [config, url] will be
                                                                  patched at [configPatch, value].
                                                                  Similarly [config,name] will be patched
                                                                  at [name].
                                                              description: >-
                                                                JSON ref to value from where patch
                                                                should be applied.
                                                        - properties:
                                                            mutatedRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  JSONPath
                                                                  (https://en.wikipedia.org/wiki/JSONPath)
                                                                  to property to be patched.
                                              to:
                                                $comment: >-
                                                  Type is array so that mutliple bindings
                                                  can be supported between 2 nodes
                                                type: array
                                                items:
                                                  type: object
                                                  allOf:
                                                    - properties:
                                                        kind:
                                                          type: string
                                                        id:
                                                          type: string
                                                          format: uuid
                                                          description: >-
                                                            A Universally Unique Identifier used to
                                                            uniquely identify entites in Meshery.
                                                            The UUID core defintion is used across
                                                            different schemas.
                                                          x-go-type: uuid.UUID
                                                          x-go-type-import:
                                                            path: github.com/gofrs/uuid
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: id
                                                            json: id
                                                    - oneOf:
                                                        - properties:
                                                            mutatorRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  The sequence of mutatorRef and
                                                                  mutatedRef must match. eg: mutatorRef:
                                                                  [[config, url], [config, name]],
                                                                  mutatedRef: [[configPatch, value],
                                                                  [name]]. The value [config, url] will be
                                                                  patched at [configPatch, value].
                                                                  Similarly [config,name] will be patched
                                                                  at [name].
                                                              description: >-
                                                                JSON ref to value from where patch
                                                                should be applied.
                                                        - properties:
                                                            mutatedRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  JSONPath
                                                                  (https://en.wikipedia.org/wiki/JSONPath)
                                                                  to property to be patched.
                                        x-oapi-codegen-extra-tags:
                                          yaml: match
                                          json: match
                                      patch:
                                        allOf:
                                          - properties:
                                              patchStrategy:
                                                description: >-
                                                  patchStrategy allows you to make
                                                  specific changes to a resource using a
                                                  standard JSON Patch format (RFC 6902). 


                                                  add: Inserts a value into an array or
                                                  adds a member to an object.

                                                  replace: Replaces a value.

                                                  merge: Combines the values of the target
                                                  location with the values from the patch.
                                                  If the target location doesn't exist, it
                                                  is created.

                                                  strategic:specific to Kubernetes and
                                                  understands the structure of Kubernetes
                                                  objects. It can handle complex changes
                                                  like updating lists and maps, as well as
                                                  preserving default values. However, it's
                                                  not supported for custom resources. For
                                                  custom resources, only JSON Patch and
                                                  Merge Patch are typically supported.

                                                  remove: Removes a value.

                                                  copy: Copies a value from one location
                                                  to another.

                                                  move: Moves a value from one location to
                                                  another.

                                                  test: Tests that a value at the target
                                                  location is equal to a specified value.
                                                $comment: >-
                                                  Array Indexing: When working with
                                                  arrays, be aware that Kubernetes uses
                                                  zero-based indexing in JSON patch paths.

                                                  Merge Patch vs. JSON Patch: Merge
                                                  patches are less flexible than JSON
                                                  patches and do not support all the same
                                                  operations.

                                                  Strategic Merge Patch: For some
                                                  Kubernetes resources, you can also use
                                                  the strategic type for a strategic merge
                                                  patch, which understands the structure
                                                  of Kubernetes objects and can handle
                                                  complex operations.
                                                type: string
                                                enum:
                                                  - merge
                                                  - strategic
                                                  - add
                                                  - remove
                                                  - copy
                                                  - move
                                                  - test
                                                default: copy
                                          - oneOf:
                                              - properties:
                                                  mutatorRef:
                                                    type: array
                                                    items:
                                                      type: array
                                                      items:
                                                        type: string
                                                      description: >-
                                                        The sequence of mutatorRef and
                                                        mutatedRef must match. eg: mutatorRef:
                                                        [[config, url], [config, name]],
                                                        mutatedRef: [[configPatch, value],
                                                        [name]]. The value [config, url] will be
                                                        patched at [configPatch, value].
                                                        Similarly [config,name] will be patched
                                                        at [name].
                                                    description: >-
                                                      JSON ref to value from where patch
                                                      should be applied.
                                              - properties:
                                                  mutatedRef:
                                                    type: array
                                                    items:
                                                      type: array
                                                      items:
                                                        type: string
                                                      description: >-
                                                        JSONPath
                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                        to property to be patched.
                                        x-oapi-codegen-extra-tags:
                                          yaml: patch
                                          json: patch
                                    description: >-
                                      Optional fields that are a part of the
                                      `from` selector. Absence of a field has an
                                      implied * meaning.
                                to:
                                  description: >-
                                    Describes the component(s) which are
                                    involved in the relationship along with a
                                    set of actions to perform upon selection
                                    match.
                                  type: array
                                  items:
                                    type: object
                                    additionalProperties: false
                                    properties:
                                      kind:
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: kind
                                          json: kind
                                      model:
                                        description: >-
                                          Name of the model implicated by this
                                          selector. Learn more at
                                          https://docs.meshery.io/concepts/models
                                        $id: https://schemas.meshery.io/model.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        additionalProperties: false
                                        type: object
                                        properties:
                                          id:
                                            description: >-
                                              Uniquely identifies the entity (i.e.
                                              component) as defined in a declaration
                                              (i.e. design).
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          schemaVersion:
                                            description: >-
                                              Specifies the version of the schema used
                                              for the definition.
                                            x-oapi-codegen-extra-tags:
                                              yaml: schemaVersion
                                              json: schemaVersion
                                            type: string
                                            minLength: 2
                                            maxLength: 100
                                            pattern: >-
                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                            example:
                                              - v1
                                              - v1alpha1
                                              - v2beta3
                                              - v1.custom-suffix
                                          version:
                                            description: Version of the model definition.
                                            type: string
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                          name:
                                            description: >-
                                              The unique name for the model within the
                                              scope of a registrant.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          displayName:
                                            description: Human-readable name for the model.
                                            minLength: 1
                                            maxLength: 100
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                            x-oapi-codegen-extra-tags:
                                              yaml: displayName
                                              json: displayName
                                          description:
                                            type: string
                                            description: Description of the model.
                                            minLength: 1
                                            maxLength: 1000
                                            x-oapi-codegen-extra-tags:
                                              yaml: description
                                              json: description
                                          status:
                                            type: string
                                            description: >-
                                              Status of model, including:

                                              - duplicate: this component is a
                                              duplicate of another. The component that
                                              is to be the canonical reference and
                                              that is duplicated by other components
                                              should not be assigned the 'duplicate'
                                              status.

                                              - maintenance: model is unavailable for
                                              a period of time.

                                              - enabled: model is available for use
                                              for all users of this Meshery Server.

                                              - ignored: model is unavailable for use
                                              for all users of this Meshery Server.
                                            enum:
                                              - ignored
                                              - enabled
                                              - duplicate
                                            x-oapi-codegen-extra-tags:
                                              yaml: status
                                              json: status
                                          registrant:
                                            x-oapi-codegen-extra-tags:
                                              yaml: registrant
                                              json: registrant
                                              gorm: foreignKey:RegistrantId;references:Id
                                            $id: >-
                                              https://schemas.meshery.io/component.json
                                            $schema: http://json-schema.org/draft-07/schema#
                                            description: >-
                                              Meshery Connections are managed and
                                              unmanaged resources that either through
                                              discovery or manual entry are tracked by
                                              Meshery. Learn more at
                                              https://docs.meshery.io/concepts/logical/connections
                                            additionalProperties: false
                                            type: object
                                            required:
                                              - kind
                                              - type
                                              - status
                                            properties:
                                              id:
                                                description: ID
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              name:
                                                x-oapi-codegen-extra-tags:
                                                  db: name
                                                  yaml: name
                                                  json: name
                                                type: string
                                                description: Connection Name
                                              credential_id:
                                                x-go-name: CredentialId
                                                x-oapi-codegen-extra-tags:
                                                  db: credential_id
                                                  yaml: credential_id
                                                  json: credential_id
                                                description: Credential ID
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                              type:
                                                x-oapi-codegen-extra-tags:
                                                  db: type
                                                  yaml: type
                                                  json: type
                                                type: string
                                                description: Connection Type
                                              sub_type:
                                                x-oapi-codegen-extra-tags:
                                                  db: sub_type
                                                  yaml: sub_type
                                                  json: sub_type
                                                type: string
                                                description: Connection Subtype
                                              kind:
                                                x-oapi-codegen-extra-tags:
                                                  db: kind
                                                  yaml: kind
                                                  json: kind
                                                type: string
                                                description: Connection Kind
                                              metadata:
                                                x-oapi-codegen-extra-tags:
                                                  db: metadata
                                                  yaml: metadata
                                                  json: metadata
                                                type: object
                                              status:
                                                x-oapi-codegen-extra-tags:
                                                  db: status
                                                  yaml: status
                                                  json: status
                                                description: Connection Status
                                                type: string
                                                enum:
                                                  - discovered
                                                  - registered
                                                  - connected
                                                  - ignored
                                                  - maintenance
                                                  - disconnected
                                                  - deleted
                                                  - not found
                                              user_id:
                                                x-go-name: UserID
                                                x-oapi-codegen-extra-tags:
                                                  yaml: user_id
                                                  json: user_id
                                                type: string
                                                format: uuid
                                                description: >-
                                                  A Universally Unique Identifier used to
                                                  uniquely identify entites in Meshery.
                                                  The UUID core defintion is used across
                                                  different schemas.
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                              created_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: created_at
                                                  json: created_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                              updated_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: updated_at
                                                  json: updated_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                              deleted_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: deleted_at
                                                  json: deleted_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                          category:
                                            type: object
                                            description: Category of the model.
                                            properties:
                                              id:
                                                type: string
                                                format: uuid
                                                description: >-
                                                  A Universally Unique Identifier used to
                                                  uniquely identify entites in Meshery.
                                                  The UUID core defintion is used across
                                                  different schemas.
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              name:
                                                type: string
                                                minLength: 1
                                                maxLength: 100
                                                x-oapi-codegen-extra-tags:
                                                  yaml: name
                                                  json: name
                                              metadata:
                                                type: object
                                                x-oapi-codegen-extra-tags:
                                                  yaml: metadata
                                                  json: metadata
                                            x-oapi-codegen-extra-tags:
                                              yaml: category
                                              json: category
                                              gorm: foreignKey:CategoryId;references:Id
                                          subCategory:
                                            type: string
                                            description: Sub-category of the model.
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: subCategory
                                              json: subCategory
                                          metadata:
                                            type: object
                                            description: >-
                                              Metadata containing additional
                                              information associated with the model.
                                            properties:
                                              capabilities:
                                                type: array
                                                description: Capabilities associated with the model
                                                items:
                                                  $id: >-
                                                    https://schemas.meshery.io/capability.json
                                                  $schema: http://json-schema.org/draft-07/schema#
                                                  description: >-
                                                    Meshery manages entities in accordance
                                                    with their specific capabilities. This
                                                    field explicitly identifies those
                                                    capabilities largely by what actions a
                                                    given component supports; e.g.
                                                    metric-scrape, sub-interface, and so on.
                                                    This field is extensible. Entities may
                                                    define a broad array of capabilities,
                                                    which are in-turn dynamically
                                                    interpretted by Meshery for full
                                                    lifecycle management.
                                                  additionalProperties: false
                                                  type: object
                                                  required:
                                                    - schemaVersion
                                                    - version
                                                    - displayName
                                                    - kind
                                                    - type
                                                    - entityState
                                                    - status
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                                  properties:
                                                    schemaVersion:
                                                      description: >-
                                                        Specifies the version of the schema to
                                                        which the capability definition
                                                        conforms.
                                                      type: string
                                                      minLength: 2
                                                      maxLength: 100
                                                      pattern: >-
                                                        ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                      example:
                                                        - v1
                                                        - v1alpha1
                                                        - v2beta3
                                                        - v1.custom-suffix
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: schemaVersion
                                                        json: schemaVersion
                                                    version:
                                                      description: Version of the capability definition.
                                                      type: string
                                                      minLength: 5
                                                      maxLength: 100
                                                      pattern: >-
                                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: version
                                                        json: version
                                                    displayName:
                                                      description: >-
                                                        Name of the capability in human-readible
                                                        format.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: displayName
                                                        json: displayName
                                                    description:
                                                      type: string
                                                      description: >-
                                                        A written representation of the purpose
                                                        and characteristics of the capability.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: description
                                                        json: description
                                                    kind:
                                                      description: >-
                                                        Top-level categorization of the
                                                        capability
                                                      additionalProperties: false
                                                      anyOf:
                                                        - const: action
                                                          description: >-
                                                            For capabilities related to executing
                                                            actions on entities. Example: initiate
                                                            log streaming on a Pod. Example:
                                                            initiate deployment of a component.
                                                        - const: mutate
                                                          description: >-
                                                            For capabilities related to mutating an
                                                            entity. Example: the ability to change
                                                            the configuration of a component.
                                                        - const: view
                                                          description: >-
                                                            For capabilities related to viewing an
                                                            entity. Example: the ability to view a
                                                            components configuration.
                                                        - const: interaction
                                                          description: >-
                                                            Catch all for capabilities related to
                                                            interaction with entities. Example: the
                                                            ability for a component to be dragged
                                                            and dropped. Example: supports event
                                                            bubbling to parent components. 
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: kind
                                                        json: kind
                                                    type:
                                                      description: >-
                                                        Classification of capabilities. Used to
                                                        group capabilities similar in nature.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: type
                                                        json: type
                                                    subType:
                                                      description: >-
                                                        Most granular unit of capability
                                                        classification. The combination of Kind,
                                                        Type and SubType together uniquely
                                                        identify a Capability.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: subType
                                                        json: subType
                                                    key:
                                                      description: Key that backs the capability.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: key
                                                        json: key
                                                    entityState:
                                                      description: >-
                                                        State of the entity in which the
                                                        capability is applicable.
                                                      type: array
                                                      items:
                                                        type: string
                                                        enum:
                                                          - declaration
                                                          - instance
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        description: >-
                                                          A string starting with an alphanumeric
                                                          character. Spaces and hyphens allowed.
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: entityState
                                                          json: entityState
                                                    status:
                                                      type: string
                                                      description: Status of the capability
                                                      default: enabled
                                                      enum:
                                                        - enabled
                                                        - disabled
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: status
                                                        json: status
                                                    metadata:
                                                      type: object
                                                      description: >-
                                                        Metadata contains additional information
                                                        associated with the capability.
                                                        Extension point.
                                                      additionalProperties: true
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: metadata
                                                        json: metadata
                                              isAnnotation:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the model and its
                                                  entities should be treated as deployable
                                                  entities or as logical representations.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: isAnnotation
                                                  json: isAnnotation
                                              primaryColor:
                                                type: string
                                                description: Primary color associated with the model.
                                                minLength: 1
                                                maxLength: 50
                                                x-oapi-codegen-extra-tags:
                                                  yaml: primaryColor
                                                  json: primaryColor
                                              secondaryColor:
                                                type: string
                                                description: >-
                                                  Secondary color associated with the
                                                  model.
                                                minLength: 1
                                                maxLength: 50
                                                x-oapi-codegen-extra-tags:
                                                  yaml: secondaryColor
                                                  json: secondaryColor
                                              svgWhite:
                                                type: string
                                                description: >-
                                                  SVG representation of the model in white
                                                  color.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgWhite
                                                  json: svgWhite
                                              svgColor:
                                                type: string
                                                description: >-
                                                  SVG representation of the model in
                                                  colored format.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgColor
                                                  json: svgColor
                                              svgComplete:
                                                type: string
                                                description: >-
                                                  SVG representation of the complete
                                                  model.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgComplete
                                                  json: svgComplete
                                            x-oapi-codegen-extra-tags:
                                              gorm: type:bytes;serializer:json
                                            additionalProperties: true
                                          model:
                                            type: object
                                            description: >-
                                              Registrant-defined data associated with
                                              the model. Properties pertain to the
                                              software being managed (e.g. Kubernetes
                                              v1.31)
                                            required:
                                              - version
                                            properties:
                                              version:
                                                description: >-
                                                  Version of the model as defined by the
                                                  registrant.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: version
                                                  json: version
                                                type: string
                                                minLength: 5
                                                maxLength: 100
                                                pattern: >-
                                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            x-oapi-codegen-extra-tags:
                                              gorm: type:bytes;serializer:json
                                        required:
                                          - name
                                          - version
                                          - registrant
                                          - category
                                      id:
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      match:
                                        type: object
                                        additionalProperties: false
                                        oneOf:
                                          - type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                          - properties:
                                              from:
                                                $comment: >-
                                                  Type is array so that mutliple bindings
                                                  can be supported between 2 nodes
                                                type: array
                                                items:
                                                  type: object
                                                  allOf:
                                                    - properties:
                                                        kind:
                                                          type: string
                                                        id:
                                                          type: string
                                                          format: uuid
                                                          description: >-
                                                            A Universally Unique Identifier used to
                                                            uniquely identify entites in Meshery.
                                                            The UUID core defintion is used across
                                                            different schemas.
                                                          x-go-type: uuid.UUID
                                                          x-go-type-import:
                                                            path: github.com/gofrs/uuid
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: id
                                                            json: id
                                                    - oneOf:
                                                        - properties:
                                                            mutatorRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  The sequence of mutatorRef and
                                                                  mutatedRef must match. eg: mutatorRef:
                                                                  [[config, url], [config, name]],
                                                                  mutatedRef: [[configPatch, value],
                                                                  [name]]. The value [config, url] will be
                                                                  patched at [configPatch, value].
                                                                  Similarly [config,name] will be patched
                                                                  at [name].
                                                              description: >-
                                                                JSON ref to value from where patch
                                                                should be applied.
                                                        - properties:
                                                            mutatedRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  JSONPath
                                                                  (https://en.wikipedia.org/wiki/JSONPath)
                                                                  to property to be patched.
                                              to:
                                                $comment: >-
                                                  Type is array so that mutliple bindings
                                                  can be supported between 2 nodes
                                                type: array
                                                items:
                                                  type: object
                                                  allOf:
                                                    - properties:
                                                        kind:
                                                          type: string
                                                        id:
                                                          type: string
                                                          format: uuid
                                                          description: >-
                                                            A Universally Unique Identifier used to
                                                            uniquely identify entites in Meshery.
                                                            The UUID core defintion is used across
                                                            different schemas.
                                                          x-go-type: uuid.UUID
                                                          x-go-type-import:
                                                            path: github.com/gofrs/uuid
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: id
                                                            json: id
                                                    - oneOf:
                                                        - properties:
                                                            mutatorRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  The sequence of mutatorRef and
                                                                  mutatedRef must match. eg: mutatorRef:
                                                                  [[config, url], [config, name]],
                                                                  mutatedRef: [[configPatch, value],
                                                                  [name]]. The value [config, url] will be
                                                                  patched at [configPatch, value].
                                                                  Similarly [config,name] will be patched
                                                                  at [name].
                                                              description: >-
                                                                JSON ref to value from where patch
                                                                should be applied.
                                                        - properties:
                                                            mutatedRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  JSONPath
                                                                  (https://en.wikipedia.org/wiki/JSONPath)
                                                                  to property to be patched.
                                        x-oapi-codegen-extra-tags:
                                          yaml: match
                                          json: match
                                      patch:
                                        allOf:
                                          - properties:
                                              patchStrategy:
                                                description: >-
                                                  patchStrategy allows you to make
                                                  specific changes to a resource using a
                                                  standard JSON Patch format (RFC 6902). 


                                                  add: Inserts a value into an array or
                                                  adds a member to an object.

                                                  replace: Replaces a value.

                                                  merge: Combines the values of the target
                                                  location with the values from the patch.
                                                  If the target location doesn't exist, it
                                                  is created.

                                                  strategic:specific to Kubernetes and
                                                  understands the structure of Kubernetes
                                                  objects. It can handle complex changes
                                                  like updating lists and maps, as well as
                                                  preserving default values. However, it's
                                                  not supported for custom resources. For
                                                  custom resources, only JSON Patch and
                                                  Merge Patch are typically supported.

                                                  remove: Removes a value.

                                                  copy: Copies a value from one location
                                                  to another.

                                                  move: Moves a value from one location to
                                                  another.

                                                  test: Tests that a value at the target
                                                  location is equal to a specified value.
                                                $comment: >-
                                                  Array Indexing: When working with
                                                  arrays, be aware that Kubernetes uses
                                                  zero-based indexing in JSON patch paths.

                                                  Merge Patch vs. JSON Patch: Merge
                                                  patches are less flexible than JSON
                                                  patches and do not support all the same
                                                  operations.

                                                  Strategic Merge Patch: For some
                                                  Kubernetes resources, you can also use
                                                  the strategic type for a strategic merge
                                                  patch, which understands the structure
                                                  of Kubernetes objects and can handle
                                                  complex operations.
                                                type: string
                                                enum:
                                                  - merge
                                                  - strategic
                                                  - add
                                                  - remove
                                                  - copy
                                                  - move
                                                  - test
                                                default: copy
                                          - oneOf:
                                              - properties:
                                                  mutatorRef:
                                                    type: array
                                                    items:
                                                      type: array
                                                      items:
                                                        type: string
                                                      description: >-
                                                        The sequence of mutatorRef and
                                                        mutatedRef must match. eg: mutatorRef:
                                                        [[config, url], [config, name]],
                                                        mutatedRef: [[configPatch, value],
                                                        [name]]. The value [config, url] will be
                                                        patched at [configPatch, value].
                                                        Similarly [config,name] will be patched
                                                        at [name].
                                                    description: >-
                                                      JSON ref to value from where patch
                                                      should be applied.
                                              - properties:
                                                  mutatedRef:
                                                    type: array
                                                    items:
                                                      type: array
                                                      items:
                                                        type: string
                                                      description: >-
                                                        JSONPath
                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                        to property to be patched.
                                        x-oapi-codegen-extra-tags:
                                          yaml: patch
                                          json: patch
                                    description: >-
                                      Optional fields that are a part of the
                                      `from` selector. Absence of a field has an
                                      implied * meaning.
                            allow:
                              description: >-
                                Selectors used to define relationships which are
                                allowed.
                              type: object
                              required:
                                - to
                                - from
                              properties:
                                from:
                                  description: >-
                                    Describes the component(s) which are
                                    involved in the relationship along with a
                                    set of actions to perform upon selection
                                    match.
                                  type: array
                                  items:
                                    type: object
                                    additionalProperties: false
                                    properties:
                                      kind:
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: kind
                                          json: kind
                                      match_strategy_matrix:
                                        description: >-
                                          Strategy criterion for determing how to
                                          match the values at mutator/mutated
                                          paths
                                        type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      model:
                                        description: >-
                                          Name of the model implicated by this
                                          selector. Learn more at
                                          https://docs.meshery.io/concepts/models
                                        $id: https://schemas.meshery.io/model.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        additionalProperties: false
                                        type: object
                                        properties:
                                          id:
                                            description: >-
                                              Uniquely identifies the entity (i.e.
                                              component) as defined in a declaration
                                              (i.e. design).
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          schemaVersion:
                                            description: >-
                                              Specifies the version of the schema used
                                              for the definition.
                                            x-oapi-codegen-extra-tags:
                                              yaml: schemaVersion
                                              json: schemaVersion
                                            type: string
                                            minLength: 2
                                            maxLength: 100
                                            pattern: >-
                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                            example:
                                              - v1
                                              - v1alpha1
                                              - v2beta3
                                              - v1.custom-suffix
                                          version:
                                            description: Version of the model definition.
                                            type: string
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                          name:
                                            description: >-
                                              The unique name for the model within the
                                              scope of a registrant.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          displayName:
                                            description: Human-readable name for the model.
                                            minLength: 1
                                            maxLength: 100
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                            x-oapi-codegen-extra-tags:
                                              yaml: displayName
                                              json: displayName
                                          description:
                                            type: string
                                            description: Description of the model.
                                            minLength: 1
                                            maxLength: 1000
                                            x-oapi-codegen-extra-tags:
                                              yaml: description
                                              json: description
                                          status:
                                            type: string
                                            description: >-
                                              Status of model, including:

                                              - duplicate: this component is a
                                              duplicate of another. The component that
                                              is to be the canonical reference and
                                              that is duplicated by other components
                                              should not be assigned the 'duplicate'
                                              status.

                                              - maintenance: model is unavailable for
                                              a period of time.

                                              - enabled: model is available for use
                                              for all users of this Meshery Server.

                                              - ignored: model is unavailable for use
                                              for all users of this Meshery Server.
                                            enum:
                                              - ignored
                                              - enabled
                                              - duplicate
                                            x-oapi-codegen-extra-tags:
                                              yaml: status
                                              json: status
                                          registrant:
                                            x-oapi-codegen-extra-tags:
                                              yaml: registrant
                                              json: registrant
                                              gorm: foreignKey:RegistrantId;references:Id
                                            $id: >-
                                              https://schemas.meshery.io/component.json
                                            $schema: http://json-schema.org/draft-07/schema#
                                            description: >-
                                              Meshery Connections are managed and
                                              unmanaged resources that either through
                                              discovery or manual entry are tracked by
                                              Meshery. Learn more at
                                              https://docs.meshery.io/concepts/logical/connections
                                            additionalProperties: false
                                            type: object
                                            required:
                                              - kind
                                              - type
                                              - status
                                            properties:
                                              id:
                                                description: ID
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              name:
                                                x-oapi-codegen-extra-tags:
                                                  db: name
                                                  yaml: name
                                                  json: name
                                                type: string
                                                description: Connection Name
                                              credential_id:
                                                x-go-name: CredentialId
                                                x-oapi-codegen-extra-tags:
                                                  db: credential_id
                                                  yaml: credential_id
                                                  json: credential_id
                                                description: Credential ID
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                              type:
                                                x-oapi-codegen-extra-tags:
                                                  db: type
                                                  yaml: type
                                                  json: type
                                                type: string
                                                description: Connection Type
                                              sub_type:
                                                x-oapi-codegen-extra-tags:
                                                  db: sub_type
                                                  yaml: sub_type
                                                  json: sub_type
                                                type: string
                                                description: Connection Subtype
                                              kind:
                                                x-oapi-codegen-extra-tags:
                                                  db: kind
                                                  yaml: kind
                                                  json: kind
                                                type: string
                                                description: Connection Kind
                                              metadata:
                                                x-oapi-codegen-extra-tags:
                                                  db: metadata
                                                  yaml: metadata
                                                  json: metadata
                                                type: object
                                              status:
                                                x-oapi-codegen-extra-tags:
                                                  db: status
                                                  yaml: status
                                                  json: status
                                                description: Connection Status
                                                type: string
                                                enum:
                                                  - discovered
                                                  - registered
                                                  - connected
                                                  - ignored
                                                  - maintenance
                                                  - disconnected
                                                  - deleted
                                                  - not found
                                              user_id:
                                                x-go-name: UserID
                                                x-oapi-codegen-extra-tags:
                                                  yaml: user_id
                                                  json: user_id
                                                type: string
                                                format: uuid
                                                description: >-
                                                  A Universally Unique Identifier used to
                                                  uniquely identify entites in Meshery.
                                                  The UUID core defintion is used across
                                                  different schemas.
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                              created_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: created_at
                                                  json: created_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                              updated_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: updated_at
                                                  json: updated_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                              deleted_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: deleted_at
                                                  json: deleted_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                          category:
                                            type: object
                                            description: Category of the model.
                                            properties:
                                              id:
                                                type: string
                                                format: uuid
                                                description: >-
                                                  A Universally Unique Identifier used to
                                                  uniquely identify entites in Meshery.
                                                  The UUID core defintion is used across
                                                  different schemas.
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              name:
                                                type: string
                                                minLength: 1
                                                maxLength: 100
                                                x-oapi-codegen-extra-tags:
                                                  yaml: name
                                                  json: name
                                              metadata:
                                                type: object
                                                x-oapi-codegen-extra-tags:
                                                  yaml: metadata
                                                  json: metadata
                                            x-oapi-codegen-extra-tags:
                                              yaml: category
                                              json: category
                                              gorm: foreignKey:CategoryId;references:Id
                                          subCategory:
                                            type: string
                                            description: Sub-category of the model.
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: subCategory
                                              json: subCategory
                                          metadata:
                                            type: object
                                            description: >-
                                              Metadata containing additional
                                              information associated with the model.
                                            properties:
                                              capabilities:
                                                type: array
                                                description: Capabilities associated with the model
                                                items:
                                                  $id: >-
                                                    https://schemas.meshery.io/capability.json
                                                  $schema: http://json-schema.org/draft-07/schema#
                                                  description: >-
                                                    Meshery manages entities in accordance
                                                    with their specific capabilities. This
                                                    field explicitly identifies those
                                                    capabilities largely by what actions a
                                                    given component supports; e.g.
                                                    metric-scrape, sub-interface, and so on.
                                                    This field is extensible. Entities may
                                                    define a broad array of capabilities,
                                                    which are in-turn dynamically
                                                    interpretted by Meshery for full
                                                    lifecycle management.
                                                  additionalProperties: false
                                                  type: object
                                                  required:
                                                    - schemaVersion
                                                    - version
                                                    - displayName
                                                    - kind
                                                    - type
                                                    - entityState
                                                    - status
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                                  properties:
                                                    schemaVersion:
                                                      description: >-
                                                        Specifies the version of the schema to
                                                        which the capability definition
                                                        conforms.
                                                      type: string
                                                      minLength: 2
                                                      maxLength: 100
                                                      pattern: >-
                                                        ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                      example:
                                                        - v1
                                                        - v1alpha1
                                                        - v2beta3
                                                        - v1.custom-suffix
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: schemaVersion
                                                        json: schemaVersion
                                                    version:
                                                      description: Version of the capability definition.
                                                      type: string
                                                      minLength: 5
                                                      maxLength: 100
                                                      pattern: >-
                                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: version
                                                        json: version
                                                    displayName:
                                                      description: >-
                                                        Name of the capability in human-readible
                                                        format.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: displayName
                                                        json: displayName
                                                    description:
                                                      type: string
                                                      description: >-
                                                        A written representation of the purpose
                                                        and characteristics of the capability.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: description
                                                        json: description
                                                    kind:
                                                      description: >-
                                                        Top-level categorization of the
                                                        capability
                                                      additionalProperties: false
                                                      anyOf:
                                                        - const: action
                                                          description: >-
                                                            For capabilities related to executing
                                                            actions on entities. Example: initiate
                                                            log streaming on a Pod. Example:
                                                            initiate deployment of a component.
                                                        - const: mutate
                                                          description: >-
                                                            For capabilities related to mutating an
                                                            entity. Example: the ability to change
                                                            the configuration of a component.
                                                        - const: view
                                                          description: >-
                                                            For capabilities related to viewing an
                                                            entity. Example: the ability to view a
                                                            components configuration.
                                                        - const: interaction
                                                          description: >-
                                                            Catch all for capabilities related to
                                                            interaction with entities. Example: the
                                                            ability for a component to be dragged
                                                            and dropped. Example: supports event
                                                            bubbling to parent components. 
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: kind
                                                        json: kind
                                                    type:
                                                      description: >-
                                                        Classification of capabilities. Used to
                                                        group capabilities similar in nature.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: type
                                                        json: type
                                                    subType:
                                                      description: >-
                                                        Most granular unit of capability
                                                        classification. The combination of Kind,
                                                        Type and SubType together uniquely
                                                        identify a Capability.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: subType
                                                        json: subType
                                                    key:
                                                      description: Key that backs the capability.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: key
                                                        json: key
                                                    entityState:
                                                      description: >-
                                                        State of the entity in which the
                                                        capability is applicable.
                                                      type: array
                                                      items:
                                                        type: string
                                                        enum:
                                                          - declaration
                                                          - instance
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        description: >-
                                                          A string starting with an alphanumeric
                                                          character. Spaces and hyphens allowed.
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: entityState
                                                          json: entityState
                                                    status:
                                                      type: string
                                                      description: Status of the capability
                                                      default: enabled
                                                      enum:
                                                        - enabled
                                                        - disabled
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: status
                                                        json: status
                                                    metadata:
                                                      type: object
                                                      description: >-
                                                        Metadata contains additional information
                                                        associated with the capability.
                                                        Extension point.
                                                      additionalProperties: true
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: metadata
                                                        json: metadata
                                              isAnnotation:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the model and its
                                                  entities should be treated as deployable
                                                  entities or as logical representations.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: isAnnotation
                                                  json: isAnnotation
                                              primaryColor:
                                                type: string
                                                description: Primary color associated with the model.
                                                minLength: 1
                                                maxLength: 50
                                                x-oapi-codegen-extra-tags:
                                                  yaml: primaryColor
                                                  json: primaryColor
                                              secondaryColor:
                                                type: string
                                                description: >-
                                                  Secondary color associated with the
                                                  model.
                                                minLength: 1
                                                maxLength: 50
                                                x-oapi-codegen-extra-tags:
                                                  yaml: secondaryColor
                                                  json: secondaryColor
                                              svgWhite:
                                                type: string
                                                description: >-
                                                  SVG representation of the model in white
                                                  color.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgWhite
                                                  json: svgWhite
                                              svgColor:
                                                type: string
                                                description: >-
                                                  SVG representation of the model in
                                                  colored format.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgColor
                                                  json: svgColor
                                              svgComplete:
                                                type: string
                                                description: >-
                                                  SVG representation of the complete
                                                  model.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgComplete
                                                  json: svgComplete
                                            x-oapi-codegen-extra-tags:
                                              gorm: type:bytes;serializer:json
                                            additionalProperties: true
                                          model:
                                            type: object
                                            description: >-
                                              Registrant-defined data associated with
                                              the model. Properties pertain to the
                                              software being managed (e.g. Kubernetes
                                              v1.31)
                                            required:
                                              - version
                                            properties:
                                              version:
                                                description: >-
                                                  Version of the model as defined by the
                                                  registrant.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: version
                                                  json: version
                                                type: string
                                                minLength: 5
                                                maxLength: 100
                                                pattern: >-
                                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            x-oapi-codegen-extra-tags:
                                              gorm: type:bytes;serializer:json
                                        required:
                                          - name
                                          - version
                                          - registrant
                                          - category
                                      id:
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      match:
                                        type: object
                                        additionalProperties: false
                                        oneOf:
                                          - type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                          - properties:
                                              from:
                                                $comment: >-
                                                  Type is array so that mutliple bindings
                                                  can be supported between 2 nodes
                                                type: array
                                                items:
                                                  type: object
                                                  allOf:
                                                    - properties:
                                                        kind:
                                                          type: string
                                                        id:
                                                          type: string
                                                          format: uuid
                                                          description: >-
                                                            A Universally Unique Identifier used to
                                                            uniquely identify entites in Meshery.
                                                            The UUID core defintion is used across
                                                            different schemas.
                                                          x-go-type: uuid.UUID
                                                          x-go-type-import:
                                                            path: github.com/gofrs/uuid
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: id
                                                            json: id
                                                    - oneOf:
                                                        - properties:
                                                            mutatorRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  The sequence of mutatorRef and
                                                                  mutatedRef must match. eg: mutatorRef:
                                                                  [[config, url], [config, name]],
                                                                  mutatedRef: [[configPatch, value],
                                                                  [name]]. The value [config, url] will be
                                                                  patched at [configPatch, value].
                                                                  Similarly [config,name] will be patched
                                                                  at [name].
                                                              description: >-
                                                                JSON ref to value from where patch
                                                                should be applied.
                                                        - properties:
                                                            mutatedRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  JSONPath
                                                                  (https://en.wikipedia.org/wiki/JSONPath)
                                                                  to property to be patched.
                                              to:
                                                $comment: >-
                                                  Type is array so that mutliple bindings
                                                  can be supported between 2 nodes
                                                type: array
                                                items:
                                                  type: object
                                                  allOf:
                                                    - properties:
                                                        kind:
                                                          type: string
                                                        id:
                                                          type: string
                                                          format: uuid
                                                          description: >-
                                                            A Universally Unique Identifier used to
                                                            uniquely identify entites in Meshery.
                                                            The UUID core defintion is used across
                                                            different schemas.
                                                          x-go-type: uuid.UUID
                                                          x-go-type-import:
                                                            path: github.com/gofrs/uuid
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: id
                                                            json: id
                                                    - oneOf:
                                                        - properties:
                                                            mutatorRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  The sequence of mutatorRef and
                                                                  mutatedRef must match. eg: mutatorRef:
                                                                  [[config, url], [config, name]],
                                                                  mutatedRef: [[configPatch, value],
                                                                  [name]]. The value [config, url] will be
                                                                  patched at [configPatch, value].
                                                                  Similarly [config,name] will be patched
                                                                  at [name].
                                                              description: >-
                                                                JSON ref to value from where patch
                                                                should be applied.
                                                        - properties:
                                                            mutatedRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  JSONPath
                                                                  (https://en.wikipedia.org/wiki/JSONPath)
                                                                  to property to be patched.
                                        x-oapi-codegen-extra-tags:
                                          yaml: match
                                          json: match
                                      patch:
                                        allOf:
                                          - properties:
                                              patchStrategy:
                                                description: >-
                                                  patchStrategy allows you to make
                                                  specific changes to a resource using a
                                                  standard JSON Patch format (RFC 6902). 


                                                  add: Inserts a value into an array or
                                                  adds a member to an object.

                                                  replace: Replaces a value.

                                                  merge: Combines the values of the target
                                                  location with the values from the patch.
                                                  If the target location doesn't exist, it
                                                  is created.

                                                  strategic:specific to Kubernetes and
                                                  understands the structure of Kubernetes
                                                  objects. It can handle complex changes
                                                  like updating lists and maps, as well as
                                                  preserving default values. However, it's
                                                  not supported for custom resources. For
                                                  custom resources, only JSON Patch and
                                                  Merge Patch are typically supported.

                                                  remove: Removes a value.

                                                  copy: Copies a value from one location
                                                  to another.

                                                  move: Moves a value from one location to
                                                  another.

                                                  test: Tests that a value at the target
                                                  location is equal to a specified value.
                                                $comment: >-
                                                  Array Indexing: When working with
                                                  arrays, be aware that Kubernetes uses
                                                  zero-based indexing in JSON patch paths.

                                                  Merge Patch vs. JSON Patch: Merge
                                                  patches are less flexible than JSON
                                                  patches and do not support all the same
                                                  operations.

                                                  Strategic Merge Patch: For some
                                                  Kubernetes resources, you can also use
                                                  the strategic type for a strategic merge
                                                  patch, which understands the structure
                                                  of Kubernetes objects and can handle
                                                  complex operations.
                                                type: string
                                                enum:
                                                  - merge
                                                  - strategic
                                                  - add
                                                  - remove
                                                  - copy
                                                  - move
                                                  - test
                                                default: copy
                                          - oneOf:
                                              - properties:
                                                  mutatorRef:
                                                    type: array
                                                    items:
                                                      type: array
                                                      items:
                                                        type: string
                                                      description: >-
                                                        The sequence of mutatorRef and
                                                        mutatedRef must match. eg: mutatorRef:
                                                        [[config, url], [config, name]],
                                                        mutatedRef: [[configPatch, value],
                                                        [name]]. The value [config, url] will be
                                                        patched at [configPatch, value].
                                                        Similarly [config,name] will be patched
                                                        at [name].
                                                    description: >-
                                                      JSON ref to value from where patch
                                                      should be applied.
                                              - properties:
                                                  mutatedRef:
                                                    type: array
                                                    items:
                                                      type: array
                                                      items:
                                                        type: string
                                                      description: >-
                                                        JSONPath
                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                        to property to be patched.
                                        x-oapi-codegen-extra-tags:
                                          yaml: patch
                                          json: patch
                                    description: >-
                                      Optional fields that are a part of the
                                      `from` selector. Absence of a field has an
                                      implied * meaning.
                                to:
                                  description: >-
                                    Describes the component(s) which are
                                    involved in the relationship along with a
                                    set of actions to perform upon selection
                                    match.
                                  type: array
                                  items:
                                    type: object
                                    additionalProperties: false
                                    properties:
                                      kind:
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: kind
                                          json: kind
                                      model:
                                        description: >-
                                          Name of the model implicated by this
                                          selector. Learn more at
                                          https://docs.meshery.io/concepts/models
                                        $id: https://schemas.meshery.io/model.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        additionalProperties: false
                                        type: object
                                        properties:
                                          id:
                                            description: >-
                                              Uniquely identifies the entity (i.e.
                                              component) as defined in a declaration
                                              (i.e. design).
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          schemaVersion:
                                            description: >-
                                              Specifies the version of the schema used
                                              for the definition.
                                            x-oapi-codegen-extra-tags:
                                              yaml: schemaVersion
                                              json: schemaVersion
                                            type: string
                                            minLength: 2
                                            maxLength: 100
                                            pattern: >-
                                              ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                            example:
                                              - v1
                                              - v1alpha1
                                              - v2beta3
                                              - v1.custom-suffix
                                          version:
                                            description: Version of the model definition.
                                            type: string
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                          name:
                                            description: >-
                                              The unique name for the model within the
                                              scope of a registrant.
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          displayName:
                                            description: Human-readable name for the model.
                                            minLength: 1
                                            maxLength: 100
                                            type: string
                                            pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                            x-oapi-codegen-extra-tags:
                                              yaml: displayName
                                              json: displayName
                                          description:
                                            type: string
                                            description: Description of the model.
                                            minLength: 1
                                            maxLength: 1000
                                            x-oapi-codegen-extra-tags:
                                              yaml: description
                                              json: description
                                          status:
                                            type: string
                                            description: >-
                                              Status of model, including:

                                              - duplicate: this component is a
                                              duplicate of another. The component that
                                              is to be the canonical reference and
                                              that is duplicated by other components
                                              should not be assigned the 'duplicate'
                                              status.

                                              - maintenance: model is unavailable for
                                              a period of time.

                                              - enabled: model is available for use
                                              for all users of this Meshery Server.

                                              - ignored: model is unavailable for use
                                              for all users of this Meshery Server.
                                            enum:
                                              - ignored
                                              - enabled
                                              - duplicate
                                            x-oapi-codegen-extra-tags:
                                              yaml: status
                                              json: status
                                          registrant:
                                            x-oapi-codegen-extra-tags:
                                              yaml: registrant
                                              json: registrant
                                              gorm: foreignKey:RegistrantId;references:Id
                                            $id: >-
                                              https://schemas.meshery.io/component.json
                                            $schema: http://json-schema.org/draft-07/schema#
                                            description: >-
                                              Meshery Connections are managed and
                                              unmanaged resources that either through
                                              discovery or manual entry are tracked by
                                              Meshery. Learn more at
                                              https://docs.meshery.io/concepts/logical/connections
                                            additionalProperties: false
                                            type: object
                                            required:
                                              - kind
                                              - type
                                              - status
                                            properties:
                                              id:
                                                description: ID
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              name:
                                                x-oapi-codegen-extra-tags:
                                                  db: name
                                                  yaml: name
                                                  json: name
                                                type: string
                                                description: Connection Name
                                              credential_id:
                                                x-go-name: CredentialId
                                                x-oapi-codegen-extra-tags:
                                                  db: credential_id
                                                  yaml: credential_id
                                                  json: credential_id
                                                description: Credential ID
                                                type: string
                                                format: uuid
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                              type:
                                                x-oapi-codegen-extra-tags:
                                                  db: type
                                                  yaml: type
                                                  json: type
                                                type: string
                                                description: Connection Type
                                              sub_type:
                                                x-oapi-codegen-extra-tags:
                                                  db: sub_type
                                                  yaml: sub_type
                                                  json: sub_type
                                                type: string
                                                description: Connection Subtype
                                              kind:
                                                x-oapi-codegen-extra-tags:
                                                  db: kind
                                                  yaml: kind
                                                  json: kind
                                                type: string
                                                description: Connection Kind
                                              metadata:
                                                x-oapi-codegen-extra-tags:
                                                  db: metadata
                                                  yaml: metadata
                                                  json: metadata
                                                type: object
                                              status:
                                                x-oapi-codegen-extra-tags:
                                                  db: status
                                                  yaml: status
                                                  json: status
                                                description: Connection Status
                                                type: string
                                                enum:
                                                  - discovered
                                                  - registered
                                                  - connected
                                                  - ignored
                                                  - maintenance
                                                  - disconnected
                                                  - deleted
                                                  - not found
                                              user_id:
                                                x-go-name: UserID
                                                x-oapi-codegen-extra-tags:
                                                  yaml: user_id
                                                  json: user_id
                                                type: string
                                                format: uuid
                                                description: >-
                                                  A Universally Unique Identifier used to
                                                  uniquely identify entites in Meshery.
                                                  The UUID core defintion is used across
                                                  different schemas.
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                              created_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: created_at
                                                  json: created_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                              updated_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: updated_at
                                                  json: updated_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                              deleted_at:
                                                x-oapi-codegen-extra-tags:
                                                  yaml: deleted_at
                                                  json: deleted_at
                                                type: string
                                                format: date-time
                                                x-go-type-skip-optional-pointer: true
                                          category:
                                            type: object
                                            description: Category of the model.
                                            properties:
                                              id:
                                                type: string
                                                format: uuid
                                                description: >-
                                                  A Universally Unique Identifier used to
                                                  uniquely identify entites in Meshery.
                                                  The UUID core defintion is used across
                                                  different schemas.
                                                x-go-type: uuid.UUID
                                                x-go-type-import:
                                                  path: github.com/gofrs/uuid
                                                x-oapi-codegen-extra-tags:
                                                  yaml: id
                                                  json: id
                                              name:
                                                type: string
                                                minLength: 1
                                                maxLength: 100
                                                x-oapi-codegen-extra-tags:
                                                  yaml: name
                                                  json: name
                                              metadata:
                                                type: object
                                                x-oapi-codegen-extra-tags:
                                                  yaml: metadata
                                                  json: metadata
                                            x-oapi-codegen-extra-tags:
                                              yaml: category
                                              json: category
                                              gorm: foreignKey:CategoryId;references:Id
                                          subCategory:
                                            type: string
                                            description: Sub-category of the model.
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: subCategory
                                              json: subCategory
                                          metadata:
                                            type: object
                                            description: >-
                                              Metadata containing additional
                                              information associated with the model.
                                            properties:
                                              capabilities:
                                                type: array
                                                description: Capabilities associated with the model
                                                items:
                                                  $id: >-
                                                    https://schemas.meshery.io/capability.json
                                                  $schema: http://json-schema.org/draft-07/schema#
                                                  description: >-
                                                    Meshery manages entities in accordance
                                                    with their specific capabilities. This
                                                    field explicitly identifies those
                                                    capabilities largely by what actions a
                                                    given component supports; e.g.
                                                    metric-scrape, sub-interface, and so on.
                                                    This field is extensible. Entities may
                                                    define a broad array of capabilities,
                                                    which are in-turn dynamically
                                                    interpretted by Meshery for full
                                                    lifecycle management.
                                                  additionalProperties: false
                                                  type: object
                                                  required:
                                                    - schemaVersion
                                                    - version
                                                    - displayName
                                                    - kind
                                                    - type
                                                    - entityState
                                                    - status
                                                  x-oapi-codegen-extra-tags:
                                                    gorm: type:bytes;serializer:json
                                                  properties:
                                                    schemaVersion:
                                                      description: >-
                                                        Specifies the version of the schema to
                                                        which the capability definition
                                                        conforms.
                                                      type: string
                                                      minLength: 2
                                                      maxLength: 100
                                                      pattern: >-
                                                        ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                      example:
                                                        - v1
                                                        - v1alpha1
                                                        - v2beta3
                                                        - v1.custom-suffix
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: schemaVersion
                                                        json: schemaVersion
                                                    version:
                                                      description: Version of the capability definition.
                                                      type: string
                                                      minLength: 5
                                                      maxLength: 100
                                                      pattern: >-
                                                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: version
                                                        json: version
                                                    displayName:
                                                      description: >-
                                                        Name of the capability in human-readible
                                                        format.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: displayName
                                                        json: displayName
                                                    description:
                                                      type: string
                                                      description: >-
                                                        A written representation of the purpose
                                                        and characteristics of the capability.
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: description
                                                        json: description
                                                    kind:
                                                      description: >-
                                                        Top-level categorization of the
                                                        capability
                                                      additionalProperties: false
                                                      anyOf:
                                                        - const: action
                                                          description: >-
                                                            For capabilities related to executing
                                                            actions on entities. Example: initiate
                                                            log streaming on a Pod. Example:
                                                            initiate deployment of a component.
                                                        - const: mutate
                                                          description: >-
                                                            For capabilities related to mutating an
                                                            entity. Example: the ability to change
                                                            the configuration of a component.
                                                        - const: view
                                                          description: >-
                                                            For capabilities related to viewing an
                                                            entity. Example: the ability to view a
                                                            components configuration.
                                                        - const: interaction
                                                          description: >-
                                                            Catch all for capabilities related to
                                                            interaction with entities. Example: the
                                                            ability for a component to be dragged
                                                            and dropped. Example: supports event
                                                            bubbling to parent components. 
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: kind
                                                        json: kind
                                                    type:
                                                      description: >-
                                                        Classification of capabilities. Used to
                                                        group capabilities similar in nature.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: type
                                                        json: type
                                                    subType:
                                                      description: >-
                                                        Most granular unit of capability
                                                        classification. The combination of Kind,
                                                        Type and SubType together uniquely
                                                        identify a Capability.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: subType
                                                        json: subType
                                                    key:
                                                      description: Key that backs the capability.
                                                      type: string
                                                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: key
                                                        json: key
                                                    entityState:
                                                      description: >-
                                                        State of the entity in which the
                                                        capability is applicable.
                                                      type: array
                                                      items:
                                                        type: string
                                                        enum:
                                                          - declaration
                                                          - instance
                                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                        description: >-
                                                          A string starting with an alphanumeric
                                                          character. Spaces and hyphens allowed.
                                                        x-oapi-codegen-extra-tags:
                                                          yaml: entityState
                                                          json: entityState
                                                    status:
                                                      type: string
                                                      description: Status of the capability
                                                      default: enabled
                                                      enum:
                                                        - enabled
                                                        - disabled
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: status
                                                        json: status
                                                    metadata:
                                                      type: object
                                                      description: >-
                                                        Metadata contains additional information
                                                        associated with the capability.
                                                        Extension point.
                                                      additionalProperties: true
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: metadata
                                                        json: metadata
                                              isAnnotation:
                                                type: boolean
                                                description: >-
                                                  Indicates whether the model and its
                                                  entities should be treated as deployable
                                                  entities or as logical representations.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: isAnnotation
                                                  json: isAnnotation
                                              primaryColor:
                                                type: string
                                                description: Primary color associated with the model.
                                                minLength: 1
                                                maxLength: 50
                                                x-oapi-codegen-extra-tags:
                                                  yaml: primaryColor
                                                  json: primaryColor
                                              secondaryColor:
                                                type: string
                                                description: >-
                                                  Secondary color associated with the
                                                  model.
                                                minLength: 1
                                                maxLength: 50
                                                x-oapi-codegen-extra-tags:
                                                  yaml: secondaryColor
                                                  json: secondaryColor
                                              svgWhite:
                                                type: string
                                                description: >-
                                                  SVG representation of the model in white
                                                  color.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgWhite
                                                  json: svgWhite
                                              svgColor:
                                                type: string
                                                description: >-
                                                  SVG representation of the model in
                                                  colored format.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgColor
                                                  json: svgColor
                                              svgComplete:
                                                type: string
                                                description: >-
                                                  SVG representation of the complete
                                                  model.
                                                minLength: 1
                                                x-oapi-codegen-extra-tags:
                                                  yaml: svgComplete
                                                  json: svgComplete
                                            x-oapi-codegen-extra-tags:
                                              gorm: type:bytes;serializer:json
                                            additionalProperties: true
                                          model:
                                            type: object
                                            description: >-
                                              Registrant-defined data associated with
                                              the model. Properties pertain to the
                                              software being managed (e.g. Kubernetes
                                              v1.31)
                                            required:
                                              - version
                                            properties:
                                              version:
                                                description: >-
                                                  Version of the model as defined by the
                                                  registrant.
                                                x-oapi-codegen-extra-tags:
                                                  yaml: version
                                                  json: version
                                                type: string
                                                minLength: 5
                                                maxLength: 100
                                                pattern: >-
                                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                            x-oapi-codegen-extra-tags:
                                              gorm: type:bytes;serializer:json
                                        required:
                                          - name
                                          - version
                                          - registrant
                                          - category
                                      id:
                                        type: string
                                        format: uuid
                                        description: >-
                                          A Universally Unique Identifier used to
                                          uniquely identify entites in Meshery.
                                          The UUID core defintion is used across
                                          different schemas.
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      match:
                                        type: object
                                        additionalProperties: false
                                        oneOf:
                                          - type: array
                                            items:
                                              type: array
                                              items:
                                                type: string
                                          - properties:
                                              from:
                                                $comment: >-
                                                  Type is array so that mutliple bindings
                                                  can be supported between 2 nodes
                                                type: array
                                                items:
                                                  type: object
                                                  allOf:
                                                    - properties:
                                                        kind:
                                                          type: string
                                                        id:
                                                          type: string
                                                          format: uuid
                                                          description: >-
                                                            A Universally Unique Identifier used to
                                                            uniquely identify entites in Meshery.
                                                            The UUID core defintion is used across
                                                            different schemas.
                                                          x-go-type: uuid.UUID
                                                          x-go-type-import:
                                                            path: github.com/gofrs/uuid
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: id
                                                            json: id
                                                    - oneOf:
                                                        - properties:
                                                            mutatorRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  The sequence of mutatorRef and
                                                                  mutatedRef must match. eg: mutatorRef:
                                                                  [[config, url], [config, name]],
                                                                  mutatedRef: [[configPatch, value],
                                                                  [name]]. The value [config, url] will be
                                                                  patched at [configPatch, value].
                                                                  Similarly [config,name] will be patched
                                                                  at [name].
                                                              description: >-
                                                                JSON ref to value from where patch
                                                                should be applied.
                                                        - properties:
                                                            mutatedRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  JSONPath
                                                                  (https://en.wikipedia.org/wiki/JSONPath)
                                                                  to property to be patched.
                                              to:
                                                $comment: >-
                                                  Type is array so that mutliple bindings
                                                  can be supported between 2 nodes
                                                type: array
                                                items:
                                                  type: object
                                                  allOf:
                                                    - properties:
                                                        kind:
                                                          type: string
                                                        id:
                                                          type: string
                                                          format: uuid
                                                          description: >-
                                                            A Universally Unique Identifier used to
                                                            uniquely identify entites in Meshery.
                                                            The UUID core defintion is used across
                                                            different schemas.
                                                          x-go-type: uuid.UUID
                                                          x-go-type-import:
                                                            path: github.com/gofrs/uuid
                                                          x-oapi-codegen-extra-tags:
                                                            yaml: id
                                                            json: id
                                                    - oneOf:
                                                        - properties:
                                                            mutatorRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  The sequence of mutatorRef and
                                                                  mutatedRef must match. eg: mutatorRef:
                                                                  [[config, url], [config, name]],
                                                                  mutatedRef: [[configPatch, value],
                                                                  [name]]. The value [config, url] will be
                                                                  patched at [configPatch, value].
                                                                  Similarly [config,name] will be patched
                                                                  at [name].
                                                              description: >-
                                                                JSON ref to value from where patch
                                                                should be applied.
                                                        - properties:
                                                            mutatedRef:
                                                              type: array
                                                              items:
                                                                type: array
                                                                items:
                                                                  type: string
                                                                description: >-
                                                                  JSONPath
                                                                  (https://en.wikipedia.org/wiki/JSONPath)
                                                                  to property to be patched.
                                        x-oapi-codegen-extra-tags:
                                          yaml: match
                                          json: match
                                      patch:
                                        allOf:
                                          - properties:
                                              patchStrategy:
                                                description: >-
                                                  patchStrategy allows you to make
                                                  specific changes to a resource using a
                                                  standard JSON Patch format (RFC 6902). 


                                                  add: Inserts a value into an array or
                                                  adds a member to an object.

                                                  replace: Replaces a value.

                                                  merge: Combines the values of the target
                                                  location with the values from the patch.
                                                  If the target location doesn't exist, it
                                                  is created.

                                                  strategic:specific to Kubernetes and
                                                  understands the structure of Kubernetes
                                                  objects. It can handle complex changes
                                                  like updating lists and maps, as well as
                                                  preserving default values. However, it's
                                                  not supported for custom resources. For
                                                  custom resources, only JSON Patch and
                                                  Merge Patch are typically supported.

                                                  remove: Removes a value.

                                                  copy: Copies a value from one location
                                                  to another.

                                                  move: Moves a value from one location to
                                                  another.

                                                  test: Tests that a value at the target
                                                  location is equal to a specified value.
                                                $comment: >-
                                                  Array Indexing: When working with
                                                  arrays, be aware that Kubernetes uses
                                                  zero-based indexing in JSON patch paths.

                                                  Merge Patch vs. JSON Patch: Merge
                                                  patches are less flexible than JSON
                                                  patches and do not support all the same
                                                  operations.

                                                  Strategic Merge Patch: For some
                                                  Kubernetes resources, you can also use
                                                  the strategic type for a strategic merge
                                                  patch, which understands the structure
                                                  of Kubernetes objects and can handle
                                                  complex operations.
                                                type: string
                                                enum:
                                                  - merge
                                                  - strategic
                                                  - add
                                                  - remove
                                                  - copy
                                                  - move
                                                  - test
                                                default: copy
                                          - oneOf:
                                              - properties:
                                                  mutatorRef:
                                                    type: array
                                                    items:
                                                      type: array
                                                      items:
                                                        type: string
                                                      description: >-
                                                        The sequence of mutatorRef and
                                                        mutatedRef must match. eg: mutatorRef:
                                                        [[config, url], [config, name]],
                                                        mutatedRef: [[configPatch, value],
                                                        [name]]. The value [config, url] will be
                                                        patched at [configPatch, value].
                                                        Similarly [config,name] will be patched
                                                        at [name].
                                                    description: >-
                                                      JSON ref to value from where patch
                                                      should be applied.
                                              - properties:
                                                  mutatedRef:
                                                    type: array
                                                    items:
                                                      type: array
                                                      items:
                                                        type: string
                                                      description: >-
                                                        JSONPath
                                                        (https://en.wikipedia.org/wiki/JSONPath)
                                                        to property to be patched.
                                        x-oapi-codegen-extra-tags:
                                          yaml: patch
                                          json: patch
                                    description: >-
                                      Optional fields that are a part of the
                                      `from` selector. Absence of a field has an
                                      implied * meaning.
              required:
                - id
                - name
                - schemaVersion
                - version
                - components
                - relationships
            updated_at:
              type: string
              format: date-time
              x-go-type-skip-optional-pointer: true
            id:
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              x-go-type-skip-optional-pointer: true
            visibility:
              type: string
              x-go-type-skip-optional-pointer: true
        save:
          type: boolean
        url:
          description: endpoint
          format": uri
          pattern: ^https?://
          x-go-type-skip-optional-pointer: true
          type: string
        name:
          type: string
    design_MesheryPatternImportRequestBody:
      type: object
      description: >-
        Choose the method you prefer to upload your  design file. Select 'File
        Upload' if you have the file on your local system, or 'URL Import' if
        you have the file hosted online.
      enum:
        - file
        - url
      properties:
        file:
          type: string
          format: file
          description: >-
            Supported formats: Kubernetes Manifests, Helm Charts, Docker
            Compose, and Meshery Designs. See [Import Designs
            Documentation](https://docs.meshery.io/guides/configuration-management/importing-designs#import-designs-using-meshery-ui)
            for details
        file_name:
          type: string
          description: The name of the pattern file being imported.
        name:
          type: string
          default: Untitled Design
          description: >-
            Provide a name for your design file. This name will help you
            identify the file more easily. You can also change the name of your
            design after importing it.
        url:
          type: string
          format: uri
          description: >-
            Provide the URL of the file you want to import. This should be a
            direct URL to a single file, for example:
            https://raw.github.com/your-design-file.yaml. Also, ensure that
            design is in a supported format: Kubernetes Manifest, Helm Chart,
            Docker Compose, or Meshery Design. See [Import Designs
            Documentation](https://docs.meshery.io/guides/configuration-management/importing-designs#import-designs-using-meshery-ui)
            for details
    component_ComponentDefinition:
      $id: https://schemas.meshery.io/component.json
      $schema: http://json-schema.org/draft-07/schema#
      description: >-
        Components are reusable building blocks for depicting capabilities
        defined within models. Learn more at
        https://docs.meshery.io/concepts/components
      additionalProperties: false
      type: object
      properties:
        id:
          description: >-
            Uniquely identifies the entity (i.e. component) as defined in a
            declaration (i.e. design).
          x-order: 1
          x-oapi-codegen-extra-tags:
            yaml: id
            json: id
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        schemaVersion:
          x-order: 2
          description: >-
            Specifies the version of the schema to which the component
            definition conforms.
          x-oapi-codegen-extra-tags:
            yaml: schemaVersion
            json: schemaVersion
          default: components.meshery.io/v1beta1
          type: string
          minLength: 2
          maxLength: 100
          pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
          example:
            - v1
            - v1alpha1
            - v2beta3
            - v1.custom-suffix
        version:
          x-order: 3
          description: Version of the component definition.
          minLength: 1
          maxLength: 50
          x-oapi-codegen-extra-tags:
            yaml: version
            json: version
          type: string
          pattern: >-
            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
          default: v0.0.1
        displayName:
          x-order: 4
          description: Name of the component in human-readible format.
          x-oapi-codegen-extra-tags:
            yaml: displayName
            json: displayName
          type: string
          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
        description:
          x-order: 5
          type: string
          description: >-
            A written representation of the purpose and characteristics of the
            component.
          x-oapi-codegen-extra-tags:
            yaml: description
            json: description
        format:
          x-order: 6
          type: string
          enum:
            - JSON
            - CUE
          default: JSON
          description: >-
            Format specifies the format used in the `component.schema` field.
            JSON is the default.
          x-oapi-codegen-extra-tags:
            yaml: format
            json: format
        model:
          x-go-type: model.ModelDefinition
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1beta1/model
          x-order: 7
          description: >-
            Reference to the specific registered model to which the component
            belongs and from which model version, category, and other properties
            may be referenced. Learn more at
            https://docs.meshery.io/concepts/models
          x-oapi-codegen-extra-tags:
            gorm: foreignKey:ModelId;references:Id
          $id: https://schemas.meshery.io/model.json
          $schema: http://json-schema.org/draft-07/schema#
          additionalProperties: false
          type: object
          properties:
            id:
              description: >-
                Uniquely identifies the entity (i.e. component) as defined in a
                declaration (i.e. design).
              x-order: 1
              x-oapi-codegen-extra-tags:
                yaml: id
                json: id
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            schemaVersion:
              description: Specifies the version of the schema used for the definition.
              x-order: 2
              x-oapi-codegen-extra-tags:
                yaml: schemaVersion
                json: schemaVersion
              default: models.meshery.io/v1beta1
              type: string
              minLength: 2
              maxLength: 100
              pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
              example:
                - v1
                - v1alpha1
                - v2beta3
                - v1.custom-suffix
            version:
              description: Version of the model definition.
              type: string
              x-order: 3
              x-oapi-codegen-extra-tags:
                yaml: version
                json: version
              minLength: 5
              maxLength: 100
              pattern: >-
                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
              default: v0.0.1
            name:
              type: string
              description: The unique name for the model within the scope of a registrant.
              helperText: Model name should be in lowercase with hyphens, not whitespaces.
              pattern: ^[a-z0-9-]+$
              examples:
                - cert-manager
              x-order: 4
              x-oapi-codegen-extra-tags:
                yaml: name
                json: name
              default: untitled-model
            displayName:
              description: Human-readable name for the model.
              helperText: >-
                Model display name may include letters, numbers, and spaces.
                Special characters are not allowed.
              minLength: 1
              maxLength: 100
              type: string
              pattern: ^[a-zA-Z0-9 ]+$
              examples:
                - Cert Manager
              x-order: 5
              x-oapi-codegen-extra-tags:
                yaml: displayName
                json: displayName
              default: Untitled Model
            description:
              type: string
              default: A new Meshery model.
              description: Description of the model.
              minLength: 1
              maxLength: 1000
              x-order: 6
              x-oapi-codegen-extra-tags:
                yaml: description,omitempty
                json: description,omitempty
            status:
              type: string
              description: >-
                Status of model, including:

                - duplicate: this component is a duplicate of another. The
                component that is to be the canonical reference and that is
                duplicated by other components should not be assigned the
                'duplicate' status.

                - maintenance: model is unavailable for a period of time.

                - enabled: model is available for use for all users of this
                Meshery Server.

                - ignored: model is unavailable for use for all users of this
                Meshery Server.
              enum:
                - ignored
                - enabled
                - duplicate
              x-order: 7
              x-oapi-codegen-extra-tags:
                yaml: status
                json: status
              default: enabled
            registrant:
              x-oapi-codegen-extra-tags:
                yaml: registrant
                json: registrant
                gorm: foreignKey:RegistrantId;references:ID
              x-order: 8
              x-go-type: connection.Connection
              x-go-type-import:
                path: github.com/meshery/schemas/models/v1beta1/connection
              $id: https://schemas.meshery.io/component.json
              $schema: http://json-schema.org/draft-07/schema#
              description: >-
                Meshery Connections are managed and unmanaged resources that
                either through discovery or manual entry are tracked by Meshery.
                Learn more at
                https://docs.meshery.io/concepts/logical/connections
              additionalProperties: false
              type: object
              required:
                - id
                - schemaVersion
                - name
                - type
                - sub_type
                - kind
                - status
              properties:
                id:
                  description: ID
                  x-order: 1
                  x-go-name: ID
                  x-oapi-codegen-extra-tags:
                    db: id
                    yaml: id
                  type: string
                  format: uuid
                  x-go-type: uuid.UUID
                  x-go-type-import:
                    path: github.com/gofrs/uuid
                  default: 00000000-0000-0000-0000-000000000000
                name:
                  x-oapi-codegen-extra-tags:
                    db: name
                    yaml: name
                  x-order: 2
                  type: string
                  description: Connection Name
                credential_id:
                  x-go-name: CredentialID
                  x-oapi-codegen-extra-tags:
                    db: credential_id
                    yaml: credential_id
                  x-order: 3
                  description: Credential ID
                  type: string
                  format: uuid
                  x-go-type: uuid.UUID
                  x-go-type-import:
                    path: github.com/gofrs/uuid
                  default: 00000000-0000-0000-0000-000000000000
                type:
                  x-oapi-codegen-extra-tags:
                    db: type
                    yaml: type
                  x-order: 4
                  type: string
                  description: Connection Type
                sub_type:
                  x-oapi-codegen-extra-tags:
                    db: sub_type
                    yaml: sub_type
                  x-order: 5
                  type: string
                  description: Connection Subtype
                kind:
                  x-oapi-codegen-extra-tags:
                    db: kind
                    yaml: kind
                  x-order: 6
                  type: string
                  description: Connection Kind
                metadata:
                  x-oapi-codegen-extra-tags:
                    db: metadata
                    yaml: metadata
                  x-order: 7
                  x-go-type: core.Map
                  x-go-type-skip-optional-pointer: true
                  type: object
                status:
                  x-oapi-codegen-extra-tags:
                    db: status
                    yaml: status
                  x-order: 8
                  description: Connection Status
                  type: string
                  enum:
                    - discovered
                    - registered
                    - connected
                    - ignored
                    - maintenance
                    - disconnected
                    - deleted
                    - not found
                user_id:
                  x-go-name: UserID
                  x-oapi-codegen-extra-tags:
                    db: user_id
                    yaml: user_id
                  x-order: 9
                  type: string
                  format: uuid
                  description: >-
                    A Universally Unique Identifier used to uniquely identify
                    entites in Meshery. The UUID core defintion is used across
                    different schemas.
                  x-go-type: uuid.UUID
                  x-go-type-import:
                    path: github.com/gofrs/uuid
                  default: 00000000-0000-0000-0000-000000000000
                created_at:
                  x-oapi-codegen-extra-tags:
                    db: created_at
                    yaml: created_at
                  x-order: 10
                  type: string
                  format: date-time
                  x-go-type-skip-optional-pointer: true
                updated_at:
                  x-oapi-codegen-extra-tags:
                    db: updated_at
                    yaml: updated_at
                  x-order: 11
                  type: string
                  format: date-time
                  x-go-type-skip-optional-pointer: true
                deleted_at:
                  x-oapi-codegen-extra-tags:
                    db: deleted_at
                    yaml: deleted_at
                  x-go-type: core.NullTime
                  x-order: 12
                  type: string
                  format: date-time
                  x-go-type-skip-optional-pointer: true
                environments:
                  type: array
                  items:
                    x-go-type: '*environment.Environment'
                    $id: https://schemas.meshery.io/environment.json
                    $schema: http://json-schema.org/draft-07/schema#
                    description: >-
                      Meshery Environments allow you to logically group related
                      Connections and their associated Credentials.. Learn more
                      at https://docs.meshery.io/concepts/logical/environments
                    additionalProperties: false
                    type: object
                    required:
                      - id
                      - name
                      - description
                      - organization_id
                    properties:
                      id:
                        description: ID
                        x-order: 1
                        x-go-name: ID
                        x-oapi-codegen-extra-tags:
                          db: id
                          yaml: id
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      name:
                        x-oapi-codegen-extra-tags:
                          db: name
                          yaml: name
                        x-order: 2
                        type: string
                        description: Environment name
                      description:
                        x-oapi-codegen-extra-tags:
                          db: description
                          yaml: description
                        x-order: 3
                        type: string
                        description: Environment description
                      organization_id:
                        x-go-name: OrganizationID
                        x-oapi-codegen-extra-tags:
                          db: organization_id
                          yaml: organization_id
                        x-order: 4
                        description: Environment organization ID
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      owner:
                        x-oapi-codegen-extra-tags:
                          db: owner
                          yaml: owner
                        x-order: 5
                        description: Environment owner
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      created_at:
                        x-oapi-codegen-extra-tags:
                          db: created_at
                          yaml: created_at
                        x-order: 6
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                      metadata:
                        x-oapi-codegen-extra-tags:
                          db: metadata
                          yaml: metadata
                        x-order: 7
                        x-go-type: core.Map
                        x-go-type-skip-optional-pointer: true
                        type: object
                      updated_at:
                        x-oapi-codegen-extra-tags:
                          db: updated_at
                          yaml: updated_at
                        x-order: 8
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                      deleted_at:
                        x-oapi-codegen-extra-tags:
                          db: deleted_at
                          yaml: deleted_at
                        x-go-type: core.NullTime
                        x-go-import: database/sql
                        x-order: 9
                        type: string
                        format: date-time
                        x-go-type-skip-optional-pointer: true
                  x-oapi-codegen-extra-tags:
                    db: '-'
                    yaml: environments
                    gorm: '-'
                  x-go-type-skip-optional-pointer: true
                  x-order: 13
                schemaVersion:
                  description: Specifies the version of the schema used for the definition.
                  x-order: 14
                  x-oapi-codegen-extra-tags:
                    yaml: schemaVersion
                    db: '-'
                    gorm: '-'
                  default: connections.meshery.io/v1beta1
                  type: string
                  minLength: 2
                  maxLength: 100
                  pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                  example:
                    - v1
                    - v1alpha1
                    - v2beta3
                    - v1.custom-suffix
            registrantId:
              description: ID of the registrant.
              x-oapi-codegen-extra-tags:
                yaml: connection_id
                json: connection_id
                gorm: column:connection_id
              x-order: 8
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            categoryId:
              description: ID of the category.
              x-oapi-codegen-extra-tags:
                yaml: '-'
                json: '-'
                gorm: categoryID
              x-order: 8
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            category:
              x-order: 9
              x-oapi-codegen-extra-tags:
                yaml: category
                json: category
                gorm: foreignKey:CategoryId;references:Id
              x-go-type: category.CategoryDefinition
              x-go-type-import:
                path: github.com/meshery/schemas/models/v1beta1/category
              $id: https://schemas.meshery.io/category.json
              $schema: http://json-schema.org/draft-07/schema#
              type: object
              description: Category of the model.
              required:
                - id
                - name
                - metadata
              properties:
                id:
                  x-order: 1
                  type: string
                  format: uuid
                  description: >-
                    A Universally Unique Identifier used to uniquely identify
                    entites in Meshery. The UUID core defintion is used across
                    different schemas.
                  x-go-type: uuid.UUID
                  x-go-type-import:
                    path: github.com/gofrs/uuid
                  default: 00000000-0000-0000-0000-000000000000
                name:
                  type: string
                  minLength: 1
                  maxLength: 100
                  x-oapi-codegen-extra-tags:
                    yaml: name
                    json: name
                    gorm: name
                  default: Uncategorized
                  description: The category of the model that determines the main grouping.
                  enum:
                    - Analytics
                    - App Definition and Development
                    - Cloud Native Network
                    - Cloud Native Storage
                    - Database
                    - Machine Learning
                    - Observability and Analysis
                    - Orchestration & Management
                    - Platform
                    - Provisioning
                    - Runtime
                    - Security & Compliance
                    - Serverless
                    - Tools
                    - Uncategorized
                  x-order: 2
                metadata:
                  type: object
                  x-oapi-codegen-extra-tags:
                    yaml: metadata,omitempty
                    json: metadata,omitempty
                    gorm: type:bytes;serializer:json
                  x-order: 3
            subCategory:
              x-order: 10
              x-go-type: subcategory.SubCategoryDefinition
              x-go-type-import:
                path: github.com/meshery/schemas/models/v1beta1/subcategory
              $id: https://schemas.meshery.io/category.json
              $schema: http://json-schema.org/draft-07/schema#
              type: string
              title: SubCategory
              description: Sub category of the model determines the secondary grouping.
              default: Uncategorized
              enum:
                - API Gateway
                - API Integration
                - Application Definition & Image Build
                - Automation & Configuration
                - Certified Kubernetes - Distribution
                - Chaos Engineering
                - Cloud Native Storage
                - Cloud Provider
                - CNI
                - Compute
                - Container Registry
                - Container Runtime
                - Container Security
                - Container
                - Content Delivery Network
                - Continuous Integration & Delivery
                - Coordination & Service Discovery
                - Database
                - Flowchart
                - Framework
                - Installable Platform
                - Key Management
                - Key Management Service
                - Kubernetes
                - Logging
                - Machine Learning
                - Management Governance
                - Metrics
                - Monitoring
                - Networking Content Delivery
                - Operating System
                - Query
                - Remote Procedure Call
                - Scheduling & Orchestration
                - Secrets Management
                - Security Identity & Compliance
                - Service Mesh
                - Service Proxy
                - Source Version Control
                - Storage
                - Specifications
                - Streaming & Messaging
                - Tools
                - Tracing
                - Uncategorized
                - Video Conferencing
              minLength: 1
              maxLength: 100
              x-oapi-codegen-extra-tags:
                yaml: subCategory
                json: subCategory
            metadata:
              type: object
              description: >-
                Metadata containing additional information associated with the
                model.
              required:
                - svgWhite
                - svgColor
              properties:
                capabilities:
                  type: array
                  description: Capabilities associated with the model
                  items:
                    x-go-type: capability.Capability
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1alpha1/capability
                    $id: https://schemas.meshery.io/capability.json
                    $schema: http://json-schema.org/draft-07/schema#
                    description: >-
                      Meshery manages entities in accordance with their specific
                      capabilities. This field explicitly identifies those
                      capabilities largely by what actions a given component
                      supports; e.g. metric-scrape, sub-interface, and so on.
                      This field is extensible. Entities may define a broad
                      array of capabilities, which are in-turn dynamically
                      interpretted by Meshery for full lifecycle management.
                    additionalProperties: false
                    type: object
                    required:
                      - description
                      - schemaVersion
                      - version
                      - displayName
                      - kind
                      - type
                      - subType
                      - entityState
                      - key
                      - status
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    properties:
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema to which the
                          capability definition conforms.
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        description: Version of the capability definition.
                        type: string
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        default: v0.0.1
                      displayName:
                        description: Name of the capability in human-readible format.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      description:
                        type: string
                        description: >-
                          A written representation of the purpose and
                          characteristics of the capability.
                      kind:
                        description: Top-level categorization of the capability
                        additionalProperties: false
                        anyOf:
                          - const: action
                            description: >-
                              For capabilities related to executing actions on
                              entities. Example: initiate log streaming on a
                              Pod. Example: initiate deployment of a component.
                          - const: mutate
                            description: >-
                              For capabilities related to mutating an entity.
                              Example: the ability to change the configuration
                              of a component.
                          - const: view
                            description: >-
                              For capabilities related to viewing an entity.
                              Example: the ability to view a components
                              configuration.
                          - const: interaction
                            description: >-
                              Catch all for capabilities related to interaction
                              with entities. Example: the ability for a
                              component to be dragged and dropped. Example:
                              supports event bubbling to parent components. 
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      type:
                        description: >-
                          Classification of capabilities. Used to group
                          capabilities similar in nature.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      subType:
                        description: >-
                          Most granular unit of capability classification. The
                          combination of Kind, Type and SubType together
                          uniquely identify a Capability.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      key:
                        description: Key that backs the capability.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      entityState:
                        description: >-
                          State of the entity in which the capability is
                          applicable.
                        type: array
                        items:
                          type: string
                          enum:
                            - declaration
                            - instance
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          description: >-
                            A string starting with an alphanumeric character.
                            Spaces and hyphens allowed.
                      status:
                        type: string
                        description: Status of the capability
                        default: enabled
                        enum:
                          - enabled
                          - disabled
                      metadata:
                        type: object
                        description: >-
                          Metadata contains additional information associated
                          with the capability. Extension point.
                        additionalProperties: true
                    default:
                      - description: Configure the visual styles for the component
                        displayName: Styling
                        entityState:
                          - declaration
                        key: ''
                        kind: mutate
                        schemaVersion: capability.meshery.io/v1alpha1
                        status: enabled
                        subType: ''
                        type: style
                        version: 0.7.0
                      - description: Change the shape of the component
                        displayName: Change Shape
                        entityState:
                          - declaration
                        key: ''
                        kind: mutate
                        schemaVersion: capability.meshery.io/v1alpha1
                        status: enabled
                        subType: shape
                        type: style
                        version: 0.7.0
                      - description: >-
                          Drag and Drop a component into a parent component in
                          graph view
                        displayName: Compound Drag And Drop
                        entityState:
                          - declaration
                        key: ''
                        kind: interaction
                        schemaVersion: capability.meshery.io/v1alpha1
                        status: enabled
                        subType: compoundDnd
                        type: graph
                        version: 0.7.0
                      - description: Add text to nodes body
                        displayName: Body Text
                        entityState:
                          - declaration
                        key: ''
                        kind: mutate
                        schemaVersion: capability.meshery.io/v1alpha1
                        status: enabled
                        subType: body-text
                        type: style
                        version: 0.7.0
                  x-order: 1
                isAnnotation:
                  type: boolean
                  description: >-
                    Indicates whether the model and its entities should be
                    treated as deployable entities or as logical
                    representations.
                  x-oapi-codegen-extra-tags:
                    yaml: isAnnotation
                    json: isAnnotation
                  x-order: 2
                  default: false
                primaryColor:
                  type: string
                  description: Primary color associated with the model.
                  minLength: 1
                  maxLength: 50
                  default: '#00b39f'
                  x-oapi-codegen-extra-tags:
                    yaml: primaryColor
                    json: primaryColor
                  x-order: 3
                secondaryColor:
                  type: string
                  description: Secondary color associated with the model.
                  minLength: 1
                  maxLength: 50
                  default: '#00D3A9'
                  x-oapi-codegen-extra-tags:
                    yaml: secondaryColor
                    json: secondaryColor
                  x-order: 4
                svgWhite:
                  type: string
                  description: SVG representation of the model in white color.
                  minLength: 1
                  x-oapi-codegen-extra-tags:
                    yaml: svgWhite
                    json: svgWhite
                  x-order: 5
                  default: >-
                    <svg width="32" height="32" viewBox="0 0 32 32" fill="none"
                    xmlns="http://www.w3.org/2000/svg"><path d="M16.405
                    8.732v6.57l5.694-3.297-5.694-3.273Zm0
                    7.942v6.602l5.747-3.285-5.747-3.317Z" fill="#fff"/><path
                    d="M15.586 15.256v-6.47l-5.622 3.225 5.622 3.245ZM4.307
                    23.252a13.809 13.809 0 0 0 4.362 4.39v-6.914l-4.362
                    2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z"
                    fill="#fff" fill-opacity=".8"/><path d="m9.49 27.23
                    5.707-3.263-5.707-3.3v6.563Z" fill="#fff"/><path d="M22.54
                    27.265v-6.553l-5.699 3.259 5.7 3.294Zm5.58-4.773a13.697
                    13.697 0 0 0 1.612-5.895l-5.934 3.397 4.323 2.498Z"
                    fill="#fff" fill-opacity=".8"/><path d="m23.362 19.298
                    5.728-3.276-5.728-3.291v6.567Z" fill="#fff"/><path
                    d="M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                    7.955v-6.574l-5.685 3.292 5.685 3.281Z" fill="#fff"
                    fill-opacity=".8"/><path d="M9.49
                    12.684v6.622l5.728-3.316-5.728-3.306Z" fill="#fff"/><path
                    d="M15.586 2.25a13.69 13.69 0 0 0-6.037 1.595l6.037
                    3.463V2.25Z" fill="#fff" fill-opacity=".8"/><path d="M9.49
                    4.756v6.583l5.732-3.288L9.49 4.756Z" fill="#fff"/><path
                    d="M8.669 4.356a13.83 13.83 0 0 0-4.362 4.39l4.362
                    2.518V4.356Z" fill="#fff" fill-opacity=".8"/><path
                    d="M22.504 3.88a13.695 13.695 0 0
                    0-6.099-1.63v5.123l6.1-3.493ZM2.25 16.483c.071 2.12.634
                    4.196 1.644 6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68
                    13.68 0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z"
                    fill="#fff"/><path d="M9.539 28.147a13.673 13.673 0 0 0
                    6.047 1.603v-5.062L9.54 28.147Z" fill="#fff"
                    fill-opacity=".8"/><path d="M27.697 8.768a13.83 13.83 0 0
                    0-4.335-4.383v6.889l4.335-2.506ZM23.362 27.62a13.851 13.851
                    0 0 0 4.351-4.417l-4.351-2.514v6.93Z" fill="#fff"/><path
                    d="M29.75 15.452a13.659 13.659 0 0 0-1.63-5.979l-4.381 2.53
                    6.011 3.45Z" fill="#fff" fill-opacity=".8"/><path d="M16.405
                    29.75a13.673 13.673 0 0 0 6.036-1.595l-6.036-3.498v5.093Z"
                    fill="#fff"/><path d="M8.669 19.247v-6.494L3.03 15.986l5.639
                    3.261Z" fill="#fff" fill-opacity=".8"/></svg>
                svgColor:
                  type: string
                  description: SVG representation of the model in colored format.
                  minLength: 1
                  x-oapi-codegen-extra-tags:
                    yaml: svgColor
                    json: svgColor
                  x-order: 6
                  default: >-
                    <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1"
                    data-name="Layer 1" viewBox="0 0 134.95
                    135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                    points="69.49 31.82 69.49 64.07 97.44 47.89 69.49 31.82"
                    class="cls-1"/><polygon points="69.49 70.81 69.49 103.22
                    97.7 87.09 69.49 70.81" class="cls-1"/><polygon
                    points="65.47 63.85 65.47 32.09 37.87 47.92 65.47 63.85"
                    class="cls-2"/><path
                    d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                    class="cls-2"/><polygon points="65.47 103.06 65.47 71.05
                    37.8 87.07 65.47 103.06" class="cls-2"/><polygon
                    points="35.54 122.63 63.56 106.61 35.54 90.41 35.54 122.63"
                    class="cls-1"/><polygon points="99.61 122.8 99.61 90.63
                    71.63 106.63 99.61 122.8" class="cls-2"/><path
                    d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                    class="cls-2"/><polygon points="103.64 83.69 131.76 67.61
                    103.64 51.45 103.64 83.69" class="cls-1"/><polygon
                    points="99.61 44.5 99.61 12.52 71.76 28.49 99.61 44.5"
                    class="cls-2"/><polygon points="99.61 83.55 99.61 51.28 71.7
                    67.44 99.61 83.55" class="cls-2"/><polygon points="67.48
                    135.02 67.49 135.02 67.48 135.02 67.48 135.02"
                    class="cls-2"/><polygon points="35.54 51.22 35.54 83.73
                    63.66 67.45 35.54 51.22" class="cls-1"/><path
                    d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                    class="cls-2"/><polygon points="35.54 12.3 35.54 44.62 63.68
                    28.48 35.54 12.3" class="cls-1"/><path
                    d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                    class="cls-2"/><path
                    d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                    class="cls-1"/><path
                    d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                    class="cls-1"/><path
                    d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                    class="cls-1"/><path
                    d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                    class="cls-2"/><path
                    d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                    class="cls-1"/><path
                    d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                    class="cls-1"/><path
                    d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                    class="cls-2"/><path
                    d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                    class="cls-1"/><polygon points="31.51 83.44 31.51 51.56 3.83
                    67.43 31.51 83.44" class="cls-2"/></svg>
                svgComplete:
                  type: string
                  description: SVG representation of the complete model.
                  minLength: 1
                  x-oapi-codegen-extra-tags:
                    yaml: svgComplete
                    json: svgComplete
                  x-order: 7
                shape:
                  x-order: 8
                  type: string
                  description: >-
                    The shape of the node’s body. Note that each shape fits
                    within the specified width and height, and so you may have
                    to adjust width and height if you desire an equilateral
                    shape (i.e. width !== height for several equilateral shapes)
                  default: circle
                  enum:
                    - circle
                    - ellipse
                    - triangle
                    - round-triangle
                    - rectangle
                    - round-rectangle
                    - bottom-round-rectangle
                    - cut-rectangle
                    - barrel
                    - rhomboid
                    - diamond
                    - round-diamond
                    - pentagon
                    - round-pentagon
                    - hexagon
                    - round-hexagon
                    - concave-hexagon
                    - heptagon
                    - round-heptagon
                    - octagon
                    - round-octagon
                    - star
                    - tag
                    - round-tag
                    - vee
                    - polygon
              x-oapi-codegen-extra-tags:
                gorm: type:bytes;serializer:json
                json: metadata
                yaml: metadata
              x-order: 11
              additionalProperties: true
            model:
              x-oapi-codegen-extra-tags:
                gorm: type:bytes;serializer:json
              x-order: 12
              type: object
              description: >-
                Registrant-defined data associated with the model. Properties
                pertain to the software being managed (e.g. Kubernetes v1.31).
              required:
                - version
              properties:
                version:
                  description: Version of the model as defined by the registrant.
                  allOf:
                    - type: string
                      minLength: 5
                      maxLength: 100
                      pattern: >-
                        ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                      description: >-
                        A valid semantic version string between 5 and 256
                        characters. The pattern allows for a major.minor.patch
                        version followed by an optional pre-release tag like
                        '-alpha' or '-beta.2' and an optional build metadata tag
                        like '+build.1.
                      default: v0.0.1
                  x-oapi-codegen-extra-tags:
                    yaml: version
                    json: version
                  x-order: 1
            relationships:
              type: array
              x-go-type: interface{}
              x-oapi-codegen-extra-tags:
                gorm: '-'
                json: relationships
                yaml: relationships
            components:
              type: array
              x-go-type: interface{}
              x-oapi-codegen-extra-tags:
                gorm: '-'
                json: components
                yaml: components
            componentsCount:
              type: integer
              description: Number of components associated with the model.
              x-order: 13
              x-oapi-codegen-extra-tags:
                json: components_count
                yaml: components_count
                gorm: '-'
              default: 0
            relationshipsCount:
              type: integer
              description: Number of relationships associated with the model.
              x-order: 13
              x-oapi-codegen-extra-tags:
                gorm: '-'
                json: relationships_count
                yaml: relationships_count
              default: 0
          required:
            - id
            - schemaVersion
            - displayName
            - status
            - subCategory
            - model
            - name
            - description
            - version
            - registrant
            - category
            - categoryId
            - registrantId
            - relationshipsCount
            - componentsCount
            - components
            - relationships
        modelId:
          description: >-
            ModelId is the foreign key to the model to which the component
            belongs.
          x-oapi-codegen-extra-tags:
            gorm: index:idx_component_definition_dbs_model_id,column:model_id
            yaml: '-'
            json: '-'
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        styles:
          x-oapi-codegen-extra-tags:
            gorm: type:bytes;serializer:json
            yaml: styles
            json: styles
          x-go-type: core.ComponentStyles
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1alpha1/core
          x-order: 8
          type: object
          description: Visualization styles for a component
          required:
            - shape
            - primaryColor
            - svgColor
            - svgWhite
            - svgComplete
          allOf:
            - type: object
              description: Common styles for all entities
              additionalProperties: true
              required:
                - primaryColor
                - svgColor
                - svgWhite
                - svgComplete
              properties:
                primaryColor:
                  type: string
                  description: Primary color of the component used for UI representation.
                secondaryColor:
                  type: string
                  description: Secondary color of the entity used for UI representation.
                svgWhite:
                  type: string
                  description: >-
                    White SVG of the entity used for UI representation on dark
                    background.
                svgColor:
                  type: string
                  description: >-
                    Colored SVG of the entity used for UI representation on
                    light background.
                svgComplete:
                  type: string
                  description: >-
                    Complete SVG of the entity used for UI representation, often
                    inclusive of background.
                color:
                  type: string
                  description: >-
                    The color of the element's label. Colours may be specified
                    by name (e.g. red), hex (e.g.
                text-opacity:
                  type: number
                  description: The opacity of the label text, including its outline.
                  minimum: 0
                  maximum: 1
                font-family:
                  type: string
                  description: >-
                    A comma-separated list of font names to use on the label
                    text.
                font-size:
                  type: string
                  description: The size of the label text.
                font-style:
                  type: string
                  description: A CSS font style to be applied to the label text.
                font-weight:
                  type: string
                  description: A CSS font weight to be applied to the label text.
                text-transform:
                  type: string
                  description: A transformation to apply to the label text
                  enum:
                    - none
                    - uppercase
                    - lowercase
                opacity:
                  type: number
                  description: >-
                    The opacity of the element, ranging from 0 to 1. Note that
                    the opacity of a compound node parent affects the effective
                    opacity of its children.
                  minimum: 0
                  maximum: 1
                z-index:
                  type: integer
                  description: >-
                    An integer value that affects the relative draw order of
                    elements. In general, an element with a higher z-index will
                    be drawn on top of an element with a lower z-index. Note
                    that edges are under nodes despite z-index.
                label:
                  type: string
                  description: >-
                    The text to display for an element's label. Can give a path,
                    e.g. data(id) will label with the elements id
                animation:
                  type: object
                  description: >-
                    The animation to apply to the element. example
                    ripple,bounce,etc
            - type: object
              properties:
                shape:
                  type: string
                  description: >-
                    The shape of the node's body. Note that each shape fits
                    within the specified width and height, and so you may have
                    to adjust width and height if you desire an equilateral
                    shape (i.e. width !== height for several equilateral shapes)
                  enum:
                    - ellipse
                    - triangle
                    - round-triangle
                    - rectangle
                    - round-rectangle
                    - bottom-round-rectangle
                    - cut-rectangle
                    - barrel
                    - rhomboid
                    - diamond
                    - round-diamond
                    - pentagon
                    - round-pentagon
                    - hexagon
                    - round-hexagon
                    - concave-hexagon
                    - heptagon
                    - round-heptagon
                    - octagon
                    - round-octagon
                    - star
                    - tag
                    - round-tag
                    - vee
                    - polygon
                position:
                  type: object
                  additionalProperties: false
                  required:
                    - x
                    - 'y'
                  description: >-
                    The position of the node. If the position is set, the node
                    is drawn at that position in the given dimensions. If the
                    position is not set, the node is drawn at a random position.
                  properties:
                    x:
                      type: number
                      description: The x-coordinate of the node.
                      x-go-type: float64
                    'y':
                      type: number
                      description: The y-coordinate of the node.
                      x-go-type: float64
                body-text:
                  type: string
                  description: >-
                    The text to display for an element's body. Can give a path,
                    e.g. data(id) will label with the elements id
                body-text-wrap:
                  type: string
                  description: >-
                    How to wrap the text in the node. Can be 'none', 'wrap', or
                    'ellipsis'.
                body-text-max-width:
                  type: string
                  description: The maximum width for wrapping text in the node.
                body-text-opacity:
                  type: number
                  description: The opacity of the node's body text, including its outline.
                  minimum: 0
                  maximum: 1
                body-text-background-color:
                  type: string
                  description: >-
                    The colour of the node's body text background. Colours may
                    be specified by name (e.g. red), hex (e.g.
                body-text-font-size:
                  type: number
                  description: The size of the node's body text.
                body-text-color:
                  type: string
                  description: >-
                    The colour of the node's body text. Colours may be specified
                    by name (e.g. red), hex (e.g.
                body-text-font-weight:
                  type: string
                  description: A CSS font weight to be applied to the node's body text.
                body-text-horizontal-align:
                  type: string
                  description: >-
                    A CSS horizontal alignment to be applied to the node's body
                    text.
                body-text-decoration:
                  type: string
                  description: A CSS text decoration to be applied to the node's body text.
                body-text-vertical-align:
                  type: string
                  description: >-
                    A CSS vertical alignment to be applied to the node's body
                    text.
                width:
                  type: number
                  description: The width of the node's body or the width of an edge's line.
                height:
                  type: number
                  description: The height of the node's body
                background-image:
                  type: string
                  description: The URL that points to the image to show in the node.
                background-color:
                  type: string
                  description: >-
                    The colour of the node's body. Colours may be specified by
                    name (e.g. red), hex (e.g.
                background-blacken:
                  type: number
                  description: >-
                    Blackens the node's body for values from 0 to 1; whitens the
                    node's body for values from 0 to -1.
                  maximum: 1
                  minimum: -1
                background-opacity:
                  type: number
                  description: The opacity level of the node's background colour
                  maximum: 1
                  minimum: 0
                background-position-x:
                  type: string
                  description: >-
                    The x position of the background image, measured in percent
                    (e.g. 50%) or pixels (e.g. 10px)
                background-position-y:
                  type: string
                  description: >-
                    The y position of the background image, measured in percent
                    (e.g. 50%) or pixels (e.g. 10px)
                background-offset-x:
                  type: string
                  description: >-
                    The x offset of the background image, measured in percent
                    (e.g. 50%) or pixels (e.g. 10px)
                background-offset-y:
                  type: string
                  description: >-
                    The y offset of the background image, measured in percent
                    (e.g. 50%) or pixels (e.g. 10px)
                background-fit:
                  type: string
                  description: >-
                    How the background image is fit to the node. Can be 'none',
                    'contain', or 'cover'.
                background-clip:
                  type: string
                  description: >-
                    How the background image is clipped to the node. Can be
                    'none', 'node', or 'node-border'.
                background-width-relative-to:
                  type: string
                  description: >-
                    How the background image's width is determined. Can be
                    'none', 'inner', or 'outer'.
                background-height-relative-to:
                  type: string
                  description: >-
                    How the background image's height is determined. Can be
                    'none', 'inner', or 'outer'.
                border-width:
                  type: number
                  description: The size of the node's border.
                  minimum: 0
                border-style:
                  type: string
                  description: The style of the node's border
                  enum:
                    - solid
                    - dotted
                    - dashed
                    - double
                border-color:
                  type: string
                  description: >-
                    The colour of the node's border. Colours may be specified by
                    name (e.g. red), hex (e.g.
                border-opacity:
                  type: number
                  description: The opacity of the node's border
                  minimum: 0
                  maximum: 1
                padding:
                  type: number
                  description: The amount of padding around all sides of the node.
                  minimum: 0
                text-halign:
                  type: string
                  description: The horizontal alignment of a node's label
                  enum:
                    - left
                    - center
                    - right
                text-valign:
                  type: string
                  description: The vertical alignment of a node's label
                  enum:
                    - top
                    - center
                    - bottom
                ghost:
                  type: string
                  description: >-
                    Whether to use the ghost effect, a semitransparent duplicate
                    of the element drawn at an offset.
                  default: 'no'
                  enum:
                    - 'yes'
                    - 'no'
                active-bg-color:
                  type: string
                  description: >-
                    The colour of the indicator shown when the background is
                    grabbed by the user. Selector needs to be *core*. Colours
                    may be specified by name (e.g. red), hex (e.g.
                active-bg-opacity:
                  type: string
                  description: >-
                    The opacity of the active background indicator. Selector
                    needs to be *core*.
                active-bg-size:
                  type: string
                  description: >-
                    The opacity of the active background indicator. Selector
                    needs to be *core*.
                selection-box-color:
                  type: string
                  description: >-
                    The background colour of the selection box used for drag
                    selection. Selector needs to be *core*. Colours may be
                    specified by name (e.g. red), hex (e.g.
                selection-box-border-width:
                  type: number
                  description: >-
                    The size of the border on the selection box. Selector needs
                    to be *core*
                selection-box-opacity:
                  type: number
                  description: >-
                    The opacity of the selection box. Selector needs to be
                    *core*
                  minimum: 0
                  maximum: 1
                outside-texture-bg-color:
                  type: string
                  description: >-
                    The colour of the area outside the viewport texture when
                    initOptions.textureOnViewport === true. Selector needs to be
                    *core*. Colours may be specified by name (e.g. red), hex
                    (e.g.
                outside-texture-bg-opacity:
                  type: number
                  description: >-
                    The opacity of the area outside the viewport texture.
                    Selector needs to be *core*
                  minimum: 0
                  maximum: 1
                shape-polygon-points:
                  type: string
                  description: >-
                    An array (or a space-separated string) of numbers ranging on
                    [-1, 1], representing alternating x and y values (i.e. x1 y1
                    x2 y2, x3 y3 ...). This represents the points in the polygon
                    for the node's shape. The bounding box of the node is given
                    by (-1, -1), (1, -1), (1, 1), (-1, 1). The node's position
                    is the origin (0, 0 )
                menu-background-color:
                  type: string
                  description: >-
                    The colour of the background of the component menu. Colours
                    may be specified by name (e.g. red), hex (e.g.
                menu-background-opacity:
                  type: number
                  description: The opacity of the background of the component menu.
                  minimum: 0
                  maximum: 1
                menu-forground-color:
                  type: string
                  description: >-
                    The colour of the text or icons in the component menu.
                    Colours may be specified by name (e.g. red), hex (e.g.
        capabilities:
          x-order: 9
          type: array
          description: >-
            Meshery manages components in accordance with their specific
            capabilities. This field explicitly identifies those capabilities
            largely by what actions a given component supports; e.g.
            metric-scrape, sub-interface, and so on. This field is extensible.
            ComponentDefinitions may define a broad array of capabilities, which
            are in-turn dynamically interpretted by Meshery for full lifecycle
            management.
          items:
            x-go-type: capability.Capability
            x-go-type-import:
              path: github.com/meshery/schemas/models/v1alpha1/capability
            $id: https://schemas.meshery.io/capability.json
            $schema: http://json-schema.org/draft-07/schema#
            description: >-
              Meshery manages entities in accordance with their specific
              capabilities. This field explicitly identifies those capabilities
              largely by what actions a given component supports; e.g.
              metric-scrape, sub-interface, and so on. This field is extensible.
              Entities may define a broad array of capabilities, which are
              in-turn dynamically interpretted by Meshery for full lifecycle
              management.
            additionalProperties: false
            type: object
            required:
              - description
              - schemaVersion
              - version
              - displayName
              - kind
              - type
              - subType
              - entityState
              - key
              - status
            x-oapi-codegen-extra-tags:
              gorm: type:bytes;serializer:json
            properties:
              schemaVersion:
                description: >-
                  Specifies the version of the schema to which the capability
                  definition conforms.
                type: string
                minLength: 2
                maxLength: 100
                pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                example:
                  - v1
                  - v1alpha1
                  - v2beta3
                  - v1.custom-suffix
              version:
                description: Version of the capability definition.
                type: string
                minLength: 5
                maxLength: 100
                pattern: >-
                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                default: v0.0.1
              displayName:
                description: Name of the capability in human-readible format.
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
              description:
                type: string
                description: >-
                  A written representation of the purpose and characteristics of
                  the capability.
              kind:
                description: Top-level categorization of the capability
                additionalProperties: false
                anyOf:
                  - const: action
                    description: >-
                      For capabilities related to executing actions on entities.
                      Example: initiate log streaming on a Pod. Example:
                      initiate deployment of a component.
                  - const: mutate
                    description: >-
                      For capabilities related to mutating an entity. Example:
                      the ability to change the configuration of a component.
                  - const: view
                    description: >-
                      For capabilities related to viewing an entity. Example:
                      the ability to view a components configuration.
                  - const: interaction
                    description: >-
                      Catch all for capabilities related to interaction with
                      entities. Example: the ability for a component to be
                      dragged and dropped. Example: supports event bubbling to
                      parent components. 
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
              type:
                description: >-
                  Classification of capabilities. Used to group capabilities
                  similar in nature.
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
              subType:
                description: >-
                  Most granular unit of capability classification. The
                  combination of Kind, Type and SubType together uniquely
                  identify a Capability.
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
              key:
                description: Key that backs the capability.
                type: string
                pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
              entityState:
                description: State of the entity in which the capability is applicable.
                type: array
                items:
                  type: string
                  enum:
                    - declaration
                    - instance
                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  description: >-
                    A string starting with an alphanumeric character. Spaces and
                    hyphens allowed.
              status:
                type: string
                description: Status of the capability
                default: enabled
                enum:
                  - enabled
                  - disabled
              metadata:
                type: object
                description: >-
                  Metadata contains additional information associated with the
                  capability. Extension point.
                additionalProperties: true
            default:
              - description: Configure the visual styles for the component
                displayName: Styling
                entityState:
                  - declaration
                key: ''
                kind: mutate
                schemaVersion: capability.meshery.io/v1alpha1
                status: enabled
                subType: ''
                type: style
                version: 0.7.0
              - description: Change the shape of the component
                displayName: Change Shape
                entityState:
                  - declaration
                key: ''
                kind: mutate
                schemaVersion: capability.meshery.io/v1alpha1
                status: enabled
                subType: shape
                type: style
                version: 0.7.0
              - description: >-
                  Drag and Drop a component into a parent component in graph
                  view
                displayName: Compound Drag And Drop
                entityState:
                  - declaration
                key: ''
                kind: interaction
                schemaVersion: capability.meshery.io/v1alpha1
                status: enabled
                subType: compoundDnd
                type: graph
                version: 0.7.0
              - description: Add text to nodes body
                displayName: Body Text
                entityState:
                  - declaration
                key: ''
                kind: mutate
                schemaVersion: capability.meshery.io/v1alpha1
                status: enabled
                subType: body-text
                type: style
                version: 0.7.0
          x-oapi-codegen-extra-tags:
            gorm: type:bytes;serializer:json
            yaml: capabilities
            json: capabilities
          default:
            - schemaVersion: capability.meshery.io/v1alpha1
              version: 0.7.0
              displayName: Performance Test
              description: >-
                Initiate a performance test. Meshery will execute the load
                generation, collect metrics, and present the results.
              kind: action
              type: operator
              subType: perf-test
              key: ''
              entityState:
                - instance
              status: enabled
              metadata: null
            - schemaVersion: capability.meshery.io/v1alpha1
              version: 0.7.0
              displayName: Workload Configuration
              description: Configure the workload specific setting of a component
              kind: mutate
              type: configuration
              subType: config
              key: ''
              entityState:
                - declaration
              status: enabled
              metadata: null
            - schemaVersion: capability.meshery.io/v1alpha1
              version: 0.7.0
              displayName: Labels and Annotations Configuration
              description: 'Configure Labels And Annotations for  the component '
              kind: mutate
              type: configuration
              subType: labels-and-annotations
              key: ''
              entityState:
                - declaration
              status: enabled
              metadata: null
            - schemaVersion: capability.meshery.io/v1alpha1
              version: 0.7.0
              displayName: Relationships
              description: View relationships for the component
              kind: view
              type: configuration
              subType: relationship
              key: ''
              entityState:
                - declaration
                - instance
              status: enabled
              metadata: null
            - schemaVersion: capability.meshery.io/v1alpha1
              version: 0.7.0
              displayName: Json Schema
              description: 'View Component Definition '
              kind: view
              type: configuration
              subType: definition
              key: ''
              entityState:
                - declaration
                - instance
              status: enabled
              metadata: null
            - schemaVersion: capability.meshery.io/v1alpha1
              version: 0.7.0
              displayName: Styling
              description: Configure the visual styles for the component
              kind: mutate
              type: style
              subType: ''
              key: ''
              entityState:
                - declaration
              status: enabled
              metadata: null
            - schemaVersion: capability.meshery.io/v1alpha1
              version: 0.7.0
              displayName: Change Shape
              description: Change the shape of the component
              kind: mutate
              type: style
              subType: shape
              key: ''
              entityState:
                - declaration
              status: enabled
              metadata: null
            - schemaVersion: capability.meshery.io/v1alpha1
              version: 0.7.0
              displayName: Compound Drag And Drop
              description: Drag and Drop a component into a parent component in graph view
              kind: interaction
              type: graph
              subType: compoundDnd
              key: ''
              entityState:
                - declaration
              status: enabled
              metadata: null
        status:
          x-order: 10
          type: string
          description: >-
            Status of component, including:

            - duplicate: this component is a duplicate of another. The component
            that is to be the canonical reference and that is duplicated by
            other components should not be assigned the 'duplicate' status.

            - maintenance: model is unavailable for a period of time.

            - enabled: model is available for use for all users of this Meshery
            Server.

            - ignored: model is unavailable for use for all users of this
            Meshery Server.
          default: enabled
          enum:
            - ignored
            - enabled
            - duplicate
            - resolved
            - open
          x-oapi-codegen-extra-tags:
            yaml: status
            json: status
        metadata:
          x-order: 11
          type: object
          description: >-
            Metadata contains additional information associated with the
            component.
          required:
            - genealogy
            - isAnnotation
            - isNamespaced
            - published
            - instanceDetails
            - configurationUISchema
          properties:
            genealogy:
              x-order: 1
              type: string
              description: >-
                Genealogy represents the various representational states of the
                component.
            isAnnotation:
              x-order: 2
              type: boolean
              description: >-
                Identifies whether the component is semantically meaningful or
                not; identifies whether the component should be treated as
                deployable entity or is for purposes of logical representation.
              default: false
            isNamespaced:
              x-order: 3
              type: boolean
              description: >-
                Identifies whether the component is scoped to namespace or
                clsuter wide.
            published:
              x-order: 4
              type: boolean
              description: >-
                'published' controls whether the component should be registered
                in Meshery Registry. When the same 'published' property in
                Models, is set to 'false', the Model property takes precedence
                with all Entities in the Model not being registered.
            instanceDetails:
              x-order: 5
              type: object
              description: >-
                InstanceDetails contains information about the instance of the
                component.
            configurationUISchema:
              x-order: 6
              type: string
              description: >-
                Defines the UI schema for rendering the component's
                configuration. For more details, visit:
                https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                .
          x-oapi-codegen-extra-tags:
            gorm: type:bytes;serializer:json
          additionalProperties: true
        configuration:
          x-order: 12
          description: >-
            The configuration of the component. The configuration is based on
            the schema defined within the component
            definition(component.schema).
          type: object
          $comment: >-
            The configuration of the component. The configuration is based on
            the schema defined within the component
            definition(component.schema).
          x-oapi-codegen-extra-tags:
            gorm: type:bytes;serializer:json
        component:
          x-order: 13
          x-oapi-codegen-extra-tags:
            gorm: type:bytes;serializer:json
          x-go-type: Component
          description: >-
            data related to the third party capability that Component Defintion
            wraps , this is herematicaly sealed an
          type: object
          properties:
            version:
              type: string
              description: >-
                Version of the component produced by the registrant. Example:
                APIVersion of a Kubernetes Pod.
              x-order: 1
            kind:
              type: string
              description: >-
                The unique identifier (name) assigned by the registrant to this
                component. Example: A Kubernetes Pod is of kind 'Pod'.
              x-order: 2
            schema:
              type: string
              description: JSON schema of the object as defined by the registrant.
              x-order: 3
          required:
            - version
            - kind
            - schema
      required:
        - id
        - displayName
        - description
        - schemaVersion
        - format
        - version
        - configuration
        - metadata
        - modelId
        - model
        - component
    component_Component:
      description: >-
        data related to the third party capability that Component Defintion
        wraps , this is herematicaly sealed an
      type: object
      properties:
        version:
          type: string
          description: >-
            Version of the component produced by the registrant. Example:
            APIVersion of a Kubernetes Pod.
          x-order: 1
        kind:
          type: string
          description: >-
            The unique identifier (name) assigned by the registrant to this
            component. Example: A Kubernetes Pod is of kind 'Pod'.
          x-order: 2
        schema:
          type: string
          description: JSON schema of the object as defined by the registrant.
          x-order: 3
      required:
        - version
        - kind
        - schema
    model_Model:
      type: object
      description: >-
        Registrant-defined data associated with the model. Properties pertain to
        the software being managed (e.g. Kubernetes v1.31).
      required:
        - version
      properties:
        version:
          description: Version of the model as defined by the registrant.
          allOf:
            - type: string
              minLength: 5
              maxLength: 100
              pattern: >-
                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
              description: >-
                A valid semantic version string between 5 and 256 characters.
                The pattern allows for a major.minor.patch version followed by
                an optional pre-release tag like '-alpha' or '-beta.2' and an
                optional build metadata tag like '+build.1.
              default: v0.0.1
          x-oapi-codegen-extra-tags:
            yaml: version
            json: version
          x-order: 1
    model_ModelDefinition:
      $id: https://schemas.meshery.io/model.json
      $schema: http://json-schema.org/draft-07/schema#
      description: >-
        Meshery Models serve as a portable unit of packaging to define managed
        entities, their relationships, and capabilities.
      additionalProperties: false
      type: object
      properties:
        id:
          description: >-
            Uniquely identifies the entity (i.e. component) as defined in a
            declaration (i.e. design).
          x-order: 1
          x-oapi-codegen-extra-tags:
            yaml: id
            json: id
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        schemaVersion:
          description: Specifies the version of the schema used for the definition.
          x-order: 2
          x-oapi-codegen-extra-tags:
            yaml: schemaVersion
            json: schemaVersion
          default: models.meshery.io/v1beta1
          type: string
          minLength: 2
          maxLength: 100
          pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
          example:
            - v1
            - v1alpha1
            - v2beta3
            - v1.custom-suffix
        version:
          type: string
          minLength: 5
          maxLength: 100
          pattern: >-
            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
          description: >-
            A valid semantic version string between 5 and 256 characters. The
            pattern allows for a major.minor.patch version followed by an
            optional pre-release tag like '-alpha' or '-beta.2' and an optional
            build metadata tag like '+build.1.
          default: v0.0.1
          x-order: 3
          x-oapi-codegen-extra-tags:
            yaml: version
            json: version
        name:
          type: string
          description: The unique name for the model within the scope of a registrant.
          helperText: Model name should be in lowercase with hyphens, not whitespaces.
          pattern: ^[a-z0-9-]+$
          examples:
            - cert-manager
          x-order: 4
          x-oapi-codegen-extra-tags:
            yaml: name
            json: name
          default: untitled-model
        displayName:
          description: Human-readable name for the model.
          helperText: >-
            Model display name may include letters, numbers, and spaces. Special
            characters are not allowed.
          minLength: 1
          maxLength: 100
          type: string
          pattern: ^[a-zA-Z0-9 ]+$
          examples:
            - Cert Manager
          x-order: 5
          x-oapi-codegen-extra-tags:
            yaml: displayName
            json: displayName
          default: Untitled Model
        description:
          type: string
          default: A new Meshery model.
          description: Description of the model.
          minLength: 1
          maxLength: 1000
          x-order: 6
          x-oapi-codegen-extra-tags:
            yaml: description,omitempty
            json: description,omitempty
        status:
          type: string
          description: >-
            Status of model, including:

            - duplicate: this component is a duplicate of another. The component
            that is to be the canonical reference and that is duplicated by
            other components should not be assigned the 'duplicate' status.

            - maintenance: model is unavailable for a period of time.

            - enabled: model is available for use for all users of this Meshery
            Server.

            - ignored: model is unavailable for use for all users of this
            Meshery Server.
          enum:
            - ignored
            - enabled
            - duplicate
          x-order: 7
          x-oapi-codegen-extra-tags:
            yaml: status
            json: status
          default: enabled
        registrant:
          x-oapi-codegen-extra-tags:
            yaml: registrant
            json: registrant
            gorm: foreignKey:RegistrantId;references:ID
          x-order: 8
          x-go-type: connection.Connection
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1beta1/connection
          $id: https://schemas.meshery.io/component.json
          $schema: http://json-schema.org/draft-07/schema#
          description: >-
            Meshery Connections are managed and unmanaged resources that either
            through discovery or manual entry are tracked by Meshery. Learn more
            at https://docs.meshery.io/concepts/logical/connections
          additionalProperties: false
          type: object
          required:
            - id
            - schemaVersion
            - name
            - type
            - sub_type
            - kind
            - status
          properties:
            id:
              description: ID
              x-order: 1
              x-go-name: ID
              x-oapi-codegen-extra-tags:
                db: id
                yaml: id
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            name:
              x-oapi-codegen-extra-tags:
                db: name
                yaml: name
              x-order: 2
              type: string
              description: Connection Name
            credential_id:
              x-go-name: CredentialID
              x-oapi-codegen-extra-tags:
                db: credential_id
                yaml: credential_id
              x-order: 3
              description: Credential ID
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            type:
              x-oapi-codegen-extra-tags:
                db: type
                yaml: type
              x-order: 4
              type: string
              description: Connection Type
            sub_type:
              x-oapi-codegen-extra-tags:
                db: sub_type
                yaml: sub_type
              x-order: 5
              type: string
              description: Connection Subtype
            kind:
              x-oapi-codegen-extra-tags:
                db: kind
                yaml: kind
              x-order: 6
              type: string
              description: Connection Kind
            metadata:
              x-oapi-codegen-extra-tags:
                db: metadata
                yaml: metadata
              x-order: 7
              x-go-type: core.Map
              x-go-type-skip-optional-pointer: true
              type: object
            status:
              x-oapi-codegen-extra-tags:
                db: status
                yaml: status
              x-order: 8
              description: Connection Status
              type: string
              enum:
                - discovered
                - registered
                - connected
                - ignored
                - maintenance
                - disconnected
                - deleted
                - not found
            user_id:
              x-go-name: UserID
              x-oapi-codegen-extra-tags:
                db: user_id
                yaml: user_id
              x-order: 9
              type: string
              format: uuid
              description: >-
                A Universally Unique Identifier used to uniquely identify
                entites in Meshery. The UUID core defintion is used across
                different schemas.
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            created_at:
              x-oapi-codegen-extra-tags:
                db: created_at
                yaml: created_at
              x-order: 10
              type: string
              format: date-time
              x-go-type-skip-optional-pointer: true
            updated_at:
              x-oapi-codegen-extra-tags:
                db: updated_at
                yaml: updated_at
              x-order: 11
              type: string
              format: date-time
              x-go-type-skip-optional-pointer: true
            deleted_at:
              x-oapi-codegen-extra-tags:
                db: deleted_at
                yaml: deleted_at
              x-go-type: core.NullTime
              x-order: 12
              type: string
              format: date-time
              x-go-type-skip-optional-pointer: true
            environments:
              type: array
              items:
                x-go-type: '*environment.Environment'
                $id: https://schemas.meshery.io/environment.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Meshery Environments allow you to logically group related
                  Connections and their associated Credentials.. Learn more at
                  https://docs.meshery.io/concepts/logical/environments
                additionalProperties: false
                type: object
                required:
                  - id
                  - name
                  - description
                  - organization_id
                properties:
                  id:
                    description: ID
                    x-order: 1
                    x-go-name: ID
                    x-oapi-codegen-extra-tags:
                      db: id
                      yaml: id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  name:
                    x-oapi-codegen-extra-tags:
                      db: name
                      yaml: name
                    x-order: 2
                    type: string
                    description: Environment name
                  description:
                    x-oapi-codegen-extra-tags:
                      db: description
                      yaml: description
                    x-order: 3
                    type: string
                    description: Environment description
                  organization_id:
                    x-go-name: OrganizationID
                    x-oapi-codegen-extra-tags:
                      db: organization_id
                      yaml: organization_id
                    x-order: 4
                    description: Environment organization ID
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  owner:
                    x-oapi-codegen-extra-tags:
                      db: owner
                      yaml: owner
                    x-order: 5
                    description: Environment owner
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  created_at:
                    x-oapi-codegen-extra-tags:
                      db: created_at
                      yaml: created_at
                    x-order: 6
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  metadata:
                    x-oapi-codegen-extra-tags:
                      db: metadata
                      yaml: metadata
                    x-order: 7
                    x-go-type: core.Map
                    x-go-type-skip-optional-pointer: true
                    type: object
                  updated_at:
                    x-oapi-codegen-extra-tags:
                      db: updated_at
                      yaml: updated_at
                    x-order: 8
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deleted_at:
                    x-oapi-codegen-extra-tags:
                      db: deleted_at
                      yaml: deleted_at
                    x-go-type: core.NullTime
                    x-go-import: database/sql
                    x-order: 9
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
              x-oapi-codegen-extra-tags:
                db: '-'
                yaml: environments
                gorm: '-'
              x-go-type-skip-optional-pointer: true
              x-order: 13
            schemaVersion:
              description: Specifies the version of the schema used for the definition.
              x-order: 14
              x-oapi-codegen-extra-tags:
                yaml: schemaVersion
                db: '-'
                gorm: '-'
              default: connections.meshery.io/v1beta1
              type: string
              minLength: 2
              maxLength: 100
              pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
              example:
                - v1
                - v1alpha1
                - v2beta3
                - v1.custom-suffix
        registrantId:
          description: ID of the registrant.
          x-oapi-codegen-extra-tags:
            yaml: connection_id
            json: connection_id
            gorm: column:connection_id
          x-order: 8
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        categoryId:
          description: ID of the category.
          x-oapi-codegen-extra-tags:
            yaml: '-'
            json: '-'
            gorm: categoryID
          x-order: 8
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        category:
          x-order: 9
          x-oapi-codegen-extra-tags:
            yaml: category
            json: category
            gorm: foreignKey:CategoryId;references:Id
          x-go-type: category.CategoryDefinition
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1beta1/category
          $id: https://schemas.meshery.io/category.json
          $schema: http://json-schema.org/draft-07/schema#
          type: object
          description: Category of the model.
          required:
            - id
            - name
            - metadata
          properties:
            id:
              x-order: 1
              type: string
              format: uuid
              description: >-
                A Universally Unique Identifier used to uniquely identify
                entites in Meshery. The UUID core defintion is used across
                different schemas.
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            name:
              type: string
              minLength: 1
              maxLength: 100
              x-oapi-codegen-extra-tags:
                yaml: name
                json: name
                gorm: name
              default: Uncategorized
              description: The category of the model that determines the main grouping.
              enum:
                - Analytics
                - App Definition and Development
                - Cloud Native Network
                - Cloud Native Storage
                - Database
                - Machine Learning
                - Observability and Analysis
                - Orchestration & Management
                - Platform
                - Provisioning
                - Runtime
                - Security & Compliance
                - Serverless
                - Tools
                - Uncategorized
              x-order: 2
            metadata:
              type: object
              x-oapi-codegen-extra-tags:
                yaml: metadata,omitempty
                json: metadata,omitempty
                gorm: type:bytes;serializer:json
              x-order: 3
        subCategory:
          x-order: 10
          x-go-type: subcategory.SubCategoryDefinition
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1beta1/subcategory
          $id: https://schemas.meshery.io/category.json
          $schema: http://json-schema.org/draft-07/schema#
          type: string
          title: SubCategory
          description: Sub category of the model determines the secondary grouping.
          default: Uncategorized
          enum:
            - API Gateway
            - API Integration
            - Application Definition & Image Build
            - Automation & Configuration
            - Certified Kubernetes - Distribution
            - Chaos Engineering
            - Cloud Native Storage
            - Cloud Provider
            - CNI
            - Compute
            - Container Registry
            - Container Runtime
            - Container Security
            - Container
            - Content Delivery Network
            - Continuous Integration & Delivery
            - Coordination & Service Discovery
            - Database
            - Flowchart
            - Framework
            - Installable Platform
            - Key Management
            - Key Management Service
            - Kubernetes
            - Logging
            - Machine Learning
            - Management Governance
            - Metrics
            - Monitoring
            - Networking Content Delivery
            - Operating System
            - Query
            - Remote Procedure Call
            - Scheduling & Orchestration
            - Secrets Management
            - Security Identity & Compliance
            - Service Mesh
            - Service Proxy
            - Source Version Control
            - Storage
            - Specifications
            - Streaming & Messaging
            - Tools
            - Tracing
            - Uncategorized
            - Video Conferencing
          minLength: 1
          maxLength: 100
          x-oapi-codegen-extra-tags:
            yaml: subCategory
            json: subCategory
        metadata:
          type: object
          description: >-
            Metadata containing additional information associated with the
            model.
          required:
            - svgWhite
            - svgColor
          properties:
            capabilities:
              type: array
              description: Capabilities associated with the model
              items:
                x-go-type: capability.Capability
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1alpha1/capability
                $id: https://schemas.meshery.io/capability.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Meshery manages entities in accordance with their specific
                  capabilities. This field explicitly identifies those
                  capabilities largely by what actions a given component
                  supports; e.g. metric-scrape, sub-interface, and so on. This
                  field is extensible. Entities may define a broad array of
                  capabilities, which are in-turn dynamically interpretted by
                  Meshery for full lifecycle management.
                additionalProperties: false
                type: object
                required:
                  - description
                  - schemaVersion
                  - version
                  - displayName
                  - kind
                  - type
                  - subType
                  - entityState
                  - key
                  - status
                x-oapi-codegen-extra-tags:
                  gorm: type:bytes;serializer:json
                properties:
                  schemaVersion:
                    description: >-
                      Specifies the version of the schema to which the
                      capability definition conforms.
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                  version:
                    type: string
                    minLength: 5
                    maxLength: 100
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    description: >-
                      A valid semantic version string between 5 and 256
                      characters. The pattern allows for a major.minor.patch
                      version followed by an optional pre-release tag like
                      '-alpha' or '-beta.2' and an optional build metadata tag
                      like '+build.1.
                    default: v0.0.1
                  displayName:
                    description: Name of the capability in human-readible format.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  description:
                    type: string
                    description: >-
                      A written representation of the purpose and
                      characteristics of the capability.
                  kind:
                    description: Top-level categorization of the capability
                    additionalProperties: false
                    anyOf:
                      - const: action
                        description: >-
                          For capabilities related to executing actions on
                          entities. Example: initiate log streaming on a Pod.
                          Example: initiate deployment of a component.
                      - const: mutate
                        description: >-
                          For capabilities related to mutating an entity.
                          Example: the ability to change the configuration of a
                          component.
                      - const: view
                        description: >-
                          For capabilities related to viewing an entity.
                          Example: the ability to view a components
                          configuration.
                      - const: interaction
                        description: >-
                          Catch all for capabilities related to interaction with
                          entities. Example: the ability for a component to be
                          dragged and dropped. Example: supports event bubbling
                          to parent components. 
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  type:
                    description: >-
                      Classification of capabilities. Used to group capabilities
                      similar in nature.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  subType:
                    description: >-
                      Most granular unit of capability classification. The
                      combination of Kind, Type and SubType together uniquely
                      identify a Capability.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  key:
                    description: Key that backs the capability.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  entityState:
                    description: State of the entity in which the capability is applicable.
                    type: array
                    items:
                      type: string
                      enum:
                        - declaration
                        - instance
                      pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                      description: >-
                        A string starting with an alphanumeric character. Spaces
                        and hyphens allowed.
                  status:
                    type: string
                    description: Status of the capability
                    default: enabled
                    enum:
                      - enabled
                      - disabled
                  metadata:
                    type: object
                    description: >-
                      Metadata contains additional information associated with
                      the capability. Extension point.
                    additionalProperties: true
                default:
                  - description: Configure the visual styles for the component
                    displayName: Styling
                    entityState:
                      - declaration
                    key: ''
                    kind: mutate
                    schemaVersion: capability.meshery.io/v1alpha1
                    status: enabled
                    subType: ''
                    type: style
                    version: 0.7.0
                  - description: Change the shape of the component
                    displayName: Change Shape
                    entityState:
                      - declaration
                    key: ''
                    kind: mutate
                    schemaVersion: capability.meshery.io/v1alpha1
                    status: enabled
                    subType: shape
                    type: style
                    version: 0.7.0
                  - description: >-
                      Drag and Drop a component into a parent component in graph
                      view
                    displayName: Compound Drag And Drop
                    entityState:
                      - declaration
                    key: ''
                    kind: interaction
                    schemaVersion: capability.meshery.io/v1alpha1
                    status: enabled
                    subType: compoundDnd
                    type: graph
                    version: 0.7.0
                  - description: Add text to nodes body
                    displayName: Body Text
                    entityState:
                      - declaration
                    key: ''
                    kind: mutate
                    schemaVersion: capability.meshery.io/v1alpha1
                    status: enabled
                    subType: body-text
                    type: style
                    version: 0.7.0
              x-order: 1
            isAnnotation:
              type: boolean
              description: >-
                Indicates whether the model and its entities should be treated
                as deployable entities or as logical representations.
              x-oapi-codegen-extra-tags:
                yaml: isAnnotation
                json: isAnnotation
              x-order: 2
              default: false
            primaryColor:
              type: string
              description: Primary color associated with the model.
              minLength: 1
              maxLength: 50
              default: '#00b39f'
              x-oapi-codegen-extra-tags:
                yaml: primaryColor
                json: primaryColor
              x-order: 3
            secondaryColor:
              type: string
              description: Secondary color associated with the model.
              minLength: 1
              maxLength: 50
              default: '#00D3A9'
              x-oapi-codegen-extra-tags:
                yaml: secondaryColor
                json: secondaryColor
              x-order: 4
            svgWhite:
              type: string
              description: SVG representation of the model in white color.
              minLength: 1
              x-oapi-codegen-extra-tags:
                yaml: svgWhite
                json: svgWhite
              x-order: 5
              default: >-
                <svg width="32" height="32" viewBox="0 0 32 32" fill="none"
                xmlns="http://www.w3.org/2000/svg"><path d="M16.405
                8.732v6.57l5.694-3.297-5.694-3.273Zm0
                7.942v6.602l5.747-3.285-5.747-3.317Z" fill="#fff"/><path
                d="M15.586 15.256v-6.47l-5.622 3.225 5.622 3.245ZM4.307
                23.252a13.809 13.809 0 0 0 4.362 4.39v-6.914l-4.362
                2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z" fill="#fff"
                fill-opacity=".8"/><path d="m9.49 27.23
                5.707-3.263-5.707-3.3v6.563Z" fill="#fff"/><path d="M22.54
                27.265v-6.553l-5.699 3.259 5.7 3.294Zm5.58-4.773a13.697 13.697 0
                0 0 1.612-5.895l-5.934 3.397 4.323 2.498Z" fill="#fff"
                fill-opacity=".8"/><path d="m23.362 19.298
                5.728-3.276-5.728-3.291v6.567Z" fill="#fff"/><path d="M22.541
                11.315V4.8l-5.673 3.253 5.673 3.262Zm0 7.955v-6.574l-5.685 3.292
                5.685 3.281Z" fill="#fff" fill-opacity=".8"/><path d="M9.49
                12.684v6.622l5.728-3.316-5.728-3.306Z" fill="#fff"/><path
                d="M15.586 2.25a13.69 13.69 0 0 0-6.037 1.595l6.037 3.463V2.25Z"
                fill="#fff" fill-opacity=".8"/><path d="M9.49
                4.756v6.583l5.732-3.288L9.49 4.756Z" fill="#fff"/><path
                d="M8.669 4.356a13.83 13.83 0 0 0-4.362 4.39l4.362 2.518V4.356Z"
                fill="#fff" fill-opacity=".8"/><path d="M22.504 3.88a13.695
                13.695 0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25 16.483c.071
                2.12.634 4.196 1.644
                6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68 13.68 0 0
                0-1.644 6.036l6.068-3.482-4.424-2.554Z" fill="#fff"/><path
                d="M9.539 28.147a13.673 13.673 0 0 0 6.047 1.603v-5.062L9.54
                28.147Z" fill="#fff" fill-opacity=".8"/><path d="M27.697
                8.768a13.83 13.83 0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362
                27.62a13.851 13.851 0 0 0 4.351-4.417l-4.351-2.514v6.93Z"
                fill="#fff"/><path d="M29.75 15.452a13.659 13.659 0 0
                0-1.63-5.979l-4.381 2.53 6.011 3.45Z" fill="#fff"
                fill-opacity=".8"/><path d="M16.405 29.75a13.673 13.673 0 0 0
                6.036-1.595l-6.036-3.498v5.093Z" fill="#fff"/><path d="M8.669
                19.247v-6.494L3.03 15.986l5.639 3.261Z" fill="#fff"
                fill-opacity=".8"/></svg>
            svgColor:
              type: string
              description: SVG representation of the model in colored format.
              minLength: 1
              x-oapi-codegen-extra-tags:
                yaml: svgColor
                json: svgColor
              x-order: 6
              default: >-
                <svg xmlns="http://www.w3.org/2000/svg" id="Layer_1"
                data-name="Layer 1" viewBox="0 0 134.95
                135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                points="69.49 31.82 69.49 64.07 97.44 47.89 69.49 31.82"
                class="cls-1"/><polygon points="69.49 70.81 69.49 103.22 97.7
                87.09 69.49 70.81" class="cls-1"/><polygon points="65.47 63.85
                65.47 32.09 37.87 47.92 65.47 63.85" class="cls-2"/><path
                d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                class="cls-2"/><polygon points="65.47 103.06 65.47 71.05 37.8
                87.07 65.47 103.06" class="cls-2"/><polygon points="35.54 122.63
                63.56 106.61 35.54 90.41 35.54 122.63" class="cls-1"/><polygon
                points="99.61 122.8 99.61 90.63 71.63 106.63 99.61 122.8"
                class="cls-2"/><path
                d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                class="cls-2"/><polygon points="103.64 83.69 131.76 67.61 103.64
                51.45 103.64 83.69" class="cls-1"/><polygon points="99.61 44.5
                99.61 12.52 71.76 28.49 99.61 44.5" class="cls-2"/><polygon
                points="99.61 83.55 99.61 51.28 71.7 67.44 99.61 83.55"
                class="cls-2"/><polygon points="67.48 135.02 67.49 135.02 67.48
                135.02 67.48 135.02" class="cls-2"/><polygon points="35.54 51.22
                35.54 83.73 63.66 67.45 35.54 51.22" class="cls-1"/><path
                d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                class="cls-2"/><polygon points="35.54 12.3 35.54 44.62 63.68
                28.48 35.54 12.3" class="cls-1"/><path
                d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                class="cls-2"/><path
                d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                class="cls-1"/><path
                d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                class="cls-1"/><path
                d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                class="cls-1"/><path
                d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                class="cls-2"/><path
                d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                class="cls-1"/><path
                d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                class="cls-1"/><path
                d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                class="cls-2"/><path
                d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                class="cls-1"/><polygon points="31.51 83.44 31.51 51.56 3.83
                67.43 31.51 83.44" class="cls-2"/></svg>
            svgComplete:
              type: string
              description: SVG representation of the complete model.
              minLength: 1
              x-oapi-codegen-extra-tags:
                yaml: svgComplete
                json: svgComplete
              x-order: 7
            shape:
              x-order: 8
              type: string
              description: >-
                The shape of the node’s body. Note that each shape fits within
                the specified width and height, and so you may have to adjust
                width and height if you desire an equilateral shape (i.e. width
                !== height for several equilateral shapes)
              default: circle
              enum:
                - circle
                - ellipse
                - triangle
                - round-triangle
                - rectangle
                - round-rectangle
                - bottom-round-rectangle
                - cut-rectangle
                - barrel
                - rhomboid
                - diamond
                - round-diamond
                - pentagon
                - round-pentagon
                - hexagon
                - round-hexagon
                - concave-hexagon
                - heptagon
                - round-heptagon
                - octagon
                - round-octagon
                - star
                - tag
                - round-tag
                - vee
                - polygon
          x-oapi-codegen-extra-tags:
            gorm: type:bytes;serializer:json
            json: metadata
            yaml: metadata
          x-order: 11
          additionalProperties: true
        model:
          x-oapi-codegen-extra-tags:
            gorm: type:bytes;serializer:json
          x-order: 12
          type: object
          description: >-
            Registrant-defined data associated with the model. Properties
            pertain to the software being managed (e.g. Kubernetes v1.31).
          required:
            - version
          properties:
            version:
              description: Version of the model as defined by the registrant.
              allOf:
                - type: string
                  minLength: 5
                  maxLength: 100
                  pattern: >-
                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                  description: >-
                    A valid semantic version string between 5 and 256
                    characters. The pattern allows for a major.minor.patch
                    version followed by an optional pre-release tag like
                    '-alpha' or '-beta.2' and an optional build metadata tag
                    like '+build.1.
                  default: v0.0.1
              x-oapi-codegen-extra-tags:
                yaml: version
                json: version
              x-order: 1
        relationships:
          type: array
          x-go-type: interface{}
          x-oapi-codegen-extra-tags:
            gorm: '-'
            json: relationships
            yaml: relationships
        components:
          type: array
          x-go-type: interface{}
          x-oapi-codegen-extra-tags:
            gorm: '-'
            json: components
            yaml: components
        componentsCount:
          type: integer
          description: Number of components associated with the model.
          x-order: 13
          x-oapi-codegen-extra-tags:
            json: components_count
            yaml: components_count
            gorm: '-'
          default: 0
        relationshipsCount:
          type: integer
          description: Number of relationships associated with the model.
          x-order: 13
          x-oapi-codegen-extra-tags:
            gorm: '-'
            json: relationships_count
            yaml: relationships_count
          default: 0
      required:
        - id
        - schemaVersion
        - displayName
        - status
        - subCategory
        - model
        - name
        - description
        - version
        - registrant
        - category
        - categoryId
        - registrantId
        - relationshipsCount
        - componentsCount
        - components
        - relationships
    model_ImportRequest:
      type: object
      required:
        - importBody
        - uploadType
        - register
      properties:
        importBody:
          oneOf:
            - title: File Import
              type: object
              required:
                - fileName
                - modelFile
              properties:
                fileName:
                  type: string
                  description: Name of the file being uploaded.
                modelFile:
                  type: string
                  format: file
                  description: >-
                    Supported model file formats are: .tar, .tar.gz, and .tgz.
                    See [Import Models
                    Documentation](https://docs.meshery.io/guides/configuration-management/importing-models#import-models-using-meshery-ui)
                    for details
            - title: URL Import
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  format: uri
                  description: >-
                    A direct URL to a single model file, for example:
                    https://raw.github.com/your-model-file.tar. Supported model
                    file formats are: .tar, .tar.gz, and .tgz. \n\nFor bulk
                    import of your model use the GitHub connection or CSV files.
                    See [Import Models
                    Documentation](https://docs.meshery.io/guides/configuration-management/importing-models#import-models-using-meshery-ui)
                    for details
            - title: CSV Import
              type: object
              required:
                - modelCsv
                - componentCsv
                - relationshipCsv
              properties:
                modelCsv:
                  type: string
                  format: binary
                  description: Upload a CSV file containing model definitions
                componentCsv:
                  type: string
                  format: binary
                  description: Upload a CSV file containing component definitions
                relationshipCsv:
                  type: string
                  format: binary
                  description: Upload a CSV file containing relationship definitions
            - title: Model Create
              type: object
              required:
                - model
                - url
              properties:
                url:
                  type: string
                  description: URI to the source code or package of the model.
                  format: uri
                  oneOf:
                    - title: GitHub
                      type: string
                      pattern: ^git://github\.com/[\w.-]+/[\w.-]+(/[\w.-]+/[\w/-]+)?$
                      description: >-
                        Git protocol URL for GitHub repository or specific
                        resource path
                      example: >-
                        git://github.com/cert-manager/cert-manager/master/deploy/crds
                      x-metadata:
                        uiType: url
                        validationHint: >-
                          Enter a git protocol URL (e.g.,
                          git://github.com/owner/repo)
                    - title: Artifact Hub
                      type: string
                      pattern: >-
                        ^https:\/\/artifacthub\.io\/packages\/(search\?ts_query_web=[\w.-]+|[\w.-]+\/[\w.-]+\/[\w.-]+)$
                      description: >-
                        Artifact Hub package URL or search query URL with model
                        name parameter
                      example: >-
                        https://artifacthub.io/packages/search?ts_query_web={model-name}
                      x-metadata:
                        uiType: url
                        validationHint: >-
                          Enter an Artifact Hub URL (e.g.,
                          https://artifacthub.io/packages/search?ts_query_web={meshery-operator})
        uploadType:
          type: string
          title: Upload method
          enum:
            - file
            - urlImport
            - csv
            - url
          enumDescriptions:
            - Upload a model file (.tar, .tar.gz, .tgz) from your local system
            - Import a model file using a direct URL to the source
            - >-
              Upload separate CSV files for model definitions, components, and
              their relationships
          description: >-
            Choose the method you prefer to upload your model file. Select 'File
            Import' or 'CSV Import' if you have the file on your local system or
            'URL Import' if you have the file hosted online.
        register:
          type: boolean
          nullable: false
    model_ImportBody:
      oneOf:
        - title: File Import
          type: object
          required:
            - fileName
            - modelFile
          properties:
            fileName:
              type: string
              description: Name of the file being uploaded.
            modelFile:
              type: string
              format: file
              description: >-
                Supported model file formats are: .tar, .tar.gz, and .tgz. See
                [Import Models
                Documentation](https://docs.meshery.io/guides/configuration-management/importing-models#import-models-using-meshery-ui)
                for details
        - title: URL Import
          type: object
          required:
            - url
          properties:
            url:
              type: string
              format: uri
              description: >-
                A direct URL to a single model file, for example:
                https://raw.github.com/your-model-file.tar. Supported model file
                formats are: .tar, .tar.gz, and .tgz. \n\nFor bulk import of
                your model use the GitHub connection or CSV files. See [Import
                Models
                Documentation](https://docs.meshery.io/guides/configuration-management/importing-models#import-models-using-meshery-ui)
                for details
        - title: CSV Import
          type: object
          required:
            - modelCsv
            - componentCsv
            - relationshipCsv
          properties:
            modelCsv:
              type: string
              format: binary
              description: Upload a CSV file containing model definitions
            componentCsv:
              type: string
              format: binary
              description: Upload a CSV file containing component definitions
            relationshipCsv:
              type: string
              format: binary
              description: Upload a CSV file containing relationship definitions
        - title: Model Create
          type: object
          required:
            - model
            - url
          properties:
            url:
              type: string
              description: URI to the source code or package of the model.
              format: uri
              oneOf:
                - title: GitHub
                  type: string
                  pattern: ^git://github\.com/[\w.-]+/[\w.-]+(/[\w.-]+/[\w/-]+)?$
                  description: >-
                    Git protocol URL for GitHub repository or specific resource
                    path
                  example: >-
                    git://github.com/cert-manager/cert-manager/master/deploy/crds
                  x-metadata:
                    uiType: url
                    validationHint: >-
                      Enter a git protocol URL (e.g.,
                      git://github.com/owner/repo)
                - title: Artifact Hub
                  type: string
                  pattern: >-
                    ^https:\/\/artifacthub\.io\/packages\/(search\?ts_query_web=[\w.-]+|[\w.-]+\/[\w.-]+\/[\w.-]+)$
                  description: >-
                    Artifact Hub package URL or search query URL with model name
                    parameter
                  example: >-
                    https://artifacthub.io/packages/search?ts_query_web={model-name}
                  x-metadata:
                    uiType: url
                    validationHint: >-
                      Enter an Artifact Hub URL (e.g.,
                      https://artifacthub.io/packages/search?ts_query_web={meshery-operator})
    subscription_PaymentProcessor:
      type: string
      enum:
        - stripe
        - paypal
        - braintree
      description: Supported payment processors
    subscription_CreateSubscriptionRequest:
      type: object
      properties:
        org_id:
          type: string
          description: Organization ID
        plan_id:
          type: string
          description: Price ID from the payment processor
        user_count:
          type: integer
          description: Number of users in the organization
        email:
          type: string
          format: email
          description: Email of the customer
        payment_processor:
          type: string
          enum:
            - stripe
            - paypal
            - braintree
          description: Supported payment processors
    subscription_CreateSubscriptionResponse:
      type: object
      properties:
        subscription_id:
          type: string
        clientSecret:
          type: string
    subscription_UpdateUsersRequest:
      type: object
      properties:
        payment_processor:
          type: string
          enum:
            - stripe
            - paypal
            - braintree
          description: Supported payment processors
    subscription_CancelSubscriptionRequest:
      type: object
      properties:
        subscription_id:
          type: string
          description: Subscription ID from the payment processor
        payment_processor:
          type: string
          enum:
            - stripe
            - paypal
            - braintree
          description: Supported payment processors
    subscription_WebhookEvent:
      type: object
      description: Payload for webhook events from payment processors
    subscription_SubscriptionPage:
      type: object
      required:
        - page
        - page_size
        - total_count
        - subscriptions
      properties:
        page:
          type: integer
        page_size:
          type: integer
        total_count:
          type: integer
        subscriptions:
          type: array
          items:
            x-go-type: Subscription
            type: object
            properties:
              ID:
                x-oapi-codegen-extra-tags:
                  db: id
                type: string
                format: uuid
                description: >-
                  A Universally Unique Identifier used to uniquely identify
                  entities in Meshery. The UUID core definition is used across
                  different schemas.
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
              org_id:
                x-oapi-codegen-extra-tags:
                  db: org_id
                type: string
                format: uuid
                description: >-
                  A Universally Unique Identifier used to uniquely identify
                  entities in Meshery. The UUID core definition is used across
                  different schemas.
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
              plan_id:
                x-oapi-codegen-extra-tags:
                  db: plan_id
                type: string
                format: uuid
                description: >-
                  A Universally Unique Identifier used to uniquely identify
                  entities in Meshery. The UUID core definition is used across
                  different schemas.
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
              plan:
                x-go-type: plan.Plan
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1beta1/plan
                x-oapi-codegen-extra-tags:
                  belongs_to: plans
                  fk_id: PlanId
                  yaml: plan,omitempty
                  json: plan,omitempty
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    description: >-
                      A Universally Unique Identifier used to uniquely identify
                      entities in Meshery. The UUID core definition is used
                      across different schemas.
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  name:
                    type: string
                    x-go-type: PlanName
                    description: Name of the plan
                    enum:
                      - Free
                      - Team Designer
                      - Team Operator
                      - Enterprise
                  cadence:
                    x-go-type: PlanCadence
                    type: string
                    enum:
                      - monthly
                      - yearly
                  unit:
                    x-go-type: PlanUnit
                    type: string
                    enum:
                      - user
                      - free
                  price_per_unit:
                    type: number
                    description: Price per unit of the plan
                    x-oapi-codegen-extra-tags:
                      db: price_per_unit
                  currency:
                    x-go-type: Currency
                    type: string
                    enum:
                      - usd
                required:
                  - id
                  - name
                  - cadence
                  - unit
                  - price_per_unit
                  - price_id
                  - currency
              quantity:
                decscription: number of units subscribed (eg number of users)
                type: integer
                x-oapi-codegen-extra-tags:
                  db: quantity
              start_date:
                x-oapi-codegen-extra-tags:
                  db: start_date
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              end_date:
                x-oapi-codegen-extra-tags:
                  db: end_date
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              status:
                x-go-type: SubscriptionStatus
                x-oapi-codegen-extra-tags:
                  db: status
                type: string
                description: Possible statuses of a Stripe subscription.
                enum:
                  - incomplete
                  - incomplete_expired
                  - trialing
                  - active
                  - past_due
                  - canceled
                  - unpaid
                x-enumDescriptions:
                  incomplete: >-
                    The subscription has been created, but the initial payment
                    is pending. It may transition to 'active' or
                    'incomplete_expired'.
                  incomplete_expired: >-
                    The subscription was created but never activated due to
                    failed initial payment. It is now expired.
                  trialing: >-
                    The subscription is currently in a trial period before the
                    first payment is due.
                  active: >-
                    The subscription is active, and billing is functioning
                    normally.
                  past_due: >-
                    The latest payment attempt failed, but the subscription
                    remains active. Stripe may retry the charge.
                  canceled: >-
                    The subscription has been canceled and will no longer
                    generate invoices.
                  unpaid: >-
                    The subscription is still technically active but has unpaid
                    invoices and is no longer generating new invoices.
              created_at:
                x-oapi-codegen-extra-tags:
                  db: created_at
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              updated_at:
                x-oapi-codegen-extra-tags:
                  db: updated_at
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              deleted_at:
                x-oapi-codegen-extra-tags:
                  db: deleted_at
                type: string
                format: date-time
                x-go-type: sql.NullTime
                x-go-type-import:
                  path: database/sql
                x-go-type-skip-optional-pointer: true
              billing_id:
                type: string
                description: >-
                  Billing ID of the subscription. This is the ID of the
                  subscription in the billing system. eg Stripe
                x-oapi-codegen-extra-tags:
                  db: billing_id
            required:
              - ID
              - org_id
              - plan_id
              - billing_id
              - status
              - quantity
    subscription_Subscription:
      type: object
      properties:
        ID:
          x-oapi-codegen-extra-tags:
            db: id
          type: string
          format: uuid
          description: >-
            A Universally Unique Identifier used to uniquely identify entities
            in Meshery. The UUID core definition is used across different
            schemas.
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        org_id:
          x-oapi-codegen-extra-tags:
            db: org_id
          type: string
          format: uuid
          description: >-
            A Universally Unique Identifier used to uniquely identify entities
            in Meshery. The UUID core definition is used across different
            schemas.
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        plan_id:
          x-oapi-codegen-extra-tags:
            db: plan_id
          type: string
          format: uuid
          description: >-
            A Universally Unique Identifier used to uniquely identify entities
            in Meshery. The UUID core definition is used across different
            schemas.
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        plan:
          x-go-type: plan.Plan
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1beta1/plan
          x-oapi-codegen-extra-tags:
            belongs_to: plans
            fk_id: PlanId
            yaml: plan,omitempty
            json: plan,omitempty
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: >-
                A Universally Unique Identifier used to uniquely identify
                entities in Meshery. The UUID core definition is used across
                different schemas.
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
            name:
              type: string
              x-go-type: PlanName
              description: Name of the plan
              enum:
                - Free
                - Team Designer
                - Team Operator
                - Enterprise
            cadence:
              x-go-type: PlanCadence
              type: string
              enum:
                - monthly
                - yearly
            unit:
              x-go-type: PlanUnit
              type: string
              enum:
                - user
                - free
            price_per_unit:
              type: number
              description: Price per unit of the plan
              x-oapi-codegen-extra-tags:
                db: price_per_unit
            currency:
              x-go-type: Currency
              type: string
              enum:
                - usd
          required:
            - id
            - name
            - cadence
            - unit
            - price_per_unit
            - price_id
            - currency
        quantity:
          decscription: number of units subscribed (eg number of users)
          type: integer
          x-oapi-codegen-extra-tags:
            db: quantity
        start_date:
          x-oapi-codegen-extra-tags:
            db: start_date
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        end_date:
          x-oapi-codegen-extra-tags:
            db: end_date
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        status:
          x-go-type: SubscriptionStatus
          x-oapi-codegen-extra-tags:
            db: status
          type: string
          description: Possible statuses of a Stripe subscription.
          enum:
            - incomplete
            - incomplete_expired
            - trialing
            - active
            - past_due
            - canceled
            - unpaid
          x-enumDescriptions:
            incomplete: >-
              The subscription has been created, but the initial payment is
              pending. It may transition to 'active' or 'incomplete_expired'.
            incomplete_expired: >-
              The subscription was created but never activated due to failed
              initial payment. It is now expired.
            trialing: >-
              The subscription is currently in a trial period before the first
              payment is due.
            active: The subscription is active, and billing is functioning normally.
            past_due: >-
              The latest payment attempt failed, but the subscription remains
              active. Stripe may retry the charge.
            canceled: >-
              The subscription has been canceled and will no longer generate
              invoices.
            unpaid: >-
              The subscription is still technically active but has unpaid
              invoices and is no longer generating new invoices.
        created_at:
          x-oapi-codegen-extra-tags:
            db: created_at
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updated_at:
          x-oapi-codegen-extra-tags:
            db: updated_at
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          x-oapi-codegen-extra-tags:
            db: deleted_at
          type: string
          format: date-time
          x-go-type: sql.NullTime
          x-go-type-import:
            path: database/sql
          x-go-type-skip-optional-pointer: true
        billing_id:
          type: string
          description: >-
            Billing ID of the subscription. This is the ID of the subscription
            in the billing system. eg Stripe
          x-oapi-codegen-extra-tags:
            db: billing_id
      required:
        - ID
        - org_id
        - plan_id
        - billing_id
        - status
        - quantity
    subscription_SubscriptionStatus:
      type: string
      description: Possible statuses of a Stripe subscription.
      enum:
        - incomplete
        - incomplete_expired
        - trialing
        - active
        - past_due
        - canceled
        - unpaid
      x-enumDescriptions:
        incomplete: >-
          The subscription has been created, but the initial payment is pending.
          It may transition to 'active' or 'incomplete_expired'.
        incomplete_expired: >-
          The subscription was created but never activated due to failed initial
          payment. It is now expired.
        trialing: >-
          The subscription is currently in a trial period before the first
          payment is due.
        active: The subscription is active, and billing is functioning normally.
        past_due: >-
          The latest payment attempt failed, but the subscription remains
          active. Stripe may retry the charge.
        canceled: >-
          The subscription has been canceled and will no longer generate
          invoices.
        unpaid: >-
          The subscription is still technically active but has unpaid invoices
          and is no longer generating new invoices.
    plan_PlanPage:
      type: object
      required:
        - page
        - page_size
        - total_count
        - plans
      properties:
        page:
          type: integer
        page_size:
          type: integer
        total_count:
          type: integer
        plans:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: >-
                  A Universally Unique Identifier used to uniquely identify
                  entities in Meshery. The UUID core definition is used across
                  different schemas.
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
              name:
                type: string
                x-go-type: PlanName
                description: Name of the plan
                enum:
                  - Free
                  - Team Designer
                  - Team Operator
                  - Enterprise
              cadence:
                x-go-type: PlanCadence
                type: string
                enum:
                  - monthly
                  - yearly
              unit:
                x-go-type: PlanUnit
                type: string
                enum:
                  - user
                  - free
              price_per_unit:
                type: number
                description: Price per unit of the plan
                x-oapi-codegen-extra-tags:
                  db: price_per_unit
              currency:
                x-go-type: Currency
                type: string
                enum:
                  - usd
            required:
              - id
              - name
              - cadence
              - unit
              - price_per_unit
              - price_id
              - currency
            x-go-type: Plan
    plan_Plan:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: >-
            A Universally Unique Identifier used to uniquely identify entities
            in Meshery. The UUID core definition is used across different
            schemas.
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        name:
          type: string
          x-go-type: PlanName
          description: Name of the plan
          enum:
            - Free
            - Team Designer
            - Team Operator
            - Enterprise
        cadence:
          x-go-type: PlanCadence
          type: string
          enum:
            - monthly
            - yearly
        unit:
          x-go-type: PlanUnit
          type: string
          enum:
            - user
            - free
        price_per_unit:
          type: number
          description: Price per unit of the plan
          x-oapi-codegen-extra-tags:
            db: price_per_unit
        currency:
          x-go-type: Currency
          type: string
          enum:
            - usd
      required:
        - id
        - name
        - cadence
        - unit
        - price_per_unit
        - price_id
        - currency
    plan_PlanName:
      type: string
      description: Name of the plan
      enum:
        - Free
        - Team Designer
        - Team Operator
        - Enterprise
    plan_PlanCadence:
      type: string
      enum:
        - monthly
        - yearly
    plan_PlanUnit:
      type: string
      enum:
        - user
        - free
    plan_Currency:
      type: string
      enum:
        - usd
    feature_FeaturesPage:
      type: array
      items:
        x-go-type: Feature
        type: object
        required:
          - id
          - plan_id
          - quantity
          - feature
        properties:
          id:
            x-oapi-codegen-extra-tags:
              db: id
            type: string
            format: uuid
            description: >-
              A Universally Unique Identifier used to uniquely identify entities
              in Meshery. The UUID core definition is used across different
              schemas.
            x-go-type: uuid.UUID
            x-go-type-import:
              path: github.com/gofrs/uuid
          plan_id:
            x-oapi-codegen-extra-tags:
              db: plan_id
            type: string
            format: uuid
            description: >-
              A Universally Unique Identifier used to uniquely identify entities
              in Meshery. The UUID core definition is used across different
              schemas.
            x-go-type: uuid.UUID
            x-go-type-import:
              path: github.com/gofrs/uuid
          plan:
            x-go-type: plan.Plan
            x-go-type-import:
              path: github.com/meshery/schemas/models/v1beta1/plan
            x-oapi-codegen-extra-tags:
              belongs_to: plans
              fk_id: PlanId
              yaml: plan,omitempty
              json: plan,omitempty
            type: object
            properties:
              id:
                type: string
                format: uuid
                description: >-
                  A Universally Unique Identifier used to uniquely identify
                  entities in Meshery. The UUID core definition is used across
                  different schemas.
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
              name:
                type: string
                x-go-type: PlanName
                description: Name of the plan
                enum:
                  - Free
                  - Team Designer
                  - Team Operator
                  - Enterprise
              cadence:
                x-go-type: PlanCadence
                type: string
                enum:
                  - monthly
                  - yearly
              unit:
                x-go-type: PlanUnit
                type: string
                enum:
                  - user
                  - free
              price_per_unit:
                type: number
                description: Price per unit of the plan
                x-oapi-codegen-extra-tags:
                  db: price_per_unit
              currency:
                x-go-type: Currency
                type: string
                enum:
                  - usd
            required:
              - id
              - name
              - cadence
              - unit
              - price_per_unit
              - price_id
              - currency
          name:
            x-go-type: FeatureName
            x-oapi-codegen-extra-tags:
              db: name
            type: string
            enum:
              - ComponentsInDesign
              - RelationshipsInDesign
              - DesignsInWorkspace
              - WorkspacesInOrganization
              - ImageSizeInDesign
              - SizePerDesign
            description: Enumeration of possible feature types
          quantity:
            type: number
            description: Quantity of the feature allowed, use 9999999999 for unlimited
            x-oapi-codegen-extra-tags:
              db: quantity
          created_at:
            x-oapi-codegen-extra-tags:
              db: created_at
            type: string
            format: date-time
            x-go-type-skip-optional-pointer: true
          updated_at:
            x-oapi-codegen-extra-tags:
              db: updated_at
            type: string
            format: date-time
            x-go-type-skip-optional-pointer: true
        additionalProperties: false
    feature_FeatureName:
      type: string
      enum:
        - ComponentsInDesign
        - RelationshipsInDesign
        - DesignsInWorkspace
        - WorkspacesInOrganization
        - ImageSizeInDesign
        - SizePerDesign
      description: Enumeration of possible feature types
    feature_Feature:
      type: object
      required:
        - id
        - plan_id
        - quantity
        - feature
      properties:
        id:
          x-oapi-codegen-extra-tags:
            db: id
          type: string
          format: uuid
          description: >-
            A Universally Unique Identifier used to uniquely identify entities
            in Meshery. The UUID core definition is used across different
            schemas.
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        plan_id:
          x-oapi-codegen-extra-tags:
            db: plan_id
          type: string
          format: uuid
          description: >-
            A Universally Unique Identifier used to uniquely identify entities
            in Meshery. The UUID core definition is used across different
            schemas.
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        plan:
          x-go-type: plan.Plan
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1beta1/plan
          x-oapi-codegen-extra-tags:
            belongs_to: plans
            fk_id: PlanId
            yaml: plan,omitempty
            json: plan,omitempty
          type: object
          properties:
            id:
              type: string
              format: uuid
              description: >-
                A Universally Unique Identifier used to uniquely identify
                entities in Meshery. The UUID core definition is used across
                different schemas.
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
            name:
              type: string
              x-go-type: PlanName
              description: Name of the plan
              enum:
                - Free
                - Team Designer
                - Team Operator
                - Enterprise
            cadence:
              x-go-type: PlanCadence
              type: string
              enum:
                - monthly
                - yearly
            unit:
              x-go-type: PlanUnit
              type: string
              enum:
                - user
                - free
            price_per_unit:
              type: number
              description: Price per unit of the plan
              x-oapi-codegen-extra-tags:
                db: price_per_unit
            currency:
              x-go-type: Currency
              type: string
              enum:
                - usd
          required:
            - id
            - name
            - cadence
            - unit
            - price_per_unit
            - price_id
            - currency
        name:
          x-go-type: FeatureName
          x-oapi-codegen-extra-tags:
            db: name
          type: string
          enum:
            - ComponentsInDesign
            - RelationshipsInDesign
            - DesignsInWorkspace
            - WorkspacesInOrganization
            - ImageSizeInDesign
            - SizePerDesign
          description: Enumeration of possible feature types
        quantity:
          type: number
          description: Quantity of the feature allowed, use 9999999999 for unlimited
          x-oapi-codegen-extra-tags:
            db: quantity
        created_at:
          x-oapi-codegen-extra-tags:
            db: created_at
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updated_at:
          x-oapi-codegen-extra-tags:
            db: updated_at
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
      additionalProperties: false
    workspace_workspace:
      properties:
        ID:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: id
            json: id
          x-go-type-name: GeneralId
          x-go-type-skip-optional-pointer: true
        name:
          type: string
          x-go-type-skip-optional-pointer: true
        description:
          type: string
          x-go-type-skip-optional-pointer: true
        organization_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: org_id
            json: org_id
          x-go-type-name: OrganizationId
          x-go-type-skip-optional-pointer: true
        owner:
          type: string
          x-go-type-skip-optional-pointer: true
        created_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updated_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          description: SQL null Timestamp to handle null values of time.
          x-go-type: sql.NullTime
          type: string
          x-go-type-skip-optional-pointer: true
    workspace_workspacesTeamsMapping:
      properties:
        ID:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: id
            json: id
          x-go-type-name: GeneralId
          x-go-type-skip-optional-pointer: true
        team_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: team_id
            json: team_id
          x-go-type-name: TeamId
          x-go-type-skip-optional-pointer: true
        workspace_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: workspace_id
            json: workspace_id
          x-go-type-name: WorkspaceId
          x-go-type-skip-optional-pointer: true
        created_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updated_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          description: SQL null Timestamp to handle null values of time.
          x-go-type: sql.NullTime
          type: string
          x-go-type-skip-optional-pointer: true
    workspace_workspacesEnvironmentsMapping:
      properties:
        ID:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: id
            json: id
          x-go-type-name: GeneralId
          x-go-type-skip-optional-pointer: true
        environment_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: environment_id
            json: environment_id
          x-go-type-name: EnvironmentId
          x-go-type-skip-optional-pointer: true
        workspace_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: workspace_id
            json: workspace_id
          x-go-type-name: WorkspaceId
          x-go-type-skip-optional-pointer: true
        created_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updated_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          description: SQL null Timestamp to handle null values of time.
          x-go-type: sql.NullTime
          type: string
          x-go-type-skip-optional-pointer: true
    workspace_workspacesViewsMapping:
      properties:
        ID:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: id
            json: id
          x-go-type-name: GeneralId
          x-go-type-skip-optional-pointer: true
        view_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: view_id
            json: view_id
          x-go-type-name: ViewId
          x-go-type-skip-optional-pointer: true
        workspace_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: workspace_id
            json: workspace_id
          x-go-type-name: WorkspaceId
          x-go-type-skip-optional-pointer: true
        created_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updated_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          description: SQL null Timestamp to handle null values of time.
          x-go-type: sql.NullTime
          type: string
          x-go-type-skip-optional-pointer: true
    workspace_workspacesDesignsMapping:
      properties:
        ID:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: id
            json: id
          x-go-type-name: GeneralId
          x-go-type-skip-optional-pointer: true
        design_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: design_id
            json: design_id
          x-go-type-name: DesignId
          x-go-type-skip-optional-pointer: true
        workspace_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: workspace_id
            json: workspace_id
          x-go-type-name: WorkspaceId
          x-go-type-skip-optional-pointer: true
        created_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updated_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          description: SQL null Timestamp to handle null values of time.
          x-go-type: sql.NullTime
          type: string
          x-go-type-skip-optional-pointer: true
    workspace_workspaceUpdatePayload:
      properties:
        name:
          type: string
          x-go-type-skip-optional-pointer: true
          description: Name of workspace
        description:
          type: string
          x-go-type-skip-optional-pointer: true
          description: Environment description
        organization_id:
          type: string
          description: Organization ID
          x-go-type-skip-optional-pointer: true
          x-go-name: OrganizationID
          x-oapi-codegen-extra-tags:
            json: organization_id
      required:
        - organization_id
    workspace_workspacePayload:
      properties:
        name:
          type: string
          x-go-type-skip-optional-pointer: true
          description: >-
            Provide a name that meaningfully represents this workspace. You can
            change the name of the workspace even after its creation.
        description:
          type: string
          x-go-type-skip-optional-pointer: true
          description: >-
            Workspaces serve as a virtual space for your team-based work, allows
            you to control access and more, Provide a detailed description to
            clarify the purpose of this workspace. Remember you can changes
            description of workspace after it's creations too. Learn more about
            workspaces
            [here](https://docs.meshery.io/concepts/logical/workspaces)
        organization_id:
          type: string
          description: >-
            Select an organization in which you want to create this new
            workspace. Keep in mind that the organization cannot be changed
            after creation.
          x-go-type-skip-optional-pointer: true
          x-go-name: OrganizationID
          x-oapi-codegen-extra-tags:
            json: organization_id
      required:
        - name
        - organization_id
    workspace_workspacePage:
      properties:
        page:
          type: integer
          x-go-type-skip-optional-pointer: true
        page_size:
          type: integer
          x-go-type-skip-optional-pointer: true
        total_count:
          type: integer
          x-go-type-skip-optional-pointer: true
        workspaces:
          type: array
          x-go-type-skip-optional-pointer: true
          items:
            x-go-type: Workspace
            properties:
              ID:
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                x-oapi-codegen-extra-tags:
                  db: id
                  json: id
                x-go-type-name: GeneralId
                x-go-type-skip-optional-pointer: true
              name:
                type: string
                x-go-type-skip-optional-pointer: true
              description:
                type: string
                x-go-type-skip-optional-pointer: true
              organization_id:
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                x-oapi-codegen-extra-tags:
                  db: org_id
                  json: org_id
                x-go-type-name: OrganizationId
                x-go-type-skip-optional-pointer: true
              owner:
                type: string
                x-go-type-skip-optional-pointer: true
              created_at:
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              updated_at:
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              deleted_at:
                description: SQL null Timestamp to handle null values of time.
                x-go-type: sql.NullTime
                type: string
                x-go-type-skip-optional-pointer: true
    environment_environment:
      $id: https://schemas.meshery.io/environment.json
      $schema: http://json-schema.org/draft-07/schema#
      description: >-
        Meshery Environments allow you to logically group related Connections
        and their associated Credentials.. Learn more at
        https://docs.meshery.io/concepts/logical/environments
      additionalProperties: false
      type: object
      required:
        - id
        - name
        - description
        - organization_id
      properties:
        id:
          description: ID
          x-order: 1
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            db: id
            yaml: id
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        name:
          x-oapi-codegen-extra-tags:
            db: name
            yaml: name
          x-order: 2
          type: string
          description: Environment name
        description:
          x-oapi-codegen-extra-tags:
            db: description
            yaml: description
          x-order: 3
          type: string
          description: Environment description
        organization_id:
          x-go-name: OrganizationID
          x-oapi-codegen-extra-tags:
            db: organization_id
            yaml: organization_id
          x-order: 4
          description: Environment organization ID
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        owner:
          x-oapi-codegen-extra-tags:
            db: owner
            yaml: owner
          x-order: 5
          description: Environment owner
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          default: 00000000-0000-0000-0000-000000000000
        created_at:
          x-oapi-codegen-extra-tags:
            db: created_at
            yaml: created_at
          x-order: 6
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        metadata:
          x-oapi-codegen-extra-tags:
            db: metadata
            yaml: metadata
          x-order: 7
          x-go-type: core.Map
          x-go-type-skip-optional-pointer: true
          type: object
        updated_at:
          x-oapi-codegen-extra-tags:
            db: updated_at
            yaml: updated_at
          x-order: 8
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          x-oapi-codegen-extra-tags:
            db: deleted_at
            yaml: deleted_at
          x-go-type: core.NullTime
          x-go-import: database/sql
          x-order: 9
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
    environment_environmentConnectionMapping:
      properties:
        ID:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: id
            json: id
          x-go-type-name: GeneralId
          x-go-type-skip-optional-pointer: true
        environment_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: environment_id
            json: environment_id
          x-go-type-skip-optional-pointer: true
        connection_id:
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
          x-oapi-codegen-extra-tags:
            db: connection_id
            json: connection_id
          x-go-type-skip-optional-pointer: true
        created_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updated_at:
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          description: SQL null Timestamp to handle null values of time.
          x-go-type: sql.NullTime
          type: string
          x-go-type-skip-optional-pointer: true
    environment_environmentPayload:
      properties:
        name:
          description: >-
            An environment is a collection of resources. Provide a name that
            meaningfully represents these resources. You can change the name of
            the environment even after its creation.
          type: string
          x-go-type-skip-optional-pointer: true
        description:
          description: >-
            An environment is a collection of resources, such as connections &
            credentail. Provide a detailed description to clarify the purpose of
            this environment and the types of resources it encompasses. You can
            modify the description at any Time. Learn more about environments
            [here](https://docs.meshery.io/concepts/logical/environments).
          type: string
          x-go-type-skip-optional-pointer: true
        OrganizationID:
          type: string
          description: >-
            Select an organization in which you want to create this new
            environment. Keep in mind that the organization cannot be changed
            after creation.
          x-go-type-skip-optional-pointer: true
          x-go-name: OrgId
          x-oapi-codegen-extra-tags:
            json: organization_id
      required:
        - name
        - organizationID
    environment_environmentPage:
      properties:
        page:
          type: integer
          x-go-type-skip-optional-pointer: true
        page_size:
          type: integer
          x-go-type-skip-optional-pointer: true
        total_count:
          type: integer
          x-go-type-skip-optional-pointer: true
        environments:
          type: array
          x-go-type-skip-optional-pointer: true
          items:
            x-go-type: Environment
            $id: https://schemas.meshery.io/environment.json
            $schema: http://json-schema.org/draft-07/schema#
            description: >-
              Meshery Environments allow you to logically group related
              Connections and their associated Credentials.. Learn more at
              https://docs.meshery.io/concepts/logical/environments
            additionalProperties: false
            type: object
            required:
              - id
              - name
              - description
              - organization_id
            properties:
              id:
                description: ID
                x-order: 1
                x-go-name: ID
                x-oapi-codegen-extra-tags:
                  db: id
                  yaml: id
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                default: 00000000-0000-0000-0000-000000000000
              name:
                x-oapi-codegen-extra-tags:
                  db: name
                  yaml: name
                x-order: 2
                type: string
                description: Environment name
              description:
                x-oapi-codegen-extra-tags:
                  db: description
                  yaml: description
                x-order: 3
                type: string
                description: Environment description
              organization_id:
                x-go-name: OrganizationID
                x-oapi-codegen-extra-tags:
                  db: organization_id
                  yaml: organization_id
                x-order: 4
                description: Environment organization ID
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                default: 00000000-0000-0000-0000-000000000000
              owner:
                x-oapi-codegen-extra-tags:
                  db: owner
                  yaml: owner
                x-order: 5
                description: Environment owner
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
                default: 00000000-0000-0000-0000-000000000000
              created_at:
                x-oapi-codegen-extra-tags:
                  db: created_at
                  yaml: created_at
                x-order: 6
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              metadata:
                x-oapi-codegen-extra-tags:
                  db: metadata
                  yaml: metadata
                x-order: 7
                x-go-type: core.Map
                x-go-type-skip-optional-pointer: true
                type: object
              updated_at:
                x-oapi-codegen-extra-tags:
                  db: updated_at
                  yaml: updated_at
                x-order: 8
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              deleted_at:
                x-oapi-codegen-extra-tags:
                  db: deleted_at
                  yaml: deleted_at
                x-go-type: core.NullTime
                x-go-import: database/sql
                x-order: 9
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
    Catalog_API_CatalogData:
      type: object
      properties:
        publishedVersion:
          description: >-
            Tracks the specific content version that has been made available in
            the Catalog.
          type: string
        class:
          description: >-
            Published content is classifed by its support level. Content classes
            help you understand the origin and expected support level for each
            piece of content. It is important to note that the level of support
            may vary within each class, and you should exercise discretion when
            using community-contributed content. Content produced and fully
            supported by Meshery maintainers. This represents the highest level
            of support and is considered the most reliable. Content produced by
            partners and verified by Meshery maintainers. While not directly
            maintained by Meshery, it has undergone a verification process to
            ensure quality and compatibility. Content produced and supported by
            the respective project or organization responsible for the specific
            technology. This class offers a level of support from the project
            maintainers themselves. Content produced and shared by Meshery
            users. This includes a wide range of content, such as performance
            profiles, test results, filters, patterns, and applications.
            Community content may have varying levels of support and
            reliability.
          type: string
          oneOf:
            - const: official
              description: >-
                Content produced and fully supported by Meshery maintainers.
                This represents the highest level of support and is considered
                the most reliable.
            - const: verified
              description: >-
                Content produced by partners and verified by Meshery
                maintainers. While not directly maintained by Meshery, it has
                undergone a verification process to ensure quality and
                compatibility.
            - const: reference architecture
              description: >-
                Content produced and shared by Meshery users. This includes a
                wide range of content, such as performance profiles, test
                results, filters, patterns, and applications. Reference
                architecture content may have varying levels of support and
                reliability.
        compatibility:
          type: array
          title: Model
          items:
            enum:
              - kubernetes
            type: string
          uniqueItems: true
          minItems: 1
          description: >-
            One or more models associated with this catalog item. For designs, a
            list of one or more models implicated by components within the
            design. For models, this is self-referential.
        pattern_caveats:
          type: string
          title: Caveats and Considerations
          description: >-
            Specific stipulations to consider and known behaviors to be aware of
            when using this design.
        pattern_info:
          type: string
          title: Description
          minLength: 1
          description: Purpose of the design along with its intended and unintended uses.
        type:
          type: string
          title: Type
          enum:
            - Deployment
            - Observability
            - Resiliency
            - Scaling
            - Security
            - Traffic-management
            - Troubleshooting
            - Workloads
          default: Deployment
          description: >-
            Categorization of the type of design or operational flow depicted in
            this design.
        snapshotURL:
          type: array
          items:
            type: string
            format: uri
            pattern: ^(https?|http?|oci)://
          description: >-
            Contains reference to the dark and light mode snapshots of the
            design.
      required:
        - compatibility
        - pattern_caveats
        - pattern_info
        - type
    evaluation_EvaluationRequest:
      type: object
      required:
        - design
      properties:
        design:
          x-go-type: pattern.PatternFile
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1beta1/pattern
          $schema: http://json-schema.org/draft-07/schema#
          title: Design Schema
          description: >-
            Designs are your primary tool for collaborative authorship of your
            infrastructure, workflow, and processes.
          type: object
          properties:
            id:
              x-order: 1
              type: string
              format: uuid
              description: >-
                A Universally Unique Identifier used to uniquely identify
                entites in Meshery. The UUID core defintion is used across
                different schemas.
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            name:
              type: string
              description: >-
                Name of the design; a descriptive, but concise title for the
                design document.
              x-order: 2
            schemaVersion:
              description: >-
                Specifies the version of the schema to which the design
                conforms.
              x-order: 3
              type: string
              minLength: 2
              maxLength: 100
              pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
              example:
                - v1
                - v1alpha1
                - v2beta3
                - v1.custom-suffix
            version:
              default: v0.0.1
              x-order: 4
              description: >-
                Revision of the design as expressed by an auto-incremented,
                SemVer-compliant version number. May be manually set by a user
                or third-party system, but will always be required to be of
                version number higher than the previously defined version
                number.
              minLength: 1
              maxLength: 50
              type: string
              pattern: >-
                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
            metadata:
              type: object
              x-order: 5
              additionalProperties: true
              properties:
                resolvedAliases:
                  description: Map of resolved aliases present in the design
                  type: object
                  x-go-type: map[string]core.ResolvedAlias
                  x-go-type-import:
                    path: github.com/meshery/schemas/models/v1alpha1/core
                  additionalProperties:
                    description: >-
                      An resolved alias is an component that acts as an
                      ref/pointer to a field in another component, resolvedAlias
                      are aware of there immediate parents and completely
                      resolved parents also
                    allOf:
                      - description: >-
                          An alias is an component that acts as an ref/pointer
                          to a field in another component, nonResolvedAlias are
                          not aware of there immediate parents
                        type: object
                        properties:
                          relationship_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          alias_component_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          immediate_parent_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          immediate_ref_field_path:
                            type: array
                            items:
                              type: string
                        required:
                          - relationship_id
                          - alias_component_id
                          - immediate_parent_id
                          - immediate_ref_field_path
                      - type: object
                        properties:
                          resolved_parent_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          resolved_ref_field_path:
                            type: array
                            items:
                              type: string
                        required:
                          - resolved_parent_id
                          - resolved_ref_field_path
            components:
              description: A list of one or more component declarations.
              minItems: 0
              x-order: 6
              type: array
              items:
                x-go-type: '*component.ComponentDefinition'
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1beta1/component
                $id: https://schemas.meshery.io/component.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Components are reusable building blocks for depicting
                  capabilities defined within models. Learn more at
                  https://docs.meshery.io/concepts/components
                additionalProperties: false
                type: object
                properties:
                  id:
                    description: >-
                      Uniquely identifies the entity (i.e. component) as defined
                      in a declaration (i.e. design).
                    x-order: 1
                    x-oapi-codegen-extra-tags:
                      yaml: id
                      json: id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  schemaVersion:
                    x-order: 2
                    description: >-
                      Specifies the version of the schema to which the component
                      definition conforms.
                    x-oapi-codegen-extra-tags:
                      yaml: schemaVersion
                      json: schemaVersion
                    default: components.meshery.io/v1beta1
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                  version:
                    x-order: 3
                    description: Version of the component definition.
                    minLength: 1
                    maxLength: 50
                    x-oapi-codegen-extra-tags:
                      yaml: version
                      json: version
                    type: string
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    default: v0.0.1
                  displayName:
                    x-order: 4
                    description: Name of the component in human-readible format.
                    x-oapi-codegen-extra-tags:
                      yaml: displayName
                      json: displayName
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  description:
                    x-order: 5
                    type: string
                    description: >-
                      A written representation of the purpose and
                      characteristics of the component.
                    x-oapi-codegen-extra-tags:
                      yaml: description
                      json: description
                  format:
                    x-order: 6
                    type: string
                    enum:
                      - JSON
                      - CUE
                    default: JSON
                    description: >-
                      Format specifies the format used in the `component.schema`
                      field. JSON is the default.
                    x-oapi-codegen-extra-tags:
                      yaml: format
                      json: format
                  model:
                    x-go-type: model.ModelDefinition
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1beta1/model
                    x-order: 7
                    description: >-
                      Reference to the specific registered model to which the
                      component belongs and from which model version, category,
                      and other properties may be referenced. Learn more at
                      https://docs.meshery.io/concepts/models
                    x-oapi-codegen-extra-tags:
                      gorm: foreignKey:ModelId;references:Id
                    $id: https://schemas.meshery.io/model.json
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: false
                    type: object
                    properties:
                      id:
                        description: >-
                          Uniquely identifies the entity (i.e. component) as
                          defined in a declaration (i.e. design).
                        x-order: 1
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema used for the
                          definition.
                        x-order: 2
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          json: schemaVersion
                        default: models.meshery.io/v1beta1
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        description: Version of the model definition.
                        type: string
                        x-order: 3
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        default: v0.0.1
                      name:
                        type: string
                        description: >-
                          The unique name for the model within the scope of a
                          registrant.
                        helperText: >-
                          Model name should be in lowercase with hyphens, not
                          whitespaces.
                        pattern: ^[a-z0-9-]+$
                        examples:
                          - cert-manager
                        x-order: 4
                        x-oapi-codegen-extra-tags:
                          yaml: name
                          json: name
                        default: untitled-model
                      displayName:
                        description: Human-readable name for the model.
                        helperText: >-
                          Model display name may include letters, numbers, and
                          spaces. Special characters are not allowed.
                        minLength: 1
                        maxLength: 100
                        type: string
                        pattern: ^[a-zA-Z0-9 ]+$
                        examples:
                          - Cert Manager
                        x-order: 5
                        x-oapi-codegen-extra-tags:
                          yaml: displayName
                          json: displayName
                        default: Untitled Model
                      description:
                        type: string
                        default: A new Meshery model.
                        description: Description of the model.
                        minLength: 1
                        maxLength: 1000
                        x-order: 6
                        x-oapi-codegen-extra-tags:
                          yaml: description,omitempty
                          json: description,omitempty
                      status:
                        type: string
                        description: >-
                          Status of model, including:

                          - duplicate: this component is a duplicate of another.
                          The component that is to be the canonical reference
                          and that is duplicated by other components should not
                          be assigned the 'duplicate' status.

                          - maintenance: model is unavailable for a period of
                          time.

                          - enabled: model is available for use for all users of
                          this Meshery Server.

                          - ignored: model is unavailable for use for all users
                          of this Meshery Server.
                        enum:
                          - ignored
                          - enabled
                          - duplicate
                        x-order: 7
                        x-oapi-codegen-extra-tags:
                          yaml: status
                          json: status
                        default: enabled
                      registrant:
                        x-oapi-codegen-extra-tags:
                          yaml: registrant
                          json: registrant
                          gorm: foreignKey:RegistrantId;references:ID
                        x-order: 8
                        x-go-type: connection.Connection
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1beta1/connection
                        $id: https://schemas.meshery.io/component.json
                        $schema: http://json-schema.org/draft-07/schema#
                        description: >-
                          Meshery Connections are managed and unmanaged
                          resources that either through discovery or manual
                          entry are tracked by Meshery. Learn more at
                          https://docs.meshery.io/concepts/logical/connections
                        additionalProperties: false
                        type: object
                        required:
                          - id
                          - schemaVersion
                          - name
                          - type
                          - sub_type
                          - kind
                          - status
                        properties:
                          id:
                            description: ID
                            x-order: 1
                            x-go-name: ID
                            x-oapi-codegen-extra-tags:
                              db: id
                              yaml: id
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          name:
                            x-oapi-codegen-extra-tags:
                              db: name
                              yaml: name
                            x-order: 2
                            type: string
                            description: Connection Name
                          credential_id:
                            x-go-name: CredentialID
                            x-oapi-codegen-extra-tags:
                              db: credential_id
                              yaml: credential_id
                            x-order: 3
                            description: Credential ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          type:
                            x-oapi-codegen-extra-tags:
                              db: type
                              yaml: type
                            x-order: 4
                            type: string
                            description: Connection Type
                          sub_type:
                            x-oapi-codegen-extra-tags:
                              db: sub_type
                              yaml: sub_type
                            x-order: 5
                            type: string
                            description: Connection Subtype
                          kind:
                            x-oapi-codegen-extra-tags:
                              db: kind
                              yaml: kind
                            x-order: 6
                            type: string
                            description: Connection Kind
                          metadata:
                            x-oapi-codegen-extra-tags:
                              db: metadata
                              yaml: metadata
                            x-order: 7
                            x-go-type: core.Map
                            x-go-type-skip-optional-pointer: true
                            type: object
                          status:
                            x-oapi-codegen-extra-tags:
                              db: status
                              yaml: status
                            x-order: 8
                            description: Connection Status
                            type: string
                            enum:
                              - discovered
                              - registered
                              - connected
                              - ignored
                              - maintenance
                              - disconnected
                              - deleted
                              - not found
                          user_id:
                            x-go-name: UserID
                            x-oapi-codegen-extra-tags:
                              db: user_id
                              yaml: user_id
                            x-order: 9
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          created_at:
                            x-oapi-codegen-extra-tags:
                              db: created_at
                              yaml: created_at
                            x-order: 10
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          updated_at:
                            x-oapi-codegen-extra-tags:
                              db: updated_at
                              yaml: updated_at
                            x-order: 11
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          deleted_at:
                            x-oapi-codegen-extra-tags:
                              db: deleted_at
                              yaml: deleted_at
                            x-go-type: core.NullTime
                            x-order: 12
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          environments:
                            type: array
                            items:
                              x-go-type: '*environment.Environment'
                              $id: https://schemas.meshery.io/environment.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery Environments allow you to logically
                                group related Connections and their associated
                                Credentials.. Learn more at
                                https://docs.meshery.io/concepts/logical/environments
                              additionalProperties: false
                              type: object
                              required:
                                - id
                                - name
                                - description
                                - organization_id
                              properties:
                                id:
                                  description: ID
                                  x-order: 1
                                  x-go-name: ID
                                  x-oapi-codegen-extra-tags:
                                    db: id
                                    yaml: id
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                name:
                                  x-oapi-codegen-extra-tags:
                                    db: name
                                    yaml: name
                                  x-order: 2
                                  type: string
                                  description: Environment name
                                description:
                                  x-oapi-codegen-extra-tags:
                                    db: description
                                    yaml: description
                                  x-order: 3
                                  type: string
                                  description: Environment description
                                organization_id:
                                  x-go-name: OrganizationID
                                  x-oapi-codegen-extra-tags:
                                    db: organization_id
                                    yaml: organization_id
                                  x-order: 4
                                  description: Environment organization ID
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                owner:
                                  x-oapi-codegen-extra-tags:
                                    db: owner
                                    yaml: owner
                                  x-order: 5
                                  description: Environment owner
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                created_at:
                                  x-oapi-codegen-extra-tags:
                                    db: created_at
                                    yaml: created_at
                                  x-order: 6
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                metadata:
                                  x-oapi-codegen-extra-tags:
                                    db: metadata
                                    yaml: metadata
                                  x-order: 7
                                  x-go-type: core.Map
                                  x-go-type-skip-optional-pointer: true
                                  type: object
                                updated_at:
                                  x-oapi-codegen-extra-tags:
                                    db: updated_at
                                    yaml: updated_at
                                  x-order: 8
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                deleted_at:
                                  x-oapi-codegen-extra-tags:
                                    db: deleted_at
                                    yaml: deleted_at
                                  x-go-type: core.NullTime
                                  x-go-import: database/sql
                                  x-order: 9
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                            x-oapi-codegen-extra-tags:
                              db: '-'
                              yaml: environments
                              gorm: '-'
                            x-go-type-skip-optional-pointer: true
                            x-order: 13
                          schemaVersion:
                            description: >-
                              Specifies the version of the schema used for the
                              definition.
                            x-order: 14
                            x-oapi-codegen-extra-tags:
                              yaml: schemaVersion
                              db: '-'
                              gorm: '-'
                            default: connections.meshery.io/v1beta1
                            type: string
                            minLength: 2
                            maxLength: 100
                            pattern: >-
                              ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                            example:
                              - v1
                              - v1alpha1
                              - v2beta3
                              - v1.custom-suffix
                      registrantId:
                        description: ID of the registrant.
                        x-oapi-codegen-extra-tags:
                          yaml: connection_id
                          json: connection_id
                          gorm: column:connection_id
                        x-order: 8
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      categoryId:
                        description: ID of the category.
                        x-oapi-codegen-extra-tags:
                          yaml: '-'
                          json: '-'
                          gorm: categoryID
                        x-order: 8
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      category:
                        x-order: 9
                        x-oapi-codegen-extra-tags:
                          yaml: category
                          json: category
                          gorm: foreignKey:CategoryId;references:Id
                        x-go-type: category.CategoryDefinition
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1beta1/category
                        $id: https://schemas.meshery.io/category.json
                        $schema: http://json-schema.org/draft-07/schema#
                        type: object
                        description: Category of the model.
                        required:
                          - id
                          - name
                          - metadata
                        properties:
                          id:
                            x-order: 1
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          name:
                            type: string
                            minLength: 1
                            maxLength: 100
                            x-oapi-codegen-extra-tags:
                              yaml: name
                              json: name
                              gorm: name
                            default: Uncategorized
                            description: >-
                              The category of the model that determines the main
                              grouping.
                            enum:
                              - Analytics
                              - App Definition and Development
                              - Cloud Native Network
                              - Cloud Native Storage
                              - Database
                              - Machine Learning
                              - Observability and Analysis
                              - Orchestration & Management
                              - Platform
                              - Provisioning
                              - Runtime
                              - Security & Compliance
                              - Serverless
                              - Tools
                              - Uncategorized
                            x-order: 2
                          metadata:
                            type: object
                            x-oapi-codegen-extra-tags:
                              yaml: metadata,omitempty
                              json: metadata,omitempty
                              gorm: type:bytes;serializer:json
                            x-order: 3
                      subCategory:
                        x-order: 10
                        x-go-type: subcategory.SubCategoryDefinition
                        x-go-type-import:
                          path: >-
                            github.com/meshery/schemas/models/v1beta1/subcategory
                        $id: https://schemas.meshery.io/category.json
                        $schema: http://json-schema.org/draft-07/schema#
                        type: string
                        title: SubCategory
                        description: >-
                          Sub category of the model determines the secondary
                          grouping.
                        default: Uncategorized
                        enum:
                          - API Gateway
                          - API Integration
                          - Application Definition & Image Build
                          - Automation & Configuration
                          - Certified Kubernetes - Distribution
                          - Chaos Engineering
                          - Cloud Native Storage
                          - Cloud Provider
                          - CNI
                          - Compute
                          - Container Registry
                          - Container Runtime
                          - Container Security
                          - Container
                          - Content Delivery Network
                          - Continuous Integration & Delivery
                          - Coordination & Service Discovery
                          - Database
                          - Flowchart
                          - Framework
                          - Installable Platform
                          - Key Management
                          - Key Management Service
                          - Kubernetes
                          - Logging
                          - Machine Learning
                          - Management Governance
                          - Metrics
                          - Monitoring
                          - Networking Content Delivery
                          - Operating System
                          - Query
                          - Remote Procedure Call
                          - Scheduling & Orchestration
                          - Secrets Management
                          - Security Identity & Compliance
                          - Service Mesh
                          - Service Proxy
                          - Source Version Control
                          - Storage
                          - Specifications
                          - Streaming & Messaging
                          - Tools
                          - Tracing
                          - Uncategorized
                          - Video Conferencing
                        minLength: 1
                        maxLength: 100
                        x-oapi-codegen-extra-tags:
                          yaml: subCategory
                          json: subCategory
                      metadata:
                        type: object
                        description: >-
                          Metadata containing additional information associated
                          with the model.
                        required:
                          - svgWhite
                          - svgColor
                        properties:
                          capabilities:
                            type: array
                            description: Capabilities associated with the model
                            items:
                              x-go-type: capability.Capability
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1alpha1/capability
                              $id: https://schemas.meshery.io/capability.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery manages entities in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. Entities may define a broad
                                array of capabilities, which are in-turn
                                dynamically interpretted by Meshery for full
                                lifecycle management.
                              additionalProperties: false
                              type: object
                              required:
                                - description
                                - schemaVersion
                                - version
                                - displayName
                                - kind
                                - type
                                - subType
                                - entityState
                                - key
                                - status
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              properties:
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema to which
                                    the capability definition conforms.
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                version:
                                  description: Version of the capability definition.
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  default: v0.0.1
                                displayName:
                                  description: >-
                                    Name of the capability in human-readible
                                    format.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                description:
                                  type: string
                                  description: >-
                                    A written representation of the purpose and
                                    characteristics of the capability.
                                kind:
                                  description: Top-level categorization of the capability
                                  additionalProperties: false
                                  anyOf:
                                    - const: action
                                      description: >-
                                        For capabilities related to executing
                                        actions on entities. Example: initiate
                                        log streaming on a Pod. Example:
                                        initiate deployment of a component.
                                    - const: mutate
                                      description: >-
                                        For capabilities related to mutating an
                                        entity. Example: the ability to change
                                        the configuration of a component.
                                    - const: view
                                      description: >-
                                        For capabilities related to viewing an
                                        entity. Example: the ability to view a
                                        components configuration.
                                    - const: interaction
                                      description: >-
                                        Catch all for capabilities related to
                                        interaction with entities. Example: the
                                        ability for a component to be dragged
                                        and dropped. Example: supports event
                                        bubbling to parent components. 
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                type:
                                  description: >-
                                    Classification of capabilities. Used to
                                    group capabilities similar in nature.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                subType:
                                  description: >-
                                    Most granular unit of capability
                                    classification. The combination of Kind,
                                    Type and SubType together uniquely identify
                                    a Capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                key:
                                  description: Key that backs the capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                entityState:
                                  description: >-
                                    State of the entity in which the capability
                                    is applicable.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - declaration
                                      - instance
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description: >-
                                      A string starting with an alphanumeric
                                      character. Spaces and hyphens allowed.
                                status:
                                  type: string
                                  description: Status of the capability
                                  default: enabled
                                  enum:
                                    - enabled
                                    - disabled
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata contains additional information
                                    associated with the capability. Extension
                                    point.
                                  additionalProperties: true
                              default:
                                - description: >-
                                    Configure the visual styles for the
                                    component
                                  displayName: Styling
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: ''
                                  type: style
                                  version: 0.7.0
                                - description: Change the shape of the component
                                  displayName: Change Shape
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: shape
                                  type: style
                                  version: 0.7.0
                                - description: >-
                                    Drag and Drop a component into a parent
                                    component in graph view
                                  displayName: Compound Drag And Drop
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: interaction
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: compoundDnd
                                  type: graph
                                  version: 0.7.0
                                - description: Add text to nodes body
                                  displayName: Body Text
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: body-text
                                  type: style
                                  version: 0.7.0
                            x-order: 1
                          isAnnotation:
                            type: boolean
                            description: >-
                              Indicates whether the model and its entities
                              should be treated as deployable entities or as
                              logical representations.
                            x-oapi-codegen-extra-tags:
                              yaml: isAnnotation
                              json: isAnnotation
                            x-order: 2
                            default: false
                          primaryColor:
                            type: string
                            description: Primary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            default: '#00b39f'
                            x-oapi-codegen-extra-tags:
                              yaml: primaryColor
                              json: primaryColor
                            x-order: 3
                          secondaryColor:
                            type: string
                            description: Secondary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            default: '#00D3A9'
                            x-oapi-codegen-extra-tags:
                              yaml: secondaryColor
                              json: secondaryColor
                            x-order: 4
                          svgWhite:
                            type: string
                            description: SVG representation of the model in white color.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgWhite
                              json: svgWhite
                            x-order: 5
                            default: >-
                              <svg width="32" height="32" viewBox="0 0 32 32"
                              fill="none"
                              xmlns="http://www.w3.org/2000/svg"><path
                              d="M16.405 8.732v6.57l5.694-3.297-5.694-3.273Zm0
                              7.942v6.602l5.747-3.285-5.747-3.317Z"
                              fill="#fff"/><path d="M15.586 15.256v-6.47l-5.622
                              3.225 5.622 3.245ZM4.307 23.252a13.809 13.809 0 0
                              0 4.362 4.39v-6.914l-4.362
                              2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z"
                              fill="#fff" fill-opacity=".8"/><path d="m9.49
                              27.23 5.707-3.263-5.707-3.3v6.563Z"
                              fill="#fff"/><path d="M22.54 27.265v-6.553l-5.699
                              3.259 5.7 3.294Zm5.58-4.773a13.697 13.697 0 0 0
                              1.612-5.895l-5.934 3.397 4.323 2.498Z" fill="#fff"
                              fill-opacity=".8"/><path d="m23.362 19.298
                              5.728-3.276-5.728-3.291v6.567Z" fill="#fff"/><path
                              d="M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                              7.955v-6.574l-5.685 3.292 5.685 3.281Z"
                              fill="#fff" fill-opacity=".8"/><path d="M9.49
                              12.684v6.622l5.728-3.316-5.728-3.306Z"
                              fill="#fff"/><path d="M15.586 2.25a13.69 13.69 0 0
                              0-6.037 1.595l6.037 3.463V2.25Z" fill="#fff"
                              fill-opacity=".8"/><path d="M9.49
                              4.756v6.583l5.732-3.288L9.49 4.756Z"
                              fill="#fff"/><path d="M8.669 4.356a13.83 13.83 0 0
                              0-4.362 4.39l4.362 2.518V4.356Z" fill="#fff"
                              fill-opacity=".8"/><path d="M22.504 3.88a13.695
                              13.695 0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25
                              16.483c.071 2.12.634 4.196 1.644
                              6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68
                              13.68 0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z"
                              fill="#fff"/><path d="M9.539 28.147a13.673 13.673
                              0 0 0 6.047 1.603v-5.062L9.54 28.147Z" fill="#fff"
                              fill-opacity=".8"/><path d="M27.697 8.768a13.83
                              13.83 0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362
                              27.62a13.851 13.851 0 0 0
                              4.351-4.417l-4.351-2.514v6.93Z" fill="#fff"/><path
                              d="M29.75 15.452a13.659 13.659 0 0
                              0-1.63-5.979l-4.381 2.53 6.011 3.45Z" fill="#fff"
                              fill-opacity=".8"/><path d="M16.405 29.75a13.673
                              13.673 0 0 0 6.036-1.595l-6.036-3.498v5.093Z"
                              fill="#fff"/><path d="M8.669 19.247v-6.494L3.03
                              15.986l5.639 3.261Z" fill="#fff"
                              fill-opacity=".8"/></svg>
                          svgColor:
                            type: string
                            description: SVG representation of the model in colored format.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgColor
                              json: svgColor
                            x-order: 6
                            default: >-
                              <svg xmlns="http://www.w3.org/2000/svg"
                              id="Layer_1" data-name="Layer 1" viewBox="0 0
                              134.95
                              135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                              points="69.49 31.82 69.49 64.07 97.44 47.89 69.49
                              31.82" class="cls-1"/><polygon points="69.49 70.81
                              69.49 103.22 97.7 87.09 69.49 70.81"
                              class="cls-1"/><polygon points="65.47 63.85 65.47
                              32.09 37.87 47.92 65.47 63.85"
                              class="cls-2"/><path
                              d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                              class="cls-2"/><polygon points="65.47 103.06 65.47
                              71.05 37.8 87.07 65.47 103.06"
                              class="cls-2"/><polygon points="35.54 122.63 63.56
                              106.61 35.54 90.41 35.54 122.63"
                              class="cls-1"/><polygon points="99.61 122.8 99.61
                              90.63 71.63 106.63 99.61 122.8"
                              class="cls-2"/><path
                              d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                              class="cls-2"/><polygon points="103.64 83.69
                              131.76 67.61 103.64 51.45 103.64 83.69"
                              class="cls-1"/><polygon points="99.61 44.5 99.61
                              12.52 71.76 28.49 99.61 44.5"
                              class="cls-2"/><polygon points="99.61 83.55 99.61
                              51.28 71.7 67.44 99.61 83.55"
                              class="cls-2"/><polygon points="67.48 135.02 67.49
                              135.02 67.48 135.02 67.48 135.02"
                              class="cls-2"/><polygon points="35.54 51.22 35.54
                              83.73 63.66 67.45 35.54 51.22"
                              class="cls-1"/><path
                              d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                              class="cls-2"/><polygon points="35.54 12.3 35.54
                              44.62 63.68 28.48 35.54 12.3" class="cls-1"/><path
                              d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                              class="cls-2"/><path
                              d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                              class="cls-1"/><path
                              d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                              class="cls-1"/><path
                              d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                              class="cls-1"/><path
                              d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                              class="cls-2"/><path
                              d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                              class="cls-1"/><path
                              d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                              class="cls-1"/><path
                              d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                              class="cls-2"/><path
                              d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                              class="cls-1"/><polygon points="31.51 83.44 31.51
                              51.56 3.83 67.43 31.51 83.44"
                              class="cls-2"/></svg>
                          svgComplete:
                            type: string
                            description: SVG representation of the complete model.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgComplete
                              json: svgComplete
                            x-order: 7
                          shape:
                            x-order: 8
                            type: string
                            description: >-
                              The shape of the node’s body. Note that each shape
                              fits within the specified width and height, and so
                              you may have to adjust width and height if you
                              desire an equilateral shape (i.e. width !== height
                              for several equilateral shapes)
                            default: circle
                            enum:
                              - circle
                              - ellipse
                              - triangle
                              - round-triangle
                              - rectangle
                              - round-rectangle
                              - bottom-round-rectangle
                              - cut-rectangle
                              - barrel
                              - rhomboid
                              - diamond
                              - round-diamond
                              - pentagon
                              - round-pentagon
                              - hexagon
                              - round-hexagon
                              - concave-hexagon
                              - heptagon
                              - round-heptagon
                              - octagon
                              - round-octagon
                              - star
                              - tag
                              - round-tag
                              - vee
                              - polygon
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                          json: metadata
                          yaml: metadata
                        x-order: 11
                        additionalProperties: true
                      model:
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        x-order: 12
                        type: object
                        description: >-
                          Registrant-defined data associated with the model.
                          Properties pertain to the software being managed (e.g.
                          Kubernetes v1.31).
                        required:
                          - version
                        properties:
                          version:
                            description: Version of the model as defined by the registrant.
                            allOf:
                              - type: string
                                minLength: 5
                                maxLength: 100
                                pattern: >-
                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                description: >-
                                  A valid semantic version string between 5 and
                                  256 characters. The pattern allows for a
                                  major.minor.patch version followed by an
                                  optional pre-release tag like '-alpha' or
                                  '-beta.2' and an optional build metadata tag
                                  like '+build.1.
                                default: v0.0.1
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            x-order: 1
                      relationships:
                        type: array
                        x-go-type: interface{}
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: relationships
                          yaml: relationships
                      components:
                        type: array
                        x-go-type: interface{}
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: components
                          yaml: components
                      componentsCount:
                        type: integer
                        description: Number of components associated with the model.
                        x-order: 13
                        x-oapi-codegen-extra-tags:
                          json: components_count
                          yaml: components_count
                          gorm: '-'
                        default: 0
                      relationshipsCount:
                        type: integer
                        description: Number of relationships associated with the model.
                        x-order: 13
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: relationships_count
                          yaml: relationships_count
                        default: 0
                    required:
                      - id
                      - schemaVersion
                      - displayName
                      - status
                      - subCategory
                      - model
                      - name
                      - description
                      - version
                      - registrant
                      - category
                      - categoryId
                      - registrantId
                      - relationshipsCount
                      - componentsCount
                      - components
                      - relationships
                  modelId:
                    description: >-
                      ModelId is the foreign key to the model to which the
                      component belongs.
                    x-oapi-codegen-extra-tags:
                      gorm: >-
                        index:idx_component_definition_dbs_model_id,column:model_id
                      yaml: '-'
                      json: '-'
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  styles:
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                      yaml: styles
                      json: styles
                    x-go-type: core.ComponentStyles
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1alpha1/core
                    x-order: 8
                    type: object
                    description: Visualization styles for a component
                    required:
                      - shape
                      - primaryColor
                      - svgColor
                      - svgWhite
                      - svgComplete
                    allOf:
                      - type: object
                        description: Common styles for all entities
                        additionalProperties: true
                        required:
                          - primaryColor
                          - svgColor
                          - svgWhite
                          - svgComplete
                        properties:
                          primaryColor:
                            type: string
                            description: >-
                              Primary color of the component used for UI
                              representation.
                          secondaryColor:
                            type: string
                            description: >-
                              Secondary color of the entity used for UI
                              representation.
                          svgWhite:
                            type: string
                            description: >-
                              White SVG of the entity used for UI representation
                              on dark background.
                          svgColor:
                            type: string
                            description: >-
                              Colored SVG of the entity used for UI
                              representation on light background.
                          svgComplete:
                            type: string
                            description: >-
                              Complete SVG of the entity used for UI
                              representation, often inclusive of background.
                          color:
                            type: string
                            description: >-
                              The color of the element's label. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          text-opacity:
                            type: number
                            description: >-
                              The opacity of the label text, including its
                              outline.
                            minimum: 0
                            maximum: 1
                          font-family:
                            type: string
                            description: >-
                              A comma-separated list of font names to use on the
                              label text.
                          font-size:
                            type: string
                            description: The size of the label text.
                          font-style:
                            type: string
                            description: A CSS font style to be applied to the label text.
                          font-weight:
                            type: string
                            description: A CSS font weight to be applied to the label text.
                          text-transform:
                            type: string
                            description: A transformation to apply to the label text
                            enum:
                              - none
                              - uppercase
                              - lowercase
                          opacity:
                            type: number
                            description: >-
                              The opacity of the element, ranging from 0 to 1.
                              Note that the opacity of a compound node parent
                              affects the effective opacity of its children.
                            minimum: 0
                            maximum: 1
                          z-index:
                            type: integer
                            description: >-
                              An integer value that affects the relative draw
                              order of elements. In general, an element with a
                              higher z-index will be drawn on top of an element
                              with a lower z-index. Note that edges are under
                              nodes despite z-index.
                          label:
                            type: string
                            description: >-
                              The text to display for an element's label. Can
                              give a path, e.g. data(id) will label with the
                              elements id
                          animation:
                            type: object
                            description: >-
                              The animation to apply to the element. example
                              ripple,bounce,etc
                      - type: object
                        properties:
                          shape:
                            type: string
                            description: >-
                              The shape of the node's body. Note that each shape
                              fits within the specified width and height, and so
                              you may have to adjust width and height if you
                              desire an equilateral shape (i.e. width !== height
                              for several equilateral shapes)
                            enum:
                              - ellipse
                              - triangle
                              - round-triangle
                              - rectangle
                              - round-rectangle
                              - bottom-round-rectangle
                              - cut-rectangle
                              - barrel
                              - rhomboid
                              - diamond
                              - round-diamond
                              - pentagon
                              - round-pentagon
                              - hexagon
                              - round-hexagon
                              - concave-hexagon
                              - heptagon
                              - round-heptagon
                              - octagon
                              - round-octagon
                              - star
                              - tag
                              - round-tag
                              - vee
                              - polygon
                          position:
                            type: object
                            additionalProperties: false
                            required:
                              - x
                              - 'y'
                            description: >-
                              The position of the node. If the position is set,
                              the node is drawn at that position in the given
                              dimensions. If the position is not set, the node
                              is drawn at a random position.
                            properties:
                              x:
                                type: number
                                description: The x-coordinate of the node.
                                x-go-type: float64
                              'y':
                                type: number
                                description: The y-coordinate of the node.
                                x-go-type: float64
                          body-text:
                            type: string
                            description: >-
                              The text to display for an element's body. Can
                              give a path, e.g. data(id) will label with the
                              elements id
                          body-text-wrap:
                            type: string
                            description: >-
                              How to wrap the text in the node. Can be 'none',
                              'wrap', or 'ellipsis'.
                          body-text-max-width:
                            type: string
                            description: The maximum width for wrapping text in the node.
                          body-text-opacity:
                            type: number
                            description: >-
                              The opacity of the node's body text, including its
                              outline.
                            minimum: 0
                            maximum: 1
                          body-text-background-color:
                            type: string
                            description: >-
                              The colour of the node's body text background.
                              Colours may be specified by name (e.g. red), hex
                              (e.g.
                          body-text-font-size:
                            type: number
                            description: The size of the node's body text.
                          body-text-color:
                            type: string
                            description: >-
                              The colour of the node's body text. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          body-text-font-weight:
                            type: string
                            description: >-
                              A CSS font weight to be applied to the node's body
                              text.
                          body-text-horizontal-align:
                            type: string
                            description: >-
                              A CSS horizontal alignment to be applied to the
                              node's body text.
                          body-text-decoration:
                            type: string
                            description: >-
                              A CSS text decoration to be applied to the node's
                              body text.
                          body-text-vertical-align:
                            type: string
                            description: >-
                              A CSS vertical alignment to be applied to the
                              node's body text.
                          width:
                            type: number
                            description: >-
                              The width of the node's body or the width of an
                              edge's line.
                          height:
                            type: number
                            description: The height of the node's body
                          background-image:
                            type: string
                            description: >-
                              The URL that points to the image to show in the
                              node.
                          background-color:
                            type: string
                            description: >-
                              The colour of the node's body. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          background-blacken:
                            type: number
                            description: >-
                              Blackens the node's body for values from 0 to 1;
                              whitens the node's body for values from 0 to -1.
                            maximum: 1
                            minimum: -1
                          background-opacity:
                            type: number
                            description: The opacity level of the node's background colour
                            maximum: 1
                            minimum: 0
                          background-position-x:
                            type: string
                            description: >-
                              The x position of the background image, measured
                              in percent (e.g. 50%) or pixels (e.g. 10px)
                          background-position-y:
                            type: string
                            description: >-
                              The y position of the background image, measured
                              in percent (e.g. 50%) or pixels (e.g. 10px)
                          background-offset-x:
                            type: string
                            description: >-
                              The x offset of the background image, measured in
                              percent (e.g. 50%) or pixels (e.g. 10px)
                          background-offset-y:
                            type: string
                            description: >-
                              The y offset of the background image, measured in
                              percent (e.g. 50%) or pixels (e.g. 10px)
                          background-fit:
                            type: string
                            description: >-
                              How the background image is fit to the node. Can
                              be 'none', 'contain', or 'cover'.
                          background-clip:
                            type: string
                            description: >-
                              How the background image is clipped to the node.
                              Can be 'none', 'node', or 'node-border'.
                          background-width-relative-to:
                            type: string
                            description: >-
                              How the background image's width is determined.
                              Can be 'none', 'inner', or 'outer'.
                          background-height-relative-to:
                            type: string
                            description: >-
                              How the background image's height is determined.
                              Can be 'none', 'inner', or 'outer'.
                          border-width:
                            type: number
                            description: The size of the node's border.
                            minimum: 0
                          border-style:
                            type: string
                            description: The style of the node's border
                            enum:
                              - solid
                              - dotted
                              - dashed
                              - double
                          border-color:
                            type: string
                            description: >-
                              The colour of the node's border. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          border-opacity:
                            type: number
                            description: The opacity of the node's border
                            minimum: 0
                            maximum: 1
                          padding:
                            type: number
                            description: >-
                              The amount of padding around all sides of the
                              node.
                            minimum: 0
                          text-halign:
                            type: string
                            description: The horizontal alignment of a node's label
                            enum:
                              - left
                              - center
                              - right
                          text-valign:
                            type: string
                            description: The vertical alignment of a node's label
                            enum:
                              - top
                              - center
                              - bottom
                          ghost:
                            type: string
                            description: >-
                              Whether to use the ghost effect, a semitransparent
                              duplicate of the element drawn at an offset.
                            default: 'no'
                            enum:
                              - 'yes'
                              - 'no'
                          active-bg-color:
                            type: string
                            description: >-
                              The colour of the indicator shown when the
                              background is grabbed by the user. Selector needs
                              to be *core*. Colours may be specified by name
                              (e.g. red), hex (e.g.
                          active-bg-opacity:
                            type: string
                            description: >-
                              The opacity of the active background indicator.
                              Selector needs to be *core*.
                          active-bg-size:
                            type: string
                            description: >-
                              The opacity of the active background indicator.
                              Selector needs to be *core*.
                          selection-box-color:
                            type: string
                            description: >-
                              The background colour of the selection box used
                              for drag selection. Selector needs to be *core*.
                              Colours may be specified by name (e.g. red), hex
                              (e.g.
                          selection-box-border-width:
                            type: number
                            description: >-
                              The size of the border on the selection box.
                              Selector needs to be *core*
                          selection-box-opacity:
                            type: number
                            description: >-
                              The opacity of the selection box. Selector needs
                              to be *core*
                            minimum: 0
                            maximum: 1
                          outside-texture-bg-color:
                            type: string
                            description: >-
                              The colour of the area outside the viewport
                              texture when initOptions.textureOnViewport ===
                              true. Selector needs to be *core*. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          outside-texture-bg-opacity:
                            type: number
                            description: >-
                              The opacity of the area outside the viewport
                              texture. Selector needs to be *core*
                            minimum: 0
                            maximum: 1
                          shape-polygon-points:
                            type: string
                            description: >-
                              An array (or a space-separated string) of numbers
                              ranging on [-1, 1], representing alternating x and
                              y values (i.e. x1 y1 x2 y2, x3 y3 ...). This
                              represents the points in the polygon for the
                              node's shape. The bounding box of the node is
                              given by (-1, -1), (1, -1), (1, 1), (-1, 1). The
                              node's position is the origin (0, 0 )
                          menu-background-color:
                            type: string
                            description: >-
                              The colour of the background of the component
                              menu. Colours may be specified by name (e.g. red),
                              hex (e.g.
                          menu-background-opacity:
                            type: number
                            description: >-
                              The opacity of the background of the component
                              menu.
                            minimum: 0
                            maximum: 1
                          menu-forground-color:
                            type: string
                            description: >-
                              The colour of the text or icons in the component
                              menu. Colours may be specified by name (e.g. red),
                              hex (e.g.
                  capabilities:
                    x-order: 9
                    type: array
                    description: >-
                      Meshery manages components in accordance with their
                      specific capabilities. This field explicitly identifies
                      those capabilities largely by what actions a given
                      component supports; e.g. metric-scrape, sub-interface, and
                      so on. This field is extensible. ComponentDefinitions may
                      define a broad array of capabilities, which are in-turn
                      dynamically interpretted by Meshery for full lifecycle
                      management.
                    items:
                      x-go-type: capability.Capability
                      x-go-type-import:
                        path: github.com/meshery/schemas/models/v1alpha1/capability
                      $id: https://schemas.meshery.io/capability.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Meshery manages entities in accordance with their
                        specific capabilities. This field explicitly identifies
                        those capabilities largely by what actions a given
                        component supports; e.g. metric-scrape, sub-interface,
                        and so on. This field is extensible. Entities may define
                        a broad array of capabilities, which are in-turn
                        dynamically interpretted by Meshery for full lifecycle
                        management.
                      additionalProperties: false
                      type: object
                      required:
                        - description
                        - schemaVersion
                        - version
                        - displayName
                        - kind
                        - type
                        - subType
                        - entityState
                        - key
                        - status
                      x-oapi-codegen-extra-tags:
                        gorm: type:bytes;serializer:json
                      properties:
                        schemaVersion:
                          description: >-
                            Specifies the version of the schema to which the
                            capability definition conforms.
                          type: string
                          minLength: 2
                          maxLength: 100
                          pattern: >-
                            ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                          example:
                            - v1
                            - v1alpha1
                            - v2beta3
                            - v1.custom-suffix
                        version:
                          description: Version of the capability definition.
                          type: string
                          minLength: 5
                          maxLength: 100
                          pattern: >-
                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          default: v0.0.1
                        displayName:
                          description: Name of the capability in human-readible format.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        description:
                          type: string
                          description: >-
                            A written representation of the purpose and
                            characteristics of the capability.
                        kind:
                          description: Top-level categorization of the capability
                          additionalProperties: false
                          anyOf:
                            - const: action
                              description: >-
                                For capabilities related to executing actions on
                                entities. Example: initiate log streaming on a
                                Pod. Example: initiate deployment of a
                                component.
                            - const: mutate
                              description: >-
                                For capabilities related to mutating an entity.
                                Example: the ability to change the configuration
                                of a component.
                            - const: view
                              description: >-
                                For capabilities related to viewing an entity.
                                Example: the ability to view a components
                                configuration.
                            - const: interaction
                              description: >-
                                Catch all for capabilities related to
                                interaction with entities. Example: the ability
                                for a component to be dragged and dropped.
                                Example: supports event bubbling to parent
                                components. 
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        type:
                          description: >-
                            Classification of capabilities. Used to group
                            capabilities similar in nature.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        subType:
                          description: >-
                            Most granular unit of capability classification. The
                            combination of Kind, Type and SubType together
                            uniquely identify a Capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        key:
                          description: Key that backs the capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        entityState:
                          description: >-
                            State of the entity in which the capability is
                            applicable.
                          type: array
                          items:
                            type: string
                            enum:
                              - declaration
                              - instance
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description: >-
                              A string starting with an alphanumeric character.
                              Spaces and hyphens allowed.
                        status:
                          type: string
                          description: Status of the capability
                          default: enabled
                          enum:
                            - enabled
                            - disabled
                        metadata:
                          type: object
                          description: >-
                            Metadata contains additional information associated
                            with the capability. Extension point.
                          additionalProperties: true
                      default:
                        - description: Configure the visual styles for the component
                          displayName: Styling
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: ''
                          type: style
                          version: 0.7.0
                        - description: Change the shape of the component
                          displayName: Change Shape
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: shape
                          type: style
                          version: 0.7.0
                        - description: >-
                            Drag and Drop a component into a parent component in
                            graph view
                          displayName: Compound Drag And Drop
                          entityState:
                            - declaration
                          key: ''
                          kind: interaction
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: compoundDnd
                          type: graph
                          version: 0.7.0
                        - description: Add text to nodes body
                          displayName: Body Text
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: body-text
                          type: style
                          version: 0.7.0
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                      yaml: capabilities
                      json: capabilities
                    default:
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Performance Test
                        description: >-
                          Initiate a performance test. Meshery will execute the
                          load generation, collect metrics, and present the
                          results.
                        kind: action
                        type: operator
                        subType: perf-test
                        key: ''
                        entityState:
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Workload Configuration
                        description: Configure the workload specific setting of a component
                        kind: mutate
                        type: configuration
                        subType: config
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Labels and Annotations Configuration
                        description: 'Configure Labels And Annotations for  the component '
                        kind: mutate
                        type: configuration
                        subType: labels-and-annotations
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Relationships
                        description: View relationships for the component
                        kind: view
                        type: configuration
                        subType: relationship
                        key: ''
                        entityState:
                          - declaration
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Json Schema
                        description: 'View Component Definition '
                        kind: view
                        type: configuration
                        subType: definition
                        key: ''
                        entityState:
                          - declaration
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Styling
                        description: Configure the visual styles for the component
                        kind: mutate
                        type: style
                        subType: ''
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Change Shape
                        description: Change the shape of the component
                        kind: mutate
                        type: style
                        subType: shape
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Compound Drag And Drop
                        description: >-
                          Drag and Drop a component into a parent component in
                          graph view
                        kind: interaction
                        type: graph
                        subType: compoundDnd
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                  status:
                    x-order: 10
                    type: string
                    description: >-
                      Status of component, including:

                      - duplicate: this component is a duplicate of another. The
                      component that is to be the canonical reference and that
                      is duplicated by other components should not be assigned
                      the 'duplicate' status.

                      - maintenance: model is unavailable for a period of time.

                      - enabled: model is available for use for all users of
                      this Meshery Server.

                      - ignored: model is unavailable for use for all users of
                      this Meshery Server.
                    default: enabled
                    enum:
                      - ignored
                      - enabled
                      - duplicate
                      - resolved
                      - open
                    x-oapi-codegen-extra-tags:
                      yaml: status
                      json: status
                  metadata:
                    x-order: 11
                    type: object
                    description: >-
                      Metadata contains additional information associated with
                      the component.
                    required:
                      - genealogy
                      - isAnnotation
                      - isNamespaced
                      - published
                      - instanceDetails
                      - configurationUISchema
                    properties:
                      genealogy:
                        x-order: 1
                        type: string
                        description: >-
                          Genealogy represents the various representational
                          states of the component.
                      isAnnotation:
                        x-order: 2
                        type: boolean
                        description: >-
                          Identifies whether the component is semantically
                          meaningful or not; identifies whether the component
                          should be treated as deployable entity or is for
                          purposes of logical representation.
                        default: false
                      isNamespaced:
                        x-order: 3
                        type: boolean
                        description: >-
                          Identifies whether the component is scoped to
                          namespace or clsuter wide.
                      published:
                        x-order: 4
                        type: boolean
                        description: >-
                          'published' controls whether the component should be
                          registered in Meshery Registry. When the same
                          'published' property in Models, is set to 'false', the
                          Model property takes precedence with all Entities in
                          the Model not being registered.
                      instanceDetails:
                        x-order: 5
                        type: object
                        description: >-
                          InstanceDetails contains information about the
                          instance of the component.
                      configurationUISchema:
                        x-order: 6
                        type: string
                        description: >-
                          Defines the UI schema for rendering the component's
                          configuration. For more details, visit:
                          https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                          .
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    additionalProperties: true
                  configuration:
                    x-order: 12
                    description: >-
                      The configuration of the component. The configuration is
                      based on the schema defined within the component
                      definition(component.schema).
                    type: object
                    $comment: >-
                      The configuration of the component. The configuration is
                      based on the schema defined within the component
                      definition(component.schema).
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                  component:
                    x-order: 13
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    x-go-type: Component
                    description: >-
                      data related to the third party capability that Component
                      Defintion wraps , this is herematicaly sealed an
                    type: object
                    properties:
                      version:
                        type: string
                        description: >-
                          Version of the component produced by the registrant.
                          Example: APIVersion of a Kubernetes Pod.
                        x-order: 1
                      kind:
                        type: string
                        description: >-
                          The unique identifier (name) assigned by the
                          registrant to this component. Example: A Kubernetes
                          Pod is of kind 'Pod'.
                        x-order: 2
                      schema:
                        type: string
                        description: >-
                          JSON schema of the object as defined by the
                          registrant.
                        x-order: 3
                    required:
                      - version
                      - kind
                      - schema
                required:
                  - id
                  - displayName
                  - description
                  - schemaVersion
                  - format
                  - version
                  - configuration
                  - metadata
                  - modelId
                  - model
                  - component
            preferences:
              type: object
              description: Design-level preferences
              x-order: 7
              properties:
                layers:
                  type: object
                  description: List of available layers
              required:
                - layers
            relationships:
              description: List of relationships between components
              type: array
              x-order: 8
              items:
                x-go-type: '*relationship.RelationshipDefinition'
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1alpha3/relationship
                $id: https://schemas.meshery.io/relationship.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Relationships define the nature of interaction between
                  interconnected components in Meshery. The combination of
                  relationship properties kind, type, and subtype characterize
                  various genealogical relations among and between components.
                  Relationships have selectors, selector sets, metadata, and
                  optional parameters. Learn more at
                  https://docs.meshery.io/concepts/logical/relationships.
                required:
                  - schemaVersion
                  - version
                  - model
                  - kind
                  - type
                  - subType
                additionalProperties: false
                type: object
                properties:
                  id:
                    description: >-
                      Uniquely identifies the entity (i.e. component) as defined
                      in a declaration (i.e. design).
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      yaml: id
                      json: id
                  schemaVersion:
                    description: >-
                      Specifies the version of the schema used for the
                      relationship definition.
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                    x-oapi-codegen-extra-tags:
                      yaml: schemaVersion
                      json: schemaVersion
                    default: relationships.meshery.io/v1alpha3
                  version:
                    type: string
                    minLength: 5
                    maxLength: 100
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    description: >-
                      A valid semantic version string between 5 and 256
                      characters. The pattern allows for a major.minor.patch
                      version followed by an optional pre-release tag like
                      '-alpha' or '-beta.2' and an optional build metadata tag
                      like '+build.1.
                    default: v0.0.1
                    x-oapi-codegen-extra-tags:
                      yaml: version
                      json: version
                  model:
                    description: Name of the model in which this relationship is packaged.
                    $id: https://schemas.meshery.io/model.json
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: false
                    type: object
                    properties:
                      id:
                        description: >-
                          Uniquely identifies the entity (i.e. component) as
                          defined in a declaration (i.e. design).
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema used for the
                          definition.
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          json: schemaVersion
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        description: Version of the model definition.
                        type: string
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                      name:
                        description: >-
                          The unique name for the model within the scope of a
                          registrant.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: name
                          json: name
                      displayName:
                        description: Human-readable name for the model.
                        minLength: 1
                        maxLength: 100
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                        x-oapi-codegen-extra-tags:
                          yaml: displayName
                          json: displayName
                      description:
                        type: string
                        description: Description of the model.
                        minLength: 1
                        maxLength: 1000
                        x-oapi-codegen-extra-tags:
                          yaml: description
                          json: description
                      status:
                        type: string
                        description: >-
                          Status of model, including:

                          - duplicate: this component is a duplicate of another.
                          The component that is to be the canonical reference
                          and that is duplicated by other components should not
                          be assigned the 'duplicate' status.

                          - maintenance: model is unavailable for a period of
                          time.

                          - enabled: model is available for use for all users of
                          this Meshery Server.

                          - ignored: model is unavailable for use for all users
                          of this Meshery Server.
                        enum:
                          - ignored
                          - enabled
                          - duplicate
                        x-oapi-codegen-extra-tags:
                          yaml: status
                          json: status
                      registrant:
                        x-oapi-codegen-extra-tags:
                          yaml: registrant
                          json: registrant
                          gorm: foreignKey:RegistrantId;references:Id
                        $id: https://schemas.meshery.io/component.json
                        $schema: http://json-schema.org/draft-07/schema#
                        description: >-
                          Meshery Connections are managed and unmanaged
                          resources that either through discovery or manual
                          entry are tracked by Meshery. Learn more at
                          https://docs.meshery.io/concepts/logical/connections
                        additionalProperties: false
                        type: object
                        required:
                          - kind
                          - type
                          - status
                        properties:
                          id:
                            description: ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                          name:
                            x-oapi-codegen-extra-tags:
                              db: name
                              yaml: name
                              json: name
                            type: string
                            description: Connection Name
                          credential_id:
                            x-go-name: CredentialId
                            x-oapi-codegen-extra-tags:
                              db: credential_id
                              yaml: credential_id
                              json: credential_id
                            description: Credential ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          type:
                            x-oapi-codegen-extra-tags:
                              db: type
                              yaml: type
                              json: type
                            type: string
                            description: Connection Type
                          sub_type:
                            x-oapi-codegen-extra-tags:
                              db: sub_type
                              yaml: sub_type
                              json: sub_type
                            type: string
                            description: Connection Subtype
                          kind:
                            x-oapi-codegen-extra-tags:
                              db: kind
                              yaml: kind
                              json: kind
                            type: string
                            description: Connection Kind
                          metadata:
                            x-oapi-codegen-extra-tags:
                              db: metadata
                              yaml: metadata
                              json: metadata
                            type: object
                          status:
                            x-oapi-codegen-extra-tags:
                              db: status
                              yaml: status
                              json: status
                            description: Connection Status
                            type: string
                            enum:
                              - discovered
                              - registered
                              - connected
                              - ignored
                              - maintenance
                              - disconnected
                              - deleted
                              - not found
                          user_id:
                            x-go-name: UserID
                            x-oapi-codegen-extra-tags:
                              yaml: user_id
                              json: user_id
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          created_at:
                            x-oapi-codegen-extra-tags:
                              yaml: created_at
                              json: created_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          updated_at:
                            x-oapi-codegen-extra-tags:
                              yaml: updated_at
                              json: updated_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          deleted_at:
                            x-oapi-codegen-extra-tags:
                              yaml: deleted_at
                              json: deleted_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                      category:
                        type: object
                        description: Category of the model.
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                          name:
                            type: string
                            minLength: 1
                            maxLength: 100
                            x-oapi-codegen-extra-tags:
                              yaml: name
                              json: name
                          metadata:
                            type: object
                            x-oapi-codegen-extra-tags:
                              yaml: metadata
                              json: metadata
                        x-oapi-codegen-extra-tags:
                          yaml: category
                          json: category
                          gorm: foreignKey:CategoryId;references:Id
                      subCategory:
                        type: string
                        description: Sub-category of the model.
                        minLength: 1
                        maxLength: 100
                        x-oapi-codegen-extra-tags:
                          yaml: subCategory
                          json: subCategory
                      metadata:
                        type: object
                        description: >-
                          Metadata containing additional information associated
                          with the model.
                        properties:
                          capabilities:
                            type: array
                            description: Capabilities associated with the model
                            items:
                              $id: https://schemas.meshery.io/capability.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery manages entities in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. Entities may define a broad
                                array of capabilities, which are in-turn
                                dynamically interpretted by Meshery for full
                                lifecycle management.
                              additionalProperties: false
                              type: object
                              required:
                                - schemaVersion
                                - version
                                - displayName
                                - kind
                                - type
                                - entityState
                                - status
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              properties:
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema to which
                                    the capability definition conforms.
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                  x-oapi-codegen-extra-tags:
                                    yaml: schemaVersion
                                    json: schemaVersion
                                version:
                                  description: Version of the capability definition.
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  x-oapi-codegen-extra-tags:
                                    yaml: version
                                    json: version
                                displayName:
                                  description: >-
                                    Name of the capability in human-readible
                                    format.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: displayName
                                    json: displayName
                                description:
                                  type: string
                                  description: >-
                                    A written representation of the purpose and
                                    characteristics of the capability.
                                  x-oapi-codegen-extra-tags:
                                    yaml: description
                                    json: description
                                kind:
                                  description: Top-level categorization of the capability
                                  additionalProperties: false
                                  anyOf:
                                    - const: action
                                      description: >-
                                        For capabilities related to executing
                                        actions on entities. Example: initiate
                                        log streaming on a Pod. Example:
                                        initiate deployment of a component.
                                    - const: mutate
                                      description: >-
                                        For capabilities related to mutating an
                                        entity. Example: the ability to change
                                        the configuration of a component.
                                    - const: view
                                      description: >-
                                        For capabilities related to viewing an
                                        entity. Example: the ability to view a
                                        components configuration.
                                    - const: interaction
                                      description: >-
                                        Catch all for capabilities related to
                                        interaction with entities. Example: the
                                        ability for a component to be dragged
                                        and dropped. Example: supports event
                                        bubbling to parent components. 
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: kind
                                    json: kind
                                type:
                                  description: >-
                                    Classification of capabilities. Used to
                                    group capabilities similar in nature.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: type
                                    json: type
                                subType:
                                  description: >-
                                    Most granular unit of capability
                                    classification. The combination of Kind,
                                    Type and SubType together uniquely identify
                                    a Relaationship.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  oneOf:
                                    - const: inventory
                                      description: >-
                                        A hierarchical inventory relationship in
                                        which the configuration of (parent)
                                        component is patched with the
                                        configuration of other (child)
                                        component. Eg: The configuration of the
                                        EnvoyFilter (parent) component is
                                        patched with the configuration as
                                        received from WASMFilter (child)
                                        component.
                                    - const: matchLabels
                                      description: >-
                                        Match label relationships offer a
                                        dynamic association between one or more
                                        components and are a flexible way to
                                        group and manage related components in
                                        Meshery.
                                    - const: permission
                                      description: >-
                                        A relationship that represents a set of
                                        security-centric bindings between
                                        components.
                                    - const: network
                                      description: >-
                                        A relationship that represents a line of
                                        communication between two or more
                                        components.
                                    - const: firewall
                                      description: >-
                                        A relationship that act as a
                                        network-based security boundary for
                                        ingress and egress traffic.
                                    - const: mount
                                      description: >-
                                        A relationship that represents volume
                                        mounts between components.
                                    - const: alias
                                      description: >-
                                        An alias for a field path in another
                                        component.
                                    - const: annotation
                                      description: >-
                                        A relationship that provide valuable
                                        context for users, controllers, and
                                        third-party tools within the Meshery
                                        ecosystem.
                                    - const: reference
                                      description: >-
                                        A reference relationship  is a
                                        declarative linkage where one resource
                                        identifies or depends on another
                                        resource by referencing its name, kind,
                                        API version, or some other property
                                  x-oapi-codegen-extra-tags:
                                    yaml: subType
                                    json: subType
                                key:
                                  description: Key that backs the capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: key
                                    json: key
                                entityState:
                                  description: >-
                                    State of the entity in which the capability
                                    is applicable.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - declaration
                                      - instance
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description: >-
                                      A string starting with an alphanumeric
                                      character. Spaces and hyphens allowed.
                                    x-oapi-codegen-extra-tags:
                                      yaml: entityState
                                      json: entityState
                                status:
                                  type: string
                                  description: Status of the capability
                                  default: enabled
                                  enum:
                                    - enabled
                                    - disabled
                                  x-oapi-codegen-extra-tags:
                                    yaml: status
                                    json: status
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata contains additional information
                                    associated with the capability. Extension
                                    point.
                                  additionalProperties: true
                                  x-oapi-codegen-extra-tags:
                                    yaml: metadata
                                    json: metadata
                          isAnnotation:
                            type: boolean
                            description: >-
                              Indicates whether the model and its entities
                              should be treated as deployable entities or as
                              logical representations.
                            x-oapi-codegen-extra-tags:
                              yaml: isAnnotation
                              json: isAnnotation
                          primaryColor:
                            type: string
                            description: Primary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            x-oapi-codegen-extra-tags:
                              yaml: primaryColor
                              json: primaryColor
                          secondaryColor:
                            type: string
                            description: Secondary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            x-oapi-codegen-extra-tags:
                              yaml: secondaryColor
                              json: secondaryColor
                          svgWhite:
                            type: string
                            description: SVG representation of the model in white color.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgWhite
                              json: svgWhite
                          svgColor:
                            type: string
                            description: SVG representation of the model in colored format.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgColor
                              json: svgColor
                          svgComplete:
                            type: string
                            description: SVG representation of the complete model.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgComplete
                              json: svgComplete
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        additionalProperties: true
                      model:
                        type: object
                        description: >-
                          Registrant-defined data associated with the model.
                          Properties pertain to the software being managed (e.g.
                          Kubernetes v1.31)
                        required:
                          - version
                        properties:
                          version:
                            description: Version of the model as defined by the registrant.
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            type: string
                            minLength: 5
                            maxLength: 100
                            pattern: >-
                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                    required:
                      - name
                      - version
                      - registrant
                      - category
                  kind:
                    description: >-
                      Kind of the Relationship. Learn more about relationships -
                      https://docs.meshery.io/concepts/logical/relationships.
                    enum:
                      - hierarchical
                      - edge
                      - sibling
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: kind
                      json: kind
                  type:
                    description: >-
                      Classification of relationships. Used to group
                      relationships similar in nature.
                    x-go-name: RelationshipType
                    gorm: column:type
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: type
                      json: type
                  subType:
                    description: >-
                      Most granular unit of relationship classification. The
                      combination of Kind, Type and SubType together uniquely
                      identify a Relationship.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: subType
                      json: subType
                  status:
                    type: string
                    description: Status of the relationship.
                    default: enabled
                    enum:
                      - pending
                      - approved
                      - ignored
                      - enabled
                      - deleted
                    x-oapi-codegen-extra-tags:
                      yaml: status
                      json: status
                  evaluationQuery:
                    description: >-
                      Optional. Assigns the policy to be used for the evaluation
                      of the relationship. Deprecation Notice: In the future,
                      this property is either to be removed or to it is to be an
                      array of optional policy $refs.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: evaluationQuery
                      json: evaluationQuery
                  capabilities:
                    type: array
                    description: Capabilities associated with the relationship.
                    items:
                      $id: https://schemas.meshery.io/capability.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Meshery manages entities in accordance with their
                        specific capabilities. This field explicitly identifies
                        those capabilities largely by what actions a given
                        component supports; e.g. metric-scrape, sub-interface,
                        and so on. This field is extensible. Entities may define
                        a broad array of capabilities, which are in-turn
                        dynamically interpretted by Meshery for full lifecycle
                        management.
                      additionalProperties: false
                      type: object
                      required:
                        - schemaVersion
                        - version
                        - displayName
                        - kind
                        - type
                        - entityState
                        - status
                      x-oapi-codegen-extra-tags:
                        gorm: type:bytes;serializer:json
                      properties:
                        schemaVersion:
                          description: >-
                            Specifies the version of the schema to which the
                            capability definition conforms.
                          type: string
                          minLength: 2
                          maxLength: 100
                          pattern: >-
                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                          example:
                            - v1
                            - v1alpha1
                            - v2beta3
                            - v1.custom-suffix
                          x-oapi-codegen-extra-tags:
                            yaml: schemaVersion
                            json: schemaVersion
                        version:
                          description: Version of the capability definition.
                          type: string
                          minLength: 5
                          maxLength: 100
                          pattern: >-
                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          x-oapi-codegen-extra-tags:
                            yaml: version
                            json: version
                        displayName:
                          description: Name of the capability in human-readible format.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: displayName
                            json: displayName
                        description:
                          type: string
                          description: >-
                            A written representation of the purpose and
                            characteristics of the capability.
                          x-oapi-codegen-extra-tags:
                            yaml: description
                            json: description
                        kind:
                          description: Top-level categorization of the capability
                          additionalProperties: false
                          anyOf:
                            - const: action
                              description: >-
                                For capabilities related to executing actions on
                                entities. Example: initiate log streaming on a
                                Pod. Example: initiate deployment of a
                                component.
                            - const: mutate
                              description: >-
                                For capabilities related to mutating an entity.
                                Example: the ability to change the configuration
                                of a component.
                            - const: view
                              description: >-
                                For capabilities related to viewing an entity.
                                Example: the ability to view a components
                                configuration.
                            - const: interaction
                              description: >-
                                Catch all for capabilities related to
                                interaction with entities. Example: the ability
                                for a component to be dragged and dropped.
                                Example: supports event bubbling to parent
                                components. 
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: kind
                            json: kind
                        type:
                          description: >-
                            Classification of capabilities. Used to group
                            capabilities similar in nature.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: type
                            json: type
                        subType:
                          description: >-
                            Most granular unit of capability classification. The
                            combination of Kind, Type and SubType together
                            uniquely identify a Capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: subType
                            json: subType
                        key:
                          description: Key that backs the capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: key
                            json: key
                        entityState:
                          description: >-
                            State of the entity in which the capability is
                            applicable.
                          type: array
                          items:
                            type: string
                            enum:
                              - declaration
                              - instance
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description: >-
                              A string starting with an alphanumeric character.
                              Spaces and hyphens allowed.
                            x-oapi-codegen-extra-tags:
                              yaml: entityState
                              json: entityState
                        status:
                          type: string
                          description: Status of the capability
                          default: enabled
                          enum:
                            - enabled
                            - disabled
                          x-oapi-codegen-extra-tags:
                            yaml: status
                            json: status
                        metadata:
                          type: object
                          description: >-
                            Metadata contains additional information associated
                            with the capability. Extension point.
                          additionalProperties: true
                          x-oapi-codegen-extra-tags:
                            yaml: metadata
                            json: metadata
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                  metadata:
                    type: object
                    description: >-
                      Metadata contains additional information associated with
                      the Relationship.
                    additionalProperties: true
                    x-oapi-codegen-extra-tags:
                      gorm: foreignKey:ModelId;references:Id
                    properties:
                      description:
                        description: >-
                          Characterization of the meaning of the relationship
                          and its relevance to both Meshery and entities under
                          management.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: description
                          json: description
                      isAnnotation:
                        type: boolean
                        description: >-
                          Indicates whether the relationship should be treated
                          as a logical representation only
                        x-oapi-codegen-extra-tags:
                          yaml: isAnnotation
                          json: isAnnotation
                        default: false
                      styles:
                        anyOf:
                          - type: object
                            description: Visualization styles for a relationship
                            allOf:
                              - type: object
                                description: Common styles for all entities
                                additionalProperties: false
                                required:
                                  - primaryColor
                                  - svgColor
                                  - svgWhite
                                properties:
                                  primaryColor:
                                    type: string
                                    description: >-
                                      Primary color of the component used for UI
                                      representation.
                                  secondaryColor:
                                    type: string
                                    description: >-
                                      Secondary color of the entity used for UI
                                      representation.
                                  svgWhite:
                                    type: string
                                    description: >-
                                      White SVG of the entity used for UI
                                      representation on dark background.
                                  svgColor:
                                    type: string
                                    description: >-
                                      Colored SVG of the entity used for UI
                                      representation on light background.
                                  svgComplete:
                                    type: string
                                    description: >-
                                      Complete SVG of the entity used for UI
                                      representation, often inclusive of
                                      background.
                                  color:
                                    type: string
                                    description: >-
                                      The color of the element's label. Colours
                                      may be specified by name (e.g. red), hex
                                      (e.g. #ff0000 or #f00), RGB (e.g. rgb(255,
                                      0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).
                                  text-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the label text, including
                                      its outline.
                                    minimum: 0
                                    maximum: 1
                                  font-family:
                                    type: string
                                    description: >-
                                      A comma-separated list of font names to
                                      use on the label text.
                                  font-size:
                                    type: string
                                    description: The size of the label text.
                                  font-style:
                                    type: string
                                    description: >-
                                      A CSS font style to be applied to the
                                      label text.
                                  font-weight:
                                    type: string
                                    description: >-
                                      A CSS font weight to be applied to the
                                      label text.
                                  text-transform:
                                    type: string
                                    description: >-
                                      A transformation to apply to the label
                                      text
                                    enum:
                                      - none
                                      - uppercase
                                      - lowercase
                                  opacity:
                                    type: number
                                    description: >-
                                      The opacity of the element, ranging from 0
                                      to 1. Note that the opacity of a compound
                                      node parent affects the effective opacity
                                      of its children.See
                                      https://js.cytoscape.org/#style/visibility
                                    minimum: 0
                                    maximum: 1
                                  z-index:
                                    type: integer
                                    description: >-
                                      An integer value that affects the relative
                                      draw order of elements. In general, an
                                      element with a higher z-index will be
                                      drawn on top of an element with a lower
                                      z-index. Note that edges are under nodes
                                      despite z-index.
                                  label:
                                    type: string
                                    description: >-
                                      The text to display for an element’s
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                              - properties:
                                  edge-animation:
                                    type: string
                                    description: >-
                                      The animation to use for the edge. Can be
                                      like 'marching-ants' , 'blink' ,
                                      'moving-gradient',etc .
                                  curve-style:
                                    type: string
                                    description: >-
                                      The curving method used to separate two or
                                      more edges between two nodes; may be
                                      haystack (very fast, bundled straight
                                      edges for which loops and compounds are
                                      unsupported), straight (straight edges
                                      with all arrows supported), bezier
                                      (bundled curved edges), unbundled-bezier
                                      (curved edges for use with manual control
                                      points), segments (a series of straight
                                      lines), taxi (right-angled lines,
                                      hierarchically bundled). Note that
                                      haystack edges work best with ellipse,
                                      rectangle, or similar nodes. Smaller node
                                      shapes, like triangle, will not be as
                                      aesthetically pleasing. Also note that
                                      edge endpoint arrows are unsupported for
                                      haystack edges.
                                    default: straight
                                    enum:
                                      - straight
                                      - haystack
                                      - bezier
                                      - unbundled-bezier
                                      - segments
                                      - taxi
                                  line-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s line. Colours may
                                      be specified by name (e.g. red), hex (e.g.
                                      #ff0000 or #f00), RGB (e.g. rgb(255, 0,
                                      0)), or HSL (e.g. hsl(0, 100%, 50%)).
                                  line-style:
                                    type: string
                                    description: The style of the edge’s line.
                                    enum:
                                      - solid
                                      - dotted
                                      - dashed
                                  line-cap:
                                    type: string
                                    description: >-
                                      The cap style of the edge’s line; may be
                                      butt (default), round, or square. The cap
                                      may or may not be visible, depending on
                                      the shape of the node and the relative
                                      size of the node and edge. Caps other than
                                      butt extend beyond the specified endpoint
                                      of the edge.
                                    enum:
                                      - butt
                                      - round
                                      - square
                                    default: butt
                                  line-opacity:
                                    type: number
                                    minimum: 0
                                    maximum: 1
                                    default: 1
                                    description: >-
                                      The opacity of the edge’s line and arrow.
                                      Useful if you wish to have a separate
                                      opacity for the edge label versus the edge
                                      line. Note that the opacity value of the
                                      edge element affects the effective opacity
                                      of its line and label subcomponents.
                                  target-arrow-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s source arrow.
                                      Colours may be specified by name (e.g.
                                      red), hex (e.g. #ff0000 or #f00), RGB
                                      (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                      100%, 50%)).
                                  target-arrow-shape:
                                    type: string
                                    description: The shape of the edge’s source arrow
                                    enum:
                                      - triangle
                                      - triangle-tee
                                      - circle-triangle
                                      - triangle-cross
                                      - triangle-backcurve
                                      - vee
                                      - tee
                                      - square
                                      - circle
                                      - diamond
                                      - chevron
                                      - none
                                  target-arrow-fill:
                                    type: string
                                    description: The fill state of the edge’s source arrow
                                    enum:
                                      - filled
                                      - hollow
                                  mid-target-arrow-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s source arrow.
                                      Colours may be specified by name (e.g.
                                      red), hex (e.g. #ff0000 or #f00), RGB
                                      (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                      100%, 50%)).
                                  mid-target-arrow-shape:
                                    type: string
                                    description: The shape of the edge’s source arrow
                                    enum:
                                      - triangle
                                      - triangle-tee
                                      - circle-triangle
                                      - triangle-cross
                                      - triangle-backcurve
                                      - vee
                                      - tee
                                      - square
                                      - circle
                                      - diamond
                                      - chevron
                                      - none
                                  mid-target-arrow-fill:
                                    type: string
                                    description: The fill state of the edge’s source arrow
                                    enum:
                                      - filled
                                      - hollow
                                  arrow-scale:
                                    type: number
                                    description: Scaling for the arrow size.
                                    minimum: 0
                                  source-label:
                                    type: string
                                    description: >-
                                      The text to display for an edge’s source
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                                  target-label:
                                    type: string
                                    description: >-
                                      The text to display for an edge’s target
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                          - type: object
                            description: Common styles for all entities
                            additionalProperties: false
                            required:
                              - primaryColor
                              - svgColor
                              - svgWhite
                            properties:
                              primaryColor:
                                type: string
                                description: >-
                                  Primary color of the component used for UI
                                  representation.
                              secondaryColor:
                                type: string
                                description: >-
                                  Secondary color of the entity used for UI
                                  representation.
                              svgWhite:
                                type: string
                                description: >-
                                  White SVG of the entity used for UI
                                  representation on dark background.
                              svgColor:
                                type: string
                                description: >-
                                  Colored SVG of the entity used for UI
                                  representation on light background.
                              svgComplete:
                                type: string
                                description: >-
                                  Complete SVG of the entity used for UI
                                  representation, often inclusive of background.
                              color:
                                type: string
                                description: >-
                                  The color of the element's label. Colours may
                                  be specified by name (e.g. red), hex (e.g.
                                  #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)),
                                  or HSL (e.g. hsl(0, 100%, 50%)).
                              text-opacity:
                                type: number
                                description: >-
                                  The opacity of the label text, including its
                                  outline.
                                minimum: 0
                                maximum: 1
                              font-family:
                                type: string
                                description: >-
                                  A comma-separated list of font names to use on
                                  the label text.
                              font-size:
                                type: string
                                description: The size of the label text.
                              font-style:
                                type: string
                                description: >-
                                  A CSS font style to be applied to the label
                                  text.
                              font-weight:
                                type: string
                                description: >-
                                  A CSS font weight to be applied to the label
                                  text.
                              text-transform:
                                type: string
                                description: A transformation to apply to the label text
                                enum:
                                  - none
                                  - uppercase
                                  - lowercase
                              opacity:
                                type: number
                                description: >-
                                  The opacity of the element, ranging from 0 to
                                  1. Note that the opacity of a compound node
                                  parent affects the effective opacity of its
                                  children.See
                                  https://js.cytoscape.org/#style/visibility
                                minimum: 0
                                maximum: 1
                              z-index:
                                type: integer
                                description: >-
                                  An integer value that affects the relative
                                  draw order of elements. In general, an element
                                  with a higher z-index will be drawn on top of
                                  an element with a lower z-index. Note that
                                  edges are under nodes despite z-index.
                              label:
                                type: string
                                description: >-
                                  The text to display for an element’s label.
                                  Can give a path, e.g. data(id) will label with
                                  the elements id
                            $comment: Extension point for additional styles
                        x-oapi-codegen-extra-tags:
                          yaml: styles
                          json: styles
                  selectors:
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    type: array
                    description: >-
                      Selectors are organized as an array, with each item
                      containing a distinct set of selectors that share a common
                      functionality. This structure allows for flexibility in
                      defining relationships, even when different components are
                      involved.
                    $comment: >-
                      Sets of selectors are interpreted as a logical UNION.
                      Properties within a selector `allow` and `deny` are
                      interpreted as logical AND, while 'from' and 'to'
                      represents a UNION of set of combinatorial pairs.
                    items:
                      type: object
                      description: >-
                        Optional selectors used to match Components. Absence of
                        a selector means that it is applied to all Components.
                      additionalProperties: false
                      required:
                        - allow
                      properties:
                        deny:
                          description: >-
                            Optional selectors used to define relationships
                            which should not be created / is restricted.
                          type: object
                          required:
                            - to
                            - from
                          properties:
                            from:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                            to:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                        allow:
                          description: >-
                            Selectors used to define relationships which are
                            allowed.
                          type: object
                          required:
                            - to
                            - from
                          properties:
                            from:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  match_strategy_matrix:
                                    description: >-
                                      Strategy criterion for determing how to
                                      match the values at mutator/mutated paths
                                    type: array
                                    items:
                                      type: array
                                      items:
                                        type: string
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                            to:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
          required:
            - id
            - name
            - schemaVersion
            - version
            - components
            - relationships
        options:
          type: object
          properties:
            returnDiffOnly:
              type: boolean
              description: >-
                If true, only return the diff of changes instead of the complete
                updated design
            enableTrace:
              type: boolean
              description: If true, include detailed trace information in the response
    evaluation_EvaluationResponse:
      type: object
      description: Schema for the response of a relationship evaluation process in Meshery
      required:
        - schemaVersion
        - design
        - actions
      properties:
        schemaVersion:
          type: string
          description: >-
            Specifies the version of the schema to which the evaluation response
            conforms.
        design:
          x-go-type: pattern.PatternFile
          x-go-type-import:
            path: github.com/meshery/schemas/models/v1beta1/pattern
          description: >-
            The final evaluated design, including all updated components and
            relationships. This can be either the complete updated design or
            only a diff of changes. The version of the design will be
            automatically incremented if any modifications are made during the
            evaluation process. This field provides a comprehensive view of the
            design state after all relationship evaluations and policy
            applications have been completed.
          $schema: http://json-schema.org/draft-07/schema#
          title: Design Schema
          type: object
          properties:
            id:
              x-order: 1
              type: string
              format: uuid
              description: >-
                A Universally Unique Identifier used to uniquely identify
                entites in Meshery. The UUID core defintion is used across
                different schemas.
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
              default: 00000000-0000-0000-0000-000000000000
            name:
              type: string
              description: >-
                Name of the design; a descriptive, but concise title for the
                design document.
              x-order: 2
            schemaVersion:
              description: >-
                Specifies the version of the schema to which the design
                conforms.
              x-order: 3
              type: string
              minLength: 2
              maxLength: 100
              pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
              example:
                - v1
                - v1alpha1
                - v2beta3
                - v1.custom-suffix
            version:
              default: v0.0.1
              x-order: 4
              description: >-
                Revision of the design as expressed by an auto-incremented,
                SemVer-compliant version number. May be manually set by a user
                or third-party system, but will always be required to be of
                version number higher than the previously defined version
                number.
              minLength: 1
              maxLength: 50
              type: string
              pattern: >-
                ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
            metadata:
              type: object
              x-order: 5
              additionalProperties: true
              properties:
                resolvedAliases:
                  description: Map of resolved aliases present in the design
                  type: object
                  x-go-type: map[string]core.ResolvedAlias
                  x-go-type-import:
                    path: github.com/meshery/schemas/models/v1alpha1/core
                  additionalProperties:
                    description: >-
                      An resolved alias is an component that acts as an
                      ref/pointer to a field in another component, resolvedAlias
                      are aware of there immediate parents and completely
                      resolved parents also
                    allOf:
                      - description: >-
                          An alias is an component that acts as an ref/pointer
                          to a field in another component, nonResolvedAlias are
                          not aware of there immediate parents
                        type: object
                        properties:
                          relationship_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          alias_component_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          immediate_parent_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          immediate_ref_field_path:
                            type: array
                            items:
                              type: string
                        required:
                          - relationship_id
                          - alias_component_id
                          - immediate_parent_id
                          - immediate_ref_field_path
                      - type: object
                        properties:
                          resolved_parent_id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entities in Meshery. The UUID core
                              definition is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          resolved_ref_field_path:
                            type: array
                            items:
                              type: string
                        required:
                          - resolved_parent_id
                          - resolved_ref_field_path
            components:
              description: A list of one or more component declarations.
              minItems: 0
              x-order: 6
              type: array
              items:
                x-go-type: '*component.ComponentDefinition'
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1beta1/component
                $id: https://schemas.meshery.io/component.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Components are reusable building blocks for depicting
                  capabilities defined within models. Learn more at
                  https://docs.meshery.io/concepts/components
                additionalProperties: false
                type: object
                properties:
                  id:
                    description: >-
                      Uniquely identifies the entity (i.e. component) as defined
                      in a declaration (i.e. design).
                    x-order: 1
                    x-oapi-codegen-extra-tags:
                      yaml: id
                      json: id
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  schemaVersion:
                    x-order: 2
                    description: >-
                      Specifies the version of the schema to which the component
                      definition conforms.
                    x-oapi-codegen-extra-tags:
                      yaml: schemaVersion
                      json: schemaVersion
                    default: components.meshery.io/v1beta1
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                  version:
                    x-order: 3
                    description: Version of the component definition.
                    minLength: 1
                    maxLength: 50
                    x-oapi-codegen-extra-tags:
                      yaml: version
                      json: version
                    type: string
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    default: v0.0.1
                  displayName:
                    x-order: 4
                    description: Name of the component in human-readible format.
                    x-oapi-codegen-extra-tags:
                      yaml: displayName
                      json: displayName
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                  description:
                    x-order: 5
                    type: string
                    description: >-
                      A written representation of the purpose and
                      characteristics of the component.
                    x-oapi-codegen-extra-tags:
                      yaml: description
                      json: description
                  format:
                    x-order: 6
                    type: string
                    enum:
                      - JSON
                      - CUE
                    default: JSON
                    description: >-
                      Format specifies the format used in the `component.schema`
                      field. JSON is the default.
                    x-oapi-codegen-extra-tags:
                      yaml: format
                      json: format
                  model:
                    x-go-type: model.ModelDefinition
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1beta1/model
                    x-order: 7
                    description: >-
                      Reference to the specific registered model to which the
                      component belongs and from which model version, category,
                      and other properties may be referenced. Learn more at
                      https://docs.meshery.io/concepts/models
                    x-oapi-codegen-extra-tags:
                      gorm: foreignKey:ModelId;references:Id
                    $id: https://schemas.meshery.io/model.json
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: false
                    type: object
                    properties:
                      id:
                        description: >-
                          Uniquely identifies the entity (i.e. component) as
                          defined in a declaration (i.e. design).
                        x-order: 1
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema used for the
                          definition.
                        x-order: 2
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          json: schemaVersion
                        default: models.meshery.io/v1beta1
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        description: Version of the model definition.
                        type: string
                        x-order: 3
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        default: v0.0.1
                      name:
                        type: string
                        description: >-
                          The unique name for the model within the scope of a
                          registrant.
                        helperText: >-
                          Model name should be in lowercase with hyphens, not
                          whitespaces.
                        pattern: ^[a-z0-9-]+$
                        examples:
                          - cert-manager
                        x-order: 4
                        x-oapi-codegen-extra-tags:
                          yaml: name
                          json: name
                        default: untitled-model
                      displayName:
                        description: Human-readable name for the model.
                        helperText: >-
                          Model display name may include letters, numbers, and
                          spaces. Special characters are not allowed.
                        minLength: 1
                        maxLength: 100
                        type: string
                        pattern: ^[a-zA-Z0-9 ]+$
                        examples:
                          - Cert Manager
                        x-order: 5
                        x-oapi-codegen-extra-tags:
                          yaml: displayName
                          json: displayName
                        default: Untitled Model
                      description:
                        type: string
                        default: A new Meshery model.
                        description: Description of the model.
                        minLength: 1
                        maxLength: 1000
                        x-order: 6
                        x-oapi-codegen-extra-tags:
                          yaml: description,omitempty
                          json: description,omitempty
                      status:
                        type: string
                        description: >-
                          Status of model, including:

                          - duplicate: this component is a duplicate of another.
                          The component that is to be the canonical reference
                          and that is duplicated by other components should not
                          be assigned the 'duplicate' status.

                          - maintenance: model is unavailable for a period of
                          time.

                          - enabled: model is available for use for all users of
                          this Meshery Server.

                          - ignored: model is unavailable for use for all users
                          of this Meshery Server.
                        enum:
                          - ignored
                          - enabled
                          - duplicate
                        x-order: 7
                        x-oapi-codegen-extra-tags:
                          yaml: status
                          json: status
                        default: enabled
                      registrant:
                        x-oapi-codegen-extra-tags:
                          yaml: registrant
                          json: registrant
                          gorm: foreignKey:RegistrantId;references:ID
                        x-order: 8
                        x-go-type: connection.Connection
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1beta1/connection
                        $id: https://schemas.meshery.io/component.json
                        $schema: http://json-schema.org/draft-07/schema#
                        description: >-
                          Meshery Connections are managed and unmanaged
                          resources that either through discovery or manual
                          entry are tracked by Meshery. Learn more at
                          https://docs.meshery.io/concepts/logical/connections
                        additionalProperties: false
                        type: object
                        required:
                          - id
                          - schemaVersion
                          - name
                          - type
                          - sub_type
                          - kind
                          - status
                        properties:
                          id:
                            description: ID
                            x-order: 1
                            x-go-name: ID
                            x-oapi-codegen-extra-tags:
                              db: id
                              yaml: id
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          name:
                            x-oapi-codegen-extra-tags:
                              db: name
                              yaml: name
                            x-order: 2
                            type: string
                            description: Connection Name
                          credential_id:
                            x-go-name: CredentialID
                            x-oapi-codegen-extra-tags:
                              db: credential_id
                              yaml: credential_id
                            x-order: 3
                            description: Credential ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          type:
                            x-oapi-codegen-extra-tags:
                              db: type
                              yaml: type
                            x-order: 4
                            type: string
                            description: Connection Type
                          sub_type:
                            x-oapi-codegen-extra-tags:
                              db: sub_type
                              yaml: sub_type
                            x-order: 5
                            type: string
                            description: Connection Subtype
                          kind:
                            x-oapi-codegen-extra-tags:
                              db: kind
                              yaml: kind
                            x-order: 6
                            type: string
                            description: Connection Kind
                          metadata:
                            x-oapi-codegen-extra-tags:
                              db: metadata
                              yaml: metadata
                            x-order: 7
                            x-go-type: core.Map
                            x-go-type-skip-optional-pointer: true
                            type: object
                          status:
                            x-oapi-codegen-extra-tags:
                              db: status
                              yaml: status
                            x-order: 8
                            description: Connection Status
                            type: string
                            enum:
                              - discovered
                              - registered
                              - connected
                              - ignored
                              - maintenance
                              - disconnected
                              - deleted
                              - not found
                          user_id:
                            x-go-name: UserID
                            x-oapi-codegen-extra-tags:
                              db: user_id
                              yaml: user_id
                            x-order: 9
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          created_at:
                            x-oapi-codegen-extra-tags:
                              db: created_at
                              yaml: created_at
                            x-order: 10
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          updated_at:
                            x-oapi-codegen-extra-tags:
                              db: updated_at
                              yaml: updated_at
                            x-order: 11
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          deleted_at:
                            x-oapi-codegen-extra-tags:
                              db: deleted_at
                              yaml: deleted_at
                            x-go-type: core.NullTime
                            x-order: 12
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          environments:
                            type: array
                            items:
                              x-go-type: '*environment.Environment'
                              $id: https://schemas.meshery.io/environment.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery Environments allow you to logically
                                group related Connections and their associated
                                Credentials.. Learn more at
                                https://docs.meshery.io/concepts/logical/environments
                              additionalProperties: false
                              type: object
                              required:
                                - id
                                - name
                                - description
                                - organization_id
                              properties:
                                id:
                                  description: ID
                                  x-order: 1
                                  x-go-name: ID
                                  x-oapi-codegen-extra-tags:
                                    db: id
                                    yaml: id
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                name:
                                  x-oapi-codegen-extra-tags:
                                    db: name
                                    yaml: name
                                  x-order: 2
                                  type: string
                                  description: Environment name
                                description:
                                  x-oapi-codegen-extra-tags:
                                    db: description
                                    yaml: description
                                  x-order: 3
                                  type: string
                                  description: Environment description
                                organization_id:
                                  x-go-name: OrganizationID
                                  x-oapi-codegen-extra-tags:
                                    db: organization_id
                                    yaml: organization_id
                                  x-order: 4
                                  description: Environment organization ID
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                owner:
                                  x-oapi-codegen-extra-tags:
                                    db: owner
                                    yaml: owner
                                  x-order: 5
                                  description: Environment owner
                                  type: string
                                  format: uuid
                                  x-go-type: uuid.UUID
                                  x-go-type-import:
                                    path: github.com/gofrs/uuid
                                  default: 00000000-0000-0000-0000-000000000000
                                created_at:
                                  x-oapi-codegen-extra-tags:
                                    db: created_at
                                    yaml: created_at
                                  x-order: 6
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                metadata:
                                  x-oapi-codegen-extra-tags:
                                    db: metadata
                                    yaml: metadata
                                  x-order: 7
                                  x-go-type: core.Map
                                  x-go-type-skip-optional-pointer: true
                                  type: object
                                updated_at:
                                  x-oapi-codegen-extra-tags:
                                    db: updated_at
                                    yaml: updated_at
                                  x-order: 8
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                                deleted_at:
                                  x-oapi-codegen-extra-tags:
                                    db: deleted_at
                                    yaml: deleted_at
                                  x-go-type: core.NullTime
                                  x-go-import: database/sql
                                  x-order: 9
                                  type: string
                                  format: date-time
                                  x-go-type-skip-optional-pointer: true
                            x-oapi-codegen-extra-tags:
                              db: '-'
                              yaml: environments
                              gorm: '-'
                            x-go-type-skip-optional-pointer: true
                            x-order: 13
                          schemaVersion:
                            description: >-
                              Specifies the version of the schema used for the
                              definition.
                            x-order: 14
                            x-oapi-codegen-extra-tags:
                              yaml: schemaVersion
                              db: '-'
                              gorm: '-'
                            default: connections.meshery.io/v1beta1
                            type: string
                            minLength: 2
                            maxLength: 100
                            pattern: >-
                              ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                            example:
                              - v1
                              - v1alpha1
                              - v2beta3
                              - v1.custom-suffix
                      registrantId:
                        description: ID of the registrant.
                        x-oapi-codegen-extra-tags:
                          yaml: connection_id
                          json: connection_id
                          gorm: column:connection_id
                        x-order: 8
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      categoryId:
                        description: ID of the category.
                        x-oapi-codegen-extra-tags:
                          yaml: '-'
                          json: '-'
                          gorm: categoryID
                        x-order: 8
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        default: 00000000-0000-0000-0000-000000000000
                      category:
                        x-order: 9
                        x-oapi-codegen-extra-tags:
                          yaml: category
                          json: category
                          gorm: foreignKey:CategoryId;references:Id
                        x-go-type: category.CategoryDefinition
                        x-go-type-import:
                          path: github.com/meshery/schemas/models/v1beta1/category
                        $id: https://schemas.meshery.io/category.json
                        $schema: http://json-schema.org/draft-07/schema#
                        type: object
                        description: Category of the model.
                        required:
                          - id
                          - name
                          - metadata
                        properties:
                          id:
                            x-order: 1
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            default: 00000000-0000-0000-0000-000000000000
                          name:
                            type: string
                            minLength: 1
                            maxLength: 100
                            x-oapi-codegen-extra-tags:
                              yaml: name
                              json: name
                              gorm: name
                            default: Uncategorized
                            description: >-
                              The category of the model that determines the main
                              grouping.
                            enum:
                              - Analytics
                              - App Definition and Development
                              - Cloud Native Network
                              - Cloud Native Storage
                              - Database
                              - Machine Learning
                              - Observability and Analysis
                              - Orchestration & Management
                              - Platform
                              - Provisioning
                              - Runtime
                              - Security & Compliance
                              - Serverless
                              - Tools
                              - Uncategorized
                            x-order: 2
                          metadata:
                            type: object
                            x-oapi-codegen-extra-tags:
                              yaml: metadata,omitempty
                              json: metadata,omitempty
                              gorm: type:bytes;serializer:json
                            x-order: 3
                      subCategory:
                        x-order: 10
                        x-go-type: subcategory.SubCategoryDefinition
                        x-go-type-import:
                          path: >-
                            github.com/meshery/schemas/models/v1beta1/subcategory
                        $id: https://schemas.meshery.io/category.json
                        $schema: http://json-schema.org/draft-07/schema#
                        type: string
                        title: SubCategory
                        description: >-
                          Sub category of the model determines the secondary
                          grouping.
                        default: Uncategorized
                        enum:
                          - API Gateway
                          - API Integration
                          - Application Definition & Image Build
                          - Automation & Configuration
                          - Certified Kubernetes - Distribution
                          - Chaos Engineering
                          - Cloud Native Storage
                          - Cloud Provider
                          - CNI
                          - Compute
                          - Container Registry
                          - Container Runtime
                          - Container Security
                          - Container
                          - Content Delivery Network
                          - Continuous Integration & Delivery
                          - Coordination & Service Discovery
                          - Database
                          - Flowchart
                          - Framework
                          - Installable Platform
                          - Key Management
                          - Key Management Service
                          - Kubernetes
                          - Logging
                          - Machine Learning
                          - Management Governance
                          - Metrics
                          - Monitoring
                          - Networking Content Delivery
                          - Operating System
                          - Query
                          - Remote Procedure Call
                          - Scheduling & Orchestration
                          - Secrets Management
                          - Security Identity & Compliance
                          - Service Mesh
                          - Service Proxy
                          - Source Version Control
                          - Storage
                          - Specifications
                          - Streaming & Messaging
                          - Tools
                          - Tracing
                          - Uncategorized
                          - Video Conferencing
                        minLength: 1
                        maxLength: 100
                        x-oapi-codegen-extra-tags:
                          yaml: subCategory
                          json: subCategory
                      metadata:
                        type: object
                        description: >-
                          Metadata containing additional information associated
                          with the model.
                        required:
                          - svgWhite
                          - svgColor
                        properties:
                          capabilities:
                            type: array
                            description: Capabilities associated with the model
                            items:
                              x-go-type: capability.Capability
                              x-go-type-import:
                                path: >-
                                  github.com/meshery/schemas/models/v1alpha1/capability
                              $id: https://schemas.meshery.io/capability.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery manages entities in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. Entities may define a broad
                                array of capabilities, which are in-turn
                                dynamically interpretted by Meshery for full
                                lifecycle management.
                              additionalProperties: false
                              type: object
                              required:
                                - description
                                - schemaVersion
                                - version
                                - displayName
                                - kind
                                - type
                                - subType
                                - entityState
                                - key
                                - status
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              properties:
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema to which
                                    the capability definition conforms.
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                version:
                                  description: Version of the capability definition.
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  default: v0.0.1
                                displayName:
                                  description: >-
                                    Name of the capability in human-readible
                                    format.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                description:
                                  type: string
                                  description: >-
                                    A written representation of the purpose and
                                    characteristics of the capability.
                                kind:
                                  description: Top-level categorization of the capability
                                  additionalProperties: false
                                  anyOf:
                                    - const: action
                                      description: >-
                                        For capabilities related to executing
                                        actions on entities. Example: initiate
                                        log streaming on a Pod. Example:
                                        initiate deployment of a component.
                                    - const: mutate
                                      description: >-
                                        For capabilities related to mutating an
                                        entity. Example: the ability to change
                                        the configuration of a component.
                                    - const: view
                                      description: >-
                                        For capabilities related to viewing an
                                        entity. Example: the ability to view a
                                        components configuration.
                                    - const: interaction
                                      description: >-
                                        Catch all for capabilities related to
                                        interaction with entities. Example: the
                                        ability for a component to be dragged
                                        and dropped. Example: supports event
                                        bubbling to parent components. 
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                type:
                                  description: >-
                                    Classification of capabilities. Used to
                                    group capabilities similar in nature.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                subType:
                                  description: >-
                                    Most granular unit of capability
                                    classification. The combination of Kind,
                                    Type and SubType together uniquely identify
                                    a Capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                key:
                                  description: Key that backs the capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                entityState:
                                  description: >-
                                    State of the entity in which the capability
                                    is applicable.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - declaration
                                      - instance
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description: >-
                                      A string starting with an alphanumeric
                                      character. Spaces and hyphens allowed.
                                status:
                                  type: string
                                  description: Status of the capability
                                  default: enabled
                                  enum:
                                    - enabled
                                    - disabled
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata contains additional information
                                    associated with the capability. Extension
                                    point.
                                  additionalProperties: true
                              default:
                                - description: >-
                                    Configure the visual styles for the
                                    component
                                  displayName: Styling
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: ''
                                  type: style
                                  version: 0.7.0
                                - description: Change the shape of the component
                                  displayName: Change Shape
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: shape
                                  type: style
                                  version: 0.7.0
                                - description: >-
                                    Drag and Drop a component into a parent
                                    component in graph view
                                  displayName: Compound Drag And Drop
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: interaction
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: compoundDnd
                                  type: graph
                                  version: 0.7.0
                                - description: Add text to nodes body
                                  displayName: Body Text
                                  entityState:
                                    - declaration
                                  key: ''
                                  kind: mutate
                                  schemaVersion: capability.meshery.io/v1alpha1
                                  status: enabled
                                  subType: body-text
                                  type: style
                                  version: 0.7.0
                            x-order: 1
                          isAnnotation:
                            type: boolean
                            description: >-
                              Indicates whether the model and its entities
                              should be treated as deployable entities or as
                              logical representations.
                            x-oapi-codegen-extra-tags:
                              yaml: isAnnotation
                              json: isAnnotation
                            x-order: 2
                            default: false
                          primaryColor:
                            type: string
                            description: Primary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            default: '#00b39f'
                            x-oapi-codegen-extra-tags:
                              yaml: primaryColor
                              json: primaryColor
                            x-order: 3
                          secondaryColor:
                            type: string
                            description: Secondary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            default: '#00D3A9'
                            x-oapi-codegen-extra-tags:
                              yaml: secondaryColor
                              json: secondaryColor
                            x-order: 4
                          svgWhite:
                            type: string
                            description: SVG representation of the model in white color.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgWhite
                              json: svgWhite
                            x-order: 5
                            default: >-
                              <svg width="32" height="32" viewBox="0 0 32 32"
                              fill="none"
                              xmlns="http://www.w3.org/2000/svg"><path
                              d="M16.405 8.732v6.57l5.694-3.297-5.694-3.273Zm0
                              7.942v6.602l5.747-3.285-5.747-3.317Z"
                              fill="#fff"/><path d="M15.586 15.256v-6.47l-5.622
                              3.225 5.622 3.245ZM4.307 23.252a13.809 13.809 0 0
                              0 4.362 4.39v-6.914l-4.362
                              2.524Zm11.279-.008v-6.52L9.95 19.985l5.636 3.258Z"
                              fill="#fff" fill-opacity=".8"/><path d="m9.49
                              27.23 5.707-3.263-5.707-3.3v6.563Z"
                              fill="#fff"/><path d="M22.54 27.265v-6.553l-5.699
                              3.259 5.7 3.294Zm5.58-4.773a13.697 13.697 0 0 0
                              1.612-5.895l-5.934 3.397 4.323 2.498Z" fill="#fff"
                              fill-opacity=".8"/><path d="m23.362 19.298
                              5.728-3.276-5.728-3.291v6.567Z" fill="#fff"/><path
                              d="M22.541 11.315V4.8l-5.673 3.253 5.673 3.262Zm0
                              7.955v-6.574l-5.685 3.292 5.685 3.281Z"
                              fill="#fff" fill-opacity=".8"/><path d="M9.49
                              12.684v6.622l5.728-3.316-5.728-3.306Z"
                              fill="#fff"/><path d="M15.586 2.25a13.69 13.69 0 0
                              0-6.037 1.595l6.037 3.463V2.25Z" fill="#fff"
                              fill-opacity=".8"/><path d="M9.49
                              4.756v6.583l5.732-3.288L9.49 4.756Z"
                              fill="#fff"/><path d="M8.669 4.356a13.83 13.83 0 0
                              0-4.362 4.39l4.362 2.518V4.356Z" fill="#fff"
                              fill-opacity=".8"/><path d="M22.504 3.88a13.695
                              13.695 0 0 0-6.099-1.63v5.123l6.1-3.493ZM2.25
                              16.483c.071 2.12.634 4.196 1.644
                              6.062l4.418-2.559-6.062-3.503Zm1.644-7.028a13.68
                              13.68 0 0 0-1.644 6.036l6.068-3.482-4.424-2.554Z"
                              fill="#fff"/><path d="M9.539 28.147a13.673 13.673
                              0 0 0 6.047 1.603v-5.062L9.54 28.147Z" fill="#fff"
                              fill-opacity=".8"/><path d="M27.697 8.768a13.83
                              13.83 0 0 0-4.335-4.383v6.889l4.335-2.506ZM23.362
                              27.62a13.851 13.851 0 0 0
                              4.351-4.417l-4.351-2.514v6.93Z" fill="#fff"/><path
                              d="M29.75 15.452a13.659 13.659 0 0
                              0-1.63-5.979l-4.381 2.53 6.011 3.45Z" fill="#fff"
                              fill-opacity=".8"/><path d="M16.405 29.75a13.673
                              13.673 0 0 0 6.036-1.595l-6.036-3.498v5.093Z"
                              fill="#fff"/><path d="M8.669 19.247v-6.494L3.03
                              15.986l5.639 3.261Z" fill="#fff"
                              fill-opacity=".8"/></svg>
                          svgColor:
                            type: string
                            description: SVG representation of the model in colored format.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgColor
                              json: svgColor
                            x-order: 6
                            default: >-
                              <svg xmlns="http://www.w3.org/2000/svg"
                              id="Layer_1" data-name="Layer 1" viewBox="0 0
                              134.95
                              135.02"><defs><style>.cls-1{fill:#00d3a9}.cls-2{fill:#00b39f}</style></defs><title>meshery-logo-light</title><polygon
                              points="69.49 31.82 69.49 64.07 97.44 47.89 69.49
                              31.82" class="cls-1"/><polygon points="69.49 70.81
                              69.49 103.22 97.7 87.09 69.49 70.81"
                              class="cls-1"/><polygon points="65.47 63.85 65.47
                              32.09 37.87 47.92 65.47 63.85"
                              class="cls-2"/><path
                              d="M10.1,103.1a67.79,67.79,0,0,0,21.41,21.55V90.71Z"
                              class="cls-2"/><polygon points="65.47 103.06 65.47
                              71.05 37.8 87.07 65.47 103.06"
                              class="cls-2"/><polygon points="35.54 122.63 63.56
                              106.61 35.54 90.41 35.54 122.63"
                              class="cls-1"/><polygon points="99.61 122.8 99.61
                              90.63 71.63 106.63 99.61 122.8"
                              class="cls-2"/><path
                              d="M127,99.37a67.22,67.22,0,0,0,7.91-28.94L105.78,87.11Z"
                              class="cls-2"/><polygon points="103.64 83.69
                              131.76 67.61 103.64 51.45 103.64 83.69"
                              class="cls-1"/><polygon points="99.61 44.5 99.61
                              12.52 71.76 28.49 99.61 44.5"
                              class="cls-2"/><polygon points="99.61 83.55 99.61
                              51.28 71.7 67.44 99.61 83.55"
                              class="cls-2"/><polygon points="67.48 135.02 67.49
                              135.02 67.48 135.02 67.48 135.02"
                              class="cls-2"/><polygon points="35.54 51.22 35.54
                              83.73 63.66 67.45 35.54 51.22"
                              class="cls-1"/><path
                              d="M65.47,0A67.2,67.2,0,0,0,35.83,7.83l29.64,17Z"
                              class="cls-2"/><polygon points="35.54 12.3 35.54
                              44.62 63.68 28.48 35.54 12.3" class="cls-1"/><path
                              d="M31.51,10.34A67.89,67.89,0,0,0,10.1,31.89L31.51,44.25Z"
                              class="cls-2"/><path
                              d="M99.43,8A67.23,67.23,0,0,0,69.49,0V25.15Z"
                              class="cls-1"/><path
                              d="M0,69.87A67.27,67.27,0,0,0,8.07,99.63L29.76,87.07Z"
                              class="cls-1"/><path
                              d="M8.07,35.37A67.16,67.16,0,0,0,0,65L29.79,47.91Z"
                              class="cls-1"/><path
                              d="M35.78,127.13A67.13,67.13,0,0,0,65.47,135V110.15Z"
                              class="cls-2"/><path
                              d="M124.92,32a67.9,67.9,0,0,0-21.28-21.52V44.3Z"
                              class="cls-1"/><path
                              d="M103.64,124.54A68,68,0,0,0,125,102.86L103.64,90.52Z"
                              class="cls-1"/><path
                              d="M135,64.81a67.06,67.06,0,0,0-8-29.35L105.49,47.88Z"
                              class="cls-2"/><path
                              d="M69.49,135a67.12,67.12,0,0,0,29.63-7.83L69.49,110Z"
                              class="cls-1"/><polygon points="31.51 83.44 31.51
                              51.56 3.83 67.43 31.51 83.44"
                              class="cls-2"/></svg>
                          svgComplete:
                            type: string
                            description: SVG representation of the complete model.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgComplete
                              json: svgComplete
                            x-order: 7
                          shape:
                            x-order: 8
                            type: string
                            description: >-
                              The shape of the node’s body. Note that each shape
                              fits within the specified width and height, and so
                              you may have to adjust width and height if you
                              desire an equilateral shape (i.e. width !== height
                              for several equilateral shapes)
                            default: circle
                            enum:
                              - circle
                              - ellipse
                              - triangle
                              - round-triangle
                              - rectangle
                              - round-rectangle
                              - bottom-round-rectangle
                              - cut-rectangle
                              - barrel
                              - rhomboid
                              - diamond
                              - round-diamond
                              - pentagon
                              - round-pentagon
                              - hexagon
                              - round-hexagon
                              - concave-hexagon
                              - heptagon
                              - round-heptagon
                              - octagon
                              - round-octagon
                              - star
                              - tag
                              - round-tag
                              - vee
                              - polygon
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                          json: metadata
                          yaml: metadata
                        x-order: 11
                        additionalProperties: true
                      model:
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        x-order: 12
                        type: object
                        description: >-
                          Registrant-defined data associated with the model.
                          Properties pertain to the software being managed (e.g.
                          Kubernetes v1.31).
                        required:
                          - version
                        properties:
                          version:
                            description: Version of the model as defined by the registrant.
                            allOf:
                              - type: string
                                minLength: 5
                                maxLength: 100
                                pattern: >-
                                  ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                description: >-
                                  A valid semantic version string between 5 and
                                  256 characters. The pattern allows for a
                                  major.minor.patch version followed by an
                                  optional pre-release tag like '-alpha' or
                                  '-beta.2' and an optional build metadata tag
                                  like '+build.1.
                                default: v0.0.1
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            x-order: 1
                      relationships:
                        type: array
                        x-go-type: interface{}
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: relationships
                          yaml: relationships
                      components:
                        type: array
                        x-go-type: interface{}
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: components
                          yaml: components
                      componentsCount:
                        type: integer
                        description: Number of components associated with the model.
                        x-order: 13
                        x-oapi-codegen-extra-tags:
                          json: components_count
                          yaml: components_count
                          gorm: '-'
                        default: 0
                      relationshipsCount:
                        type: integer
                        description: Number of relationships associated with the model.
                        x-order: 13
                        x-oapi-codegen-extra-tags:
                          gorm: '-'
                          json: relationships_count
                          yaml: relationships_count
                        default: 0
                    required:
                      - id
                      - schemaVersion
                      - displayName
                      - status
                      - subCategory
                      - model
                      - name
                      - description
                      - version
                      - registrant
                      - category
                      - categoryId
                      - registrantId
                      - relationshipsCount
                      - componentsCount
                      - components
                      - relationships
                  modelId:
                    description: >-
                      ModelId is the foreign key to the model to which the
                      component belongs.
                    x-oapi-codegen-extra-tags:
                      gorm: >-
                        index:idx_component_definition_dbs_model_id,column:model_id
                      yaml: '-'
                      json: '-'
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    default: 00000000-0000-0000-0000-000000000000
                  styles:
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                      yaml: styles
                      json: styles
                    x-go-type: core.ComponentStyles
                    x-go-type-import:
                      path: github.com/meshery/schemas/models/v1alpha1/core
                    x-order: 8
                    type: object
                    description: Visualization styles for a component
                    required:
                      - shape
                      - primaryColor
                      - svgColor
                      - svgWhite
                      - svgComplete
                    allOf:
                      - type: object
                        description: Common styles for all entities
                        additionalProperties: true
                        required:
                          - primaryColor
                          - svgColor
                          - svgWhite
                          - svgComplete
                        properties:
                          primaryColor:
                            type: string
                            description: >-
                              Primary color of the component used for UI
                              representation.
                          secondaryColor:
                            type: string
                            description: >-
                              Secondary color of the entity used for UI
                              representation.
                          svgWhite:
                            type: string
                            description: >-
                              White SVG of the entity used for UI representation
                              on dark background.
                          svgColor:
                            type: string
                            description: >-
                              Colored SVG of the entity used for UI
                              representation on light background.
                          svgComplete:
                            type: string
                            description: >-
                              Complete SVG of the entity used for UI
                              representation, often inclusive of background.
                          color:
                            type: string
                            description: >-
                              The color of the element's label. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          text-opacity:
                            type: number
                            description: >-
                              The opacity of the label text, including its
                              outline.
                            minimum: 0
                            maximum: 1
                          font-family:
                            type: string
                            description: >-
                              A comma-separated list of font names to use on the
                              label text.
                          font-size:
                            type: string
                            description: The size of the label text.
                          font-style:
                            type: string
                            description: A CSS font style to be applied to the label text.
                          font-weight:
                            type: string
                            description: A CSS font weight to be applied to the label text.
                          text-transform:
                            type: string
                            description: A transformation to apply to the label text
                            enum:
                              - none
                              - uppercase
                              - lowercase
                          opacity:
                            type: number
                            description: >-
                              The opacity of the element, ranging from 0 to 1.
                              Note that the opacity of a compound node parent
                              affects the effective opacity of its children.
                            minimum: 0
                            maximum: 1
                          z-index:
                            type: integer
                            description: >-
                              An integer value that affects the relative draw
                              order of elements. In general, an element with a
                              higher z-index will be drawn on top of an element
                              with a lower z-index. Note that edges are under
                              nodes despite z-index.
                          label:
                            type: string
                            description: >-
                              The text to display for an element's label. Can
                              give a path, e.g. data(id) will label with the
                              elements id
                          animation:
                            type: object
                            description: >-
                              The animation to apply to the element. example
                              ripple,bounce,etc
                      - type: object
                        properties:
                          shape:
                            type: string
                            description: >-
                              The shape of the node's body. Note that each shape
                              fits within the specified width and height, and so
                              you may have to adjust width and height if you
                              desire an equilateral shape (i.e. width !== height
                              for several equilateral shapes)
                            enum:
                              - ellipse
                              - triangle
                              - round-triangle
                              - rectangle
                              - round-rectangle
                              - bottom-round-rectangle
                              - cut-rectangle
                              - barrel
                              - rhomboid
                              - diamond
                              - round-diamond
                              - pentagon
                              - round-pentagon
                              - hexagon
                              - round-hexagon
                              - concave-hexagon
                              - heptagon
                              - round-heptagon
                              - octagon
                              - round-octagon
                              - star
                              - tag
                              - round-tag
                              - vee
                              - polygon
                          position:
                            type: object
                            additionalProperties: false
                            required:
                              - x
                              - 'y'
                            description: >-
                              The position of the node. If the position is set,
                              the node is drawn at that position in the given
                              dimensions. If the position is not set, the node
                              is drawn at a random position.
                            properties:
                              x:
                                type: number
                                description: The x-coordinate of the node.
                                x-go-type: float64
                              'y':
                                type: number
                                description: The y-coordinate of the node.
                                x-go-type: float64
                          body-text:
                            type: string
                            description: >-
                              The text to display for an element's body. Can
                              give a path, e.g. data(id) will label with the
                              elements id
                          body-text-wrap:
                            type: string
                            description: >-
                              How to wrap the text in the node. Can be 'none',
                              'wrap', or 'ellipsis'.
                          body-text-max-width:
                            type: string
                            description: The maximum width for wrapping text in the node.
                          body-text-opacity:
                            type: number
                            description: >-
                              The opacity of the node's body text, including its
                              outline.
                            minimum: 0
                            maximum: 1
                          body-text-background-color:
                            type: string
                            description: >-
                              The colour of the node's body text background.
                              Colours may be specified by name (e.g. red), hex
                              (e.g.
                          body-text-font-size:
                            type: number
                            description: The size of the node's body text.
                          body-text-color:
                            type: string
                            description: >-
                              The colour of the node's body text. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          body-text-font-weight:
                            type: string
                            description: >-
                              A CSS font weight to be applied to the node's body
                              text.
                          body-text-horizontal-align:
                            type: string
                            description: >-
                              A CSS horizontal alignment to be applied to the
                              node's body text.
                          body-text-decoration:
                            type: string
                            description: >-
                              A CSS text decoration to be applied to the node's
                              body text.
                          body-text-vertical-align:
                            type: string
                            description: >-
                              A CSS vertical alignment to be applied to the
                              node's body text.
                          width:
                            type: number
                            description: >-
                              The width of the node's body or the width of an
                              edge's line.
                          height:
                            type: number
                            description: The height of the node's body
                          background-image:
                            type: string
                            description: >-
                              The URL that points to the image to show in the
                              node.
                          background-color:
                            type: string
                            description: >-
                              The colour of the node's body. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          background-blacken:
                            type: number
                            description: >-
                              Blackens the node's body for values from 0 to 1;
                              whitens the node's body for values from 0 to -1.
                            maximum: 1
                            minimum: -1
                          background-opacity:
                            type: number
                            description: The opacity level of the node's background colour
                            maximum: 1
                            minimum: 0
                          background-position-x:
                            type: string
                            description: >-
                              The x position of the background image, measured
                              in percent (e.g. 50%) or pixels (e.g. 10px)
                          background-position-y:
                            type: string
                            description: >-
                              The y position of the background image, measured
                              in percent (e.g. 50%) or pixels (e.g. 10px)
                          background-offset-x:
                            type: string
                            description: >-
                              The x offset of the background image, measured in
                              percent (e.g. 50%) or pixels (e.g. 10px)
                          background-offset-y:
                            type: string
                            description: >-
                              The y offset of the background image, measured in
                              percent (e.g. 50%) or pixels (e.g. 10px)
                          background-fit:
                            type: string
                            description: >-
                              How the background image is fit to the node. Can
                              be 'none', 'contain', or 'cover'.
                          background-clip:
                            type: string
                            description: >-
                              How the background image is clipped to the node.
                              Can be 'none', 'node', or 'node-border'.
                          background-width-relative-to:
                            type: string
                            description: >-
                              How the background image's width is determined.
                              Can be 'none', 'inner', or 'outer'.
                          background-height-relative-to:
                            type: string
                            description: >-
                              How the background image's height is determined.
                              Can be 'none', 'inner', or 'outer'.
                          border-width:
                            type: number
                            description: The size of the node's border.
                            minimum: 0
                          border-style:
                            type: string
                            description: The style of the node's border
                            enum:
                              - solid
                              - dotted
                              - dashed
                              - double
                          border-color:
                            type: string
                            description: >-
                              The colour of the node's border. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          border-opacity:
                            type: number
                            description: The opacity of the node's border
                            minimum: 0
                            maximum: 1
                          padding:
                            type: number
                            description: >-
                              The amount of padding around all sides of the
                              node.
                            minimum: 0
                          text-halign:
                            type: string
                            description: The horizontal alignment of a node's label
                            enum:
                              - left
                              - center
                              - right
                          text-valign:
                            type: string
                            description: The vertical alignment of a node's label
                            enum:
                              - top
                              - center
                              - bottom
                          ghost:
                            type: string
                            description: >-
                              Whether to use the ghost effect, a semitransparent
                              duplicate of the element drawn at an offset.
                            default: 'no'
                            enum:
                              - 'yes'
                              - 'no'
                          active-bg-color:
                            type: string
                            description: >-
                              The colour of the indicator shown when the
                              background is grabbed by the user. Selector needs
                              to be *core*. Colours may be specified by name
                              (e.g. red), hex (e.g.
                          active-bg-opacity:
                            type: string
                            description: >-
                              The opacity of the active background indicator.
                              Selector needs to be *core*.
                          active-bg-size:
                            type: string
                            description: >-
                              The opacity of the active background indicator.
                              Selector needs to be *core*.
                          selection-box-color:
                            type: string
                            description: >-
                              The background colour of the selection box used
                              for drag selection. Selector needs to be *core*.
                              Colours may be specified by name (e.g. red), hex
                              (e.g.
                          selection-box-border-width:
                            type: number
                            description: >-
                              The size of the border on the selection box.
                              Selector needs to be *core*
                          selection-box-opacity:
                            type: number
                            description: >-
                              The opacity of the selection box. Selector needs
                              to be *core*
                            minimum: 0
                            maximum: 1
                          outside-texture-bg-color:
                            type: string
                            description: >-
                              The colour of the area outside the viewport
                              texture when initOptions.textureOnViewport ===
                              true. Selector needs to be *core*. Colours may be
                              specified by name (e.g. red), hex (e.g.
                          outside-texture-bg-opacity:
                            type: number
                            description: >-
                              The opacity of the area outside the viewport
                              texture. Selector needs to be *core*
                            minimum: 0
                            maximum: 1
                          shape-polygon-points:
                            type: string
                            description: >-
                              An array (or a space-separated string) of numbers
                              ranging on [-1, 1], representing alternating x and
                              y values (i.e. x1 y1 x2 y2, x3 y3 ...). This
                              represents the points in the polygon for the
                              node's shape. The bounding box of the node is
                              given by (-1, -1), (1, -1), (1, 1), (-1, 1). The
                              node's position is the origin (0, 0 )
                          menu-background-color:
                            type: string
                            description: >-
                              The colour of the background of the component
                              menu. Colours may be specified by name (e.g. red),
                              hex (e.g.
                          menu-background-opacity:
                            type: number
                            description: >-
                              The opacity of the background of the component
                              menu.
                            minimum: 0
                            maximum: 1
                          menu-forground-color:
                            type: string
                            description: >-
                              The colour of the text or icons in the component
                              menu. Colours may be specified by name (e.g. red),
                              hex (e.g.
                  capabilities:
                    x-order: 9
                    type: array
                    description: >-
                      Meshery manages components in accordance with their
                      specific capabilities. This field explicitly identifies
                      those capabilities largely by what actions a given
                      component supports; e.g. metric-scrape, sub-interface, and
                      so on. This field is extensible. ComponentDefinitions may
                      define a broad array of capabilities, which are in-turn
                      dynamically interpretted by Meshery for full lifecycle
                      management.
                    items:
                      x-go-type: capability.Capability
                      x-go-type-import:
                        path: github.com/meshery/schemas/models/v1alpha1/capability
                      $id: https://schemas.meshery.io/capability.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Meshery manages entities in accordance with their
                        specific capabilities. This field explicitly identifies
                        those capabilities largely by what actions a given
                        component supports; e.g. metric-scrape, sub-interface,
                        and so on. This field is extensible. Entities may define
                        a broad array of capabilities, which are in-turn
                        dynamically interpretted by Meshery for full lifecycle
                        management.
                      additionalProperties: false
                      type: object
                      required:
                        - description
                        - schemaVersion
                        - version
                        - displayName
                        - kind
                        - type
                        - subType
                        - entityState
                        - key
                        - status
                      x-oapi-codegen-extra-tags:
                        gorm: type:bytes;serializer:json
                      properties:
                        schemaVersion:
                          description: >-
                            Specifies the version of the schema to which the
                            capability definition conforms.
                          type: string
                          minLength: 2
                          maxLength: 100
                          pattern: >-
                            ^(([a-z.])+/?)*v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                          example:
                            - v1
                            - v1alpha1
                            - v2beta3
                            - v1.custom-suffix
                        version:
                          description: Version of the capability definition.
                          type: string
                          minLength: 5
                          maxLength: 100
                          pattern: >-
                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          default: v0.0.1
                        displayName:
                          description: Name of the capability in human-readible format.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        description:
                          type: string
                          description: >-
                            A written representation of the purpose and
                            characteristics of the capability.
                        kind:
                          description: Top-level categorization of the capability
                          additionalProperties: false
                          anyOf:
                            - const: action
                              description: >-
                                For capabilities related to executing actions on
                                entities. Example: initiate log streaming on a
                                Pod. Example: initiate deployment of a
                                component.
                            - const: mutate
                              description: >-
                                For capabilities related to mutating an entity.
                                Example: the ability to change the configuration
                                of a component.
                            - const: view
                              description: >-
                                For capabilities related to viewing an entity.
                                Example: the ability to view a components
                                configuration.
                            - const: interaction
                              description: >-
                                Catch all for capabilities related to
                                interaction with entities. Example: the ability
                                for a component to be dragged and dropped.
                                Example: supports event bubbling to parent
                                components. 
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        type:
                          description: >-
                            Classification of capabilities. Used to group
                            capabilities similar in nature.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        subType:
                          description: >-
                            Most granular unit of capability classification. The
                            combination of Kind, Type and SubType together
                            uniquely identify a Capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        key:
                          description: Key that backs the capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        entityState:
                          description: >-
                            State of the entity in which the capability is
                            applicable.
                          type: array
                          items:
                            type: string
                            enum:
                              - declaration
                              - instance
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description: >-
                              A string starting with an alphanumeric character.
                              Spaces and hyphens allowed.
                        status:
                          type: string
                          description: Status of the capability
                          default: enabled
                          enum:
                            - enabled
                            - disabled
                        metadata:
                          type: object
                          description: >-
                            Metadata contains additional information associated
                            with the capability. Extension point.
                          additionalProperties: true
                      default:
                        - description: Configure the visual styles for the component
                          displayName: Styling
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: ''
                          type: style
                          version: 0.7.0
                        - description: Change the shape of the component
                          displayName: Change Shape
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: shape
                          type: style
                          version: 0.7.0
                        - description: >-
                            Drag and Drop a component into a parent component in
                            graph view
                          displayName: Compound Drag And Drop
                          entityState:
                            - declaration
                          key: ''
                          kind: interaction
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: compoundDnd
                          type: graph
                          version: 0.7.0
                        - description: Add text to nodes body
                          displayName: Body Text
                          entityState:
                            - declaration
                          key: ''
                          kind: mutate
                          schemaVersion: capability.meshery.io/v1alpha1
                          status: enabled
                          subType: body-text
                          type: style
                          version: 0.7.0
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                      yaml: capabilities
                      json: capabilities
                    default:
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Performance Test
                        description: >-
                          Initiate a performance test. Meshery will execute the
                          load generation, collect metrics, and present the
                          results.
                        kind: action
                        type: operator
                        subType: perf-test
                        key: ''
                        entityState:
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Workload Configuration
                        description: Configure the workload specific setting of a component
                        kind: mutate
                        type: configuration
                        subType: config
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Labels and Annotations Configuration
                        description: 'Configure Labels And Annotations for  the component '
                        kind: mutate
                        type: configuration
                        subType: labels-and-annotations
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Relationships
                        description: View relationships for the component
                        kind: view
                        type: configuration
                        subType: relationship
                        key: ''
                        entityState:
                          - declaration
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Json Schema
                        description: 'View Component Definition '
                        kind: view
                        type: configuration
                        subType: definition
                        key: ''
                        entityState:
                          - declaration
                          - instance
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Styling
                        description: Configure the visual styles for the component
                        kind: mutate
                        type: style
                        subType: ''
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Change Shape
                        description: Change the shape of the component
                        kind: mutate
                        type: style
                        subType: shape
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                      - schemaVersion: capability.meshery.io/v1alpha1
                        version: 0.7.0
                        displayName: Compound Drag And Drop
                        description: >-
                          Drag and Drop a component into a parent component in
                          graph view
                        kind: interaction
                        type: graph
                        subType: compoundDnd
                        key: ''
                        entityState:
                          - declaration
                        status: enabled
                        metadata: null
                  status:
                    x-order: 10
                    type: string
                    description: >-
                      Status of component, including:

                      - duplicate: this component is a duplicate of another. The
                      component that is to be the canonical reference and that
                      is duplicated by other components should not be assigned
                      the 'duplicate' status.

                      - maintenance: model is unavailable for a period of time.

                      - enabled: model is available for use for all users of
                      this Meshery Server.

                      - ignored: model is unavailable for use for all users of
                      this Meshery Server.
                    default: enabled
                    enum:
                      - ignored
                      - enabled
                      - duplicate
                      - resolved
                      - open
                    x-oapi-codegen-extra-tags:
                      yaml: status
                      json: status
                  metadata:
                    x-order: 11
                    type: object
                    description: >-
                      Metadata contains additional information associated with
                      the component.
                    required:
                      - genealogy
                      - isAnnotation
                      - isNamespaced
                      - published
                      - instanceDetails
                      - configurationUISchema
                    properties:
                      genealogy:
                        x-order: 1
                        type: string
                        description: >-
                          Genealogy represents the various representational
                          states of the component.
                      isAnnotation:
                        x-order: 2
                        type: boolean
                        description: >-
                          Identifies whether the component is semantically
                          meaningful or not; identifies whether the component
                          should be treated as deployable entity or is for
                          purposes of logical representation.
                        default: false
                      isNamespaced:
                        x-order: 3
                        type: boolean
                        description: >-
                          Identifies whether the component is scoped to
                          namespace or clsuter wide.
                      published:
                        x-order: 4
                        type: boolean
                        description: >-
                          'published' controls whether the component should be
                          registered in Meshery Registry. When the same
                          'published' property in Models, is set to 'false', the
                          Model property takes precedence with all Entities in
                          the Model not being registered.
                      instanceDetails:
                        x-order: 5
                        type: object
                        description: >-
                          InstanceDetails contains information about the
                          instance of the component.
                      configurationUISchema:
                        x-order: 6
                        type: string
                        description: >-
                          Defines the UI schema for rendering the component's
                          configuration. For more details, visit:
                          https://rjsf-team.github.io/react-jsonschema-form/docs/api-reference/uiSchema/
                          .
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    additionalProperties: true
                  configuration:
                    x-order: 12
                    description: >-
                      The configuration of the component. The configuration is
                      based on the schema defined within the component
                      definition(component.schema).
                    type: object
                    $comment: >-
                      The configuration of the component. The configuration is
                      based on the schema defined within the component
                      definition(component.schema).
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                  component:
                    x-order: 13
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    x-go-type: Component
                    description: >-
                      data related to the third party capability that Component
                      Defintion wraps , this is herematicaly sealed an
                    type: object
                    properties:
                      version:
                        type: string
                        description: >-
                          Version of the component produced by the registrant.
                          Example: APIVersion of a Kubernetes Pod.
                        x-order: 1
                      kind:
                        type: string
                        description: >-
                          The unique identifier (name) assigned by the
                          registrant to this component. Example: A Kubernetes
                          Pod is of kind 'Pod'.
                        x-order: 2
                      schema:
                        type: string
                        description: >-
                          JSON schema of the object as defined by the
                          registrant.
                        x-order: 3
                    required:
                      - version
                      - kind
                      - schema
                required:
                  - id
                  - displayName
                  - description
                  - schemaVersion
                  - format
                  - version
                  - configuration
                  - metadata
                  - modelId
                  - model
                  - component
            preferences:
              type: object
              description: Design-level preferences
              x-order: 7
              properties:
                layers:
                  type: object
                  description: List of available layers
              required:
                - layers
            relationships:
              description: List of relationships between components
              type: array
              x-order: 8
              items:
                x-go-type: '*relationship.RelationshipDefinition'
                x-go-type-import:
                  path: github.com/meshery/schemas/models/v1alpha3/relationship
                $id: https://schemas.meshery.io/relationship.json
                $schema: http://json-schema.org/draft-07/schema#
                description: >-
                  Relationships define the nature of interaction between
                  interconnected components in Meshery. The combination of
                  relationship properties kind, type, and subtype characterize
                  various genealogical relations among and between components.
                  Relationships have selectors, selector sets, metadata, and
                  optional parameters. Learn more at
                  https://docs.meshery.io/concepts/logical/relationships.
                required:
                  - schemaVersion
                  - version
                  - model
                  - kind
                  - type
                  - subType
                additionalProperties: false
                type: object
                properties:
                  id:
                    description: >-
                      Uniquely identifies the entity (i.e. component) as defined
                      in a declaration (i.e. design).
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                    x-oapi-codegen-extra-tags:
                      yaml: id
                      json: id
                  schemaVersion:
                    description: >-
                      Specifies the version of the schema used for the
                      relationship definition.
                    type: string
                    minLength: 2
                    maxLength: 100
                    pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                    example:
                      - v1
                      - v1alpha1
                      - v2beta3
                      - v1.custom-suffix
                    x-oapi-codegen-extra-tags:
                      yaml: schemaVersion
                      json: schemaVersion
                    default: relationships.meshery.io/v1alpha3
                  version:
                    type: string
                    minLength: 5
                    maxLength: 100
                    pattern: >-
                      ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                    description: >-
                      A valid semantic version string between 5 and 256
                      characters. The pattern allows for a major.minor.patch
                      version followed by an optional pre-release tag like
                      '-alpha' or '-beta.2' and an optional build metadata tag
                      like '+build.1.
                    default: v0.0.1
                    x-oapi-codegen-extra-tags:
                      yaml: version
                      json: version
                  model:
                    description: Name of the model in which this relationship is packaged.
                    $id: https://schemas.meshery.io/model.json
                    $schema: http://json-schema.org/draft-07/schema#
                    additionalProperties: false
                    type: object
                    properties:
                      id:
                        description: >-
                          Uniquely identifies the entity (i.e. component) as
                          defined in a declaration (i.e. design).
                        type: string
                        format: uuid
                        x-go-type: uuid.UUID
                        x-go-type-import:
                          path: github.com/gofrs/uuid
                        x-oapi-codegen-extra-tags:
                          yaml: id
                          json: id
                      schemaVersion:
                        description: >-
                          Specifies the version of the schema used for the
                          definition.
                        x-oapi-codegen-extra-tags:
                          yaml: schemaVersion
                          json: schemaVersion
                        type: string
                        minLength: 2
                        maxLength: 100
                        pattern: ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                        example:
                          - v1
                          - v1alpha1
                          - v2beta3
                          - v1.custom-suffix
                      version:
                        description: Version of the model definition.
                        type: string
                        x-oapi-codegen-extra-tags:
                          yaml: version
                          json: version
                        minLength: 5
                        maxLength: 100
                        pattern: >-
                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                      name:
                        description: >-
                          The unique name for the model within the scope of a
                          registrant.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: name
                          json: name
                      displayName:
                        description: Human-readable name for the model.
                        minLength: 1
                        maxLength: 100
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                        x-oapi-codegen-extra-tags:
                          yaml: displayName
                          json: displayName
                      description:
                        type: string
                        description: Description of the model.
                        minLength: 1
                        maxLength: 1000
                        x-oapi-codegen-extra-tags:
                          yaml: description
                          json: description
                      status:
                        type: string
                        description: >-
                          Status of model, including:

                          - duplicate: this component is a duplicate of another.
                          The component that is to be the canonical reference
                          and that is duplicated by other components should not
                          be assigned the 'duplicate' status.

                          - maintenance: model is unavailable for a period of
                          time.

                          - enabled: model is available for use for all users of
                          this Meshery Server.

                          - ignored: model is unavailable for use for all users
                          of this Meshery Server.
                        enum:
                          - ignored
                          - enabled
                          - duplicate
                        x-oapi-codegen-extra-tags:
                          yaml: status
                          json: status
                      registrant:
                        x-oapi-codegen-extra-tags:
                          yaml: registrant
                          json: registrant
                          gorm: foreignKey:RegistrantId;references:Id
                        $id: https://schemas.meshery.io/component.json
                        $schema: http://json-schema.org/draft-07/schema#
                        description: >-
                          Meshery Connections are managed and unmanaged
                          resources that either through discovery or manual
                          entry are tracked by Meshery. Learn more at
                          https://docs.meshery.io/concepts/logical/connections
                        additionalProperties: false
                        type: object
                        required:
                          - kind
                          - type
                          - status
                        properties:
                          id:
                            description: ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                          name:
                            x-oapi-codegen-extra-tags:
                              db: name
                              yaml: name
                              json: name
                            type: string
                            description: Connection Name
                          credential_id:
                            x-go-name: CredentialId
                            x-oapi-codegen-extra-tags:
                              db: credential_id
                              yaml: credential_id
                              json: credential_id
                            description: Credential ID
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          type:
                            x-oapi-codegen-extra-tags:
                              db: type
                              yaml: type
                              json: type
                            type: string
                            description: Connection Type
                          sub_type:
                            x-oapi-codegen-extra-tags:
                              db: sub_type
                              yaml: sub_type
                              json: sub_type
                            type: string
                            description: Connection Subtype
                          kind:
                            x-oapi-codegen-extra-tags:
                              db: kind
                              yaml: kind
                              json: kind
                            type: string
                            description: Connection Kind
                          metadata:
                            x-oapi-codegen-extra-tags:
                              db: metadata
                              yaml: metadata
                              json: metadata
                            type: object
                          status:
                            x-oapi-codegen-extra-tags:
                              db: status
                              yaml: status
                              json: status
                            description: Connection Status
                            type: string
                            enum:
                              - discovered
                              - registered
                              - connected
                              - ignored
                              - maintenance
                              - disconnected
                              - deleted
                              - not found
                          user_id:
                            x-go-name: UserID
                            x-oapi-codegen-extra-tags:
                              yaml: user_id
                              json: user_id
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          created_at:
                            x-oapi-codegen-extra-tags:
                              yaml: created_at
                              json: created_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          updated_at:
                            x-oapi-codegen-extra-tags:
                              yaml: updated_at
                              json: updated_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                          deleted_at:
                            x-oapi-codegen-extra-tags:
                              yaml: deleted_at
                              json: deleted_at
                            type: string
                            format: date-time
                            x-go-type-skip-optional-pointer: true
                      category:
                        type: object
                        description: Category of the model.
                        properties:
                          id:
                            type: string
                            format: uuid
                            description: >-
                              A Universally Unique Identifier used to uniquely
                              identify entites in Meshery. The UUID core
                              defintion is used across different schemas.
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                            x-oapi-codegen-extra-tags:
                              yaml: id
                              json: id
                          name:
                            type: string
                            minLength: 1
                            maxLength: 100
                            x-oapi-codegen-extra-tags:
                              yaml: name
                              json: name
                          metadata:
                            type: object
                            x-oapi-codegen-extra-tags:
                              yaml: metadata
                              json: metadata
                        x-oapi-codegen-extra-tags:
                          yaml: category
                          json: category
                          gorm: foreignKey:CategoryId;references:Id
                      subCategory:
                        type: string
                        description: Sub-category of the model.
                        minLength: 1
                        maxLength: 100
                        x-oapi-codegen-extra-tags:
                          yaml: subCategory
                          json: subCategory
                      metadata:
                        type: object
                        description: >-
                          Metadata containing additional information associated
                          with the model.
                        properties:
                          capabilities:
                            type: array
                            description: Capabilities associated with the model
                            items:
                              $id: https://schemas.meshery.io/capability.json
                              $schema: http://json-schema.org/draft-07/schema#
                              description: >-
                                Meshery manages entities in accordance with
                                their specific capabilities. This field
                                explicitly identifies those capabilities largely
                                by what actions a given component supports; e.g.
                                metric-scrape, sub-interface, and so on. This
                                field is extensible. Entities may define a broad
                                array of capabilities, which are in-turn
                                dynamically interpretted by Meshery for full
                                lifecycle management.
                              additionalProperties: false
                              type: object
                              required:
                                - schemaVersion
                                - version
                                - displayName
                                - kind
                                - type
                                - entityState
                                - status
                              x-oapi-codegen-extra-tags:
                                gorm: type:bytes;serializer:json
                              properties:
                                schemaVersion:
                                  description: >-
                                    Specifies the version of the schema to which
                                    the capability definition conforms.
                                  type: string
                                  minLength: 2
                                  maxLength: 100
                                  pattern: >-
                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                  example:
                                    - v1
                                    - v1alpha1
                                    - v2beta3
                                    - v1.custom-suffix
                                  x-oapi-codegen-extra-tags:
                                    yaml: schemaVersion
                                    json: schemaVersion
                                version:
                                  description: Version of the capability definition.
                                  type: string
                                  minLength: 5
                                  maxLength: 100
                                  pattern: >-
                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                  x-oapi-codegen-extra-tags:
                                    yaml: version
                                    json: version
                                displayName:
                                  description: >-
                                    Name of the capability in human-readible
                                    format.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: displayName
                                    json: displayName
                                description:
                                  type: string
                                  description: >-
                                    A written representation of the purpose and
                                    characteristics of the capability.
                                  x-oapi-codegen-extra-tags:
                                    yaml: description
                                    json: description
                                kind:
                                  description: Top-level categorization of the capability
                                  additionalProperties: false
                                  anyOf:
                                    - const: action
                                      description: >-
                                        For capabilities related to executing
                                        actions on entities. Example: initiate
                                        log streaming on a Pod. Example:
                                        initiate deployment of a component.
                                    - const: mutate
                                      description: >-
                                        For capabilities related to mutating an
                                        entity. Example: the ability to change
                                        the configuration of a component.
                                    - const: view
                                      description: >-
                                        For capabilities related to viewing an
                                        entity. Example: the ability to view a
                                        components configuration.
                                    - const: interaction
                                      description: >-
                                        Catch all for capabilities related to
                                        interaction with entities. Example: the
                                        ability for a component to be dragged
                                        and dropped. Example: supports event
                                        bubbling to parent components. 
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: kind
                                    json: kind
                                type:
                                  description: >-
                                    Classification of capabilities. Used to
                                    group capabilities similar in nature.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: type
                                    json: type
                                subType:
                                  description: >-
                                    Most granular unit of capability
                                    classification. The combination of Kind,
                                    Type and SubType together uniquely identify
                                    a Relaationship.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  oneOf:
                                    - const: inventory
                                      description: >-
                                        A hierarchical inventory relationship in
                                        which the configuration of (parent)
                                        component is patched with the
                                        configuration of other (child)
                                        component. Eg: The configuration of the
                                        EnvoyFilter (parent) component is
                                        patched with the configuration as
                                        received from WASMFilter (child)
                                        component.
                                    - const: matchLabels
                                      description: >-
                                        Match label relationships offer a
                                        dynamic association between one or more
                                        components and are a flexible way to
                                        group and manage related components in
                                        Meshery.
                                    - const: permission
                                      description: >-
                                        A relationship that represents a set of
                                        security-centric bindings between
                                        components.
                                    - const: network
                                      description: >-
                                        A relationship that represents a line of
                                        communication between two or more
                                        components.
                                    - const: firewall
                                      description: >-
                                        A relationship that act as a
                                        network-based security boundary for
                                        ingress and egress traffic.
                                    - const: mount
                                      description: >-
                                        A relationship that represents volume
                                        mounts between components.
                                    - const: alias
                                      description: >-
                                        An alias for a field path in another
                                        component.
                                    - const: annotation
                                      description: >-
                                        A relationship that provide valuable
                                        context for users, controllers, and
                                        third-party tools within the Meshery
                                        ecosystem.
                                    - const: reference
                                      description: >-
                                        A reference relationship  is a
                                        declarative linkage where one resource
                                        identifies or depends on another
                                        resource by referencing its name, kind,
                                        API version, or some other property
                                  x-oapi-codegen-extra-tags:
                                    yaml: subType
                                    json: subType
                                key:
                                  description: Key that backs the capability.
                                  type: string
                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                  x-oapi-codegen-extra-tags:
                                    yaml: key
                                    json: key
                                entityState:
                                  description: >-
                                    State of the entity in which the capability
                                    is applicable.
                                  type: array
                                  items:
                                    type: string
                                    enum:
                                      - declaration
                                      - instance
                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                    description: >-
                                      A string starting with an alphanumeric
                                      character. Spaces and hyphens allowed.
                                    x-oapi-codegen-extra-tags:
                                      yaml: entityState
                                      json: entityState
                                status:
                                  type: string
                                  description: Status of the capability
                                  default: enabled
                                  enum:
                                    - enabled
                                    - disabled
                                  x-oapi-codegen-extra-tags:
                                    yaml: status
                                    json: status
                                metadata:
                                  type: object
                                  description: >-
                                    Metadata contains additional information
                                    associated with the capability. Extension
                                    point.
                                  additionalProperties: true
                                  x-oapi-codegen-extra-tags:
                                    yaml: metadata
                                    json: metadata
                          isAnnotation:
                            type: boolean
                            description: >-
                              Indicates whether the model and its entities
                              should be treated as deployable entities or as
                              logical representations.
                            x-oapi-codegen-extra-tags:
                              yaml: isAnnotation
                              json: isAnnotation
                          primaryColor:
                            type: string
                            description: Primary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            x-oapi-codegen-extra-tags:
                              yaml: primaryColor
                              json: primaryColor
                          secondaryColor:
                            type: string
                            description: Secondary color associated with the model.
                            minLength: 1
                            maxLength: 50
                            x-oapi-codegen-extra-tags:
                              yaml: secondaryColor
                              json: secondaryColor
                          svgWhite:
                            type: string
                            description: SVG representation of the model in white color.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgWhite
                              json: svgWhite
                          svgColor:
                            type: string
                            description: SVG representation of the model in colored format.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgColor
                              json: svgColor
                          svgComplete:
                            type: string
                            description: SVG representation of the complete model.
                            minLength: 1
                            x-oapi-codegen-extra-tags:
                              yaml: svgComplete
                              json: svgComplete
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                        additionalProperties: true
                      model:
                        type: object
                        description: >-
                          Registrant-defined data associated with the model.
                          Properties pertain to the software being managed (e.g.
                          Kubernetes v1.31)
                        required:
                          - version
                        properties:
                          version:
                            description: Version of the model as defined by the registrant.
                            x-oapi-codegen-extra-tags:
                              yaml: version
                              json: version
                            type: string
                            minLength: 5
                            maxLength: 100
                            pattern: >-
                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                        x-oapi-codegen-extra-tags:
                          gorm: type:bytes;serializer:json
                    required:
                      - name
                      - version
                      - registrant
                      - category
                  kind:
                    description: >-
                      Kind of the Relationship. Learn more about relationships -
                      https://docs.meshery.io/concepts/logical/relationships.
                    enum:
                      - hierarchical
                      - edge
                      - sibling
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: kind
                      json: kind
                  type:
                    description: >-
                      Classification of relationships. Used to group
                      relationships similar in nature.
                    x-go-name: RelationshipType
                    gorm: column:type
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: type
                      json: type
                  subType:
                    description: >-
                      Most granular unit of relationship classification. The
                      combination of Kind, Type and SubType together uniquely
                      identify a Relationship.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: subType
                      json: subType
                  status:
                    type: string
                    description: Status of the relationship.
                    default: enabled
                    enum:
                      - pending
                      - approved
                      - ignored
                      - enabled
                      - deleted
                    x-oapi-codegen-extra-tags:
                      yaml: status
                      json: status
                  evaluationQuery:
                    description: >-
                      Optional. Assigns the policy to be used for the evaluation
                      of the relationship. Deprecation Notice: In the future,
                      this property is either to be removed or to it is to be an
                      array of optional policy $refs.
                    type: string
                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                    x-oapi-codegen-extra-tags:
                      yaml: evaluationQuery
                      json: evaluationQuery
                  capabilities:
                    type: array
                    description: Capabilities associated with the relationship.
                    items:
                      $id: https://schemas.meshery.io/capability.json
                      $schema: http://json-schema.org/draft-07/schema#
                      description: >-
                        Meshery manages entities in accordance with their
                        specific capabilities. This field explicitly identifies
                        those capabilities largely by what actions a given
                        component supports; e.g. metric-scrape, sub-interface,
                        and so on. This field is extensible. Entities may define
                        a broad array of capabilities, which are in-turn
                        dynamically interpretted by Meshery for full lifecycle
                        management.
                      additionalProperties: false
                      type: object
                      required:
                        - schemaVersion
                        - version
                        - displayName
                        - kind
                        - type
                        - entityState
                        - status
                      x-oapi-codegen-extra-tags:
                        gorm: type:bytes;serializer:json
                      properties:
                        schemaVersion:
                          description: >-
                            Specifies the version of the schema to which the
                            capability definition conforms.
                          type: string
                          minLength: 2
                          maxLength: 100
                          pattern: >-
                            ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                          example:
                            - v1
                            - v1alpha1
                            - v2beta3
                            - v1.custom-suffix
                          x-oapi-codegen-extra-tags:
                            yaml: schemaVersion
                            json: schemaVersion
                        version:
                          description: Version of the capability definition.
                          type: string
                          minLength: 5
                          maxLength: 100
                          pattern: >-
                            ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                          x-oapi-codegen-extra-tags:
                            yaml: version
                            json: version
                        displayName:
                          description: Name of the capability in human-readible format.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: displayName
                            json: displayName
                        description:
                          type: string
                          description: >-
                            A written representation of the purpose and
                            characteristics of the capability.
                          x-oapi-codegen-extra-tags:
                            yaml: description
                            json: description
                        kind:
                          description: Top-level categorization of the capability
                          additionalProperties: false
                          anyOf:
                            - const: action
                              description: >-
                                For capabilities related to executing actions on
                                entities. Example: initiate log streaming on a
                                Pod. Example: initiate deployment of a
                                component.
                            - const: mutate
                              description: >-
                                For capabilities related to mutating an entity.
                                Example: the ability to change the configuration
                                of a component.
                            - const: view
                              description: >-
                                For capabilities related to viewing an entity.
                                Example: the ability to view a components
                                configuration.
                            - const: interaction
                              description: >-
                                Catch all for capabilities related to
                                interaction with entities. Example: the ability
                                for a component to be dragged and dropped.
                                Example: supports event bubbling to parent
                                components. 
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: kind
                            json: kind
                        type:
                          description: >-
                            Classification of capabilities. Used to group
                            capabilities similar in nature.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: type
                            json: type
                        subType:
                          description: >-
                            Most granular unit of capability classification. The
                            combination of Kind, Type and SubType together
                            uniquely identify a Capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: subType
                            json: subType
                        key:
                          description: Key that backs the capability.
                          type: string
                          pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                          x-oapi-codegen-extra-tags:
                            yaml: key
                            json: key
                        entityState:
                          description: >-
                            State of the entity in which the capability is
                            applicable.
                          type: array
                          items:
                            type: string
                            enum:
                              - declaration
                              - instance
                            pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                            description: >-
                              A string starting with an alphanumeric character.
                              Spaces and hyphens allowed.
                            x-oapi-codegen-extra-tags:
                              yaml: entityState
                              json: entityState
                        status:
                          type: string
                          description: Status of the capability
                          default: enabled
                          enum:
                            - enabled
                            - disabled
                          x-oapi-codegen-extra-tags:
                            yaml: status
                            json: status
                        metadata:
                          type: object
                          description: >-
                            Metadata contains additional information associated
                            with the capability. Extension point.
                          additionalProperties: true
                          x-oapi-codegen-extra-tags:
                            yaml: metadata
                            json: metadata
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                  metadata:
                    type: object
                    description: >-
                      Metadata contains additional information associated with
                      the Relationship.
                    additionalProperties: true
                    x-oapi-codegen-extra-tags:
                      gorm: foreignKey:ModelId;references:Id
                    properties:
                      description:
                        description: >-
                          Characterization of the meaning of the relationship
                          and its relevance to both Meshery and entities under
                          management.
                        type: string
                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                        x-oapi-codegen-extra-tags:
                          yaml: description
                          json: description
                      isAnnotation:
                        type: boolean
                        description: >-
                          Indicates whether the relationship should be treated
                          as a logical representation only
                        x-oapi-codegen-extra-tags:
                          yaml: isAnnotation
                          json: isAnnotation
                        default: false
                      styles:
                        anyOf:
                          - type: object
                            description: Visualization styles for a relationship
                            allOf:
                              - type: object
                                description: Common styles for all entities
                                additionalProperties: false
                                required:
                                  - primaryColor
                                  - svgColor
                                  - svgWhite
                                properties:
                                  primaryColor:
                                    type: string
                                    description: >-
                                      Primary color of the component used for UI
                                      representation.
                                  secondaryColor:
                                    type: string
                                    description: >-
                                      Secondary color of the entity used for UI
                                      representation.
                                  svgWhite:
                                    type: string
                                    description: >-
                                      White SVG of the entity used for UI
                                      representation on dark background.
                                  svgColor:
                                    type: string
                                    description: >-
                                      Colored SVG of the entity used for UI
                                      representation on light background.
                                  svgComplete:
                                    type: string
                                    description: >-
                                      Complete SVG of the entity used for UI
                                      representation, often inclusive of
                                      background.
                                  color:
                                    type: string
                                    description: >-
                                      The color of the element's label. Colours
                                      may be specified by name (e.g. red), hex
                                      (e.g. #ff0000 or #f00), RGB (e.g. rgb(255,
                                      0, 0)), or HSL (e.g. hsl(0, 100%, 50%)).
                                  text-opacity:
                                    type: number
                                    description: >-
                                      The opacity of the label text, including
                                      its outline.
                                    minimum: 0
                                    maximum: 1
                                  font-family:
                                    type: string
                                    description: >-
                                      A comma-separated list of font names to
                                      use on the label text.
                                  font-size:
                                    type: string
                                    description: The size of the label text.
                                  font-style:
                                    type: string
                                    description: >-
                                      A CSS font style to be applied to the
                                      label text.
                                  font-weight:
                                    type: string
                                    description: >-
                                      A CSS font weight to be applied to the
                                      label text.
                                  text-transform:
                                    type: string
                                    description: >-
                                      A transformation to apply to the label
                                      text
                                    enum:
                                      - none
                                      - uppercase
                                      - lowercase
                                  opacity:
                                    type: number
                                    description: >-
                                      The opacity of the element, ranging from 0
                                      to 1. Note that the opacity of a compound
                                      node parent affects the effective opacity
                                      of its children.See
                                      https://js.cytoscape.org/#style/visibility
                                    minimum: 0
                                    maximum: 1
                                  z-index:
                                    type: integer
                                    description: >-
                                      An integer value that affects the relative
                                      draw order of elements. In general, an
                                      element with a higher z-index will be
                                      drawn on top of an element with a lower
                                      z-index. Note that edges are under nodes
                                      despite z-index.
                                  label:
                                    type: string
                                    description: >-
                                      The text to display for an element’s
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                              - properties:
                                  edge-animation:
                                    type: string
                                    description: >-
                                      The animation to use for the edge. Can be
                                      like 'marching-ants' , 'blink' ,
                                      'moving-gradient',etc .
                                  curve-style:
                                    type: string
                                    description: >-
                                      The curving method used to separate two or
                                      more edges between two nodes; may be
                                      haystack (very fast, bundled straight
                                      edges for which loops and compounds are
                                      unsupported), straight (straight edges
                                      with all arrows supported), bezier
                                      (bundled curved edges), unbundled-bezier
                                      (curved edges for use with manual control
                                      points), segments (a series of straight
                                      lines), taxi (right-angled lines,
                                      hierarchically bundled). Note that
                                      haystack edges work best with ellipse,
                                      rectangle, or similar nodes. Smaller node
                                      shapes, like triangle, will not be as
                                      aesthetically pleasing. Also note that
                                      edge endpoint arrows are unsupported for
                                      haystack edges.
                                    default: straight
                                    enum:
                                      - straight
                                      - haystack
                                      - bezier
                                      - unbundled-bezier
                                      - segments
                                      - taxi
                                  line-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s line. Colours may
                                      be specified by name (e.g. red), hex (e.g.
                                      #ff0000 or #f00), RGB (e.g. rgb(255, 0,
                                      0)), or HSL (e.g. hsl(0, 100%, 50%)).
                                  line-style:
                                    type: string
                                    description: The style of the edge’s line.
                                    enum:
                                      - solid
                                      - dotted
                                      - dashed
                                  line-cap:
                                    type: string
                                    description: >-
                                      The cap style of the edge’s line; may be
                                      butt (default), round, or square. The cap
                                      may or may not be visible, depending on
                                      the shape of the node and the relative
                                      size of the node and edge. Caps other than
                                      butt extend beyond the specified endpoint
                                      of the edge.
                                    enum:
                                      - butt
                                      - round
                                      - square
                                    default: butt
                                  line-opacity:
                                    type: number
                                    minimum: 0
                                    maximum: 1
                                    default: 1
                                    description: >-
                                      The opacity of the edge’s line and arrow.
                                      Useful if you wish to have a separate
                                      opacity for the edge label versus the edge
                                      line. Note that the opacity value of the
                                      edge element affects the effective opacity
                                      of its line and label subcomponents.
                                  target-arrow-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s source arrow.
                                      Colours may be specified by name (e.g.
                                      red), hex (e.g. #ff0000 or #f00), RGB
                                      (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                      100%, 50%)).
                                  target-arrow-shape:
                                    type: string
                                    description: The shape of the edge’s source arrow
                                    enum:
                                      - triangle
                                      - triangle-tee
                                      - circle-triangle
                                      - triangle-cross
                                      - triangle-backcurve
                                      - vee
                                      - tee
                                      - square
                                      - circle
                                      - diamond
                                      - chevron
                                      - none
                                  target-arrow-fill:
                                    type: string
                                    description: The fill state of the edge’s source arrow
                                    enum:
                                      - filled
                                      - hollow
                                  mid-target-arrow-color:
                                    type: string
                                    description: >-
                                      The colour of the edge’s source arrow.
                                      Colours may be specified by name (e.g.
                                      red), hex (e.g. #ff0000 or #f00), RGB
                                      (e.g. rgb(255, 0, 0)), or HSL (e.g. hsl(0,
                                      100%, 50%)).
                                  mid-target-arrow-shape:
                                    type: string
                                    description: The shape of the edge’s source arrow
                                    enum:
                                      - triangle
                                      - triangle-tee
                                      - circle-triangle
                                      - triangle-cross
                                      - triangle-backcurve
                                      - vee
                                      - tee
                                      - square
                                      - circle
                                      - diamond
                                      - chevron
                                      - none
                                  mid-target-arrow-fill:
                                    type: string
                                    description: The fill state of the edge’s source arrow
                                    enum:
                                      - filled
                                      - hollow
                                  arrow-scale:
                                    type: number
                                    description: Scaling for the arrow size.
                                    minimum: 0
                                  source-label:
                                    type: string
                                    description: >-
                                      The text to display for an edge’s source
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                                  target-label:
                                    type: string
                                    description: >-
                                      The text to display for an edge’s target
                                      label. Can give a path, e.g. data(id) will
                                      label with the elements id
                          - type: object
                            description: Common styles for all entities
                            additionalProperties: false
                            required:
                              - primaryColor
                              - svgColor
                              - svgWhite
                            properties:
                              primaryColor:
                                type: string
                                description: >-
                                  Primary color of the component used for UI
                                  representation.
                              secondaryColor:
                                type: string
                                description: >-
                                  Secondary color of the entity used for UI
                                  representation.
                              svgWhite:
                                type: string
                                description: >-
                                  White SVG of the entity used for UI
                                  representation on dark background.
                              svgColor:
                                type: string
                                description: >-
                                  Colored SVG of the entity used for UI
                                  representation on light background.
                              svgComplete:
                                type: string
                                description: >-
                                  Complete SVG of the entity used for UI
                                  representation, often inclusive of background.
                              color:
                                type: string
                                description: >-
                                  The color of the element's label. Colours may
                                  be specified by name (e.g. red), hex (e.g.
                                  #ff0000 or #f00), RGB (e.g. rgb(255, 0, 0)),
                                  or HSL (e.g. hsl(0, 100%, 50%)).
                              text-opacity:
                                type: number
                                description: >-
                                  The opacity of the label text, including its
                                  outline.
                                minimum: 0
                                maximum: 1
                              font-family:
                                type: string
                                description: >-
                                  A comma-separated list of font names to use on
                                  the label text.
                              font-size:
                                type: string
                                description: The size of the label text.
                              font-style:
                                type: string
                                description: >-
                                  A CSS font style to be applied to the label
                                  text.
                              font-weight:
                                type: string
                                description: >-
                                  A CSS font weight to be applied to the label
                                  text.
                              text-transform:
                                type: string
                                description: A transformation to apply to the label text
                                enum:
                                  - none
                                  - uppercase
                                  - lowercase
                              opacity:
                                type: number
                                description: >-
                                  The opacity of the element, ranging from 0 to
                                  1. Note that the opacity of a compound node
                                  parent affects the effective opacity of its
                                  children.See
                                  https://js.cytoscape.org/#style/visibility
                                minimum: 0
                                maximum: 1
                              z-index:
                                type: integer
                                description: >-
                                  An integer value that affects the relative
                                  draw order of elements. In general, an element
                                  with a higher z-index will be drawn on top of
                                  an element with a lower z-index. Note that
                                  edges are under nodes despite z-index.
                              label:
                                type: string
                                description: >-
                                  The text to display for an element’s label.
                                  Can give a path, e.g. data(id) will label with
                                  the elements id
                            $comment: Extension point for additional styles
                        x-oapi-codegen-extra-tags:
                          yaml: styles
                          json: styles
                  selectors:
                    x-oapi-codegen-extra-tags:
                      gorm: type:bytes;serializer:json
                    type: array
                    description: >-
                      Selectors are organized as an array, with each item
                      containing a distinct set of selectors that share a common
                      functionality. This structure allows for flexibility in
                      defining relationships, even when different components are
                      involved.
                    $comment: >-
                      Sets of selectors are interpreted as a logical UNION.
                      Properties within a selector `allow` and `deny` are
                      interpreted as logical AND, while 'from' and 'to'
                      represents a UNION of set of combinatorial pairs.
                    items:
                      type: object
                      description: >-
                        Optional selectors used to match Components. Absence of
                        a selector means that it is applied to all Components.
                      additionalProperties: false
                      required:
                        - allow
                      properties:
                        deny:
                          description: >-
                            Optional selectors used to define relationships
                            which should not be created / is restricted.
                          type: object
                          required:
                            - to
                            - from
                          properties:
                            from:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                            to:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                        allow:
                          description: >-
                            Selectors used to define relationships which are
                            allowed.
                          type: object
                          required:
                            - to
                            - from
                          properties:
                            from:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  match_strategy_matrix:
                                    description: >-
                                      Strategy criterion for determing how to
                                      match the values at mutator/mutated paths
                                    type: array
                                    items:
                                      type: array
                                      items:
                                        type: string
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
                            to:
                              description: >-
                                Describes the component(s) which are involved in
                                the relationship along with a set of actions to
                                perform upon selection match.
                              type: array
                              items:
                                type: object
                                additionalProperties: false
                                properties:
                                  kind:
                                    type: string
                                    x-oapi-codegen-extra-tags:
                                      yaml: kind
                                      json: kind
                                  model:
                                    description: >-
                                      Name of the model implicated by this
                                      selector. Learn more at
                                      https://docs.meshery.io/concepts/models
                                    $id: https://schemas.meshery.io/model.json
                                    $schema: http://json-schema.org/draft-07/schema#
                                    additionalProperties: false
                                    type: object
                                    properties:
                                      id:
                                        description: >-
                                          Uniquely identifies the entity (i.e.
                                          component) as defined in a declaration
                                          (i.e. design).
                                        type: string
                                        format: uuid
                                        x-go-type: uuid.UUID
                                        x-go-type-import:
                                          path: github.com/gofrs/uuid
                                        x-oapi-codegen-extra-tags:
                                          yaml: id
                                          json: id
                                      schemaVersion:
                                        description: >-
                                          Specifies the version of the schema used
                                          for the definition.
                                        x-oapi-codegen-extra-tags:
                                          yaml: schemaVersion
                                          json: schemaVersion
                                        type: string
                                        minLength: 2
                                        maxLength: 100
                                        pattern: >-
                                          ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                        example:
                                          - v1
                                          - v1alpha1
                                          - v2beta3
                                          - v1.custom-suffix
                                      version:
                                        description: Version of the model definition.
                                        type: string
                                        x-oapi-codegen-extra-tags:
                                          yaml: version
                                          json: version
                                        minLength: 5
                                        maxLength: 100
                                        pattern: >-
                                          ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                      name:
                                        description: >-
                                          The unique name for the model within the
                                          scope of a registrant.
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                        x-oapi-codegen-extra-tags:
                                          yaml: name
                                          json: name
                                      displayName:
                                        description: Human-readable name for the model.
                                        minLength: 1
                                        maxLength: 100
                                        type: string
                                        pattern: ^[a-zA-Z_][a-zA-Z0-9_]*$
                                        x-oapi-codegen-extra-tags:
                                          yaml: displayName
                                          json: displayName
                                      description:
                                        type: string
                                        description: Description of the model.
                                        minLength: 1
                                        maxLength: 1000
                                        x-oapi-codegen-extra-tags:
                                          yaml: description
                                          json: description
                                      status:
                                        type: string
                                        description: >-
                                          Status of model, including:

                                          - duplicate: this component is a
                                          duplicate of another. The component that
                                          is to be the canonical reference and
                                          that is duplicated by other components
                                          should not be assigned the 'duplicate'
                                          status.

                                          - maintenance: model is unavailable for
                                          a period of time.

                                          - enabled: model is available for use
                                          for all users of this Meshery Server.

                                          - ignored: model is unavailable for use
                                          for all users of this Meshery Server.
                                        enum:
                                          - ignored
                                          - enabled
                                          - duplicate
                                        x-oapi-codegen-extra-tags:
                                          yaml: status
                                          json: status
                                      registrant:
                                        x-oapi-codegen-extra-tags:
                                          yaml: registrant
                                          json: registrant
                                          gorm: foreignKey:RegistrantId;references:Id
                                        $id: >-
                                          https://schemas.meshery.io/component.json
                                        $schema: http://json-schema.org/draft-07/schema#
                                        description: >-
                                          Meshery Connections are managed and
                                          unmanaged resources that either through
                                          discovery or manual entry are tracked by
                                          Meshery. Learn more at
                                          https://docs.meshery.io/concepts/logical/connections
                                        additionalProperties: false
                                        type: object
                                        required:
                                          - kind
                                          - type
                                          - status
                                        properties:
                                          id:
                                            description: ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            x-oapi-codegen-extra-tags:
                                              db: name
                                              yaml: name
                                              json: name
                                            type: string
                                            description: Connection Name
                                          credential_id:
                                            x-go-name: CredentialId
                                            x-oapi-codegen-extra-tags:
                                              db: credential_id
                                              yaml: credential_id
                                              json: credential_id
                                            description: Credential ID
                                            type: string
                                            format: uuid
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          type:
                                            x-oapi-codegen-extra-tags:
                                              db: type
                                              yaml: type
                                              json: type
                                            type: string
                                            description: Connection Type
                                          sub_type:
                                            x-oapi-codegen-extra-tags:
                                              db: sub_type
                                              yaml: sub_type
                                              json: sub_type
                                            type: string
                                            description: Connection Subtype
                                          kind:
                                            x-oapi-codegen-extra-tags:
                                              db: kind
                                              yaml: kind
                                              json: kind
                                            type: string
                                            description: Connection Kind
                                          metadata:
                                            x-oapi-codegen-extra-tags:
                                              db: metadata
                                              yaml: metadata
                                              json: metadata
                                            type: object
                                          status:
                                            x-oapi-codegen-extra-tags:
                                              db: status
                                              yaml: status
                                              json: status
                                            description: Connection Status
                                            type: string
                                            enum:
                                              - discovered
                                              - registered
                                              - connected
                                              - ignored
                                              - maintenance
                                              - disconnected
                                              - deleted
                                              - not found
                                          user_id:
                                            x-go-name: UserID
                                            x-oapi-codegen-extra-tags:
                                              yaml: user_id
                                              json: user_id
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                          created_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: created_at
                                              json: created_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          updated_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: updated_at
                                              json: updated_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                          deleted_at:
                                            x-oapi-codegen-extra-tags:
                                              yaml: deleted_at
                                              json: deleted_at
                                            type: string
                                            format: date-time
                                            x-go-type-skip-optional-pointer: true
                                      category:
                                        type: object
                                        description: Category of the model.
                                        properties:
                                          id:
                                            type: string
                                            format: uuid
                                            description: >-
                                              A Universally Unique Identifier used to
                                              uniquely identify entites in Meshery.
                                              The UUID core defintion is used across
                                              different schemas.
                                            x-go-type: uuid.UUID
                                            x-go-type-import:
                                              path: github.com/gofrs/uuid
                                            x-oapi-codegen-extra-tags:
                                              yaml: id
                                              json: id
                                          name:
                                            type: string
                                            minLength: 1
                                            maxLength: 100
                                            x-oapi-codegen-extra-tags:
                                              yaml: name
                                              json: name
                                          metadata:
                                            type: object
                                            x-oapi-codegen-extra-tags:
                                              yaml: metadata
                                              json: metadata
                                        x-oapi-codegen-extra-tags:
                                          yaml: category
                                          json: category
                                          gorm: foreignKey:CategoryId;references:Id
                                      subCategory:
                                        type: string
                                        description: Sub-category of the model.
                                        minLength: 1
                                        maxLength: 100
                                        x-oapi-codegen-extra-tags:
                                          yaml: subCategory
                                          json: subCategory
                                      metadata:
                                        type: object
                                        description: >-
                                          Metadata containing additional
                                          information associated with the model.
                                        properties:
                                          capabilities:
                                            type: array
                                            description: Capabilities associated with the model
                                            items:
                                              $id: >-
                                                https://schemas.meshery.io/capability.json
                                              $schema: http://json-schema.org/draft-07/schema#
                                              description: >-
                                                Meshery manages entities in accordance
                                                with their specific capabilities. This
                                                field explicitly identifies those
                                                capabilities largely by what actions a
                                                given component supports; e.g.
                                                metric-scrape, sub-interface, and so on.
                                                This field is extensible. Entities may
                                                define a broad array of capabilities,
                                                which are in-turn dynamically
                                                interpretted by Meshery for full
                                                lifecycle management.
                                              additionalProperties: false
                                              type: object
                                              required:
                                                - schemaVersion
                                                - version
                                                - displayName
                                                - kind
                                                - type
                                                - entityState
                                                - status
                                              x-oapi-codegen-extra-tags:
                                                gorm: type:bytes;serializer:json
                                              properties:
                                                schemaVersion:
                                                  description: >-
                                                    Specifies the version of the schema to
                                                    which the capability definition
                                                    conforms.
                                                  type: string
                                                  minLength: 2
                                                  maxLength: 100
                                                  pattern: >-
                                                    ([a-z.])*(?!^/)v(alpha|beta|[0-9]+)([.-]*[a-z0-9]+)*$
                                                  example:
                                                    - v1
                                                    - v1alpha1
                                                    - v2beta3
                                                    - v1.custom-suffix
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: schemaVersion
                                                    json: schemaVersion
                                                version:
                                                  description: Version of the capability definition.
                                                  type: string
                                                  minLength: 5
                                                  maxLength: 100
                                                  pattern: >-
                                                    ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: version
                                                    json: version
                                                displayName:
                                                  description: >-
                                                    Name of the capability in human-readible
                                                    format.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: displayName
                                                    json: displayName
                                                description:
                                                  type: string
                                                  description: >-
                                                    A written representation of the purpose
                                                    and characteristics of the capability.
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: description
                                                    json: description
                                                kind:
                                                  description: >-
                                                    Top-level categorization of the
                                                    capability
                                                  additionalProperties: false
                                                  anyOf:
                                                    - const: action
                                                      description: >-
                                                        For capabilities related to executing
                                                        actions on entities. Example: initiate
                                                        log streaming on a Pod. Example:
                                                        initiate deployment of a component.
                                                    - const: mutate
                                                      description: >-
                                                        For capabilities related to mutating an
                                                        entity. Example: the ability to change
                                                        the configuration of a component.
                                                    - const: view
                                                      description: >-
                                                        For capabilities related to viewing an
                                                        entity. Example: the ability to view a
                                                        components configuration.
                                                    - const: interaction
                                                      description: >-
                                                        Catch all for capabilities related to
                                                        interaction with entities. Example: the
                                                        ability for a component to be dragged
                                                        and dropped. Example: supports event
                                                        bubbling to parent components. 
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: kind
                                                    json: kind
                                                type:
                                                  description: >-
                                                    Classification of capabilities. Used to
                                                    group capabilities similar in nature.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: type
                                                    json: type
                                                subType:
                                                  description: >-
                                                    Most granular unit of capability
                                                    classification. The combination of Kind,
                                                    Type and SubType together uniquely
                                                    identify a Capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: subType
                                                    json: subType
                                                key:
                                                  description: Key that backs the capability.
                                                  type: string
                                                  pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: key
                                                    json: key
                                                entityState:
                                                  description: >-
                                                    State of the entity in which the
                                                    capability is applicable.
                                                  type: array
                                                  items:
                                                    type: string
                                                    enum:
                                                      - declaration
                                                      - instance
                                                    pattern: ^[a-zA-Z_][a-zA-Z0-9_-]*[a-zA-Z0-9_]$
                                                    description: >-
                                                      A string starting with an alphanumeric
                                                      character. Spaces and hyphens allowed.
                                                    x-oapi-codegen-extra-tags:
                                                      yaml: entityState
                                                      json: entityState
                                                status:
                                                  type: string
                                                  description: Status of the capability
                                                  default: enabled
                                                  enum:
                                                    - enabled
                                                    - disabled
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: status
                                                    json: status
                                                metadata:
                                                  type: object
                                                  description: >-
                                                    Metadata contains additional information
                                                    associated with the capability.
                                                    Extension point.
                                                  additionalProperties: true
                                                  x-oapi-codegen-extra-tags:
                                                    yaml: metadata
                                                    json: metadata
                                          isAnnotation:
                                            type: boolean
                                            description: >-
                                              Indicates whether the model and its
                                              entities should be treated as deployable
                                              entities or as logical representations.
                                            x-oapi-codegen-extra-tags:
                                              yaml: isAnnotation
                                              json: isAnnotation
                                          primaryColor:
                                            type: string
                                            description: Primary color associated with the model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: primaryColor
                                              json: primaryColor
                                          secondaryColor:
                                            type: string
                                            description: >-
                                              Secondary color associated with the
                                              model.
                                            minLength: 1
                                            maxLength: 50
                                            x-oapi-codegen-extra-tags:
                                              yaml: secondaryColor
                                              json: secondaryColor
                                          svgWhite:
                                            type: string
                                            description: >-
                                              SVG representation of the model in white
                                              color.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgWhite
                                              json: svgWhite
                                          svgColor:
                                            type: string
                                            description: >-
                                              SVG representation of the model in
                                              colored format.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgColor
                                              json: svgColor
                                          svgComplete:
                                            type: string
                                            description: >-
                                              SVG representation of the complete
                                              model.
                                            minLength: 1
                                            x-oapi-codegen-extra-tags:
                                              yaml: svgComplete
                                              json: svgComplete
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                        additionalProperties: true
                                      model:
                                        type: object
                                        description: >-
                                          Registrant-defined data associated with
                                          the model. Properties pertain to the
                                          software being managed (e.g. Kubernetes
                                          v1.31)
                                        required:
                                          - version
                                        properties:
                                          version:
                                            description: >-
                                              Version of the model as defined by the
                                              registrant.
                                            x-oapi-codegen-extra-tags:
                                              yaml: version
                                              json: version
                                            type: string
                                            minLength: 5
                                            maxLength: 100
                                            pattern: >-
                                              ^[a-z0-9]+.[0-9]+.[0-9]+(-[0-9A-Za-z-]+(.[0-9A-Za-z-]+)*)?(\+[0-9A-Za-z-]+(\.[0-9A-Za-z-]+)*)?$
                                        x-oapi-codegen-extra-tags:
                                          gorm: type:bytes;serializer:json
                                    required:
                                      - name
                                      - version
                                      - registrant
                                      - category
                                  id:
                                    type: string
                                    format: uuid
                                    description: >-
                                      A Universally Unique Identifier used to
                                      uniquely identify entites in Meshery. The
                                      UUID core defintion is used across
                                      different schemas.
                                    x-go-type: uuid.UUID
                                    x-go-type-import:
                                      path: github.com/gofrs/uuid
                                    x-oapi-codegen-extra-tags:
                                      yaml: id
                                      json: id
                                  match:
                                    type: object
                                    additionalProperties: false
                                    oneOf:
                                      - type: array
                                        items:
                                          type: array
                                          items:
                                            type: string
                                      - properties:
                                          from:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                          to:
                                            $comment: >-
                                              Type is array so that mutliple bindings
                                              can be supported between 2 nodes
                                            type: array
                                            items:
                                              type: object
                                              allOf:
                                                - properties:
                                                    kind:
                                                      type: string
                                                    id:
                                                      type: string
                                                      format: uuid
                                                      description: >-
                                                        A Universally Unique Identifier used to
                                                        uniquely identify entites in Meshery.
                                                        The UUID core defintion is used across
                                                        different schemas.
                                                      x-go-type: uuid.UUID
                                                      x-go-type-import:
                                                        path: github.com/gofrs/uuid
                                                      x-oapi-codegen-extra-tags:
                                                        yaml: id
                                                        json: id
                                                - oneOf:
                                                    - properties:
                                                        mutatorRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              The sequence of mutatorRef and
                                                              mutatedRef must match. eg: mutatorRef:
                                                              [[config, url], [config, name]],
                                                              mutatedRef: [[configPatch, value],
                                                              [name]]. The value [config, url] will be
                                                              patched at [configPatch, value].
                                                              Similarly [config,name] will be patched
                                                              at [name].
                                                          description: >-
                                                            JSON ref to value from where patch
                                                            should be applied.
                                                    - properties:
                                                        mutatedRef:
                                                          type: array
                                                          items:
                                                            type: array
                                                            items:
                                                              type: string
                                                            description: >-
                                                              JSONPath
                                                              (https://en.wikipedia.org/wiki/JSONPath)
                                                              to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: match
                                      json: match
                                  patch:
                                    allOf:
                                      - properties:
                                          patchStrategy:
                                            description: >-
                                              patchStrategy allows you to make
                                              specific changes to a resource using a
                                              standard JSON Patch format (RFC 6902). 


                                              add: Inserts a value into an array or
                                              adds a member to an object.

                                              replace: Replaces a value.

                                              merge: Combines the values of the target
                                              location with the values from the patch.
                                              If the target location doesn't exist, it
                                              is created.

                                              strategic:specific to Kubernetes and
                                              understands the structure of Kubernetes
                                              objects. It can handle complex changes
                                              like updating lists and maps, as well as
                                              preserving default values. However, it's
                                              not supported for custom resources. For
                                              custom resources, only JSON Patch and
                                              Merge Patch are typically supported.

                                              remove: Removes a value.

                                              copy: Copies a value from one location
                                              to another.

                                              move: Moves a value from one location to
                                              another.

                                              test: Tests that a value at the target
                                              location is equal to a specified value.
                                            $comment: >-
                                              Array Indexing: When working with
                                              arrays, be aware that Kubernetes uses
                                              zero-based indexing in JSON patch paths.

                                              Merge Patch vs. JSON Patch: Merge
                                              patches are less flexible than JSON
                                              patches and do not support all the same
                                              operations.

                                              Strategic Merge Patch: For some
                                              Kubernetes resources, you can also use
                                              the strategic type for a strategic merge
                                              patch, which understands the structure
                                              of Kubernetes objects and can handle
                                              complex operations.
                                            type: string
                                            enum:
                                              - merge
                                              - strategic
                                              - add
                                              - remove
                                              - copy
                                              - move
                                              - test
                                            default: copy
                                      - oneOf:
                                          - properties:
                                              mutatorRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    The sequence of mutatorRef and
                                                    mutatedRef must match. eg: mutatorRef:
                                                    [[config, url], [config, name]],
                                                    mutatedRef: [[configPatch, value],
                                                    [name]]. The value [config, url] will be
                                                    patched at [configPatch, value].
                                                    Similarly [config,name] will be patched
                                                    at [name].
                                                description: >-
                                                  JSON ref to value from where patch
                                                  should be applied.
                                          - properties:
                                              mutatedRef:
                                                type: array
                                                items:
                                                  type: array
                                                  items:
                                                    type: string
                                                  description: >-
                                                    JSONPath
                                                    (https://en.wikipedia.org/wiki/JSONPath)
                                                    to property to be patched.
                                    x-oapi-codegen-extra-tags:
                                      yaml: patch
                                      json: patch
                                description: >-
                                  Optional fields that are a part of the `from`
                                  selector. Absence of a field has an implied *
                                  meaning.
          required:
            - id
            - name
            - schemaVersion
            - version
            - components
            - relationships
        evaluationHash:
          type: string
          description: >-
            Hash of the input parameters and configuration used for this
            evaluation. Useful for identifying duplicate evaluations or caching
            results.
          example: a1b2c3d4e5f6g7h8i9j0
        timestamp:
          type: string
          format: date-time
          description: ISO 8601 formatted timestamp of when the evaluation was completed.
        actions:
          type: array
          item:
            type: object
            required:
              - op
              - value
            properties:
              op:
                type: string
                enum:
                  - update_component
                  - update_component_configuration
                  - add_component
                  - delete_component
                  - add_relationship
                  - update_relationship
                  - delete_relationship
              value:
                type: object
    evaluation_Action:
      type: object
      required:
        - op
        - value
      properties:
        op:
          type: string
          enum:
            - update_component
            - update_component_configuration
            - add_component
            - delete_component
            - add_relationship
            - update_relationship
            - delete_relationship
        value:
          type: object
    evaluation_UpdateComponentOp:
      type: object
      properties:
        op:
          type: string
          enum:
            - update_component
        value:
          type: object
          required:
            - id
            - path
            - value
          properties:
            id:
              type: string
            path:
              type: array
              items:
                type: string
            value: {}
            mode:
              type: string
              enum:
                - replace
                - merge
              default: replace
    evaluation_UpdateComponentConfigurationOp:
      type: object
      properties:
        op:
          type: string
          enum:
            - update_component_configuration
        value:
          type: object
          required:
            - id
            - path
            - value
          properties:
            id:
              type: string
            path:
              type: array
              items:
                type: string
            value: {}
            mode:
              type: string
              enum:
                - replace
                - merge
              default: replace
    evaluation_DeleteComponentOp:
      type: object
      properties:
        op:
          type: string
          enum:
            - delete_component
        value:
          type: object
          required:
            - id
          properties:
            id:
              type: string
    evaluation_AddComponentOp:
      type: object
      properties:
        op:
          type: string
          enum:
            - add_component
        value:
          type: object
          required:
            - item
          properties:
            item:
              type: object
              additionalProperties: true
    evaluation_UpdateRelationshipOp:
      type: object
      properties:
        op:
          type: string
          enum:
            - update_relationship
        value:
          type: object
          required:
            - id
            - path
            - value
          properties:
            id:
              type: string
            path:
              type: array
              items:
                type: string
            value: {}
    evaluation_DeleteRelationshipOp:
      type: object
      properties:
        op:
          type: string
          enum:
            - delete_relationship
        value:
          type: object
          required:
            - id
          properties:
            id:
              type: string
    evaluation_AddRelationshipOp:
      type: object
      properties:
        op:
          type: string
          enum:
            - add_relationship
        value:
          type: object
          required:
            - item
          properties:
            item:
              type: object
              additionalProperties: true
    evaluation_ComponentDeclaration:
      type: object
      additionalProperties: true
    evaluation_RelationshipDeclaration:
      type: object
      additionalProperties: true
    Preference_Schema_Preference:
      type: object
      required:
        - anonymousUsageStats
        - anonymousPerfResults
        - updatedAt
        - dashboardPreferences
        - selectedOrganizationID
        - selectedWorkspaceForOrganizations
        - usersExtensionPreferences
        - RemoteProviderPreferences
      properties:
        meshAdapters:
          type: array
          items:
            x-go-type: Adapter
            type: object
            description: Placeholder for Adapter struct definition.
        grafana:
          x-go-type: Grafana
          type: object
          properties:
            grafanaURL:
              type: string
            grafanaAPIKey:
              type: string
            selectedBoardsConfigs:
              type: array
              items:
                type: object
                properties:
                  board:
                    type: object
                    description: >-
                      Placeholder for GrafanaBoard definition (define fields as
                      needed)
                  panels:
                    type: array
                    items:
                      type: object
                      description: >-
                        Grafana panel structure imported from
                        github.com/grafana-tools/sdk
                  templateVars:
                    type: array
                    items:
                      type: string
        prometheus:
          x-go-type: Prometheus
          type: object
          properties:
            prometheusURL:
              type: string
            selectedPrometheusBoardsConfigs:
              type: array
              items:
                type: object
                properties:
                  board:
                    type: object
                    description: >-
                      Placeholder for GrafanaBoard definition (define fields as
                      needed)
                  panels:
                    type: array
                    items:
                      type: object
                      description: >-
                        Grafana panel structure imported from
                        github.com/grafana-tools/sdk
                  templateVars:
                    type: array
                    items:
                      type: string
        loadTestPrefs:
          x-go-type: LoadTestPreferences
          type: object
          properties:
            c:
              type: integer
              description: Concurrent requests
            qps:
              type: integer
              description: Queries per second
            t:
              type: string
              description: Duration
            gen:
              type: string
              description: Load generator
        anonymousUsageStats:
          type: boolean
        anonymousPerfResults:
          type: boolean
        updated_at:
          type: string
          format: date-time
        dashboardPreferences:
          type: object
          additionalProperties: true
        selectedOrganizationID:
          type: string
        selectedWorkspaceForOrganizations:
          type: object
          additionalProperties:
            type: string
        usersExtensionPreferences:
          type: object
          additionalProperties: true
        remoteProviderPreferences:
          type: object
          additionalProperties: true
    Preference_Schema_Adapter:
      type: object
      description: Placeholder for Adapter struct definition.
    Preference_Schema_Grafana:
      type: object
      properties:
        grafanaURL:
          type: string
        grafanaAPIKey:
          type: string
        selectedBoardsConfigs:
          type: array
          items:
            type: object
            properties:
              board:
                type: object
                description: >-
                  Placeholder for GrafanaBoard definition (define fields as
                  needed)
              panels:
                type: array
                items:
                  type: object
                  description: >-
                    Grafana panel structure imported from
                    github.com/grafana-tools/sdk
              templateVars:
                type: array
                items:
                  type: string
    Preference_Schema_SelectedGrafanaConfig:
      type: object
      properties:
        board:
          type: object
          description: Placeholder for GrafanaBoard definition (define fields as needed)
        panels:
          type: array
          items:
            type: object
            description: Grafana panel structure imported from github.com/grafana-tools/sdk
        templateVars:
          type: array
          items:
            type: string
    Preference_Schema_GrafanaBoard:
      type: object
      description: Placeholder for GrafanaBoard definition (define fields as needed)
    Preference_Schema_Panel:
      type: object
      description: Grafana panel structure imported from github.com/grafana-tools/sdk
    Preference_Schema_Prometheus:
      type: object
      properties:
        prometheusURL:
          type: string
        selectedPrometheusBoardsConfigs:
          type: array
          items:
            type: object
            properties:
              board:
                type: object
                description: >-
                  Placeholder for GrafanaBoard definition (define fields as
                  needed)
              panels:
                type: array
                items:
                  type: object
                  description: >-
                    Grafana panel structure imported from
                    github.com/grafana-tools/sdk
              templateVars:
                type: array
                items:
                  type: string
    Preference_Schema_LoadTestPreferences:
      type: object
      properties:
        c:
          type: integer
          description: Concurrent requests
        qps:
          type: integer
          description: Queries per second
        t:
          type: string
          description: Duration
        gen:
          type: string
          description: Load generator
    Academy_API_RegisterToAcademyContentRequest:
      type: object
      required:
        - content_id
        - user_id
      properties:
        content_id:
          type: string
          description: ID of the academy content to register for
        content_type:
          type: string
          enum:
            - learning-path
            - challenge
            - certification
    Academy_API_ContentType:
      type: string
      enum:
        - learning-path
        - challenge
        - certification
    Academy_API_Visibility:
      type: string
      enum:
        - public
        - private
    Academy_API_Level:
      type: string
      enum:
        - beginner
        - intermediate
        - advanced
    Academy_API_Status:
      type: string
      enum:
        - ready
        - archived
        - not_ready
    Academy_API_AcademyCirricula:
      type: object
      properties:
        id:
          type: string
          description: Id of the cirricula
          example: 923458-3490394-934893
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            db: id
            json: id
            yaml: id
        type:
          x-go-type: ContentType
          x-oapi-codegen-extra-tags:
            db: type
          type: string
          enum:
            - learning-path
            - challenge
            - certification
        orgId:
          type: string
          description: Organization ID that owns this learning path
          example: layer5
          x-oapi-codegen-extra-tags:
            db: org_id
            json: org_id
            yaml: org_id
        visibility:
          description: Visibility of the cirricula
          x-go-type: Visibility
          x-oapi-codegen-extra-tags:
            db: visibility
            json: visibility
            yaml: visibility
          type: string
          enum:
            - public
            - private
        status:
          example: ready
          description: Status of the cirricula
          x-go-type: Status
          x-oapi-codegen-extra-tags:
            db: status
            json: status
            yaml: status
          type: string
          enum:
            - ready
            - archived
            - not_ready
        slug:
          type: string
          description: slug of the cirricula
          example: intro-kubernetes-course
        level:
          description: Level of the cirricula
          x-go-type: Level
          x-oapi-codegen-extra-tags:
            db: level
            json: level
            yaml: level
          type: string
          enum:
            - beginner
            - intermediate
            - advanced
        createdAt:
          description: When the cirricula item was created
          x-oapi-codegen-extra-tags:
            db: created_at
            json: created_at
            yaml: created_at
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        updatedAt:
          description: When the cirricula was last updated
          x-go-type: core.Time
          x-oapi-codegen-extra-tags:
            db: updated_at
            json: updated_at
            yaml: updated_at
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deletedAt:
          x-go-type: core.NullTime
          x-oapi-codegen-extra-tags:
            db: deleted_at
            json: deleted_at
            yaml: deleted_at
          description: Timestamp when the resource was deleted.
          type: string
          format: date-time
          x-go-name: DeletedAt
          x-go-type-skip-optional-pointer: true
        metadata:
          type: object
          description: Additional metadata about the cirricula
          additionalProperties: true
          x-go-type: core.Map
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            db: metadata
            json: metadata
            yaml: metadata
          oneOf:
            - x-go-type: CurriculaMetadata
              type: object
              properties:
                title:
                  type: string
                  description: Title of the learning path
                  example: Mastering Kubernetes for Engineers
                description:
                  type: string
                  description: Description of the learning path
                  example: >-
                    Learn how to configure your Kubernetes clusters and manage
                    the lifecycle of your workloads
                banner:
                  type: string
                  format: uri
                  nullable: true
                  description: >-
                    Filename of the banner image, which should be placed in the
                    same directory as the _index.md file
                  example: kubernetes-icon.svg
                permalink:
                  type: string
                  format: uri
                  description: Canonical URL for the learning path
                  example: >-
                    http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
                badge:
                  x-go-type: Badge
                  type: object
                  required:
                    - label
                    - title
                    - description
                    - png
                    - svg
                  properties:
                    label:
                      type: string
                      description: unique identifier for the badge ( auto generated )
                      example: Kubernetes-Expert
                    title:
                      type: string
                      description: Title of the badge
                      example: Kubernetes Expert
                    description:
                      type: string
                      description: Description of the badge
                      example: Awarded for mastering Kubernetes concepts and practices
                    png:
                      type: string
                      format: uri
                      description: URL to the badge image
                      example: http://localhost:9876/badges/kubernetes-expert.png
                    svg:
                      type: string
                      format: uri
                      description: URL to the badge SVG image
                      example: http://localhost:9876/badges/kubernetes-expert.svg
                certificate:
                  x-go-type: Certificate
                  type: object
                  required:
                    - id
                    - org_id
                    - title
                    - description
                    - issuing_authorities
                    - issued_date
                    - recipient_id
                    - recipient_name
                  properties:
                    id:
                      type: string
                      description: Unique identifier for the certificate
                      example: 1234567890abcdef
                      x-go-name: ID
                    org_id:
                      description: UUID of the organization that issued the certificate
                      type: string
                      format: uuid
                      x-go-type: uuid.UUID
                      x-go-type-import:
                        path: github.com/gofrs/uuid
                    recipient_id:
                      type: string
                      description: ID of the recipient (user) who received the certificate
                      example: 1234567890abcdef
                    recipient_name:
                      type: string
                      description: >-
                        Name of the recipient (user) who received the
                        certificate
                      example: John Doe
                    title:
                      type: string
                      description: Title of the certificate
                      example: Kubernetes Expert Certification
                    description:
                      type: string
                      description: Description of the certificate
                      example: >-
                        Awarded for successfully completing the Kubernetes
                        Expert course
                    issuing_authorities:
                      type: array
                      items:
                        x-go-type: CertificateIssuingAuthority
                        type: object
                        required:
                          - name
                          - url
                        properties:
                          name:
                            type: string
                            description: Name of the issuing authority
                            example: Cloud Native Foundation
                          role:
                            type: string
                            description: Role of the issuing authority
                            example: COO
                          signature_url:
                            type: string
                            format: uri
                            description: >-
                              URL to the signature image of the issuing
                              authority should be a publicly accessible URL and
                              transparent PNG or SVG format
                            example: >-
                              http://localhost:9876/signatures/cloud-native-foundation.png
                      description: List of issuing authorities for the certificate
                    issued_date:
                      type: string
                      format: date-time
                      description: Date when the certificate was issued
                      example: '2023-10-01T12:00:00Z'
                    expiration_date:
                      type: string
                      format: date-time
                      description: Date when the certificate expires (optional)
                      example: '2025-10-01T12:00:00Z'
                children:
                  type: array
                  description: List of children items in the top-level curricula
                  items:
                    x-go-type: ChildNode
                    type: object
                    properties:
                      id:
                        type: string
                        description: Unique identifier for the course
                        example: 1234567890abcdef
                        x-go-name: ID
                        x-oapi-codegen-extra-tags:
                          db: id
                          json: id
                          yaml: id
                      title:
                        type: string
                        description: Title of the course
                        example: Kubernetes Basics
                      permalink:
                        type: string
                        format: uri
                        description: URL to the course content
                        example: >-
                          http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
                      description:
                        type: string
                        description: Course description
                        example: Learn the basics of Kubernetes
                      weight:
                        type: number
                        description: >-
                          A numeric value to determine the display order. A
                          smaller number appears first. If not specified, items
                          will be sorted alphabetically by title.
                        example: eg 1 , 2
                      banner:
                        type: string
                        format: uri
                        nullable: true
                        description: >-
                          Filename of the banner image, which should be placed
                          in the same directory as the _index.md file
                        example: kubernetes-icon.svg
                      type:
                        x-go-type: ContentType
                        description: >-
                          Type of the content (e.g., learning-path, challenge,
                          certification)
                        type: string
                        enum:
                          - learning-path
                          - challenge
                          - certification
                      children:
                        type: array
                        description: List of child nodes (sub-courses or modules)
                        items:
                          type: object
                          x-go-type: ChildNode
                    required:
                      - title
                      - description
                      - id
                      - permalink
              required:
                - title
                - description
                - permalink
      required:
        - id
        - type
        - orgId
        - visibility
        - status
        - slug
        - createdAt
        - updatedAt
        - deletedAt
        - metadata
        - level
    Academy_API_AcademyCurriculaWithMetrics:
      allOf:
        - type: object
          properties:
            id:
              type: string
              description: Id of the cirricula
              example: 923458-3490394-934893
              x-go-name: ID
              x-oapi-codegen-extra-tags:
                db: id
                json: id
                yaml: id
            type:
              x-go-type: ContentType
              x-oapi-codegen-extra-tags:
                db: type
              type: string
              enum:
                - learning-path
                - challenge
                - certification
            orgId:
              type: string
              description: Organization ID that owns this learning path
              example: layer5
              x-oapi-codegen-extra-tags:
                db: org_id
                json: org_id
                yaml: org_id
            visibility:
              description: Visibility of the cirricula
              x-go-type: Visibility
              x-oapi-codegen-extra-tags:
                db: visibility
                json: visibility
                yaml: visibility
              type: string
              enum:
                - public
                - private
            status:
              example: ready
              description: Status of the cirricula
              x-go-type: Status
              x-oapi-codegen-extra-tags:
                db: status
                json: status
                yaml: status
              type: string
              enum:
                - ready
                - archived
                - not_ready
            slug:
              type: string
              description: slug of the cirricula
              example: intro-kubernetes-course
            level:
              description: Level of the cirricula
              x-go-type: Level
              x-oapi-codegen-extra-tags:
                db: level
                json: level
                yaml: level
              type: string
              enum:
                - beginner
                - intermediate
                - advanced
            createdAt:
              description: When the cirricula item was created
              x-oapi-codegen-extra-tags:
                db: created_at
                json: created_at
                yaml: created_at
              type: string
              format: date-time
              x-go-type-skip-optional-pointer: true
            updatedAt:
              description: When the cirricula was last updated
              x-go-type: core.Time
              x-oapi-codegen-extra-tags:
                db: updated_at
                json: updated_at
                yaml: updated_at
              type: string
              format: date-time
              x-go-type-skip-optional-pointer: true
            deletedAt:
              x-go-type: core.NullTime
              x-oapi-codegen-extra-tags:
                db: deleted_at
                json: deleted_at
                yaml: deleted_at
              description: Timestamp when the resource was deleted.
              type: string
              format: date-time
              x-go-name: DeletedAt
              x-go-type-skip-optional-pointer: true
            metadata:
              type: object
              description: Additional metadata about the cirricula
              additionalProperties: true
              x-go-type: core.Map
              x-go-type-skip-optional-pointer: true
              x-oapi-codegen-extra-tags:
                db: metadata
                json: metadata
                yaml: metadata
              oneOf:
                - x-go-type: CurriculaMetadata
                  type: object
                  properties:
                    title:
                      type: string
                      description: Title of the learning path
                      example: Mastering Kubernetes for Engineers
                    description:
                      type: string
                      description: Description of the learning path
                      example: >-
                        Learn how to configure your Kubernetes clusters and
                        manage the lifecycle of your workloads
                    banner:
                      type: string
                      format: uri
                      nullable: true
                      description: >-
                        Filename of the banner image, which should be placed in
                        the same directory as the _index.md file
                      example: kubernetes-icon.svg
                    permalink:
                      type: string
                      format: uri
                      description: Canonical URL for the learning path
                      example: >-
                        http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
                    badge:
                      x-go-type: Badge
                      type: object
                      required:
                        - label
                        - title
                        - description
                        - png
                        - svg
                      properties:
                        label:
                          type: string
                          description: unique identifier for the badge ( auto generated )
                          example: Kubernetes-Expert
                        title:
                          type: string
                          description: Title of the badge
                          example: Kubernetes Expert
                        description:
                          type: string
                          description: Description of the badge
                          example: >-
                            Awarded for mastering Kubernetes concepts and
                            practices
                        png:
                          type: string
                          format: uri
                          description: URL to the badge image
                          example: http://localhost:9876/badges/kubernetes-expert.png
                        svg:
                          type: string
                          format: uri
                          description: URL to the badge SVG image
                          example: http://localhost:9876/badges/kubernetes-expert.svg
                    certificate:
                      x-go-type: Certificate
                      type: object
                      required:
                        - id
                        - org_id
                        - title
                        - description
                        - issuing_authorities
                        - issued_date
                        - recipient_id
                        - recipient_name
                      properties:
                        id:
                          type: string
                          description: Unique identifier for the certificate
                          example: 1234567890abcdef
                          x-go-name: ID
                        org_id:
                          description: UUID of the organization that issued the certificate
                          type: string
                          format: uuid
                          x-go-type: uuid.UUID
                          x-go-type-import:
                            path: github.com/gofrs/uuid
                        recipient_id:
                          type: string
                          description: >-
                            ID of the recipient (user) who received the
                            certificate
                          example: 1234567890abcdef
                        recipient_name:
                          type: string
                          description: >-
                            Name of the recipient (user) who received the
                            certificate
                          example: John Doe
                        title:
                          type: string
                          description: Title of the certificate
                          example: Kubernetes Expert Certification
                        description:
                          type: string
                          description: Description of the certificate
                          example: >-
                            Awarded for successfully completing the Kubernetes
                            Expert course
                        issuing_authorities:
                          type: array
                          items:
                            x-go-type: CertificateIssuingAuthority
                            type: object
                            required:
                              - name
                              - url
                            properties:
                              name:
                                type: string
                                description: Name of the issuing authority
                                example: Cloud Native Foundation
                              role:
                                type: string
                                description: Role of the issuing authority
                                example: COO
                              signature_url:
                                type: string
                                format: uri
                                description: >-
                                  URL to the signature image of the issuing
                                  authority should be a publicly accessible URL
                                  and transparent PNG or SVG format
                                example: >-
                                  http://localhost:9876/signatures/cloud-native-foundation.png
                          description: List of issuing authorities for the certificate
                        issued_date:
                          type: string
                          format: date-time
                          description: Date when the certificate was issued
                          example: '2023-10-01T12:00:00Z'
                        expiration_date:
                          type: string
                          format: date-time
                          description: Date when the certificate expires (optional)
                          example: '2025-10-01T12:00:00Z'
                    children:
                      type: array
                      description: List of children items in the top-level curricula
                      items:
                        x-go-type: ChildNode
                        type: object
                        properties:
                          id:
                            type: string
                            description: Unique identifier for the course
                            example: 1234567890abcdef
                            x-go-name: ID
                            x-oapi-codegen-extra-tags:
                              db: id
                              json: id
                              yaml: id
                          title:
                            type: string
                            description: Title of the course
                            example: Kubernetes Basics
                          permalink:
                            type: string
                            format: uri
                            description: URL to the course content
                            example: >-
                              http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
                          description:
                            type: string
                            description: Course description
                            example: Learn the basics of Kubernetes
                          weight:
                            type: number
                            description: >-
                              A numeric value to determine the display order. A
                              smaller number appears first. If not specified,
                              items will be sorted alphabetically by title.
                            example: eg 1 , 2
                          banner:
                            type: string
                            format: uri
                            nullable: true
                            description: >-
                              Filename of the banner image, which should be
                              placed in the same directory as the _index.md file
                            example: kubernetes-icon.svg
                          type:
                            x-go-type: ContentType
                            description: >-
                              Type of the content (e.g., learning-path,
                              challenge, certification)
                            type: string
                            enum:
                              - learning-path
                              - challenge
                              - certification
                          children:
                            type: array
                            description: List of child nodes (sub-courses or modules)
                            items:
                              type: object
                              x-go-type: ChildNode
                        required:
                          - title
                          - description
                          - id
                          - permalink
                  required:
                    - title
                    - description
                    - permalink
          required:
            - id
            - type
            - orgId
            - visibility
            - status
            - slug
            - createdAt
            - updatedAt
            - deletedAt
            - metadata
            - level
        - type: object
          required:
            - RegistrationCount
          properties:
            RegistrationCount:
              type: number
              x-oapi-codegen-extra-tags:
                db: registration_count,omitempty
                json: registration_count,omitempty
                yaml: registration_count,omitempty
    Academy_API_AcademyCirriculaListResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of cirricula
          example: 7
        data:
          type: array
          items:
            x-go-type: AcademyCirricula
            type: object
            properties:
              id:
                type: string
                description: Id of the cirricula
                example: 923458-3490394-934893
                x-go-name: ID
                x-oapi-codegen-extra-tags:
                  db: id
                  json: id
                  yaml: id
              type:
                x-go-type: ContentType
                x-oapi-codegen-extra-tags:
                  db: type
                type: string
                enum:
                  - learning-path
                  - challenge
                  - certification
              orgId:
                type: string
                description: Organization ID that owns this learning path
                example: layer5
                x-oapi-codegen-extra-tags:
                  db: org_id
                  json: org_id
                  yaml: org_id
              visibility:
                description: Visibility of the cirricula
                x-go-type: Visibility
                x-oapi-codegen-extra-tags:
                  db: visibility
                  json: visibility
                  yaml: visibility
                type: string
                enum:
                  - public
                  - private
              status:
                example: ready
                description: Status of the cirricula
                x-go-type: Status
                x-oapi-codegen-extra-tags:
                  db: status
                  json: status
                  yaml: status
                type: string
                enum:
                  - ready
                  - archived
                  - not_ready
              slug:
                type: string
                description: slug of the cirricula
                example: intro-kubernetes-course
              level:
                description: Level of the cirricula
                x-go-type: Level
                x-oapi-codegen-extra-tags:
                  db: level
                  json: level
                  yaml: level
                type: string
                enum:
                  - beginner
                  - intermediate
                  - advanced
              createdAt:
                description: When the cirricula item was created
                x-oapi-codegen-extra-tags:
                  db: created_at
                  json: created_at
                  yaml: created_at
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              updatedAt:
                description: When the cirricula was last updated
                x-go-type: core.Time
                x-oapi-codegen-extra-tags:
                  db: updated_at
                  json: updated_at
                  yaml: updated_at
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              deletedAt:
                x-go-type: core.NullTime
                x-oapi-codegen-extra-tags:
                  db: deleted_at
                  json: deleted_at
                  yaml: deleted_at
                description: Timestamp when the resource was deleted.
                type: string
                format: date-time
                x-go-name: DeletedAt
                x-go-type-skip-optional-pointer: true
              metadata:
                type: object
                description: Additional metadata about the cirricula
                additionalProperties: true
                x-go-type: core.Map
                x-go-type-skip-optional-pointer: true
                x-oapi-codegen-extra-tags:
                  db: metadata
                  json: metadata
                  yaml: metadata
                oneOf:
                  - x-go-type: CurriculaMetadata
                    type: object
                    properties:
                      title:
                        type: string
                        description: Title of the learning path
                        example: Mastering Kubernetes for Engineers
                      description:
                        type: string
                        description: Description of the learning path
                        example: >-
                          Learn how to configure your Kubernetes clusters and
                          manage the lifecycle of your workloads
                      banner:
                        type: string
                        format: uri
                        nullable: true
                        description: >-
                          Filename of the banner image, which should be placed
                          in the same directory as the _index.md file
                        example: kubernetes-icon.svg
                      permalink:
                        type: string
                        format: uri
                        description: Canonical URL for the learning path
                        example: >-
                          http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
                      badge:
                        x-go-type: Badge
                        type: object
                        required:
                          - label
                          - title
                          - description
                          - png
                          - svg
                        properties:
                          label:
                            type: string
                            description: unique identifier for the badge ( auto generated )
                            example: Kubernetes-Expert
                          title:
                            type: string
                            description: Title of the badge
                            example: Kubernetes Expert
                          description:
                            type: string
                            description: Description of the badge
                            example: >-
                              Awarded for mastering Kubernetes concepts and
                              practices
                          png:
                            type: string
                            format: uri
                            description: URL to the badge image
                            example: http://localhost:9876/badges/kubernetes-expert.png
                          svg:
                            type: string
                            format: uri
                            description: URL to the badge SVG image
                            example: http://localhost:9876/badges/kubernetes-expert.svg
                      certificate:
                        x-go-type: Certificate
                        type: object
                        required:
                          - id
                          - org_id
                          - title
                          - description
                          - issuing_authorities
                          - issued_date
                          - recipient_id
                          - recipient_name
                        properties:
                          id:
                            type: string
                            description: Unique identifier for the certificate
                            example: 1234567890abcdef
                            x-go-name: ID
                          org_id:
                            description: >-
                              UUID of the organization that issued the
                              certificate
                            type: string
                            format: uuid
                            x-go-type: uuid.UUID
                            x-go-type-import:
                              path: github.com/gofrs/uuid
                          recipient_id:
                            type: string
                            description: >-
                              ID of the recipient (user) who received the
                              certificate
                            example: 1234567890abcdef
                          recipient_name:
                            type: string
                            description: >-
                              Name of the recipient (user) who received the
                              certificate
                            example: John Doe
                          title:
                            type: string
                            description: Title of the certificate
                            example: Kubernetes Expert Certification
                          description:
                            type: string
                            description: Description of the certificate
                            example: >-
                              Awarded for successfully completing the Kubernetes
                              Expert course
                          issuing_authorities:
                            type: array
                            items:
                              x-go-type: CertificateIssuingAuthority
                              type: object
                              required:
                                - name
                                - url
                              properties:
                                name:
                                  type: string
                                  description: Name of the issuing authority
                                  example: Cloud Native Foundation
                                role:
                                  type: string
                                  description: Role of the issuing authority
                                  example: COO
                                signature_url:
                                  type: string
                                  format: uri
                                  description: >-
                                    URL to the signature image of the issuing
                                    authority should be a publicly accessible
                                    URL and transparent PNG or SVG format
                                  example: >-
                                    http://localhost:9876/signatures/cloud-native-foundation.png
                            description: List of issuing authorities for the certificate
                          issued_date:
                            type: string
                            format: date-time
                            description: Date when the certificate was issued
                            example: '2023-10-01T12:00:00Z'
                          expiration_date:
                            type: string
                            format: date-time
                            description: Date when the certificate expires (optional)
                            example: '2025-10-01T12:00:00Z'
                      children:
                        type: array
                        description: List of children items in the top-level curricula
                        items:
                          x-go-type: ChildNode
                          type: object
                          properties:
                            id:
                              type: string
                              description: Unique identifier for the course
                              example: 1234567890abcdef
                              x-go-name: ID
                              x-oapi-codegen-extra-tags:
                                db: id
                                json: id
                                yaml: id
                            title:
                              type: string
                              description: Title of the course
                              example: Kubernetes Basics
                            permalink:
                              type: string
                              format: uri
                              description: URL to the course content
                              example: >-
                                http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
                            description:
                              type: string
                              description: Course description
                              example: Learn the basics of Kubernetes
                            weight:
                              type: number
                              description: >-
                                A numeric value to determine the display order.
                                A smaller number appears first. If not
                                specified, items will be sorted alphabetically
                                by title.
                              example: eg 1 , 2
                            banner:
                              type: string
                              format: uri
                              nullable: true
                              description: >-
                                Filename of the banner image, which should be
                                placed in the same directory as the _index.md
                                file
                              example: kubernetes-icon.svg
                            type:
                              x-go-type: ContentType
                              description: >-
                                Type of the content (e.g., learning-path,
                                challenge, certification)
                              type: string
                              enum:
                                - learning-path
                                - challenge
                                - certification
                            children:
                              type: array
                              description: List of child nodes (sub-courses or modules)
                              items:
                                type: object
                                x-go-type: ChildNode
                          required:
                            - title
                            - description
                            - id
                            - permalink
                    required:
                      - title
                      - description
                      - permalink
            required:
              - id
              - type
              - orgId
              - visibility
              - status
              - slug
              - createdAt
              - updatedAt
              - deletedAt
              - metadata
              - level
      required:
        - total
        - data
    Academy_API_AcademyCurriculaWithMetricsListResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of cirricula
          example: 7
        data:
          type: array
          items:
            x-go-type: AcademyCurriculaWithMetrics
            x-go-type-skip-optional-pointer: true
            allOf:
              - type: object
                properties:
                  id:
                    type: string
                    description: Id of the cirricula
                    example: 923458-3490394-934893
                    x-go-name: ID
                    x-oapi-codegen-extra-tags:
                      db: id
                      json: id
                      yaml: id
                  type:
                    x-go-type: ContentType
                    x-oapi-codegen-extra-tags:
                      db: type
                    type: string
                    enum:
                      - learning-path
                      - challenge
                      - certification
                  orgId:
                    type: string
                    description: Organization ID that owns this learning path
                    example: layer5
                    x-oapi-codegen-extra-tags:
                      db: org_id
                      json: org_id
                      yaml: org_id
                  visibility:
                    description: Visibility of the cirricula
                    x-go-type: Visibility
                    x-oapi-codegen-extra-tags:
                      db: visibility
                      json: visibility
                      yaml: visibility
                    type: string
                    enum:
                      - public
                      - private
                  status:
                    example: ready
                    description: Status of the cirricula
                    x-go-type: Status
                    x-oapi-codegen-extra-tags:
                      db: status
                      json: status
                      yaml: status
                    type: string
                    enum:
                      - ready
                      - archived
                      - not_ready
                  slug:
                    type: string
                    description: slug of the cirricula
                    example: intro-kubernetes-course
                  level:
                    description: Level of the cirricula
                    x-go-type: Level
                    x-oapi-codegen-extra-tags:
                      db: level
                      json: level
                      yaml: level
                    type: string
                    enum:
                      - beginner
                      - intermediate
                      - advanced
                  createdAt:
                    description: When the cirricula item was created
                    x-oapi-codegen-extra-tags:
                      db: created_at
                      json: created_at
                      yaml: created_at
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  updatedAt:
                    description: When the cirricula was last updated
                    x-go-type: core.Time
                    x-oapi-codegen-extra-tags:
                      db: updated_at
                      json: updated_at
                      yaml: updated_at
                    type: string
                    format: date-time
                    x-go-type-skip-optional-pointer: true
                  deletedAt:
                    x-go-type: core.NullTime
                    x-oapi-codegen-extra-tags:
                      db: deleted_at
                      json: deleted_at
                      yaml: deleted_at
                    description: Timestamp when the resource was deleted.
                    type: string
                    format: date-time
                    x-go-name: DeletedAt
                    x-go-type-skip-optional-pointer: true
                  metadata:
                    type: object
                    description: Additional metadata about the cirricula
                    additionalProperties: true
                    x-go-type: core.Map
                    x-go-type-skip-optional-pointer: true
                    x-oapi-codegen-extra-tags:
                      db: metadata
                      json: metadata
                      yaml: metadata
                    oneOf:
                      - x-go-type: CurriculaMetadata
                        type: object
                        properties:
                          title:
                            type: string
                            description: Title of the learning path
                            example: Mastering Kubernetes for Engineers
                          description:
                            type: string
                            description: Description of the learning path
                            example: >-
                              Learn how to configure your Kubernetes clusters
                              and manage the lifecycle of your workloads
                          banner:
                            type: string
                            format: uri
                            nullable: true
                            description: >-
                              Filename of the banner image, which should be
                              placed in the same directory as the _index.md file
                            example: kubernetes-icon.svg
                          permalink:
                            type: string
                            format: uri
                            description: Canonical URL for the learning path
                            example: >-
                              http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
                          badge:
                            x-go-type: Badge
                            type: object
                            required:
                              - label
                              - title
                              - description
                              - png
                              - svg
                            properties:
                              label:
                                type: string
                                description: >-
                                  unique identifier for the badge ( auto
                                  generated )
                                example: Kubernetes-Expert
                              title:
                                type: string
                                description: Title of the badge
                                example: Kubernetes Expert
                              description:
                                type: string
                                description: Description of the badge
                                example: >-
                                  Awarded for mastering Kubernetes concepts and
                                  practices
                              png:
                                type: string
                                format: uri
                                description: URL to the badge image
                                example: >-
                                  http://localhost:9876/badges/kubernetes-expert.png
                              svg:
                                type: string
                                format: uri
                                description: URL to the badge SVG image
                                example: >-
                                  http://localhost:9876/badges/kubernetes-expert.svg
                          certificate:
                            x-go-type: Certificate
                            type: object
                            required:
                              - id
                              - org_id
                              - title
                              - description
                              - issuing_authorities
                              - issued_date
                              - recipient_id
                              - recipient_name
                            properties:
                              id:
                                type: string
                                description: Unique identifier for the certificate
                                example: 1234567890abcdef
                                x-go-name: ID
                              org_id:
                                description: >-
                                  UUID of the organization that issued the
                                  certificate
                                type: string
                                format: uuid
                                x-go-type: uuid.UUID
                                x-go-type-import:
                                  path: github.com/gofrs/uuid
                              recipient_id:
                                type: string
                                description: >-
                                  ID of the recipient (user) who received the
                                  certificate
                                example: 1234567890abcdef
                              recipient_name:
                                type: string
                                description: >-
                                  Name of the recipient (user) who received the
                                  certificate
                                example: John Doe
                              title:
                                type: string
                                description: Title of the certificate
                                example: Kubernetes Expert Certification
                              description:
                                type: string
                                description: Description of the certificate
                                example: >-
                                  Awarded for successfully completing the
                                  Kubernetes Expert course
                              issuing_authorities:
                                type: array
                                items:
                                  x-go-type: CertificateIssuingAuthority
                                  type: object
                                  required:
                                    - name
                                    - url
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the issuing authority
                                      example: Cloud Native Foundation
                                    role:
                                      type: string
                                      description: Role of the issuing authority
                                      example: COO
                                    signature_url:
                                      type: string
                                      format: uri
                                      description: >-
                                        URL to the signature image of the
                                        issuing authority should be a publicly
                                        accessible URL and transparent PNG or
                                        SVG format
                                      example: >-
                                        http://localhost:9876/signatures/cloud-native-foundation.png
                                description: >-
                                  List of issuing authorities for the
                                  certificate
                              issued_date:
                                type: string
                                format: date-time
                                description: Date when the certificate was issued
                                example: '2023-10-01T12:00:00Z'
                              expiration_date:
                                type: string
                                format: date-time
                                description: Date when the certificate expires (optional)
                                example: '2025-10-01T12:00:00Z'
                          children:
                            type: array
                            description: List of children items in the top-level curricula
                            items:
                              x-go-type: ChildNode
                              type: object
                              properties:
                                id:
                                  type: string
                                  description: Unique identifier for the course
                                  example: 1234567890abcdef
                                  x-go-name: ID
                                  x-oapi-codegen-extra-tags:
                                    db: id
                                    json: id
                                    yaml: id
                                title:
                                  type: string
                                  description: Title of the course
                                  example: Kubernetes Basics
                                permalink:
                                  type: string
                                  format: uri
                                  description: URL to the course content
                                  example: >-
                                    http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
                                description:
                                  type: string
                                  description: Course description
                                  example: Learn the basics of Kubernetes
                                weight:
                                  type: number
                                  description: >-
                                    A numeric value to determine the display
                                    order. A smaller number appears first. If
                                    not specified, items will be sorted
                                    alphabetically by title.
                                  example: eg 1 , 2
                                banner:
                                  type: string
                                  format: uri
                                  nullable: true
                                  description: >-
                                    Filename of the banner image, which should
                                    be placed in the same directory as the
                                    _index.md file
                                  example: kubernetes-icon.svg
                                type:
                                  x-go-type: ContentType
                                  description: >-
                                    Type of the content (e.g., learning-path,
                                    challenge, certification)
                                  type: string
                                  enum:
                                    - learning-path
                                    - challenge
                                    - certification
                                children:
                                  type: array
                                  description: List of child nodes (sub-courses or modules)
                                  items:
                                    type: object
                                    x-go-type: ChildNode
                              required:
                                - title
                                - description
                                - id
                                - permalink
                        required:
                          - title
                          - description
                          - permalink
                required:
                  - id
                  - type
                  - orgId
                  - visibility
                  - status
                  - slug
                  - createdAt
                  - updatedAt
                  - deletedAt
                  - metadata
                  - level
              - type: object
                required:
                  - RegistrationCount
                properties:
                  RegistrationCount:
                    type: number
                    x-oapi-codegen-extra-tags:
                      db: registration_count,omitempty
                      json: registration_count,omitempty
                      yaml: registration_count,omitempty
      required:
        - total
        - data
    Academy_API_ChallengeMetadata:
      x-go-type: CurriculaMetadata
      type: object
      properties:
        title:
          type: string
          description: Title of the learning path
          example: Mastering Kubernetes for Engineers
        description:
          type: string
          description: Description of the learning path
          example: >-
            Learn how to configure your Kubernetes clusters and manage the
            lifecycle of your workloads
        banner:
          type: string
          format: uri
          nullable: true
          description: >-
            Filename of the banner image, which should be placed in the same
            directory as the _index.md file
          example: kubernetes-icon.svg
        permalink:
          type: string
          format: uri
          description: Canonical URL for the learning path
          example: >-
            http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
        badge:
          x-go-type: Badge
          type: object
          required:
            - label
            - title
            - description
            - png
            - svg
          properties:
            label:
              type: string
              description: unique identifier for the badge ( auto generated )
              example: Kubernetes-Expert
            title:
              type: string
              description: Title of the badge
              example: Kubernetes Expert
            description:
              type: string
              description: Description of the badge
              example: Awarded for mastering Kubernetes concepts and practices
            png:
              type: string
              format: uri
              description: URL to the badge image
              example: http://localhost:9876/badges/kubernetes-expert.png
            svg:
              type: string
              format: uri
              description: URL to the badge SVG image
              example: http://localhost:9876/badges/kubernetes-expert.svg
        certificate:
          x-go-type: Certificate
          type: object
          required:
            - id
            - org_id
            - title
            - description
            - issuing_authorities
            - issued_date
            - recipient_id
            - recipient_name
          properties:
            id:
              type: string
              description: Unique identifier for the certificate
              example: 1234567890abcdef
              x-go-name: ID
            org_id:
              description: UUID of the organization that issued the certificate
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
            recipient_id:
              type: string
              description: ID of the recipient (user) who received the certificate
              example: 1234567890abcdef
            recipient_name:
              type: string
              description: Name of the recipient (user) who received the certificate
              example: John Doe
            title:
              type: string
              description: Title of the certificate
              example: Kubernetes Expert Certification
            description:
              type: string
              description: Description of the certificate
              example: Awarded for successfully completing the Kubernetes Expert course
            issuing_authorities:
              type: array
              items:
                x-go-type: CertificateIssuingAuthority
                type: object
                required:
                  - name
                  - url
                properties:
                  name:
                    type: string
                    description: Name of the issuing authority
                    example: Cloud Native Foundation
                  role:
                    type: string
                    description: Role of the issuing authority
                    example: COO
                  signature_url:
                    type: string
                    format: uri
                    description: >-
                      URL to the signature image of the issuing authority should
                      be a publicly accessible URL and transparent PNG or SVG
                      format
                    example: >-
                      http://localhost:9876/signatures/cloud-native-foundation.png
              description: List of issuing authorities for the certificate
            issued_date:
              type: string
              format: date-time
              description: Date when the certificate was issued
              example: '2023-10-01T12:00:00Z'
            expiration_date:
              type: string
              format: date-time
              description: Date when the certificate expires (optional)
              example: '2025-10-01T12:00:00Z'
        children:
          type: array
          description: List of children items in the top-level curricula
          items:
            x-go-type: ChildNode
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the course
                example: 1234567890abcdef
                x-go-name: ID
                x-oapi-codegen-extra-tags:
                  db: id
                  json: id
                  yaml: id
              title:
                type: string
                description: Title of the course
                example: Kubernetes Basics
              permalink:
                type: string
                format: uri
                description: URL to the course content
                example: >-
                  http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
              description:
                type: string
                description: Course description
                example: Learn the basics of Kubernetes
              weight:
                type: number
                description: >-
                  A numeric value to determine the display order. A smaller
                  number appears first. If not specified, items will be sorted
                  alphabetically by title.
                example: eg 1 , 2
              banner:
                type: string
                format: uri
                nullable: true
                description: >-
                  Filename of the banner image, which should be placed in the
                  same directory as the _index.md file
                example: kubernetes-icon.svg
              type:
                x-go-type: ContentType
                description: >-
                  Type of the content (e.g., learning-path, challenge,
                  certification)
                type: string
                enum:
                  - learning-path
                  - challenge
                  - certification
              children:
                type: array
                description: List of child nodes (sub-courses or modules)
                items:
                  type: object
                  x-go-type: ChildNode
            required:
              - title
              - description
              - id
              - permalink
      required:
        - title
        - description
        - permalink
    Academy_API_LearningPathMetadata:
      x-go-type: CurriculaMetadata
      type: object
      properties:
        title:
          type: string
          description: Title of the learning path
          example: Mastering Kubernetes for Engineers
        description:
          type: string
          description: Description of the learning path
          example: >-
            Learn how to configure your Kubernetes clusters and manage the
            lifecycle of your workloads
        banner:
          type: string
          format: uri
          nullable: true
          description: >-
            Filename of the banner image, which should be placed in the same
            directory as the _index.md file
          example: kubernetes-icon.svg
        permalink:
          type: string
          format: uri
          description: Canonical URL for the learning path
          example: >-
            http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
        badge:
          x-go-type: Badge
          type: object
          required:
            - label
            - title
            - description
            - png
            - svg
          properties:
            label:
              type: string
              description: unique identifier for the badge ( auto generated )
              example: Kubernetes-Expert
            title:
              type: string
              description: Title of the badge
              example: Kubernetes Expert
            description:
              type: string
              description: Description of the badge
              example: Awarded for mastering Kubernetes concepts and practices
            png:
              type: string
              format: uri
              description: URL to the badge image
              example: http://localhost:9876/badges/kubernetes-expert.png
            svg:
              type: string
              format: uri
              description: URL to the badge SVG image
              example: http://localhost:9876/badges/kubernetes-expert.svg
        certificate:
          x-go-type: Certificate
          type: object
          required:
            - id
            - org_id
            - title
            - description
            - issuing_authorities
            - issued_date
            - recipient_id
            - recipient_name
          properties:
            id:
              type: string
              description: Unique identifier for the certificate
              example: 1234567890abcdef
              x-go-name: ID
            org_id:
              description: UUID of the organization that issued the certificate
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
            recipient_id:
              type: string
              description: ID of the recipient (user) who received the certificate
              example: 1234567890abcdef
            recipient_name:
              type: string
              description: Name of the recipient (user) who received the certificate
              example: John Doe
            title:
              type: string
              description: Title of the certificate
              example: Kubernetes Expert Certification
            description:
              type: string
              description: Description of the certificate
              example: Awarded for successfully completing the Kubernetes Expert course
            issuing_authorities:
              type: array
              items:
                x-go-type: CertificateIssuingAuthority
                type: object
                required:
                  - name
                  - url
                properties:
                  name:
                    type: string
                    description: Name of the issuing authority
                    example: Cloud Native Foundation
                  role:
                    type: string
                    description: Role of the issuing authority
                    example: COO
                  signature_url:
                    type: string
                    format: uri
                    description: >-
                      URL to the signature image of the issuing authority should
                      be a publicly accessible URL and transparent PNG or SVG
                      format
                    example: >-
                      http://localhost:9876/signatures/cloud-native-foundation.png
              description: List of issuing authorities for the certificate
            issued_date:
              type: string
              format: date-time
              description: Date when the certificate was issued
              example: '2023-10-01T12:00:00Z'
            expiration_date:
              type: string
              format: date-time
              description: Date when the certificate expires (optional)
              example: '2025-10-01T12:00:00Z'
        children:
          type: array
          description: List of children items in the top-level curricula
          items:
            x-go-type: ChildNode
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the course
                example: 1234567890abcdef
                x-go-name: ID
                x-oapi-codegen-extra-tags:
                  db: id
                  json: id
                  yaml: id
              title:
                type: string
                description: Title of the course
                example: Kubernetes Basics
              permalink:
                type: string
                format: uri
                description: URL to the course content
                example: >-
                  http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
              description:
                type: string
                description: Course description
                example: Learn the basics of Kubernetes
              weight:
                type: number
                description: >-
                  A numeric value to determine the display order. A smaller
                  number appears first. If not specified, items will be sorted
                  alphabetically by title.
                example: eg 1 , 2
              banner:
                type: string
                format: uri
                nullable: true
                description: >-
                  Filename of the banner image, which should be placed in the
                  same directory as the _index.md file
                example: kubernetes-icon.svg
              type:
                x-go-type: ContentType
                description: >-
                  Type of the content (e.g., learning-path, challenge,
                  certification)
                type: string
                enum:
                  - learning-path
                  - challenge
                  - certification
              children:
                type: array
                description: List of child nodes (sub-courses or modules)
                items:
                  type: object
                  x-go-type: ChildNode
            required:
              - title
              - description
              - id
              - permalink
      required:
        - title
        - description
        - permalink
    Academy_API_Badge:
      type: object
      required:
        - label
        - title
        - description
        - png
        - svg
      properties:
        label:
          type: string
          description: unique identifier for the badge ( auto generated )
          example: Kubernetes-Expert
        title:
          type: string
          description: Title of the badge
          example: Kubernetes Expert
        description:
          type: string
          description: Description of the badge
          example: Awarded for mastering Kubernetes concepts and practices
        png:
          type: string
          format: uri
          description: URL to the badge image
          example: http://localhost:9876/badges/kubernetes-expert.png
        svg:
          type: string
          format: uri
          description: URL to the badge SVG image
          example: http://localhost:9876/badges/kubernetes-expert.svg
    Academy_API_CertificateIssuingAuthority:
      type: object
      required:
        - name
        - url
      properties:
        name:
          type: string
          description: Name of the issuing authority
          example: Cloud Native Foundation
        role:
          type: string
          description: Role of the issuing authority
          example: COO
        signature_url:
          type: string
          format: uri
          description: >-
            URL to the signature image of the issuing authority should be a
            publicly accessible URL and transparent PNG or SVG format
          example: http://localhost:9876/signatures/cloud-native-foundation.png
    Academy_API_Certificate:
      type: object
      required:
        - id
        - org_id
        - title
        - description
        - issuing_authorities
        - issued_date
        - recipient_id
        - recipient_name
      properties:
        id:
          type: string
          description: Unique identifier for the certificate
          example: 1234567890abcdef
          x-go-name: ID
        org_id:
          description: UUID of the organization that issued the certificate
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        recipient_id:
          type: string
          description: ID of the recipient (user) who received the certificate
          example: 1234567890abcdef
        recipient_name:
          type: string
          description: Name of the recipient (user) who received the certificate
          example: John Doe
        title:
          type: string
          description: Title of the certificate
          example: Kubernetes Expert Certification
        description:
          type: string
          description: Description of the certificate
          example: Awarded for successfully completing the Kubernetes Expert course
        issuing_authorities:
          type: array
          items:
            x-go-type: CertificateIssuingAuthority
            type: object
            required:
              - name
              - url
            properties:
              name:
                type: string
                description: Name of the issuing authority
                example: Cloud Native Foundation
              role:
                type: string
                description: Role of the issuing authority
                example: COO
              signature_url:
                type: string
                format: uri
                description: >-
                  URL to the signature image of the issuing authority should be
                  a publicly accessible URL and transparent PNG or SVG format
                example: http://localhost:9876/signatures/cloud-native-foundation.png
          description: List of issuing authorities for the certificate
        issued_date:
          type: string
          format: date-time
          description: Date when the certificate was issued
          example: '2023-10-01T12:00:00Z'
        expiration_date:
          type: string
          format: date-time
          description: Date when the certificate expires (optional)
          example: '2025-10-01T12:00:00Z'
    Academy_API_CurriculaMetadata:
      type: object
      properties:
        title:
          type: string
          description: Title of the learning path
          example: Mastering Kubernetes for Engineers
        description:
          type: string
          description: Description of the learning path
          example: >-
            Learn how to configure your Kubernetes clusters and manage the
            lifecycle of your workloads
        banner:
          type: string
          format: uri
          nullable: true
          description: >-
            Filename of the banner image, which should be placed in the same
            directory as the _index.md file
          example: kubernetes-icon.svg
        permalink:
          type: string
          format: uri
          description: Canonical URL for the learning path
          example: >-
            http://localhost:9876/academy/learning-paths/layer5/mastering-kubernetes-for-engineers/
        badge:
          x-go-type: Badge
          type: object
          required:
            - label
            - title
            - description
            - png
            - svg
          properties:
            label:
              type: string
              description: unique identifier for the badge ( auto generated )
              example: Kubernetes-Expert
            title:
              type: string
              description: Title of the badge
              example: Kubernetes Expert
            description:
              type: string
              description: Description of the badge
              example: Awarded for mastering Kubernetes concepts and practices
            png:
              type: string
              format: uri
              description: URL to the badge image
              example: http://localhost:9876/badges/kubernetes-expert.png
            svg:
              type: string
              format: uri
              description: URL to the badge SVG image
              example: http://localhost:9876/badges/kubernetes-expert.svg
        certificate:
          x-go-type: Certificate
          type: object
          required:
            - id
            - org_id
            - title
            - description
            - issuing_authorities
            - issued_date
            - recipient_id
            - recipient_name
          properties:
            id:
              type: string
              description: Unique identifier for the certificate
              example: 1234567890abcdef
              x-go-name: ID
            org_id:
              description: UUID of the organization that issued the certificate
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
            recipient_id:
              type: string
              description: ID of the recipient (user) who received the certificate
              example: 1234567890abcdef
            recipient_name:
              type: string
              description: Name of the recipient (user) who received the certificate
              example: John Doe
            title:
              type: string
              description: Title of the certificate
              example: Kubernetes Expert Certification
            description:
              type: string
              description: Description of the certificate
              example: Awarded for successfully completing the Kubernetes Expert course
            issuing_authorities:
              type: array
              items:
                x-go-type: CertificateIssuingAuthority
                type: object
                required:
                  - name
                  - url
                properties:
                  name:
                    type: string
                    description: Name of the issuing authority
                    example: Cloud Native Foundation
                  role:
                    type: string
                    description: Role of the issuing authority
                    example: COO
                  signature_url:
                    type: string
                    format: uri
                    description: >-
                      URL to the signature image of the issuing authority should
                      be a publicly accessible URL and transparent PNG or SVG
                      format
                    example: >-
                      http://localhost:9876/signatures/cloud-native-foundation.png
              description: List of issuing authorities for the certificate
            issued_date:
              type: string
              format: date-time
              description: Date when the certificate was issued
              example: '2023-10-01T12:00:00Z'
            expiration_date:
              type: string
              format: date-time
              description: Date when the certificate expires (optional)
              example: '2025-10-01T12:00:00Z'
        children:
          type: array
          description: List of children items in the top-level curricula
          items:
            x-go-type: ChildNode
            type: object
            properties:
              id:
                type: string
                description: Unique identifier for the course
                example: 1234567890abcdef
                x-go-name: ID
                x-oapi-codegen-extra-tags:
                  db: id
                  json: id
                  yaml: id
              title:
                type: string
                description: Title of the course
                example: Kubernetes Basics
              permalink:
                type: string
                format: uri
                description: URL to the course content
                example: >-
                  http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
              description:
                type: string
                description: Course description
                example: Learn the basics of Kubernetes
              weight:
                type: number
                description: >-
                  A numeric value to determine the display order. A smaller
                  number appears first. If not specified, items will be sorted
                  alphabetically by title.
                example: eg 1 , 2
              banner:
                type: string
                format: uri
                nullable: true
                description: >-
                  Filename of the banner image, which should be placed in the
                  same directory as the _index.md file
                example: kubernetes-icon.svg
              type:
                x-go-type: ContentType
                description: >-
                  Type of the content (e.g., learning-path, challenge,
                  certification)
                type: string
                enum:
                  - learning-path
                  - challenge
                  - certification
              children:
                type: array
                description: List of child nodes (sub-courses or modules)
                items:
                  type: object
                  x-go-type: ChildNode
            required:
              - title
              - description
              - id
              - permalink
      required:
        - title
        - description
        - permalink
    Academy_API_AcademyRegistrationStatus:
      type: string
      enum:
        - registered
        - completed
        - failed
        - withdrawn
      description: Status of the user's course registration
      x-oapi-codegen-extra-tags:
        db: status
    Academy_API_AcademyRegistration:
      type: object
      required:
        - id
        - org_id
        - user_id
        - status
        - created_at
        - updated_at
        - content_id
        - certificate
        - metadata
      properties:
        id:
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            db: id
            json: id
            yaml: id
          type: string
          format: uuid
          description: >-
            A Universally Unique Identifier used to uniquely identify entities
            in Meshery. The UUID core definition is used across different
            schemas.
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        org_id:
          description: ID of the organization
          x-oapi-codegen-extra-tags:
            db: org_id
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        content_id:
          type: string
          description: ID of the course content
          x-oapi-codegen-extra-tags:
            db: content_id
        user_id:
          description: ID of the user (foreign key to User)
          x-oapi-codegen-extra-tags:
            db: user_id
          type: string
          format: uuid
          x-go-type: uuid.UUID
          x-go-type-import:
            path: github.com/gofrs/uuid
        status:
          x-go-type: AcademyRegistrationStatus
          description: Status of the user's course registration
          x-oapi-codegen-extra-tags:
            db: status
          type: string
          enum:
            - registered
            - completed
            - failed
            - withdrawn
        updated_at:
          description: When the registration was updated
          x-oapi-codegen-extra-tags:
            db: updated_at
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        created_at:
          description: When the registration was created
          x-oapi-codegen-extra-tags:
            db: created_at
          type: string
          format: date-time
          x-go-type-skip-optional-pointer: true
        deleted_at:
          x-go-type: core.NullTime
          x-oapi-codegen-extra-tags:
            db: deleted_at
          description: Timestamp when the resource was deleted.
          type: string
          format: date-time
          x-go-name: DeletedAt
          x-go-type-skip-optional-pointer: true
        certificate:
          x-go-type: core.Map
          description: Issued certificate for completing the curricula under registration
          x-oapi-codegen-extra-tags:
            db: certificate
          type: object
          required:
            - id
            - org_id
            - title
            - description
            - issuing_authorities
            - issued_date
            - recipient_id
            - recipient_name
          properties:
            id:
              type: string
              description: Unique identifier for the certificate
              example: 1234567890abcdef
              x-go-name: ID
            org_id:
              description: UUID of the organization that issued the certificate
              type: string
              format: uuid
              x-go-type: uuid.UUID
              x-go-type-import:
                path: github.com/gofrs/uuid
            recipient_id:
              type: string
              description: ID of the recipient (user) who received the certificate
              example: 1234567890abcdef
            recipient_name:
              type: string
              description: Name of the recipient (user) who received the certificate
              example: John Doe
            title:
              type: string
              description: Title of the certificate
              example: Kubernetes Expert Certification
            description:
              type: string
              description: Description of the certificate
              example: Awarded for successfully completing the Kubernetes Expert course
            issuing_authorities:
              type: array
              items:
                x-go-type: CertificateIssuingAuthority
                type: object
                required:
                  - name
                  - url
                properties:
                  name:
                    type: string
                    description: Name of the issuing authority
                    example: Cloud Native Foundation
                  role:
                    type: string
                    description: Role of the issuing authority
                    example: COO
                  signature_url:
                    type: string
                    format: uri
                    description: >-
                      URL to the signature image of the issuing authority should
                      be a publicly accessible URL and transparent PNG or SVG
                      format
                    example: >-
                      http://localhost:9876/signatures/cloud-native-foundation.png
              description: List of issuing authorities for the certificate
            issued_date:
              type: string
              format: date-time
              description: Date when the certificate was issued
              example: '2023-10-01T12:00:00Z'
            expiration_date:
              type: string
              format: date-time
              description: Date when the certificate expires (optional)
              example: '2025-10-01T12:00:00Z'
        metadata:
          type: object
          description: Additional metadata about the registration
          additionalProperties: true
          x-go-type: core.Map
          x-go-type-skip-optional-pointer: true
          x-oapi-codegen-extra-tags:
            db: metadata
    Academy_API_ChildNode:
      type: object
      properties:
        id:
          type: string
          description: Unique identifier for the course
          example: 1234567890abcdef
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            db: id
            json: id
            yaml: id
        title:
          type: string
          description: Title of the course
          example: Kubernetes Basics
        permalink:
          type: string
          format: uri
          description: URL to the course content
          example: >-
            http://localhost:9876/academy/learning-paths/layer5/intro-kubernetes-course/kubernetes/
        description:
          type: string
          description: Course description
          example: Learn the basics of Kubernetes
        weight:
          type: number
          description: >-
            A numeric value to determine the display order. A smaller number
            appears first. If not specified, items will be sorted alphabetically
            by title.
          example: eg 1 , 2
        banner:
          type: string
          format: uri
          nullable: true
          description: >-
            Filename of the banner image, which should be placed in the same
            directory as the _index.md file
          example: kubernetes-icon.svg
        type:
          x-go-type: ContentType
          description: Type of the content (e.g., learning-path, challenge, certification)
          type: string
          enum:
            - learning-path
            - challenge
            - certification
        children:
          type: array
          description: List of child nodes (sub-courses or modules)
          items:
            type: object
            x-go-type: ChildNode
      required:
        - title
        - description
        - id
        - permalink
    Academy_API_AcademyRegistrationsListResponse:
      type: object
      properties:
        total:
          type: integer
          description: Total number of learning paths
          example: 7
        data:
          type: array
          items:
            type: object
            required:
              - id
              - org_id
              - user_id
              - status
              - created_at
              - updated_at
              - content_id
              - certificate
              - metadata
            properties:
              id:
                x-go-name: ID
                x-oapi-codegen-extra-tags:
                  db: id
                  json: id
                  yaml: id
                type: string
                format: uuid
                description: >-
                  A Universally Unique Identifier used to uniquely identify
                  entities in Meshery. The UUID core definition is used across
                  different schemas.
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
              org_id:
                description: ID of the organization
                x-oapi-codegen-extra-tags:
                  db: org_id
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
              content_id:
                type: string
                description: ID of the course content
                x-oapi-codegen-extra-tags:
                  db: content_id
              user_id:
                description: ID of the user (foreign key to User)
                x-oapi-codegen-extra-tags:
                  db: user_id
                type: string
                format: uuid
                x-go-type: uuid.UUID
                x-go-type-import:
                  path: github.com/gofrs/uuid
              status:
                x-go-type: AcademyRegistrationStatus
                description: Status of the user's course registration
                x-oapi-codegen-extra-tags:
                  db: status
                type: string
                enum:
                  - registered
                  - completed
                  - failed
                  - withdrawn
              updated_at:
                description: When the registration was updated
                x-oapi-codegen-extra-tags:
                  db: updated_at
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              created_at:
                description: When the registration was created
                x-oapi-codegen-extra-tags:
                  db: created_at
                type: string
                format: date-time
                x-go-type-skip-optional-pointer: true
              deleted_at:
                x-go-type: core.NullTime
                x-oapi-codegen-extra-tags:
                  db: deleted_at
                description: Timestamp when the resource was deleted.
                type: string
                format: date-time
                x-go-name: DeletedAt
                x-go-type-skip-optional-pointer: true
              certificate:
                x-go-type: core.Map
                description: >-
                  Issued certificate for completing the curricula under
                  registration
                x-oapi-codegen-extra-tags:
                  db: certificate
                type: object
                required:
                  - id
                  - org_id
                  - title
                  - description
                  - issuing_authorities
                  - issued_date
                  - recipient_id
                  - recipient_name
                properties:
                  id:
                    type: string
                    description: Unique identifier for the certificate
                    example: 1234567890abcdef
                    x-go-name: ID
                  org_id:
                    description: UUID of the organization that issued the certificate
                    type: string
                    format: uuid
                    x-go-type: uuid.UUID
                    x-go-type-import:
                      path: github.com/gofrs/uuid
                  recipient_id:
                    type: string
                    description: ID of the recipient (user) who received the certificate
                    example: 1234567890abcdef
                  recipient_name:
                    type: string
                    description: Name of the recipient (user) who received the certificate
                    example: John Doe
                  title:
                    type: string
                    description: Title of the certificate
                    example: Kubernetes Expert Certification
                  description:
                    type: string
                    description: Description of the certificate
                    example: >-
                      Awarded for successfully completing the Kubernetes Expert
                      course
                  issuing_authorities:
                    type: array
                    items:
                      x-go-type: CertificateIssuingAuthority
                      type: object
                      required:
                        - name
                        - url
                      properties:
                        name:
                          type: string
                          description: Name of the issuing authority
                          example: Cloud Native Foundation
                        role:
                          type: string
                          description: Role of the issuing authority
                          example: COO
                        signature_url:
                          type: string
                          format: uri
                          description: >-
                            URL to the signature image of the issuing authority
                            should be a publicly accessible URL and transparent
                            PNG or SVG format
                          example: >-
                            http://localhost:9876/signatures/cloud-native-foundation.png
                    description: List of issuing authorities for the certificate
                  issued_date:
                    type: string
                    format: date-time
                    description: Date when the certificate was issued
                    example: '2023-10-01T12:00:00Z'
                  expiration_date:
                    type: string
                    format: date-time
                    description: Date when the certificate expires (optional)
                    example: '2025-10-01T12:00:00Z'
              metadata:
                type: object
                description: Additional metadata about the registration
                additionalProperties: true
                x-go-type: core.Map
                x-go-type-skip-optional-pointer: true
                x-oapi-codegen-extra-tags:
                  db: metadata
            x-go-type: AcademyRegistration
      required:
        - total
        - data
    Academy_API_CirriculaCurrentItemData:
      type: object
      required:
        - id
        - last_opened
        - content_type
      properties:
        id:
          type: string
        last_opened:
          type: string
          format: date-time
        content_type:
          type: string
          enum:
            - learning-path
            - challenge
            - certification
          x-go-type: ContentType
    Academy_API_CirriculaProgressTracker:
      type: object
      required:
        - current_item
        - grades
        - time_spent
        - completed
        - completed_items
      properties:
        current_item:
          type: object
          additionalProperties:
            x-go-type: CirriculaCurrentItemData
            type: object
            required:
              - id
              - last_opened
              - content_type
            properties:
              id:
                type: string
              last_opened:
                type: string
                format: date-time
              content_type:
                type: string
                enum:
                  - learning-path
                  - challenge
                  - certification
                x-go-type: ContentType
        grades:
          type: object
          additionalProperties:
            x-go-type: QuizEvaluationResult
            type: object
            required:
              - score
              - passed
              - total_marks
              - pass_percentage
              - quiz
              - attempted_at
              - attempts
              - percentage_scored
              - correct_submissions
            properties:
              score:
                type: integer
              passed:
                type: boolean
              percentage_scored:
                type: number
                format: float
              total_marks:
                type: integer
              pass_percentage:
                type: number
                format: float
              correct_submissions:
                type: object
                additionalProperties:
                  type: boolean
              quiz:
                x-go-type: Quiz
                type: object
                required:
                  - id
                  - title
                  - orgId
                  - description
                  - slug
                  - relPermalink
                  - permalink
                  - type
                  - section
                  - layout
                  - date
                  - final
                  - lastmod
                  - draft
                  - file_path
                  - pass_percentage
                  - time_limit
                  - questions
                  - total_questions
                  - total_marks
                  - prerequisites
                properties:
                  id:
                    type: string
                    x-go-name: ID
                    x-oapi-codegen-extra-tags:
                      json: id
                  orgId:
                    type: string
                    description: Organization ID that owns this quiz
                    example: layer5
                    x-oapi-codegen-extra-tags:
                      db: org_id
                      json: org_id
                      yaml: org_id
                  final:
                    type: boolean
                    description: >-
                      Indicates if the quiz is final . i.e this quiz will used
                      to evaluate the completion of parent section eg course ,
                      module , learning path
                    example: true
                  title:
                    type: string
                  description:
                    type: string
                  slug:
                    type: string
                  relPermalink:
                    type: string
                  permalink:
                    type: string
                  type:
                    type: string
                  section:
                    type: string
                  layout:
                    type: string
                  date:
                    type: string
                    format: date
                  lastmod:
                    type: string
                    format: date
                  draft:
                    type: boolean
                  file_path:
                    type: string
                  pass_percentage:
                    type: number
                    format: float
                  time_limit:
                    type: string
                  questions:
                    type: array
                    items:
                      x-go-type: Question
                      type: object
                      required:
                        - id
                        - text
                        - type
                        - marks
                        - options
                        - correct_answer
                      properties:
                        id:
                          type: string
                        text:
                          type: string
                        type:
                          x-go-type: QuestionType
                          type: string
                          x-enum-varnames:
                            - QuestionTypeMultipleAnswers
                            - QuestionTypeSingleAnswer
                            - QuestionTypeShortAnswer
                            - QuestionTypeEssay
                          enum:
                            - multiple-answers
                            - single-answer
                            - short-answer
                            - essay
                        marks:
                          type: integer
                        multiple_answers:
                          type: boolean
                        options:
                          type: array
                          items:
                            x-go-type: QuestionOption
                            type: object
                            required:
                              - id
                              - text
                              - is_correct
                            properties:
                              id:
                                type: string
                              text:
                                type: string
                              is_correct:
                                type: boolean
                        correct_answer:
                          type: string
                  total_questions:
                    type: integer
                  total_marks:
                    type: integer
                  prerequisites:
                    type: array
                    items:
                      x-go-type: Parent
                      type: object
                      required:
                        - id
                        - title
                        - relPermalink
                        - type
                      properties:
                        id:
                          type: string
                        title:
                          type: string
                        relPermalink:
                          type: string
                        type:
                          type: string
                  parent:
                    x-go-type: Parent
                    type: object
                    required:
                      - id
                      - title
                      - relPermalink
                      - type
                    properties:
                      id:
                        type: string
                      title:
                        type: string
                      relPermalink:
                        type: string
                      type:
                        type: string
              attempted_at:
                type: string
                format: date-time
              attempts:
                type: integer
        time_spent:
          type: integer
          description: Total time spent in seconds
        completed_items:
          type: object
          description: Items that have been completed (map of item IDs to item data)
          additionalProperties:
            x-go-type: ProgressItemCompleted
            type: object
            required:
              - completed_at
              - item_data
            properties:
              completed_at:
                type: string
                format: date-time
                description: Timestamp when the item was completed
              item_data:
                x-go-type: Parent
                type: object
                required:
                  - id
                  - title
                  - relPermalink
                  - type
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  relPermalink:
                    type: string
                  type:
                    type: string
        completed:
          type: string
          format: date-time
          x-go-type: core.NullTime
    Academy_API_ProgressItemCompleted:
      type: object
      required:
        - completed_at
        - item_data
      properties:
        completed_at:
          type: string
          format: date-time
          description: Timestamp when the item was completed
        item_data:
          x-go-type: Parent
          type: object
          required:
            - id
            - title
            - relPermalink
            - type
          properties:
            id:
              type: string
            title:
              type: string
            relPermalink:
              type: string
            type:
              type: string
    Academy_API_UpdateCurrentItemRequest:
      type: object
      properties:
        content_type:
          type: string
          enum:
            - learning-path
            - challenge
            - certification
          x-go-type: ContentType
        item_data:
          x-go-type: CirriculaCurrentItemData
          type: object
          required:
            - id
            - last_opened
            - content_type
          properties:
            id:
              type: string
            last_opened:
              type: string
              format: date-time
            content_type:
              type: string
              enum:
                - learning-path
                - challenge
                - certification
              x-go-type: ContentType
      required:
        - content_type
        - item_data
    Academy_API_ErrorResponse:
      type: object
      properties:
        error:
          type: string
        details:
          type: string
    Academy_API_Quiz:
      type: object
      required:
        - id
        - title
        - orgId
        - description
        - slug
        - relPermalink
        - permalink
        - type
        - section
        - layout
        - date
        - final
        - lastmod
        - draft
        - file_path
        - pass_percentage
        - time_limit
        - questions
        - total_questions
        - total_marks
        - prerequisites
      properties:
        id:
          type: string
          x-go-name: ID
          x-oapi-codegen-extra-tags:
            json: id
        orgId:
          type: string
          description: Organization ID that owns this quiz
          example: layer5
          x-oapi-codegen-extra-tags:
            db: org_id
            json: org_id
            yaml: org_id
        final:
          type: boolean
          description: >-
            Indicates if the quiz is final . i.e this quiz will used to evaluate
            the completion of parent section eg course , module , learning path
          example: true
        title:
          type: string
        description:
          type: string
        slug:
          type: string
        relPermalink:
          type: string
        permalink:
          type: string
        type:
          type: string
        section:
          type: string
        layout:
          type: string
        date:
          type: string
          format: date
        lastmod:
          type: string
          format: date
        draft:
          type: boolean
        file_path:
          type: string
        pass_percentage:
          type: number
          format: float
        time_limit:
          type: string
        questions:
          type: array
          items:
            x-go-type: Question
            type: object
            required:
              - id
              - text
              - type
              - marks
              - options
              - correct_answer
            properties:
              id:
                type: string
              text:
                type: string
              type:
                x-go-type: QuestionType
                type: string
                x-enum-varnames:
                  - QuestionTypeMultipleAnswers
                  - QuestionTypeSingleAnswer
                  - QuestionTypeShortAnswer
                  - QuestionTypeEssay
                enum:
                  - multiple-answers
                  - single-answer
                  - short-answer
                  - essay
              marks:
                type: integer
              multiple_answers:
                type: boolean
              options:
                type: array
                items:
                  x-go-type: QuestionOption
                  type: object
                  required:
                    - id
                    - text
                    - is_correct
                  properties:
                    id:
                      type: string
                    text:
                      type: string
                    is_correct:
                      type: boolean
              correct_answer:
                type: string
        total_questions:
          type: integer
        total_marks:
          type: integer
        prerequisites:
          type: array
          items:
            x-go-type: Parent
            type: object
            required:
              - id
              - title
              - relPermalink
              - type
            properties:
              id:
                type: string
              title:
                type: string
              relPermalink:
                type: string
              type:
                type: string
        parent:
          x-go-type: Parent
          type: object
          required:
            - id
            - title
            - relPermalink
            - type
          properties:
            id:
              type: string
            title:
              type: string
            relPermalink:
              type: string
            type:
              type: string
    Academy_API_Parent:
      type: object
      required:
        - id
        - title
        - relPermalink
        - type
      properties:
        id:
          type: string
        title:
          type: string
        relPermalink:
          type: string
        type:
          type: string
    Academy_API_QuestionType:
      type: string
      x-enum-varnames:
        - QuestionTypeMultipleAnswers
        - QuestionTypeSingleAnswer
        - QuestionTypeShortAnswer
        - QuestionTypeEssay
      enum:
        - multiple-answers
        - single-answer
        - short-answer
        - essay
    Academy_API_Question:
      type: object
      required:
        - id
        - text
        - type
        - marks
        - options
        - correct_answer
      properties:
        id:
          type: string
        text:
          type: string
        type:
          x-go-type: QuestionType
          type: string
          x-enum-varnames:
            - QuestionTypeMultipleAnswers
            - QuestionTypeSingleAnswer
            - QuestionTypeShortAnswer
            - QuestionTypeEssay
          enum:
            - multiple-answers
            - single-answer
            - short-answer
            - essay
        marks:
          type: integer
        multiple_answers:
          type: boolean
        options:
          type: array
          items:
            x-go-type: QuestionOption
            type: object
            required:
              - id
              - text
              - is_correct
            properties:
              id:
                type: string
              text:
                type: string
              is_correct:
                type: boolean
        correct_answer:
          type: string
    Academy_API_QuestionOption:
      type: object
      required:
        - id
        - text
        - is_correct
      properties:
        id:
          type: string
        text:
          type: string
        is_correct:
          type: boolean
    Academy_API_QuizSubmission:
      type: object
      required:
        - quiz_abs_path
        - registration_id
        - user_id
        - answers
      properties:
        quiz_abs_path:
          type: string
        registration_id:
          type: string
        user_id:
          type: string
        answers:
          type: array
          items:
            x-go-type: SubmittedAnswer
            type: object
            required:
              - question_id
              - selected_option_id
              - answer_text
            properties:
              question_id:
                type: string
              selected_option_id:
                type: object
                additionalProperties:
                  type: boolean
              answer_text:
                type: string
    Academy_API_SubmittedAnswer:
      type: object
      required:
        - question_id
        - selected_option_id
        - answer_text
      properties:
        question_id:
          type: string
        selected_option_id:
          type: object
          additionalProperties:
            type: boolean
        answer_text:
          type: string
    Academy_API_QuizEvaluationResult:
      type: object
      required:
        - score
        - passed
        - total_marks
        - pass_percentage
        - quiz
        - attempted_at
        - attempts
        - percentage_scored
        - correct_submissions
      properties:
        score:
          type: integer
        passed:
          type: boolean
        percentage_scored:
          type: number
          format: float
        total_marks:
          type: integer
        pass_percentage:
          type: number
          format: float
        correct_submissions:
          type: object
          additionalProperties:
            type: boolean
        quiz:
          x-go-type: Quiz
          type: object
          required:
            - id
            - title
            - orgId
            - description
            - slug
            - relPermalink
            - permalink
            - type
            - section
            - layout
            - date
            - final
            - lastmod
            - draft
            - file_path
            - pass_percentage
            - time_limit
            - questions
            - total_questions
            - total_marks
            - prerequisites
          properties:
            id:
              type: string
              x-go-name: ID
              x-oapi-codegen-extra-tags:
                json: id
            orgId:
              type: string
              description: Organization ID that owns this quiz
              example: layer5
              x-oapi-codegen-extra-tags:
                db: org_id
                json: org_id
                yaml: org_id
            final:
              type: boolean
              description: >-
                Indicates if the quiz is final . i.e this quiz will used to
                evaluate the completion of parent section eg course , module ,
                learning path
              example: true
            title:
              type: string
            description:
              type: string
            slug:
              type: string
            relPermalink:
              type: string
            permalink:
              type: string
            type:
              type: string
            section:
              type: string
            layout:
              type: string
            date:
              type: string
              format: date
            lastmod:
              type: string
              format: date
            draft:
              type: boolean
            file_path:
              type: string
            pass_percentage:
              type: number
              format: float
            time_limit:
              type: string
            questions:
              type: array
              items:
                x-go-type: Question
                type: object
                required:
                  - id
                  - text
                  - type
                  - marks
                  - options
                  - correct_answer
                properties:
                  id:
                    type: string
                  text:
                    type: string
                  type:
                    x-go-type: QuestionType
                    type: string
                    x-enum-varnames:
                      - QuestionTypeMultipleAnswers
                      - QuestionTypeSingleAnswer
                      - QuestionTypeShortAnswer
                      - QuestionTypeEssay
                    enum:
                      - multiple-answers
                      - single-answer
                      - short-answer
                      - essay
                  marks:
                    type: integer
                  multiple_answers:
                    type: boolean
                  options:
                    type: array
                    items:
                      x-go-type: QuestionOption
                      type: object
                      required:
                        - id
                        - text
                        - is_correct
                      properties:
                        id:
                          type: string
                        text:
                          type: string
                        is_correct:
                          type: boolean
                  correct_answer:
                    type: string
            total_questions:
              type: integer
            total_marks:
              type: integer
            prerequisites:
              type: array
              items:
                x-go-type: Parent
                type: object
                required:
                  - id
                  - title
                  - relPermalink
                  - type
                properties:
                  id:
                    type: string
                  title:
                    type: string
                  relPermalink:
                    type: string
                  type:
                    type: string
            parent:
              x-go-type: Parent
              type: object
              required:
                - id
                - title
                - relPermalink
                - type
              properties:
                id:
                  type: string
                title:
                  type: string
                relPermalink:
                  type: string
                type:
                  type: string
        attempted_at:
          type: string
          format: date-time
        attempts:
          type: integer
    Academy_API_UserRegistration:
      type: object
      required:
        - curricula_title
        - curricula_type
        - curricula_permalink
        - registration_id
        - status
        - user_id
        - user_email
        - user_last_name
        - user_first_name
        - user_avatar_url
        - total_count
      properties:
        curricula_title:
          type: string
          description: Title of the curricula
          x-oapi-codegen-extra-tags:
            db: curricula_title
        curricula_type:
          type: string
          enum:
            - learning-path
            - challenge
            - certification
          description: Type of the curricula
          x-go-type: ContentType
          x-oapi-codegen-extra-tags:
            db: curricula_type
        curricula_permalink:
          type: string
          description: Permalink of the curricula
          x-oapi-codegen-extra-tags:
            db: curricula_permalink
        registration_id:
          type: string
          format: uuid
          description: Unique ID of the registration
          x-oapi-codegen-extra-tags:
            db: registration_id
        status:
          description: Registration status
          x-go-type: AcademyRegistrationStatus
          x-oapi-codegen-extra-tags:
            db: status
          type: string
          enum:
            - registered
            - completed
            - failed
            - withdrawn
        created_at:
          type: string
          format: date-time
          description: When the registration was created
          x-oapi-codegen-extra-tags:
            db: created_at
        user_id:
          type: string
          format: uuid
          description: ID of the user
          x-oapi-codegen-extra-tags:
            db: user_id
        user_first_name:
          type: string
          description: First name of the user
          x-oapi-codegen-extra-tags:
            db: user_first_name
        user_last_name:
          type: string
          description: Last name of the user
          x-oapi-codegen-extra-tags:
            db: user_last_name
        user_email:
          type: string
          format: email
          description: Email of the user
          x-oapi-codegen-extra-tags:
            db: user_email
        user_avatar_url:
          type: string
          format: uri
          description: Avatar URL of the user
          x-oapi-codegen-extra-tags:
            db: user_avatar_url
        total_count:
          type: integer
          format: int64
          description: Total count for pagination
          x-oapi-codegen-extra-tags:
            db: total_count
    Academy_API_CurriculaRegistrationsFilter:
      type: object
      required:
        - pagesize
        - page
        - content_type
        - status
      properties:
        pagesize:
          type: integer
        page:
          type: integer
        content_type:
          type: array
          items:
            type: string
        status:
          type: array
          items:
            type: string
    Academy_API_CurriculaRegistrationsResponse:
      type: object
      required:
        - data
        - total_count
        - page_size
        - page
      properties:
        data:
          type: array
          items:
            x-go-type: UserRegistration
            type: object
            required:
              - curricula_title
              - curricula_type
              - curricula_permalink
              - registration_id
              - status
              - user_id
              - user_email
              - user_last_name
              - user_first_name
              - user_avatar_url
              - total_count
            properties:
              curricula_title:
                type: string
                description: Title of the curricula
                x-oapi-codegen-extra-tags:
                  db: curricula_title
              curricula_type:
                type: string
                enum:
                  - learning-path
                  - challenge
                  - certification
                description: Type of the curricula
                x-go-type: ContentType
                x-oapi-codegen-extra-tags:
                  db: curricula_type
              curricula_permalink:
                type: string
                description: Permalink of the curricula
                x-oapi-codegen-extra-tags:
                  db: curricula_permalink
              registration_id:
                type: string
                format: uuid
                description: Unique ID of the registration
                x-oapi-codegen-extra-tags:
                  db: registration_id
              status:
                description: Registration status
                x-go-type: AcademyRegistrationStatus
                x-oapi-codegen-extra-tags:
                  db: status
                type: string
                enum:
                  - registered
                  - completed
                  - failed
                  - withdrawn
              created_at:
                type: string
                format: date-time
                description: When the registration was created
                x-oapi-codegen-extra-tags:
                  db: created_at
              user_id:
                type: string
                format: uuid
                description: ID of the user
                x-oapi-codegen-extra-tags:
                  db: user_id
              user_first_name:
                type: string
                description: First name of the user
                x-oapi-codegen-extra-tags:
                  db: user_first_name
              user_last_name:
                type: string
                description: Last name of the user
                x-oapi-codegen-extra-tags:
                  db: user_last_name
              user_email:
                type: string
                format: email
                description: Email of the user
                x-oapi-codegen-extra-tags:
                  db: user_email
              user_avatar_url:
                type: string
                format: uri
                description: Avatar URL of the user
                x-oapi-codegen-extra-tags:
                  db: user_avatar_url
              total_count:
                type: integer
                format: int64
                description: Total count for pagination
                x-oapi-codegen-extra-tags:
                  db: total_count
        total_count:
          type: integer
          format: int64
        page_size:
          type: integer
        page:
          type: integer
    invitation_uuid:
      type: string
      format: uuid
      description: >-
        A Universally Unique Identifier used to uniquely identify entities in
        Meshery. The UUID core definition is used across different schemas.
      x-go-type: uuid.UUID
      x-go-type-import:
        path: github.com/gofrs/uuid
    invitation_InvitationsPage:
      type: object
      required:
        - data
        - totalCount
      properties:
        Data:
          type: array
          items:
            x-go-type: Invitation
            type: object
            required:
              - id
              - default
              - name
              - description
              - emails
              - orgId
              - expiresAt
              - quota
              - acceptedBy
              - status
              - roles
              - teams
              - createdAt
              - updatedAt
              - deletedAt
            properties:
              id:
                ref: '#/components/schemas/uuid'
                x-go-name: ID
                description: >-
                  Unique identifier for the invitation , is also used as the
                  invitation code
              isDefault:
                type: boolean
                description: >-
                  Indicates whether the invitation is a default invitation (open
                  invite), which can be used to assign users when signing up
                  from fqdn or custom domain, a organization can only have one
                  default invitation
                x-oapi-codegen-extra-tags:
                  db: is_default
                  json: is_default
              name:
                type: string
                description: >-
                  Name of the invitation, which can be used to identify the
                  invitation, required and cant be empty string,
              description:
                type: string
                description: >-
                  Description of the invitation, which can be used to provide
                  additional information about the invitation, null or empty
                  string means the invitation does not have a description
              emails:
                type: array
                items:
                  type: string
                  format: email
                  description: >-
                    Exact email address or the email address pattern for which
                    the invitation is valid , null means the invitation is valid
                    for all email addresses
              orgId:
                type: string
                description: ID of the organization to which the user is invited
                x-oapi-codegen-extra-tags:
                  db: org_id
                  json: org_id
              expiresAt:
                type: string
                format: date-time
                description: >-
                  Timestamp when the invitation expires, if applicable , null or
                  empty string means the invitation does not expire
                x-oapi-codegen-extra-tags:
                  db: expires_at
                  json: expires_at
              quota:
                type: integer
                description: >-
                  Quota for the invitation, which can be used to limit the
                  number of users that can accept the invitation, null or empty
                  string means the invitation does not have a quota
              acceptedBy:
                type: array
                items:
                  type: string
                description: >-
                  List of user ids that have already accepted the invitation,
                  null or empty string means the invitation has not been used
                  yet
                x-oapi-codegen-extra-tags:
                  db: accepted_by
                  json: accepted_by
              roles:
                type: array
                items:
                  type: string
                  description: >-
                    Roles that the user will have when accepting the invitation,
                    null or empty string means the invitation does not specify
                    any roles
              teams:
                type: array
                items:
                  type: string
                  description: >-
                    Teams that the user will be added to when accepting the
                    invitation, null or empty string means the invitation does
                    not specify any teams
              status:
                type: string
                x-go-type: InvitationStatus
                enum:
                  - enabled
                  - disabled
                description: >-
                  Status of the invitation, where enabled means the invitation
                  is active and can be used, disabled means the invitation is no
                  longer valid and is temporarily inactive, disabled invitations
                  can be re-enabled later.
              createdAt:
                type: string
                format: date-time
                description: Timestamp when the invitation was created
                x-oapi-codegen-extra-tags:
                  db: created_at
                  json: created_at
              updatedAt:
                type: string
                format: date-time
                description: Timestamp when the invitation was last updated
                x-oapi-codegen-extra-tags:
                  db: updated_at
                  json: updated_at
              deletedAt:
                type: string
                format: date-time
                x-go-type: core.NullTime
                description: Timestamp when the invitation was deleted, if applicable
                x-oapi-codegen-extra-tags:
                  db: deleted_at
                  json: deleted_at
          description: List of invitations
          x-oapi-codegen-extra-tags:
            json: data
        TotalCount:
          type: integer
          description: Total number of invitations available
          x-oapi-codegen-extra-tags:
            json: total_count
    invitation_InvitationStatus:
      type: string
      enum:
        - enabled
        - disabled
      description: >-
        Status of the invitation, where enabled means the invitation is active
        and can be used, disabled means the invitation is no longer valid and is
        temporarily inactive, disabled invitations can be re-enabled later.
    invitation_Invitation:
      type: object
      required:
        - id
        - default
        - name
        - description
        - emails
        - orgId
        - expiresAt
        - quota
        - acceptedBy
        - status
        - roles
        - teams
        - createdAt
        - updatedAt
        - deletedAt
      properties:
        id:
          ref: '#/components/schemas/uuid'
          x-go-name: ID
          description: >-
            Unique identifier for the invitation , is also used as the
            invitation code
        isDefault:
          type: boolean
          description: >-
            Indicates whether the invitation is a default invitation (open
            invite), which can be used to assign users when signing up from fqdn
            or custom domain, a organization can only have one default
            invitation
          x-oapi-codegen-extra-tags:
            db: is_default
            json: is_default
        name:
          type: string
          description: >-
            Name of the invitation, which can be used to identify the
            invitation, required and cant be empty string,
        description:
          type: string
          description: >-
            Description of the invitation, which can be used to provide
            additional information about the invitation, null or empty string
            means the invitation does not have a description
        emails:
          type: array
          items:
            type: string
            format: email
            description: >-
              Exact email address or the email address pattern for which the
              invitation is valid , null means the invitation is valid for all
              email addresses
        orgId:
          type: string
          description: ID of the organization to which the user is invited
          x-oapi-codegen-extra-tags:
            db: org_id
            json: org_id
        expiresAt:
          type: string
          format: date-time
          description: >-
            Timestamp when the invitation expires, if applicable , null or empty
            string means the invitation does not expire
          x-oapi-codegen-extra-tags:
            db: expires_at
            json: expires_at
        quota:
          type: integer
          description: >-
            Quota for the invitation, which can be used to limit the number of
            users that can accept the invitation, null or empty string means the
            invitation does not have a quota
        acceptedBy:
          type: array
          items:
            type: string
          description: >-
            List of user ids that have already accepted the invitation, null or
            empty string means the invitation has not been used yet
          x-oapi-codegen-extra-tags:
            db: accepted_by
            json: accepted_by
        roles:
          type: array
          items:
            type: string
            description: >-
              Roles that the user will have when accepting the invitation, null
              or empty string means the invitation does not specify any roles
        teams:
          type: array
          items:
            type: string
            description: >-
              Teams that the user will be added to when accepting the
              invitation, null or empty string means the invitation does not
              specify any teams
        status:
          type: string
          x-go-type: InvitationStatus
          enum:
            - enabled
            - disabled
          description: >-
            Status of the invitation, where enabled means the invitation is
            active and can be used, disabled means the invitation is no longer
            valid and is temporarily inactive, disabled invitations can be
            re-enabled later.
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the invitation was created
          x-oapi-codegen-extra-tags:
            db: created_at
            json: created_at
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the invitation was last updated
          x-oapi-codegen-extra-tags:
            db: updated_at
            json: updated_at
        deletedAt:
          type: string
          format: date-time
          x-go-type: core.NullTime
          description: Timestamp when the invitation was deleted, if applicable
          x-oapi-codegen-extra-tags:
            db: deleted_at
            json: deleted_at
  responses:
    subscription_400:
      description: Invalid request body or request param
      content:
        text/plain:
          schema:
            type: string
    subscription_401:
      description: Expired JWT token used or insufficient privilege
      content:
        text/plain:
          schema:
            type: string
    subscription_500:
      description: Internal server error
      content:
        text/plain:
          schema:
            type: string
    environment_200:
      description: ok
      content:
        text/plain:
          schema:
            type: string
    environment_400:
      description: Invalid request body or request param
      content:
        text/plain:
          schema:
            type: string
    environment_401:
      description: Expired JWT token used or insufficient privilege
      content:
        text/plain:
          schema:
            type: string
    environment_500:
      description: Internal server error
      content:
        text/plain:
          schema:
            type: string
    invitation_400:
      description: Bad Request
    invitation_401:
      description: Unauthorized
    invitation_500:
      description: Internal Server Error
  parameters:
    subscription_subscriptionId:
      name: subscriptionId
      in: path
      required: true
      description: Subscription ID
      schema:
        type: string
    subscription_page:
      name: page
      in: query
      description: Get responses by page
      schema:
        type: string
    subscription_pagesize:
      name: pagesize
      in: query
      description: Get responses by pagesize
      schema:
        type: string
    subscription_pagesizeWithAll:
      name: pagesize
      in: query
      description: Get responses by pagesize (pass all to get all responses)
      schema:
        type: string
    subscription_order:
      name: order
      in: query
      description: Get ordered responses
      schema:
        type: string
    feature_organization_id:
      name: organizationId
      in: path
      description: The ID of the organization
      required: true
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
        x-go-type-import:
          path: github.com/gofrs/uuid
    environment_environmentId:
      name: environmentId
      in: path
      description: Environment ID
      schema:
        type: string
        format: uuid
        x-go-type: uuid.UUID
        x-go-type-import:
          path: github.com/gofrs/uuid
        x-go-type-skip-optional-pointer: true
      required: true
    environment_search:
      name: search
      in: query
      description: Get responses that match search param value
      schema:
        type: string
    environment_order:
      name: order
      in: query
      description: Get ordered responses
      schema:
        type: string
    environment_page:
      name: page
      in: query
      description: Get responses by page
      schema:
        type: string
    environment_pagesize:
      name: pagesize
      in: query
      description: Get responses by pagesize
      schema:
        type: string
    environment_orgIDQuery:
      name: orgID
      in: query
      description: User's organization ID
      schema:
        type: string
      required: true
    invitation_organization_id:
      name: organizationId
      in: path
      required: true
      description: The ID of the organization
      schema:
        type: string
  securitySchemes:
    workspace_jwt:
      type: http
      scheme: Bearer
      bearerFormat: JWT
    environment_jwt:
      type: http
      scheme: Bearer
      bearerFormat: JWT
  requestBodies:
    workspace_workspacePayload:
      description: Body for creating workspace
      required: true
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                x-go-type-skip-optional-pointer: true
                description: >-
                  Provide a name that meaningfully represents this workspace.
                  You can change the name of the workspace even after its
                  creation.
              description:
                type: string
                x-go-type-skip-optional-pointer: true
                description: >-
                  Workspaces serve as a virtual space for your team-based work,
                  allows you to control access and more, Provide a detailed
                  description to clarify the purpose of this workspace. Remember
                  you can changes description of workspace after it's creations
                  too. Learn more about workspaces
                  [here](https://docs.meshery.io/concepts/logical/workspaces)
              organization_id:
                type: string
                description: >-
                  Select an organization in which you want to create this new
                  workspace. Keep in mind that the organization cannot be
                  changed after creation.
                x-go-type-skip-optional-pointer: true
                x-go-name: OrganizationID
                x-oapi-codegen-extra-tags:
                  json: organization_id
            required:
              - name
              - organization_id
    workspace_workspaceUpdatePayload:
      description: Body for updating workspace
      required: true
      content:
        application/json:
          schema:
            properties:
              name:
                type: string
                x-go-type-skip-optional-pointer: true
                description: Name of workspace
              description:
                type: string
                x-go-type-skip-optional-pointer: true
                description: Environment description
              organization_id:
                type: string
                description: Organization ID
                x-go-type-skip-optional-pointer: true
                x-go-name: OrganizationID
                x-oapi-codegen-extra-tags:
                  json: organization_id
            required:
              - organization_id
    environment_environmentPayload:
      description: Body for creating environment
      required: true
      content:
        application/json:
          schema:
            properties:
              name:
                description: >-
                  An environment is a collection of resources. Provide a name
                  that meaningfully represents these resources. You can change
                  the name of the environment even after its creation.
                type: string
                x-go-type-skip-optional-pointer: true
              description:
                description: >-
                  An environment is a collection of resources, such as
                  connections & credentail. Provide a detailed description to
                  clarify the purpose of this environment and the types of
                  resources it encompasses. You can modify the description at
                  any Time. Learn more about environments
                  [here](https://docs.meshery.io/concepts/logical/environments).
                type: string
                x-go-type-skip-optional-pointer: true
              OrganizationID:
                type: string
                description: >-
                  Select an organization in which you want to create this new
                  environment. Keep in mind that the organization cannot be
                  changed after creation.
                x-go-type-skip-optional-pointer: true
                x-go-name: OrgId
                x-oapi-codegen-extra-tags:
                  json: organization_id
            required:
              - name
              - organizationID
x-tagGroups:
  - name: design
    tags:
      - design_other
  - name: model
    tags:
      - model_other
  - name: subscription
    tags:
      - subscription_Subscriptions
      - subscription_Plans
      - subscription_Payment Processors
      - subscription_subscription
      - subscription_other
  - name: plan
    tags:
      - plan_Plans
  - name: feature
    tags:
      - feature_Features
  - name: workspace
    tags:
      - workspace_workspaces
  - name: environment
    tags:
      - environment_environments
  - name: evaluation
    tags:
      - evaluation_other
  - name: Academy API
    tags:
      - Academy_API_Academy
      - Academy_API_other
  - name: invitation
    tags:
      - invitation_Invitation
